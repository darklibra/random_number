if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}

/**
 * React v0.13.3
 */
(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.React = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule React
 */

/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/

'use strict';

var EventPluginUtils = _dereq_(19);
var ReactChildren = _dereq_(32);
var ReactComponent = _dereq_(34);
var ReactClass = _dereq_(33);
var ReactContext = _dereq_(38);
var ReactCurrentOwner = _dereq_(39);
var ReactElement = _dereq_(57);
var ReactElementValidator = _dereq_(58);
var ReactDOM = _dereq_(40);
var ReactDOMTextComponent = _dereq_(51);
var ReactDefaultInjection = _dereq_(54);
var ReactInstanceHandles = _dereq_(66);
var ReactMount = _dereq_(70);
var ReactPerf = _dereq_(75);
var ReactPropTypes = _dereq_(78);
var ReactReconciler = _dereq_(81);
var ReactServerRendering = _dereq_(84);

var assign = _dereq_(27);
var findDOMNode = _dereq_(117);
var onlyChild = _dereq_(144);

ReactDefaultInjection.inject();

var createElement = ReactElement.createElement;
var createFactory = ReactElement.createFactory;
var cloneElement = ReactElement.cloneElement;

if ("production" !== "development") {
  createElement = ReactElementValidator.createElement;
  createFactory = ReactElementValidator.createFactory;
  cloneElement = ReactElementValidator.cloneElement;
}

var render = ReactPerf.measure('React', 'render', ReactMount.render);

var React = {
  Children: {
    map: ReactChildren.map,
    forEach: ReactChildren.forEach,
    count: ReactChildren.count,
    only: onlyChild
  },
  Component: ReactComponent,
  DOM: ReactDOM,
  PropTypes: ReactPropTypes,
  initializeTouchEvents: function(shouldUseTouch) {
    EventPluginUtils.useTouchEvents = shouldUseTouch;
  },
  createClass: ReactClass.createClass,
  createElement: createElement,
  cloneElement: cloneElement,
  createFactory: createFactory,
  createMixin: function(mixin) {
    // Currently a noop. Will be used to validate and trace mixins.
    return mixin;
  },
  constructAndRenderComponent: ReactMount.constructAndRenderComponent,
  constructAndRenderComponentByID: ReactMount.constructAndRenderComponentByID,
  findDOMNode: findDOMNode,
  render: render,
  renderToString: ReactServerRendering.renderToString,
  renderToStaticMarkup: ReactServerRendering.renderToStaticMarkup,
  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
  isValidElement: ReactElement.isValidElement,
  withContext: ReactContext.withContext,

  // Hook for JSX spread, don't use this for anything else.
  __spread: assign
};

// Inject the runtime into a devtools global hook regardless of browser.
// Allows for debugging when the hook is injected on the page.
if (
  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&
  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
    CurrentOwner: ReactCurrentOwner,
    InstanceHandles: ReactInstanceHandles,
    Mount: ReactMount,
    Reconciler: ReactReconciler,
    TextComponent: ReactDOMTextComponent
  });
}

if ("production" !== "development") {
  var ExecutionEnvironment = _dereq_(21);
  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {

    // If we're in Chrome, look for the devtools marker and provide a download
    // link if not installed.
    if (navigator.userAgent.indexOf('Chrome') > -1) {
      if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
        console.debug(
          'Download the React DevTools for a better development experience: ' +
          'https://fb.me/react-devtools'
        );
      }
    }

    var expectedFeatures = [
      // shims
      Array.isArray,
      Array.prototype.every,
      Array.prototype.forEach,
      Array.prototype.indexOf,
      Array.prototype.map,
      Date.now,
      Function.prototype.bind,
      Object.keys,
      String.prototype.split,
      String.prototype.trim,

      // shams
      Object.create,
      Object.freeze
    ];

    for (var i = 0; i < expectedFeatures.length; i++) {
      if (!expectedFeatures[i]) {
        console.error(
          'One or more ES5 shim/shams expected by React are not available: ' +
          'https://fb.me/react-warning-polyfills'
        );
        break;
      }
    }
  }
}

React.version = '0.13.3';

module.exports = React;

},{"117":117,"144":144,"19":19,"21":21,"27":27,"32":32,"33":33,"34":34,"38":38,"39":39,"40":40,"51":51,"54":54,"57":57,"58":58,"66":66,"70":70,"75":75,"78":78,"81":81,"84":84}],2:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule AutoFocusMixin
 * @typechecks static-only
 */

'use strict';

var focusNode = _dereq_(119);

var AutoFocusMixin = {
  componentDidMount: function() {
    if (this.props.autoFocus) {
      focusNode(this.getDOMNode());
    }
  }
};

module.exports = AutoFocusMixin;

},{"119":119}],3:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015 Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule BeforeInputEventPlugin
 * @typechecks static-only
 */

'use strict';

var EventConstants = _dereq_(15);
var EventPropagators = _dereq_(20);
var ExecutionEnvironment = _dereq_(21);
var FallbackCompositionState = _dereq_(22);
var SyntheticCompositionEvent = _dereq_(93);
var SyntheticInputEvent = _dereq_(97);

var keyOf = _dereq_(141);

var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
var START_KEYCODE = 229;

var canUseCompositionEvent = (
  ExecutionEnvironment.canUseDOM &&
  'CompositionEvent' in window
);

var documentMode = null;
if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
  documentMode = document.documentMode;
}

// Webkit offers a very useful `textInput` event that can be used to
// directly represent `beforeInput`. The IE `textinput` event is not as
// useful, so we don't use it.
var canUseTextInputEvent = (
  ExecutionEnvironment.canUseDOM &&
  'TextEvent' in window &&
  !documentMode &&
  !isPresto()
);

// In IE9+, we have access to composition events, but the data supplied
// by the native compositionend event may be incorrect. Japanese ideographic
// spaces, for instance (\u3000) are not recorded correctly.
var useFallbackCompositionData = (
  ExecutionEnvironment.canUseDOM &&
  (
    (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11)
  )
);

/**
 * Opera <= 12 includes TextEvent in window, but does not fire
 * text input events. Rely on keypress instead.
 */
function isPresto() {
  var opera = window.opera;
  return (
    typeof opera === 'object' &&
    typeof opera.version === 'function' &&
    parseInt(opera.version(), 10) <= 12
  );
}

var SPACEBAR_CODE = 32;
var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

var topLevelTypes = EventConstants.topLevelTypes;

// Events and their corresponding property names.
var eventTypes = {
  beforeInput: {
    phasedRegistrationNames: {
      bubbled: keyOf({onBeforeInput: null}),
      captured: keyOf({onBeforeInputCapture: null})
    },
    dependencies: [
      topLevelTypes.topCompositionEnd,
      topLevelTypes.topKeyPress,
      topLevelTypes.topTextInput,
      topLevelTypes.topPaste
    ]
  },
  compositionEnd: {
    phasedRegistrationNames: {
      bubbled: keyOf({onCompositionEnd: null}),
      captured: keyOf({onCompositionEndCapture: null})
    },
    dependencies: [
      topLevelTypes.topBlur,
      topLevelTypes.topCompositionEnd,
      topLevelTypes.topKeyDown,
      topLevelTypes.topKeyPress,
      topLevelTypes.topKeyUp,
      topLevelTypes.topMouseDown
    ]
  },
  compositionStart: {
    phasedRegistrationNames: {
      bubbled: keyOf({onCompositionStart: null}),
      captured: keyOf({onCompositionStartCapture: null})
    },
    dependencies: [
      topLevelTypes.topBlur,
      topLevelTypes.topCompositionStart,
      topLevelTypes.topKeyDown,
      topLevelTypes.topKeyPress,
      topLevelTypes.topKeyUp,
      topLevelTypes.topMouseDown
    ]
  },
  compositionUpdate: {
    phasedRegistrationNames: {
      bubbled: keyOf({onCompositionUpdate: null}),
      captured: keyOf({onCompositionUpdateCapture: null})
    },
    dependencies: [
      topLevelTypes.topBlur,
      topLevelTypes.topCompositionUpdate,
      topLevelTypes.topKeyDown,
      topLevelTypes.topKeyPress,
      topLevelTypes.topKeyUp,
      topLevelTypes.topMouseDown
    ]
  }
};

// Track whether we've ever handled a keypress on the space key.
var hasSpaceKeypress = false;

/**
 * Return whether a native keypress event is assumed to be a command.
 * This is required because Firefox fires `keypress` events for key commands
 * (cut, copy, select-all, etc.) even though no character is inserted.
 */
function isKeypressCommand(nativeEvent) {
  return (
    (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
    // ctrlKey && altKey is equivalent to AltGr, and is not a command.
    !(nativeEvent.ctrlKey && nativeEvent.altKey)
  );
}


/**
 * Translate native top level events into event types.
 *
 * @param {string} topLevelType
 * @return {object}
 */
function getCompositionEventType(topLevelType) {
  switch (topLevelType) {
    case topLevelTypes.topCompositionStart:
      return eventTypes.compositionStart;
    case topLevelTypes.topCompositionEnd:
      return eventTypes.compositionEnd;
    case topLevelTypes.topCompositionUpdate:
      return eventTypes.compositionUpdate;
  }
}

/**
 * Does our fallback best-guess model think this event signifies that
 * composition has begun?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */
function isFallbackCompositionStart(topLevelType, nativeEvent) {
  return (
    topLevelType === topLevelTypes.topKeyDown &&
    nativeEvent.keyCode === START_KEYCODE
  );
}

/**
 * Does our fallback mode think that this event is the end of composition?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */
function isFallbackCompositionEnd(topLevelType, nativeEvent) {
  switch (topLevelType) {
    case topLevelTypes.topKeyUp:
      // Command keys insert or clear IME input.
      return (END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1);
    case topLevelTypes.topKeyDown:
      // Expect IME keyCode on each keydown. If we get any other
      // code we must have exited earlier.
      return (nativeEvent.keyCode !== START_KEYCODE);
    case topLevelTypes.topKeyPress:
    case topLevelTypes.topMouseDown:
    case topLevelTypes.topBlur:
      // Events are not possible without cancelling IME.
      return true;
    default:
      return false;
  }
}

/**
 * Google Input Tools provides composition data via a CustomEvent,
 * with the `data` property populated in the `detail` object. If this
 * is available on the event object, use it. If not, this is a plain
 * composition event and we have nothing special to extract.
 *
 * @param {object} nativeEvent
 * @return {?string}
 */
function getDataFromCustomEvent(nativeEvent) {
  var detail = nativeEvent.detail;
  if (typeof detail === 'object' && 'data' in detail) {
    return detail.data;
  }
  return null;
}

// Track the current IME composition fallback object, if any.
var currentComposition = null;

/**
 * @param {string} topLevelType Record from `EventConstants`.
 * @param {DOMEventTarget} topLevelTarget The listening component root node.
 * @param {string} topLevelTargetID ID of `topLevelTarget`.
 * @param {object} nativeEvent Native browser event.
 * @return {?object} A SyntheticCompositionEvent.
 */
function extractCompositionEvent(
  topLevelType,
  topLevelTarget,
  topLevelTargetID,
  nativeEvent
) {
  var eventType;
  var fallbackData;

  if (canUseCompositionEvent) {
    eventType = getCompositionEventType(topLevelType);
  } else if (!currentComposition) {
    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
      eventType = eventTypes.compositionStart;
    }
  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
    eventType = eventTypes.compositionEnd;
  }

  if (!eventType) {
    return null;
  }

  if (useFallbackCompositionData) {
    // The current composition is stored statically and must not be
    // overwritten while composition continues.
    if (!currentComposition && eventType === eventTypes.compositionStart) {
      currentComposition = FallbackCompositionState.getPooled(topLevelTarget);
    } else if (eventType === eventTypes.compositionEnd) {
      if (currentComposition) {
        fallbackData = currentComposition.getData();
      }
    }
  }

  var event = SyntheticCompositionEvent.getPooled(
    eventType,
    topLevelTargetID,
    nativeEvent
  );

  if (fallbackData) {
    // Inject data generated from fallback path into the synthetic event.
    // This matches the property of native CompositionEventInterface.
    event.data = fallbackData;
  } else {
    var customData = getDataFromCustomEvent(nativeEvent);
    if (customData !== null) {
      event.data = customData;
    }
  }

  EventPropagators.accumulateTwoPhaseDispatches(event);
  return event;
}

/**
 * @param {string} topLevelType Record from `EventConstants`.
 * @param {object} nativeEvent Native browser event.
 * @return {?string} The string corresponding to this `beforeInput` event.
 */
function getNativeBeforeInputChars(topLevelType, nativeEvent) {
  switch (topLevelType) {
    case topLevelTypes.topCompositionEnd:
      return getDataFromCustomEvent(nativeEvent);
    case topLevelTypes.topKeyPress:
      /**
       * If native `textInput` events are available, our goal is to make
       * use of them. However, there is a special case: the spacebar key.
       * In Webkit, preventing default on a spacebar `textInput` event
       * cancels character insertion, but it *also* causes the browser
       * to fall back to its default spacebar behavior of scrolling the
       * page.
       *
       * Tracking at:
       * https://code.google.com/p/chromium/issues/detail?id=355103
       *
       * To avoid this issue, use the keypress event as if no `textInput`
       * event is available.
       */
      var which = nativeEvent.which;
      if (which !== SPACEBAR_CODE) {
        return null;
      }

      hasSpaceKeypress = true;
      return SPACEBAR_CHAR;

    case topLevelTypes.topTextInput:
      // Record the characters to be added to the DOM.
      var chars = nativeEvent.data;

      // If it's a spacebar character, assume that we have already handled
      // it at the keypress level and bail immediately. Android Chrome
      // doesn't give us keycodes, so we need to blacklist it.
      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
        return null;
      }

      return chars;

    default:
      // For other native event types, do nothing.
      return null;
  }
}

/**
 * For browsers that do not provide the `textInput` event, extract the
 * appropriate string to use for SyntheticInputEvent.
 *
 * @param {string} topLevelType Record from `EventConstants`.
 * @param {object} nativeEvent Native browser event.
 * @return {?string} The fallback string for this `beforeInput` event.
 */
function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
  // If we are currently composing (IME) and using a fallback to do so,
  // try to extract the composed characters from the fallback object.
  if (currentComposition) {
    if (
      topLevelType === topLevelTypes.topCompositionEnd ||
      isFallbackCompositionEnd(topLevelType, nativeEvent)
    ) {
      var chars = currentComposition.getData();
      FallbackCompositionState.release(currentComposition);
      currentComposition = null;
      return chars;
    }
    return null;
  }

  switch (topLevelType) {
    case topLevelTypes.topPaste:
      // If a paste event occurs after a keypress, throw out the input
      // chars. Paste events should not lead to BeforeInput events.
      return null;
    case topLevelTypes.topKeyPress:
      /**
       * As of v27, Firefox may fire keypress events even when no character
       * will be inserted. A few possibilities:
       *
       * - `which` is `0`. Arrow keys, Esc key, etc.
       *
       * - `which` is the pressed key code, but no char is available.
       *   Ex: 'AltGr + d` in Polish. There is no modified character for
       *   this key combination and no character is inserted into the
       *   document, but FF fires the keypress for char code `100` anyway.
       *   No `input` event will occur.
       *
       * - `which` is the pressed key code, but a command combination is
       *   being used. Ex: `Cmd+C`. No character is inserted, and no
       *   `input` event will occur.
       */
      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
        return String.fromCharCode(nativeEvent.which);
      }
      return null;
    case topLevelTypes.topCompositionEnd:
      return useFallbackCompositionData ? null : nativeEvent.data;
    default:
      return null;
  }
}

/**
 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
 * `textInput` or fallback behavior.
 *
 * @param {string} topLevelType Record from `EventConstants`.
 * @param {DOMEventTarget} topLevelTarget The listening component root node.
 * @param {string} topLevelTargetID ID of `topLevelTarget`.
 * @param {object} nativeEvent Native browser event.
 * @return {?object} A SyntheticInputEvent.
 */
function extractBeforeInputEvent(
  topLevelType,
  topLevelTarget,
  topLevelTargetID,
  nativeEvent
) {
  var chars;

  if (canUseTextInputEvent) {
    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
  } else {
    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
  }

  // If no characters are being inserted, no BeforeInput event should
  // be fired.
  if (!chars) {
    return null;
  }

  var event = SyntheticInputEvent.getPooled(
    eventTypes.beforeInput,
    topLevelTargetID,
    nativeEvent
  );

  event.data = chars;
  EventPropagators.accumulateTwoPhaseDispatches(event);
  return event;
}

/**
 * Create an `onBeforeInput` event to match
 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
 *
 * This event plugin is based on the native `textInput` event
 * available in Chrome, Safari, Opera, and IE. This event fires after
 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
 *
 * `beforeInput` is spec'd but not implemented in any browsers, and
 * the `input` event does not provide any useful information about what has
 * actually been added, contrary to the spec. Thus, `textInput` is the best
 * available event to identify the characters that have actually been inserted
 * into the target node.
 *
 * This plugin is also responsible for emitting `composition` events, thus
 * allowing us to share composition fallback code for both `beforeInput` and
 * `composition` event types.
 */
var BeforeInputEventPlugin = {

  eventTypes: eventTypes,

  /**
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {DOMEventTarget} topLevelTarget The listening component root node.
   * @param {string} topLevelTargetID ID of `topLevelTarget`.
   * @param {object} nativeEvent Native browser event.
   * @return {*} An accumulation of synthetic events.
   * @see {EventPluginHub.extractEvents}
   */
  extractEvents: function(
    topLevelType,
    topLevelTarget,
    topLevelTargetID,
    nativeEvent
  ) {
    return [
      extractCompositionEvent(
        topLevelType,
        topLevelTarget,
        topLevelTargetID,
        nativeEvent
      ),
      extractBeforeInputEvent(
        topLevelType,
        topLevelTarget,
        topLevelTargetID,
        nativeEvent
      )
    ];
  }
};

module.exports = BeforeInputEventPlugin;

},{"141":141,"15":15,"20":20,"21":21,"22":22,"93":93,"97":97}],4:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule CSSProperty
 */

'use strict';

/**
 * CSS properties which accept numbers but are not in units of "px".
 */
var isUnitlessNumber = {
  boxFlex: true,
  boxFlexGroup: true,
  columnCount: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  widows: true,
  zIndex: true,
  zoom: true,

  // SVG-related properties
  fillOpacity: true,
  strokeDashoffset: true,
  strokeOpacity: true,
  strokeWidth: true
};

/**
 * @param {string} prefix vendor-specific prefix, eg: Webkit
 * @param {string} key style name, eg: transitionDuration
 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
 * WebkitTransitionDuration
 */
function prefixKey(prefix, key) {
  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
}

/**
 * Support style names that may come passed in prefixed by adding permutations
 * of vendor prefixes.
 */
var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
// infinite loop, because it iterates over the newly added props too.
Object.keys(isUnitlessNumber).forEach(function(prop) {
  prefixes.forEach(function(prefix) {
    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
  });
});

/**
 * Most style properties can be unset by doing .style[prop] = '' but IE8
 * doesn't like doing that with shorthand properties so for the properties that
 * IE8 breaks on, which are listed here, we instead unset each of the
 * individual properties. See http://bugs.jquery.com/ticket/12385.
 * The 4-value 'clock' properties like margin, padding, border-width seem to
 * behave without any problems. Curiously, list-style works too without any
 * special prodding.
 */
var shorthandPropertyExpansions = {
  background: {
    backgroundImage: true,
    backgroundPosition: true,
    backgroundRepeat: true,
    backgroundColor: true
  },
  border: {
    borderWidth: true,
    borderStyle: true,
    borderColor: true
  },
  borderBottom: {
    borderBottomWidth: true,
    borderBottomStyle: true,
    borderBottomColor: true
  },
  borderLeft: {
    borderLeftWidth: true,
    borderLeftStyle: true,
    borderLeftColor: true
  },
  borderRight: {
    borderRightWidth: true,
    borderRightStyle: true,
    borderRightColor: true
  },
  borderTop: {
    borderTopWidth: true,
    borderTopStyle: true,
    borderTopColor: true
  },
  font: {
    fontStyle: true,
    fontVariant: true,
    fontWeight: true,
    fontSize: true,
    lineHeight: true,
    fontFamily: true
  }
};

var CSSProperty = {
  isUnitlessNumber: isUnitlessNumber,
  shorthandPropertyExpansions: shorthandPropertyExpansions
};

module.exports = CSSProperty;

},{}],5:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule CSSPropertyOperations
 * @typechecks static-only
 */

'use strict';

var CSSProperty = _dereq_(4);
var ExecutionEnvironment = _dereq_(21);

var camelizeStyleName = _dereq_(108);
var dangerousStyleValue = _dereq_(113);
var hyphenateStyleName = _dereq_(133);
var memoizeStringOnly = _dereq_(143);
var warning = _dereq_(154);

var processStyleName = memoizeStringOnly(function(styleName) {
  return hyphenateStyleName(styleName);
});

var styleFloatAccessor = 'cssFloat';
if (ExecutionEnvironment.canUseDOM) {
  // IE8 only supports accessing cssFloat (standard) as styleFloat
  if (document.documentElement.style.cssFloat === undefined) {
    styleFloatAccessor = 'styleFloat';
  }
}

if ("production" !== "development") {
  // 'msTransform' is correct, but the other prefixes should be capitalized
  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;

  // style values shouldn't contain a semicolon
  var badStyleValueWithSemicolonPattern = /;\s*$/;

  var warnedStyleNames = {};
  var warnedStyleValues = {};

  var warnHyphenatedStyleName = function(name) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;
    ("production" !== "development" ? warning(
      false,
      'Unsupported style property %s. Did you mean %s?',
      name,
      camelizeStyleName(name)
    ) : null);
  };

  var warnBadVendoredStyleName = function(name) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;
    ("production" !== "development" ? warning(
      false,
      'Unsupported vendor-prefixed style property %s. Did you mean %s?',
      name,
      name.charAt(0).toUpperCase() + name.slice(1)
    ) : null);
  };

  var warnStyleValueWithSemicolon = function(name, value) {
    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
      return;
    }

    warnedStyleValues[value] = true;
    ("production" !== "development" ? warning(
      false,
      'Style property values shouldn\'t contain a semicolon. ' +
      'Try "%s: %s" instead.',
      name,
      value.replace(badStyleValueWithSemicolonPattern, '')
    ) : null);
  };

  /**
   * @param {string} name
   * @param {*} value
   */
  var warnValidStyle = function(name, value) {
    if (name.indexOf('-') > -1) {
      warnHyphenatedStyleName(name);
    } else if (badVendoredStyleNamePattern.test(name)) {
      warnBadVendoredStyleName(name);
    } else if (badStyleValueWithSemicolonPattern.test(value)) {
      warnStyleValueWithSemicolon(name, value);
    }
  };
}

/**
 * Operations for dealing with CSS properties.
 */
var CSSPropertyOperations = {

  /**
   * Serializes a mapping of style properties for use as inline styles:
   *
   *   > createMarkupForStyles({width: '200px', height: 0})
   *   "width:200px;height:0;"
   *
   * Undefined values are ignored so that declarative programming is easier.
   * The result should be HTML-escaped before insertion into the DOM.
   *
   * @param {object} styles
   * @return {?string}
   */
  createMarkupForStyles: function(styles) {
    var serialized = '';
    for (var styleName in styles) {
      if (!styles.hasOwnProperty(styleName)) {
        continue;
      }
      var styleValue = styles[styleName];
      if ("production" !== "development") {
        warnValidStyle(styleName, styleValue);
      }
      if (styleValue != null) {
        serialized += processStyleName(styleName) + ':';
        serialized += dangerousStyleValue(styleName, styleValue) + ';';
      }
    }
    return serialized || null;
  },

  /**
   * Sets the value for multiple styles on a node.  If a value is specified as
   * '' (empty string), the corresponding style property will be unset.
   *
   * @param {DOMElement} node
   * @param {object} styles
   */
  setValueForStyles: function(node, styles) {
    var style = node.style;
    for (var styleName in styles) {
      if (!styles.hasOwnProperty(styleName)) {
        continue;
      }
      if ("production" !== "development") {
        warnValidStyle(styleName, styles[styleName]);
      }
      var styleValue = dangerousStyleValue(styleName, styles[styleName]);
      if (styleName === 'float') {
        styleName = styleFloatAccessor;
      }
      if (styleValue) {
        style[styleName] = styleValue;
      } else {
        var expansion = CSSProperty.shorthandPropertyExpansions[styleName];
        if (expansion) {
          // Shorthand property that IE8 won't like unsetting, so unset each
          // component to placate it
          for (var individualStyleName in expansion) {
            style[individualStyleName] = '';
          }
        } else {
          style[styleName] = '';
        }
      }
    }
  }

};

module.exports = CSSPropertyOperations;

},{"108":108,"113":113,"133":133,"143":143,"154":154,"21":21,"4":4}],6:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule CallbackQueue
 */

'use strict';

var PooledClass = _dereq_(28);

var assign = _dereq_(27);
var invariant = _dereq_(135);

/**
 * A specialized pseudo-event module to help keep track of components waiting to
 * be notified when their DOM representations are available for use.
 *
 * This implements `PooledClass`, so you should never need to instantiate this.
 * Instead, use `CallbackQueue.getPooled()`.
 *
 * @class ReactMountReady
 * @implements PooledClass
 * @internal
 */
function CallbackQueue() {
  this._callbacks = null;
  this._contexts = null;
}

assign(CallbackQueue.prototype, {

  /**
   * Enqueues a callback to be invoked when `notifyAll` is invoked.
   *
   * @param {function} callback Invoked when `notifyAll` is invoked.
   * @param {?object} context Context to call `callback` with.
   * @internal
   */
  enqueue: function(callback, context) {
    this._callbacks = this._callbacks || [];
    this._contexts = this._contexts || [];
    this._callbacks.push(callback);
    this._contexts.push(context);
  },

  /**
   * Invokes all enqueued callbacks and clears the queue. This is invoked after
   * the DOM representation of a component has been created or updated.
   *
   * @internal
   */
  notifyAll: function() {
    var callbacks = this._callbacks;
    var contexts = this._contexts;
    if (callbacks) {
      ("production" !== "development" ? invariant(
        callbacks.length === contexts.length,
        'Mismatched list of contexts in callback queue'
      ) : invariant(callbacks.length === contexts.length));
      this._callbacks = null;
      this._contexts = null;
      for (var i = 0, l = callbacks.length; i < l; i++) {
        callbacks[i].call(contexts[i]);
      }
      callbacks.length = 0;
      contexts.length = 0;
    }
  },

  /**
   * Resets the internal queue.
   *
   * @internal
   */
  reset: function() {
    this._callbacks = null;
    this._contexts = null;
  },

  /**
   * `PooledClass` looks for this.
   */
  destructor: function() {
    this.reset();
  }

});

PooledClass.addPoolingTo(CallbackQueue);

module.exports = CallbackQueue;

},{"135":135,"27":27,"28":28}],7:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ChangeEventPlugin
 */

'use strict';

var EventConstants = _dereq_(15);
var EventPluginHub = _dereq_(17);
var EventPropagators = _dereq_(20);
var ExecutionEnvironment = _dereq_(21);
var ReactUpdates = _dereq_(87);
var SyntheticEvent = _dereq_(95);

var isEventSupported = _dereq_(136);
var isTextInputElement = _dereq_(138);
var keyOf = _dereq_(141);

var topLevelTypes = EventConstants.topLevelTypes;

var eventTypes = {
  change: {
    phasedRegistrationNames: {
      bubbled: keyOf({onChange: null}),
      captured: keyOf({onChangeCapture: null})
    },
    dependencies: [
      topLevelTypes.topBlur,
      topLevelTypes.topChange,
      topLevelTypes.topClick,
      topLevelTypes.topFocus,
      topLevelTypes.topInput,
      topLevelTypes.topKeyDown,
      topLevelTypes.topKeyUp,
      topLevelTypes.topSelectionChange
    ]
  }
};

/**
 * For IE shims
 */
var activeElement = null;
var activeElementID = null;
var activeElementValue = null;
var activeElementValueProp = null;

/**
 * SECTION: handle `change` event
 */
function shouldUseChangeEvent(elem) {
  return (
    elem.nodeName === 'SELECT' ||
    (elem.nodeName === 'INPUT' && elem.type === 'file')
  );
}

var doesChangeEventBubble = false;
if (ExecutionEnvironment.canUseDOM) {
  // See `handleChange` comment below
  doesChangeEventBubble = isEventSupported('change') && (
    (!('documentMode' in document) || document.documentMode > 8)
  );
}

function manualDispatchChangeEvent(nativeEvent) {
  var event = SyntheticEvent.getPooled(
    eventTypes.change,
    activeElementID,
    nativeEvent
  );
  EventPropagators.accumulateTwoPhaseDispatches(event);

  // If change and propertychange bubbled, we'd just bind to it like all the
  // other events and have it go through ReactBrowserEventEmitter. Since it
  // doesn't, we manually listen for the events and so we have to enqueue and
  // process the abstract event manually.
  //
  // Batching is necessary here in order to ensure that all event handlers run
  // before the next rerender (including event handlers attached to ancestor
  // elements instead of directly on the input). Without this, controlled
  // components don't work properly in conjunction with event bubbling because
  // the component is rerendered and the value reverted before all the event
  // handlers can run. See https://github.com/facebook/react/issues/708.
  ReactUpdates.batchedUpdates(runEventInBatch, event);
}

function runEventInBatch(event) {
  EventPluginHub.enqueueEvents(event);
  EventPluginHub.processEventQueue();
}

function startWatchingForChangeEventIE8(target, targetID) {
  activeElement = target;
  activeElementID = targetID;
  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
}

function stopWatchingForChangeEventIE8() {
  if (!activeElement) {
    return;
  }
  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
  activeElement = null;
  activeElementID = null;
}

function getTargetIDForChangeEvent(
    topLevelType,
    topLevelTarget,
    topLevelTargetID) {
  if (topLevelType === topLevelTypes.topChange) {
    return topLevelTargetID;
  }
}
function handleEventsForChangeEventIE8(
    topLevelType,
    topLevelTarget,
    topLevelTargetID) {
  if (topLevelType === topLevelTypes.topFocus) {
    // stopWatching() should be a noop here but we call it just in case we
    // missed a blur event somehow.
    stopWatchingForChangeEventIE8();
    startWatchingForChangeEventIE8(topLevelTarget, topLevelTargetID);
  } else if (topLevelType === topLevelTypes.topBlur) {
    stopWatchingForChangeEventIE8();
  }
}


/**
 * SECTION: handle `input` event
 */
var isInputEventSupported = false;
if (ExecutionEnvironment.canUseDOM) {
  // IE9 claims to support the input event but fails to trigger it when
  // deleting text, so we ignore its input events
  isInputEventSupported = isEventSupported('input') && (
    (!('documentMode' in document) || document.documentMode > 9)
  );
}

/**
 * (For old IE.) Replacement getter/setter for the `value` property that gets
 * set on the active element.
 */
var newValueProp =  {
  get: function() {
    return activeElementValueProp.get.call(this);
  },
  set: function(val) {
    // Cast to a string so we can do equality checks.
    activeElementValue = '' + val;
    activeElementValueProp.set.call(this, val);
  }
};

/**
 * (For old IE.) Starts tracking propertychange events on the passed-in element
 * and override the value property so that we can distinguish user events from
 * value changes in JS.
 */
function startWatchingForValueChange(target, targetID) {
  activeElement = target;
  activeElementID = targetID;
  activeElementValue = target.value;
  activeElementValueProp = Object.getOwnPropertyDescriptor(
    target.constructor.prototype,
    'value'
  );

  Object.defineProperty(activeElement, 'value', newValueProp);
  activeElement.attachEvent('onpropertychange', handlePropertyChange);
}

/**
 * (For old IE.) Removes the event listeners from the currently-tracked element,
 * if any exists.
 */
function stopWatchingForValueChange() {
  if (!activeElement) {
    return;
  }

  // delete restores the original property definition
  delete activeElement.value;
  activeElement.detachEvent('onpropertychange', handlePropertyChange);

  activeElement = null;
  activeElementID = null;
  activeElementValue = null;
  activeElementValueProp = null;
}

/**
 * (For old IE.) Handles a propertychange event, sending a `change` event if
 * the value of the active element has changed.
 */
function handlePropertyChange(nativeEvent) {
  if (nativeEvent.propertyName !== 'value') {
    return;
  }
  var value = nativeEvent.srcElement.value;
  if (value === activeElementValue) {
    return;
  }
  activeElementValue = value;

  manualDispatchChangeEvent(nativeEvent);
}

/**
 * If a `change` event should be fired, returns the target's ID.
 */
function getTargetIDForInputEvent(
    topLevelType,
    topLevelTarget,
    topLevelTargetID) {
  if (topLevelType === topLevelTypes.topInput) {
    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly
    // what we want so fall through here and trigger an abstract event
    return topLevelTargetID;
  }
}

// For IE8 and IE9.
function handleEventsForInputEventIE(
    topLevelType,
    topLevelTarget,
    topLevelTargetID) {
  if (topLevelType === topLevelTypes.topFocus) {
    // In IE8, we can capture almost all .value changes by adding a
    // propertychange handler and looking for events with propertyName
    // equal to 'value'
    // In IE9, propertychange fires for most input events but is buggy and
    // doesn't fire when text is deleted, but conveniently, selectionchange
    // appears to fire in all of the remaining cases so we catch those and
    // forward the event if the value has changed
    // In either case, we don't want to call the event handler if the value
    // is changed from JS so we redefine a setter for `.value` that updates
    // our activeElementValue variable, allowing us to ignore those changes
    //
    // stopWatching() should be a noop here but we call it just in case we
    // missed a blur event somehow.
    stopWatchingForValueChange();
    startWatchingForValueChange(topLevelTarget, topLevelTargetID);
  } else if (topLevelType === topLevelTypes.topBlur) {
    stopWatchingForValueChange();
  }
}

// For IE8 and IE9.
function getTargetIDForInputEventIE(
    topLevelType,
    topLevelTarget,
    topLevelTargetID) {
  if (topLevelType === topLevelTypes.topSelectionChange ||
      topLevelType === topLevelTypes.topKeyUp ||
      topLevelType === topLevelTypes.topKeyDown) {
    // On the selectionchange event, the target is just document which isn't
    // helpful for us so just check activeElement instead.
    //
    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
    // propertychange on the first input event after setting `value` from a
    // script and fires only keydown, keypress, keyup. Catching keyup usually
    // gets it and catching keydown lets us fire an event for the first
    // keystroke if user does a key repeat (it'll be a little delayed: right
    // before the second keystroke). Other input methods (e.g., paste) seem to
    // fire selectionchange normally.
    if (activeElement && activeElement.value !== activeElementValue) {
      activeElementValue = activeElement.value;
      return activeElementID;
    }
  }
}


/**
 * SECTION: handle `click` event
 */
function shouldUseClickEvent(elem) {
  // Use the `click` event to detect changes to checkbox and radio inputs.
  // This approach works across all browsers, whereas `change` does not fire
  // until `blur` in IE8.
  return (
    elem.nodeName === 'INPUT' &&
    (elem.type === 'checkbox' || elem.type === 'radio')
  );
}

function getTargetIDForClickEvent(
    topLevelType,
    topLevelTarget,
    topLevelTargetID) {
  if (topLevelType === topLevelTypes.topClick) {
    return topLevelTargetID;
  }
}

/**
 * This plugin creates an `onChange` event that normalizes change events
 * across form elements. This event fires at a time when it's possible to
 * change the element's value without seeing a flicker.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - select
 */
var ChangeEventPlugin = {

  eventTypes: eventTypes,

  /**
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {DOMEventTarget} topLevelTarget The listening component root node.
   * @param {string} topLevelTargetID ID of `topLevelTarget`.
   * @param {object} nativeEvent Native browser event.
   * @return {*} An accumulation of synthetic events.
   * @see {EventPluginHub.extractEvents}
   */
  extractEvents: function(
      topLevelType,
      topLevelTarget,
      topLevelTargetID,
      nativeEvent) {

    var getTargetIDFunc, handleEventFunc;
    if (shouldUseChangeEvent(topLevelTarget)) {
      if (doesChangeEventBubble) {
        getTargetIDFunc = getTargetIDForChangeEvent;
      } else {
        handleEventFunc = handleEventsForChangeEventIE8;
      }
    } else if (isTextInputElement(topLevelTarget)) {
      if (isInputEventSupported) {
        getTargetIDFunc = getTargetIDForInputEvent;
      } else {
        getTargetIDFunc = getTargetIDForInputEventIE;
        handleEventFunc = handleEventsForInputEventIE;
      }
    } else if (shouldUseClickEvent(topLevelTarget)) {
      getTargetIDFunc = getTargetIDForClickEvent;
    }

    if (getTargetIDFunc) {
      var targetID = getTargetIDFunc(
        topLevelType,
        topLevelTarget,
        topLevelTargetID
      );
      if (targetID) {
        var event = SyntheticEvent.getPooled(
          eventTypes.change,
          targetID,
          nativeEvent
        );
        EventPropagators.accumulateTwoPhaseDispatches(event);
        return event;
      }
    }

    if (handleEventFunc) {
      handleEventFunc(
        topLevelType,
        topLevelTarget,
        topLevelTargetID
      );
    }
  }

};

module.exports = ChangeEventPlugin;

},{"136":136,"138":138,"141":141,"15":15,"17":17,"20":20,"21":21,"87":87,"95":95}],8:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ClientReactRootIndex
 * @typechecks
 */

'use strict';

var nextReactRootIndex = 0;

var ClientReactRootIndex = {
  createReactRootIndex: function() {
    return nextReactRootIndex++;
  }
};

module.exports = ClientReactRootIndex;

},{}],9:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule DOMChildrenOperations
 * @typechecks static-only
 */

'use strict';

var Danger = _dereq_(12);
var ReactMultiChildUpdateTypes = _dereq_(72);

var setTextContent = _dereq_(149);
var invariant = _dereq_(135);

/**
 * Inserts `childNode` as a child of `parentNode` at the `index`.
 *
 * @param {DOMElement} parentNode Parent node in which to insert.
 * @param {DOMElement} childNode Child node to insert.
 * @param {number} index Index at which to insert the child.
 * @internal
 */
function insertChildAt(parentNode, childNode, index) {
  // By exploiting arrays returning `undefined` for an undefined index, we can
  // rely exclusively on `insertBefore(node, null)` instead of also using
  // `appendChild(node)`. However, using `undefined` is not allowed by all
  // browsers so we must replace it with `null`.
  parentNode.insertBefore(
    childNode,
    parentNode.childNodes[index] || null
  );
}

/**
 * Operations for updating with DOM children.
 */
var DOMChildrenOperations = {

  dangerouslyReplaceNodeWithMarkup: Danger.dangerouslyReplaceNodeWithMarkup,

  updateTextContent: setTextContent,

  /**
   * Updates a component's children by processing a series of updates. The
   * update configurations are each expected to have a `parentNode` property.
   *
   * @param {array<object>} updates List of update configurations.
   * @param {array<string>} markupList List of markup strings.
   * @internal
   */
  processUpdates: function(updates, markupList) {
    var update;
    // Mapping from parent IDs to initial child orderings.
    var initialChildren = null;
    // List of children that will be moved or removed.
    var updatedChildren = null;

    for (var i = 0; i < updates.length; i++) {
      update = updates[i];
      if (update.type === ReactMultiChildUpdateTypes.MOVE_EXISTING ||
          update.type === ReactMultiChildUpdateTypes.REMOVE_NODE) {
        var updatedIndex = update.fromIndex;
        var updatedChild = update.parentNode.childNodes[updatedIndex];
        var parentID = update.parentID;

        ("production" !== "development" ? invariant(
          updatedChild,
          'processUpdates(): Unable to find child %s of element. This ' +
          'probably means the DOM was unexpectedly mutated (e.g., by the ' +
          'browser), usually due to forgetting a <tbody> when using tables, ' +
          'nesting tags like <form>, <p>, or <a>, or using non-SVG elements ' +
          'in an <svg> parent. Try inspecting the child nodes of the element ' +
          'with React ID `%s`.',
          updatedIndex,
          parentID
        ) : invariant(updatedChild));

        initialChildren = initialChildren || {};
        initialChildren[parentID] = initialChildren[parentID] || [];
        initialChildren[parentID][updatedIndex] = updatedChild;

        updatedChildren = updatedChildren || [];
        updatedChildren.push(updatedChild);
      }
    }

    var renderedMarkup = Danger.dangerouslyRenderMarkup(markupList);

    // Remove updated children first so that `toIndex` is consistent.
    if (updatedChildren) {
      for (var j = 0; j < updatedChildren.length; j++) {
        updatedChildren[j].parentNode.removeChild(updatedChildren[j]);
      }
    }

    for (var k = 0; k < updates.length; k++) {
      update = updates[k];
      switch (update.type) {
        case ReactMultiChildUpdateTypes.INSERT_MARKUP:
          insertChildAt(
            update.parentNode,
            renderedMarkup[update.markupIndex],
            update.toIndex
          );
          break;
        case ReactMultiChildUpdateTypes.MOVE_EXISTING:
          insertChildAt(
            update.parentNode,
            initialChildren[update.parentID][update.fromIndex],
            update.toIndex
          );
          break;
        case ReactMultiChildUpdateTypes.TEXT_CONTENT:
          setTextContent(
            update.parentNode,
            update.textContent
          );
          break;
        case ReactMultiChildUpdateTypes.REMOVE_NODE:
          // Already removed by the for-loop above.
          break;
      }
    }
  }

};

module.exports = DOMChildrenOperations;

},{"12":12,"135":135,"149":149,"72":72}],10:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule DOMProperty
 * @typechecks static-only
 */

/*jslint bitwise: true */

'use strict';

var invariant = _dereq_(135);

function checkMask(value, bitmask) {
  return (value & bitmask) === bitmask;
}

var DOMPropertyInjection = {
  /**
   * Mapping from normalized, camelcased property names to a configuration that
   * specifies how the associated DOM property should be accessed or rendered.
   */
  MUST_USE_ATTRIBUTE: 0x1,
  MUST_USE_PROPERTY: 0x2,
  HAS_SIDE_EFFECTS: 0x4,
  HAS_BOOLEAN_VALUE: 0x8,
  HAS_NUMERIC_VALUE: 0x10,
  HAS_POSITIVE_NUMERIC_VALUE: 0x20 | 0x10,
  HAS_OVERLOADED_BOOLEAN_VALUE: 0x40,

  /**
   * Inject some specialized knowledge about the DOM. This takes a config object
   * with the following properties:
   *
   * isCustomAttribute: function that given an attribute name will return true
   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
   * attributes where it's impossible to enumerate all of the possible
   * attribute names,
   *
   * Properties: object mapping DOM property name to one of the
   * DOMPropertyInjection constants or null. If your attribute isn't in here,
   * it won't get written to the DOM.
   *
   * DOMAttributeNames: object mapping React attribute name to the DOM
   * attribute name. Attribute names not specified use the **lowercase**
   * normalized name.
   *
   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
   * Property names not specified use the normalized name.
   *
   * DOMMutationMethods: Properties that require special mutation methods. If
   * `value` is undefined, the mutation method should unset the property.
   *
   * @param {object} domPropertyConfig the config as described above.
   */
  injectDOMPropertyConfig: function(domPropertyConfig) {
    var Properties = domPropertyConfig.Properties || {};
    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};

    if (domPropertyConfig.isCustomAttribute) {
      DOMProperty._isCustomAttributeFunctions.push(
        domPropertyConfig.isCustomAttribute
      );
    }

    for (var propName in Properties) {
      ("production" !== "development" ? invariant(
        !DOMProperty.isStandardName.hasOwnProperty(propName),
        'injectDOMPropertyConfig(...): You\'re trying to inject DOM property ' +
        '\'%s\' which has already been injected. You may be accidentally ' +
        'injecting the same DOM property config twice, or you may be ' +
        'injecting two configs that have conflicting property names.',
        propName
      ) : invariant(!DOMProperty.isStandardName.hasOwnProperty(propName)));

      DOMProperty.isStandardName[propName] = true;

      var lowerCased = propName.toLowerCase();
      DOMProperty.getPossibleStandardName[lowerCased] = propName;

      if (DOMAttributeNames.hasOwnProperty(propName)) {
        var attributeName = DOMAttributeNames[propName];
        DOMProperty.getPossibleStandardName[attributeName] = propName;
        DOMProperty.getAttributeName[propName] = attributeName;
      } else {
        DOMProperty.getAttributeName[propName] = lowerCased;
      }

      DOMProperty.getPropertyName[propName] =
        DOMPropertyNames.hasOwnProperty(propName) ?
          DOMPropertyNames[propName] :
          propName;

      if (DOMMutationMethods.hasOwnProperty(propName)) {
        DOMProperty.getMutationMethod[propName] = DOMMutationMethods[propName];
      } else {
        DOMProperty.getMutationMethod[propName] = null;
      }

      var propConfig = Properties[propName];
      DOMProperty.mustUseAttribute[propName] =
        checkMask(propConfig, DOMPropertyInjection.MUST_USE_ATTRIBUTE);
      DOMProperty.mustUseProperty[propName] =
        checkMask(propConfig, DOMPropertyInjection.MUST_USE_PROPERTY);
      DOMProperty.hasSideEffects[propName] =
        checkMask(propConfig, DOMPropertyInjection.HAS_SIDE_EFFECTS);
      DOMProperty.hasBooleanValue[propName] =
        checkMask(propConfig, DOMPropertyInjection.HAS_BOOLEAN_VALUE);
      DOMProperty.hasNumericValue[propName] =
        checkMask(propConfig, DOMPropertyInjection.HAS_NUMERIC_VALUE);
      DOMProperty.hasPositiveNumericValue[propName] =
        checkMask(propConfig, DOMPropertyInjection.HAS_POSITIVE_NUMERIC_VALUE);
      DOMProperty.hasOverloadedBooleanValue[propName] =
        checkMask(propConfig, DOMPropertyInjection.HAS_OVERLOADED_BOOLEAN_VALUE);

      ("production" !== "development" ? invariant(
        !DOMProperty.mustUseAttribute[propName] ||
          !DOMProperty.mustUseProperty[propName],
        'DOMProperty: Cannot require using both attribute and property: %s',
        propName
      ) : invariant(!DOMProperty.mustUseAttribute[propName] ||
        !DOMProperty.mustUseProperty[propName]));
      ("production" !== "development" ? invariant(
        DOMProperty.mustUseProperty[propName] ||
          !DOMProperty.hasSideEffects[propName],
        'DOMProperty: Properties that have side effects must use property: %s',
        propName
      ) : invariant(DOMProperty.mustUseProperty[propName] ||
        !DOMProperty.hasSideEffects[propName]));
      ("production" !== "development" ? invariant(
        !!DOMProperty.hasBooleanValue[propName] +
          !!DOMProperty.hasNumericValue[propName] +
          !!DOMProperty.hasOverloadedBooleanValue[propName] <= 1,
        'DOMProperty: Value can be one of boolean, overloaded boolean, or ' +
        'numeric value, but not a combination: %s',
        propName
      ) : invariant(!!DOMProperty.hasBooleanValue[propName] +
        !!DOMProperty.hasNumericValue[propName] +
        !!DOMProperty.hasOverloadedBooleanValue[propName] <= 1));
    }
  }
};
var defaultValueCache = {};

/**
 * DOMProperty exports lookup objects that can be used like functions:
 *
 *   > DOMProperty.isValid['id']
 *   true
 *   > DOMProperty.isValid['foobar']
 *   undefined
 *
 * Although this may be confusing, it performs better in general.
 *
 * @see http://jsperf.com/key-exists
 * @see http://jsperf.com/key-missing
 */
var DOMProperty = {

  ID_ATTRIBUTE_NAME: 'data-reactid',

  /**
   * Checks whether a property name is a standard property.
   * @type {Object}
   */
  isStandardName: {},

  /**
   * Mapping from lowercase property names to the properly cased version, used
   * to warn in the case of missing properties.
   * @type {Object}
   */
  getPossibleStandardName: {},

  /**
   * Mapping from normalized names to attribute names that differ. Attribute
   * names are used when rendering markup or with `*Attribute()`.
   * @type {Object}
   */
  getAttributeName: {},

  /**
   * Mapping from normalized names to properties on DOM node instances.
   * (This includes properties that mutate due to external factors.)
   * @type {Object}
   */
  getPropertyName: {},

  /**
   * Mapping from normalized names to mutation methods. This will only exist if
   * mutation cannot be set simply by the property or `setAttribute()`.
   * @type {Object}
   */
  getMutationMethod: {},

  /**
   * Whether the property must be accessed and mutated as an object property.
   * @type {Object}
   */
  mustUseAttribute: {},

  /**
   * Whether the property must be accessed and mutated using `*Attribute()`.
   * (This includes anything that fails `<propName> in <element>`.)
   * @type {Object}
   */
  mustUseProperty: {},

  /**
   * Whether or not setting a value causes side effects such as triggering
   * resources to be loaded or text selection changes. We must ensure that
   * the value is only set if it has changed.
   * @type {Object}
   */
  hasSideEffects: {},

  /**
   * Whether the property should be removed when set to a falsey value.
   * @type {Object}
   */
  hasBooleanValue: {},

  /**
   * Whether the property must be numeric or parse as a
   * numeric and should be removed when set to a falsey value.
   * @type {Object}
   */
  hasNumericValue: {},

  /**
   * Whether the property must be positive numeric or parse as a positive
   * numeric and should be removed when set to a falsey value.
   * @type {Object}
   */
  hasPositiveNumericValue: {},

  /**
   * Whether the property can be used as a flag as well as with a value. Removed
   * when strictly equal to false; present without a value when strictly equal
   * to true; present with a value otherwise.
   * @type {Object}
   */
  hasOverloadedBooleanValue: {},

  /**
   * All of the isCustomAttribute() functions that have been injected.
   */
  _isCustomAttributeFunctions: [],

  /**
   * Checks whether a property name is a custom attribute.
   * @method
   */
  isCustomAttribute: function(attributeName) {
    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
      if (isCustomAttributeFn(attributeName)) {
        return true;
      }
    }
    return false;
  },

  /**
   * Returns the default property value for a DOM property (i.e., not an
   * attribute). Most default values are '' or false, but not all. Worse yet,
   * some (in particular, `type`) vary depending on the type of element.
   *
   * TODO: Is it better to grab all the possible properties when creating an
   * element to avoid having to create the same element twice?
   */
  getDefaultValueForProperty: function(nodeName, prop) {
    var nodeDefaults = defaultValueCache[nodeName];
    var testElement;
    if (!nodeDefaults) {
      defaultValueCache[nodeName] = nodeDefaults = {};
    }
    if (!(prop in nodeDefaults)) {
      testElement = document.createElement(nodeName);
      nodeDefaults[prop] = testElement[prop];
    }
    return nodeDefaults[prop];
  },

  injection: DOMPropertyInjection
};

module.exports = DOMProperty;

},{"135":135}],11:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule DOMPropertyOperations
 * @typechecks static-only
 */

'use strict';

var DOMProperty = _dereq_(10);

var quoteAttributeValueForBrowser = _dereq_(147);
var warning = _dereq_(154);

function shouldIgnoreValue(name, value) {
  return value == null ||
    (DOMProperty.hasBooleanValue[name] && !value) ||
    (DOMProperty.hasNumericValue[name] && isNaN(value)) ||
    (DOMProperty.hasPositiveNumericValue[name] && (value < 1)) ||
    (DOMProperty.hasOverloadedBooleanValue[name] && value === false);
}

if ("production" !== "development") {
  var reactProps = {
    children: true,
    dangerouslySetInnerHTML: true,
    key: true,
    ref: true
  };
  var warnedProperties = {};

  var warnUnknownProperty = function(name) {
    if (reactProps.hasOwnProperty(name) && reactProps[name] ||
        warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
      return;
    }

    warnedProperties[name] = true;
    var lowerCasedName = name.toLowerCase();

    // data-* attributes should be lowercase; suggest the lowercase version
    var standardName = (
      DOMProperty.isCustomAttribute(lowerCasedName) ?
        lowerCasedName :
      DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ?
        DOMProperty.getPossibleStandardName[lowerCasedName] :
        null
    );

    // For now, only warn when we have a suggested correction. This prevents
    // logging too much when using transferPropsTo.
    ("production" !== "development" ? warning(
      standardName == null,
      'Unknown DOM property %s. Did you mean %s?',
      name,
      standardName
    ) : null);

  };
}

/**
 * Operations for dealing with DOM properties.
 */
var DOMPropertyOperations = {

  /**
   * Creates markup for the ID property.
   *
   * @param {string} id Unescaped ID.
   * @return {string} Markup string.
   */
  createMarkupForID: function(id) {
    return DOMProperty.ID_ATTRIBUTE_NAME + '=' +
      quoteAttributeValueForBrowser(id);
  },

  /**
   * Creates markup for a property.
   *
   * @param {string} name
   * @param {*} value
   * @return {?string} Markup string, or null if the property was invalid.
   */
  createMarkupForProperty: function(name, value) {
    if (DOMProperty.isStandardName.hasOwnProperty(name) &&
        DOMProperty.isStandardName[name]) {
      if (shouldIgnoreValue(name, value)) {
        return '';
      }
      var attributeName = DOMProperty.getAttributeName[name];
      if (DOMProperty.hasBooleanValue[name] ||
          (DOMProperty.hasOverloadedBooleanValue[name] && value === true)) {
        return attributeName;
      }
      return attributeName + '=' + quoteAttributeValueForBrowser(value);
    } else if (DOMProperty.isCustomAttribute(name)) {
      if (value == null) {
        return '';
      }
      return name + '=' + quoteAttributeValueForBrowser(value);
    } else if ("production" !== "development") {
      warnUnknownProperty(name);
    }
    return null;
  },

  /**
   * Sets the value for a property on a node.
   *
   * @param {DOMElement} node
   * @param {string} name
   * @param {*} value
   */
  setValueForProperty: function(node, name, value) {
    if (DOMProperty.isStandardName.hasOwnProperty(name) &&
        DOMProperty.isStandardName[name]) {
      var mutationMethod = DOMProperty.getMutationMethod[name];
      if (mutationMethod) {
        mutationMethod(node, value);
      } else if (shouldIgnoreValue(name, value)) {
        this.deleteValueForProperty(node, name);
      } else if (DOMProperty.mustUseAttribute[name]) {
        // `setAttribute` with objects becomes only `[object]` in IE8/9,
        // ('' + value) makes it output the correct toString()-value.
        node.setAttribute(DOMProperty.getAttributeName[name], '' + value);
      } else {
        var propName = DOMProperty.getPropertyName[name];
        // Must explicitly cast values for HAS_SIDE_EFFECTS-properties to the
        // property type before comparing; only `value` does and is string.
        if (!DOMProperty.hasSideEffects[name] ||
            ('' + node[propName]) !== ('' + value)) {
          // Contrary to `setAttribute`, object properties are properly
          // `toString`ed by IE8/9.
          node[propName] = value;
        }
      }
    } else if (DOMProperty.isCustomAttribute(name)) {
      if (value == null) {
        node.removeAttribute(name);
      } else {
        node.setAttribute(name, '' + value);
      }
    } else if ("production" !== "development") {
      warnUnknownProperty(name);
    }
  },

  /**
   * Deletes the value for a property on a node.
   *
   * @param {DOMElement} node
   * @param {string} name
   */
  deleteValueForProperty: function(node, name) {
    if (DOMProperty.isStandardName.hasOwnProperty(name) &&
        DOMProperty.isStandardName[name]) {
      var mutationMethod = DOMProperty.getMutationMethod[name];
      if (mutationMethod) {
        mutationMethod(node, undefined);
      } else if (DOMProperty.mustUseAttribute[name]) {
        node.removeAttribute(DOMProperty.getAttributeName[name]);
      } else {
        var propName = DOMProperty.getPropertyName[name];
        var defaultValue = DOMProperty.getDefaultValueForProperty(
          node.nodeName,
          propName
        );
        if (!DOMProperty.hasSideEffects[name] ||
            ('' + node[propName]) !== defaultValue) {
          node[propName] = defaultValue;
        }
      }
    } else if (DOMProperty.isCustomAttribute(name)) {
      node.removeAttribute(name);
    } else if ("production" !== "development") {
      warnUnknownProperty(name);
    }
  }

};

module.exports = DOMPropertyOperations;

},{"10":10,"147":147,"154":154}],12:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule Danger
 * @typechecks static-only
 */

/*jslint evil: true, sub: true */

'use strict';

var ExecutionEnvironment = _dereq_(21);

var createNodesFromMarkup = _dereq_(112);
var emptyFunction = _dereq_(114);
var getMarkupWrap = _dereq_(127);
var invariant = _dereq_(135);

var OPEN_TAG_NAME_EXP = /^(<[^ \/>]+)/;
var RESULT_INDEX_ATTR = 'data-danger-index';

/**
 * Extracts the `nodeName` from a string of markup.
 *
 * NOTE: Extracting the `nodeName` does not require a regular expression match
 * because we make assumptions about React-generated markup (i.e. there are no
 * spaces surrounding the opening tag and there is at least one attribute).
 *
 * @param {string} markup String of markup.
 * @return {string} Node name of the supplied markup.
 * @see http://jsperf.com/extract-nodename
 */
function getNodeName(markup) {
  return markup.substring(1, markup.indexOf(' '));
}

var Danger = {

  /**
   * Renders markup into an array of nodes. The markup is expected to render
   * into a list of root nodes. Also, the length of `resultList` and
   * `markupList` should be the same.
   *
   * @param {array<string>} markupList List of markup strings to render.
   * @return {array<DOMElement>} List of rendered nodes.
   * @internal
   */
  dangerouslyRenderMarkup: function(markupList) {
    ("production" !== "development" ? invariant(
      ExecutionEnvironment.canUseDOM,
      'dangerouslyRenderMarkup(...): Cannot render markup in a worker ' +
      'thread. Make sure `window` and `document` are available globally ' +
      'before requiring React when unit testing or use ' +
      'React.renderToString for server rendering.'
    ) : invariant(ExecutionEnvironment.canUseDOM));
    var nodeName;
    var markupByNodeName = {};
    // Group markup by `nodeName` if a wrap is necessary, else by '*'.
    for (var i = 0; i < markupList.length; i++) {
      ("production" !== "development" ? invariant(
        markupList[i],
        'dangerouslyRenderMarkup(...): Missing markup.'
      ) : invariant(markupList[i]));
      nodeName = getNodeName(markupList[i]);
      nodeName = getMarkupWrap(nodeName) ? nodeName : '*';
      markupByNodeName[nodeName] = markupByNodeName[nodeName] || [];
      markupByNodeName[nodeName][i] = markupList[i];
    }
    var resultList = [];
    var resultListAssignmentCount = 0;
    for (nodeName in markupByNodeName) {
      if (!markupByNodeName.hasOwnProperty(nodeName)) {
        continue;
      }
      var markupListByNodeName = markupByNodeName[nodeName];

      // This for-in loop skips the holes of the sparse array. The order of
      // iteration should follow the order of assignment, which happens to match
      // numerical index order, but we don't rely on that.
      var resultIndex;
      for (resultIndex in markupListByNodeName) {
        if (markupListByNodeName.hasOwnProperty(resultIndex)) {
          var markup = markupListByNodeName[resultIndex];

          // Push the requested markup with an additional RESULT_INDEX_ATTR
          // attribute.  If the markup does not start with a < character, it
          // will be discarded below (with an appropriate console.error).
          markupListByNodeName[resultIndex] = markup.replace(
            OPEN_TAG_NAME_EXP,
            // This index will be parsed back out below.
            '$1 ' + RESULT_INDEX_ATTR + '="' + resultIndex + '" '
          );
        }
      }

      // Render each group of markup with similar wrapping `nodeName`.
      var renderNodes = createNodesFromMarkup(
        markupListByNodeName.join(''),
        emptyFunction // Do nothing special with <script> tags.
      );

      for (var j = 0; j < renderNodes.length; ++j) {
        var renderNode = renderNodes[j];
        if (renderNode.hasAttribute &&
            renderNode.hasAttribute(RESULT_INDEX_ATTR)) {

          resultIndex = +renderNode.getAttribute(RESULT_INDEX_ATTR);
          renderNode.removeAttribute(RESULT_INDEX_ATTR);

          ("production" !== "development" ? invariant(
            !resultList.hasOwnProperty(resultIndex),
            'Danger: Assigning to an already-occupied result index.'
          ) : invariant(!resultList.hasOwnProperty(resultIndex)));

          resultList[resultIndex] = renderNode;

          // This should match resultList.length and markupList.length when
          // we're done.
          resultListAssignmentCount += 1;

        } else if ("production" !== "development") {
          console.error(
            'Danger: Discarding unexpected node:',
            renderNode
          );
        }
      }
    }

    // Although resultList was populated out of order, it should now be a dense
    // array.
    ("production" !== "development" ? invariant(
      resultListAssignmentCount === resultList.length,
      'Danger: Did not assign to every index of resultList.'
    ) : invariant(resultListAssignmentCount === resultList.length));

    ("production" !== "development" ? invariant(
      resultList.length === markupList.length,
      'Danger: Expected markup to render %s nodes, but rendered %s.',
      markupList.length,
      resultList.length
    ) : invariant(resultList.length === markupList.length));

    return resultList;
  },

  /**
   * Replaces a node with a string of markup at its current position within its
   * parent. The markup must render into a single root node.
   *
   * @param {DOMElement} oldChild Child node to replace.
   * @param {string} markup Markup to render in place of the child node.
   * @internal
   */
  dangerouslyReplaceNodeWithMarkup: function(oldChild, markup) {
    ("production" !== "development" ? invariant(
      ExecutionEnvironment.canUseDOM,
      'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a ' +
      'worker thread. Make sure `window` and `document` are available ' +
      'globally before requiring React when unit testing or use ' +
      'React.renderToString for server rendering.'
    ) : invariant(ExecutionEnvironment.canUseDOM));
    ("production" !== "development" ? invariant(markup, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : invariant(markup));
    ("production" !== "development" ? invariant(
      oldChild.tagName.toLowerCase() !== 'html',
      'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the ' +
      '<html> node. This is because browser quirks make this unreliable ' +
      'and/or slow. If you want to render to the root you must use ' +
      'server rendering. See React.renderToString().'
    ) : invariant(oldChild.tagName.toLowerCase() !== 'html'));

    var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
    oldChild.parentNode.replaceChild(newChild, oldChild);
  }

};

module.exports = Danger;

},{"112":112,"114":114,"127":127,"135":135,"21":21}],13:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule DefaultEventPluginOrder
 */

'use strict';

var keyOf = _dereq_(141);

/**
 * Module that is injectable into `EventPluginHub`, that specifies a
 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
 * plugins, without having to package every one of them. This is better than
 * having plugins be ordered in the same order that they are injected because
 * that ordering would be influenced by the packaging order.
 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
 */
var DefaultEventPluginOrder = [
  keyOf({ResponderEventPlugin: null}),
  keyOf({SimpleEventPlugin: null}),
  keyOf({TapEventPlugin: null}),
  keyOf({EnterLeaveEventPlugin: null}),
  keyOf({ChangeEventPlugin: null}),
  keyOf({SelectEventPlugin: null}),
  keyOf({BeforeInputEventPlugin: null}),
  keyOf({AnalyticsEventPlugin: null}),
  keyOf({MobileSafariClickEventPlugin: null})
];

module.exports = DefaultEventPluginOrder;

},{"141":141}],14:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule EnterLeaveEventPlugin
 * @typechecks static-only
 */

'use strict';

var EventConstants = _dereq_(15);
var EventPropagators = _dereq_(20);
var SyntheticMouseEvent = _dereq_(99);

var ReactMount = _dereq_(70);
var keyOf = _dereq_(141);

var topLevelTypes = EventConstants.topLevelTypes;
var getFirstReactDOM = ReactMount.getFirstReactDOM;

var eventTypes = {
  mouseEnter: {
    registrationName: keyOf({onMouseEnter: null}),
    dependencies: [
      topLevelTypes.topMouseOut,
      topLevelTypes.topMouseOver
    ]
  },
  mouseLeave: {
    registrationName: keyOf({onMouseLeave: null}),
    dependencies: [
      topLevelTypes.topMouseOut,
      topLevelTypes.topMouseOver
    ]
  }
};

var extractedEvents = [null, null];

var EnterLeaveEventPlugin = {

  eventTypes: eventTypes,

  /**
   * For almost every interaction we care about, there will be both a top-level
   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
   * we do not extract duplicate events. However, moving the mouse into the
   * browser from outside will not fire a `mouseout` event. In this case, we use
   * the `mouseover` top-level event.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {DOMEventTarget} topLevelTarget The listening component root node.
   * @param {string} topLevelTargetID ID of `topLevelTarget`.
   * @param {object} nativeEvent Native browser event.
   * @return {*} An accumulation of synthetic events.
   * @see {EventPluginHub.extractEvents}
   */
  extractEvents: function(
      topLevelType,
      topLevelTarget,
      topLevelTargetID,
      nativeEvent) {
    if (topLevelType === topLevelTypes.topMouseOver &&
        (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
      return null;
    }
    if (topLevelType !== topLevelTypes.topMouseOut &&
        topLevelType !== topLevelTypes.topMouseOver) {
      // Must not be a mouse in or mouse out - ignoring.
      return null;
    }

    var win;
    if (topLevelTarget.window === topLevelTarget) {
      // `topLevelTarget` is probably a window object.
      win = topLevelTarget;
    } else {
      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
      var doc = topLevelTarget.ownerDocument;
      if (doc) {
        win = doc.defaultView || doc.parentWindow;
      } else {
        win = window;
      }
    }

    var from, to;
    if (topLevelType === topLevelTypes.topMouseOut) {
      from = topLevelTarget;
      to =
        getFirstReactDOM(nativeEvent.relatedTarget || nativeEvent.toElement) ||
        win;
    } else {
      from = win;
      to = topLevelTarget;
    }

    if (from === to) {
      // Nothing pertains to our managed components.
      return null;
    }

    var fromID = from ? ReactMount.getID(from) : '';
    var toID = to ? ReactMount.getID(to) : '';

    var leave = SyntheticMouseEvent.getPooled(
      eventTypes.mouseLeave,
      fromID,
      nativeEvent
    );
    leave.type = 'mouseleave';
    leave.target = from;
    leave.relatedTarget = to;

    var enter = SyntheticMouseEvent.getPooled(
      eventTypes.mouseEnter,
      toID,
      nativeEvent
    );
    enter.type = 'mouseenter';
    enter.target = to;
    enter.relatedTarget = from;

    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, fromID, toID);

    extractedEvents[0] = leave;
    extractedEvents[1] = enter;

    return extractedEvents;
  }

};

module.exports = EnterLeaveEventPlugin;

},{"141":141,"15":15,"20":20,"70":70,"99":99}],15:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule EventConstants
 */

'use strict';

var keyMirror = _dereq_(140);

var PropagationPhases = keyMirror({bubbled: null, captured: null});

/**
 * Types of raw signals from the browser caught at the top level.
 */
var topLevelTypes = keyMirror({
  topBlur: null,
  topChange: null,
  topClick: null,
  topCompositionEnd: null,
  topCompositionStart: null,
  topCompositionUpdate: null,
  topContextMenu: null,
  topCopy: null,
  topCut: null,
  topDoubleClick: null,
  topDrag: null,
  topDragEnd: null,
  topDragEnter: null,
  topDragExit: null,
  topDragLeave: null,
  topDragOver: null,
  topDragStart: null,
  topDrop: null,
  topError: null,
  topFocus: null,
  topInput: null,
  topKeyDown: null,
  topKeyPress: null,
  topKeyUp: null,
  topLoad: null,
  topMouseDown: null,
  topMouseMove: null,
  topMouseOut: null,
  topMouseOver: null,
  topMouseUp: null,
  topPaste: null,
  topReset: null,
  topScroll: null,
  topSelectionChange: null,
  topSubmit: null,
  topTextInput: null,
  topTouchCancel: null,
  topTouchEnd: null,
  topTouchMove: null,
  topTouchStart: null,
  topWheel: null
});

var EventConstants = {
  topLevelTypes: topLevelTypes,
  PropagationPhases: PropagationPhases
};

module.exports = EventConstants;

},{"140":140}],16:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule EventListener
 * @typechecks
 */

var emptyFunction = _dereq_(114);

/**
 * Upstream version of event listener. Does not take into account specific
 * nature of platform.
 */
var EventListener = {
  /**
   * Listen to DOM events during the bubble phase.
   *
   * @param {DOMEventTarget} target DOM element to register listener on.
   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
   * @param {function} callback Callback function.
   * @return {object} Object with a `remove` method.
   */
  listen: function(target, eventType, callback) {
    if (target.addEventListener) {
      target.addEventListener(eventType, callback, false);
      return {
        remove: function() {
          target.removeEventListener(eventType, callback, false);
        }
      };
    } else if (target.attachEvent) {
      target.attachEvent('on' + eventType, callback);
      return {
        remove: function() {
          target.detachEvent('on' + eventType, callback);
        }
      };
    }
  },

  /**
   * Listen to DOM events during the capture phase.
   *
   * @param {DOMEventTarget} target DOM element to register listener on.
   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
   * @param {function} callback Callback function.
   * @return {object} Object with a `remove` method.
   */
  capture: function(target, eventType, callback) {
    if (!target.addEventListener) {
      if ("production" !== "development") {
        console.error(
          'Attempted to listen to events during the capture phase on a ' +
          'browser that does not support the capture phase. Your application ' +
          'will not receive some events.'
        );
      }
      return {
        remove: emptyFunction
      };
    } else {
      target.addEventListener(eventType, callback, true);
      return {
        remove: function() {
          target.removeEventListener(eventType, callback, true);
        }
      };
    }
  },

  registerDefault: function() {}
};

module.exports = EventListener;

},{"114":114}],17:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule EventPluginHub
 */

'use strict';

var EventPluginRegistry = _dereq_(18);
var EventPluginUtils = _dereq_(19);

var accumulateInto = _dereq_(105);
var forEachAccumulated = _dereq_(120);
var invariant = _dereq_(135);

/**
 * Internal store for event listeners
 */
var listenerBank = {};

/**
 * Internal queue of events that have accumulated their dispatches and are
 * waiting to have their dispatches executed.
 */
var eventQueue = null;

/**
 * Dispatches an event and releases it back into the pool, unless persistent.
 *
 * @param {?object} event Synthetic event to be dispatched.
 * @private
 */
var executeDispatchesAndRelease = function(event) {
  if (event) {
    var executeDispatch = EventPluginUtils.executeDispatch;
    // Plugins can provide custom behavior when dispatching events.
    var PluginModule = EventPluginRegistry.getPluginModuleForEvent(event);
    if (PluginModule && PluginModule.executeDispatch) {
      executeDispatch = PluginModule.executeDispatch;
    }
    EventPluginUtils.executeDispatchesInOrder(event, executeDispatch);

    if (!event.isPersistent()) {
      event.constructor.release(event);
    }
  }
};

/**
 * - `InstanceHandle`: [required] Module that performs logical traversals of DOM
 *   hierarchy given ids of the logical DOM elements involved.
 */
var InstanceHandle = null;

function validateInstanceHandle() {
  var valid =
    InstanceHandle &&
    InstanceHandle.traverseTwoPhase &&
    InstanceHandle.traverseEnterLeave;
  ("production" !== "development" ? invariant(
    valid,
    'InstanceHandle not injected before use!'
  ) : invariant(valid));
}

/**
 * This is a unified interface for event plugins to be installed and configured.
 *
 * Event plugins can implement the following properties:
 *
 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
 *     Required. When a top-level event is fired, this method is expected to
 *     extract synthetic events that will in turn be queued and dispatched.
 *
 *   `eventTypes` {object}
 *     Optional, plugins that fire events must publish a mapping of registration
 *     names that are used to register listeners. Values of this mapping must
 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
 *
 *   `executeDispatch` {function(object, function, string)}
 *     Optional, allows plugins to override how an event gets dispatched. By
 *     default, the listener is simply invoked.
 *
 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
 *
 * @public
 */
var EventPluginHub = {

  /**
   * Methods for injecting dependencies.
   */
  injection: {

    /**
     * @param {object} InjectedMount
     * @public
     */
    injectMount: EventPluginUtils.injection.injectMount,

    /**
     * @param {object} InjectedInstanceHandle
     * @public
     */
    injectInstanceHandle: function(InjectedInstanceHandle) {
      InstanceHandle = InjectedInstanceHandle;
      if ("production" !== "development") {
        validateInstanceHandle();
      }
    },

    getInstanceHandle: function() {
      if ("production" !== "development") {
        validateInstanceHandle();
      }
      return InstanceHandle;
    },

    /**
     * @param {array} InjectedEventPluginOrder
     * @public
     */
    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,

    /**
     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
     */
    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName

  },

  eventNameDispatchConfigs: EventPluginRegistry.eventNameDispatchConfigs,

  registrationNameModules: EventPluginRegistry.registrationNameModules,

  /**
   * Stores `listener` at `listenerBank[registrationName][id]`. Is idempotent.
   *
   * @param {string} id ID of the DOM element.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @param {?function} listener The callback to store.
   */
  putListener: function(id, registrationName, listener) {
    ("production" !== "development" ? invariant(
      !listener || typeof listener === 'function',
      'Expected %s listener to be a function, instead got type %s',
      registrationName, typeof listener
    ) : invariant(!listener || typeof listener === 'function'));

    var bankForRegistrationName =
      listenerBank[registrationName] || (listenerBank[registrationName] = {});
    bankForRegistrationName[id] = listener;
  },

  /**
   * @param {string} id ID of the DOM element.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @return {?function} The stored callback.
   */
  getListener: function(id, registrationName) {
    var bankForRegistrationName = listenerBank[registrationName];
    return bankForRegistrationName && bankForRegistrationName[id];
  },

  /**
   * Deletes a listener from the registration bank.
   *
   * @param {string} id ID of the DOM element.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   */
  deleteListener: function(id, registrationName) {
    var bankForRegistrationName = listenerBank[registrationName];
    if (bankForRegistrationName) {
      delete bankForRegistrationName[id];
    }
  },

  /**
   * Deletes all listeners for the DOM element with the supplied ID.
   *
   * @param {string} id ID of the DOM element.
   */
  deleteAllListeners: function(id) {
    for (var registrationName in listenerBank) {
      delete listenerBank[registrationName][id];
    }
  },

  /**
   * Allows registered plugins an opportunity to extract events from top-level
   * native browser events.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {DOMEventTarget} topLevelTarget The listening component root node.
   * @param {string} topLevelTargetID ID of `topLevelTarget`.
   * @param {object} nativeEvent Native browser event.
   * @return {*} An accumulation of synthetic events.
   * @internal
   */
  extractEvents: function(
      topLevelType,
      topLevelTarget,
      topLevelTargetID,
      nativeEvent) {
    var events;
    var plugins = EventPluginRegistry.plugins;
    for (var i = 0, l = plugins.length; i < l; i++) {
      // Not every plugin in the ordering may be loaded at runtime.
      var possiblePlugin = plugins[i];
      if (possiblePlugin) {
        var extractedEvents = possiblePlugin.extractEvents(
          topLevelType,
          topLevelTarget,
          topLevelTargetID,
          nativeEvent
        );
        if (extractedEvents) {
          events = accumulateInto(events, extractedEvents);
        }
      }
    }
    return events;
  },

  /**
   * Enqueues a synthetic event that should be dispatched when
   * `processEventQueue` is invoked.
   *
   * @param {*} events An accumulation of synthetic events.
   * @internal
   */
  enqueueEvents: function(events) {
    if (events) {
      eventQueue = accumulateInto(eventQueue, events);
    }
  },

  /**
   * Dispatches all synthetic events on the event queue.
   *
   * @internal
   */
  processEventQueue: function() {
    // Set `eventQueue` to null before processing it so that we can tell if more
    // events get enqueued while processing.
    var processingEventQueue = eventQueue;
    eventQueue = null;
    forEachAccumulated(processingEventQueue, executeDispatchesAndRelease);
    ("production" !== "development" ? invariant(
      !eventQueue,
      'processEventQueue(): Additional events were enqueued while processing ' +
      'an event queue. Support for this has not yet been implemented.'
    ) : invariant(!eventQueue));
  },

  /**
   * These are needed for tests only. Do not use!
   */
  __purge: function() {
    listenerBank = {};
  },

  __getListenerBank: function() {
    return listenerBank;
  }

};

module.exports = EventPluginHub;

},{"105":105,"120":120,"135":135,"18":18,"19":19}],18:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule EventPluginRegistry
 * @typechecks static-only
 */

'use strict';

var invariant = _dereq_(135);

/**
 * Injectable ordering of event plugins.
 */
var EventPluginOrder = null;

/**
 * Injectable mapping from names to event plugin modules.
 */
var namesToPlugins = {};

/**
 * Recomputes the plugin list using the injected plugins and plugin ordering.
 *
 * @private
 */
function recomputePluginOrdering() {
  if (!EventPluginOrder) {
    // Wait until an `EventPluginOrder` is injected.
    return;
  }
  for (var pluginName in namesToPlugins) {
    var PluginModule = namesToPlugins[pluginName];
    var pluginIndex = EventPluginOrder.indexOf(pluginName);
    ("production" !== "development" ? invariant(
      pluginIndex > -1,
      'EventPluginRegistry: Cannot inject event plugins that do not exist in ' +
      'the plugin ordering, `%s`.',
      pluginName
    ) : invariant(pluginIndex > -1));
    if (EventPluginRegistry.plugins[pluginIndex]) {
      continue;
    }
    ("production" !== "development" ? invariant(
      PluginModule.extractEvents,
      'EventPluginRegistry: Event plugins must implement an `extractEvents` ' +
      'method, but `%s` does not.',
      pluginName
    ) : invariant(PluginModule.extractEvents));
    EventPluginRegistry.plugins[pluginIndex] = PluginModule;
    var publishedEvents = PluginModule.eventTypes;
    for (var eventName in publishedEvents) {
      ("production" !== "development" ? invariant(
        publishEventForPlugin(
          publishedEvents[eventName],
          PluginModule,
          eventName
        ),
        'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.',
        eventName,
        pluginName
      ) : invariant(publishEventForPlugin(
        publishedEvents[eventName],
        PluginModule,
        eventName
      )));
    }
  }
}

/**
 * Publishes an event so that it can be dispatched by the supplied plugin.
 *
 * @param {object} dispatchConfig Dispatch configuration for the event.
 * @param {object} PluginModule Plugin publishing the event.
 * @return {boolean} True if the event was successfully published.
 * @private
 */
function publishEventForPlugin(dispatchConfig, PluginModule, eventName) {
  ("production" !== "development" ? invariant(
    !EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName),
    'EventPluginHub: More than one plugin attempted to publish the same ' +
    'event name, `%s`.',
    eventName
  ) : invariant(!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName)));
  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;

  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
  if (phasedRegistrationNames) {
    for (var phaseName in phasedRegistrationNames) {
      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
        var phasedRegistrationName = phasedRegistrationNames[phaseName];
        publishRegistrationName(
          phasedRegistrationName,
          PluginModule,
          eventName
        );
      }
    }
    return true;
  } else if (dispatchConfig.registrationName) {
    publishRegistrationName(
      dispatchConfig.registrationName,
      PluginModule,
      eventName
    );
    return true;
  }
  return false;
}

/**
 * Publishes a registration name that is used to identify dispatched events and
 * can be used with `EventPluginHub.putListener` to register listeners.
 *
 * @param {string} registrationName Registration name to add.
 * @param {object} PluginModule Plugin publishing the event.
 * @private
 */
function publishRegistrationName(registrationName, PluginModule, eventName) {
  ("production" !== "development" ? invariant(
    !EventPluginRegistry.registrationNameModules[registrationName],
    'EventPluginHub: More than one plugin attempted to publish the same ' +
    'registration name, `%s`.',
    registrationName
  ) : invariant(!EventPluginRegistry.registrationNameModules[registrationName]));
  EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;
  EventPluginRegistry.registrationNameDependencies[registrationName] =
    PluginModule.eventTypes[eventName].dependencies;
}

/**
 * Registers plugins so that they can extract and dispatch events.
 *
 * @see {EventPluginHub}
 */
var EventPluginRegistry = {

  /**
   * Ordered list of injected plugins.
   */
  plugins: [],

  /**
   * Mapping from event name to dispatch config
   */
  eventNameDispatchConfigs: {},

  /**
   * Mapping from registration name to plugin module
   */
  registrationNameModules: {},

  /**
   * Mapping from registration name to event name
   */
  registrationNameDependencies: {},

  /**
   * Injects an ordering of plugins (by plugin name). This allows the ordering
   * to be decoupled from injection of the actual plugins so that ordering is
   * always deterministic regardless of packaging, on-the-fly injection, etc.
   *
   * @param {array} InjectedEventPluginOrder
   * @internal
   * @see {EventPluginHub.injection.injectEventPluginOrder}
   */
  injectEventPluginOrder: function(InjectedEventPluginOrder) {
    ("production" !== "development" ? invariant(
      !EventPluginOrder,
      'EventPluginRegistry: Cannot inject event plugin ordering more than ' +
      'once. You are likely trying to load more than one copy of React.'
    ) : invariant(!EventPluginOrder));
    // Clone the ordering so it cannot be dynamically mutated.
    EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);
    recomputePluginOrdering();
  },

  /**
   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
   * in the ordering injected by `injectEventPluginOrder`.
   *
   * Plugins can be injected as part of page initialization or on-the-fly.
   *
   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
   * @internal
   * @see {EventPluginHub.injection.injectEventPluginsByName}
   */
  injectEventPluginsByName: function(injectedNamesToPlugins) {
    var isOrderingDirty = false;
    for (var pluginName in injectedNamesToPlugins) {
      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
        continue;
      }
      var PluginModule = injectedNamesToPlugins[pluginName];
      if (!namesToPlugins.hasOwnProperty(pluginName) ||
          namesToPlugins[pluginName] !== PluginModule) {
        ("production" !== "development" ? invariant(
          !namesToPlugins[pluginName],
          'EventPluginRegistry: Cannot inject two different event plugins ' +
          'using the same name, `%s`.',
          pluginName
        ) : invariant(!namesToPlugins[pluginName]));
        namesToPlugins[pluginName] = PluginModule;
        isOrderingDirty = true;
      }
    }
    if (isOrderingDirty) {
      recomputePluginOrdering();
    }
  },

  /**
   * Looks up the plugin for the supplied event.
   *
   * @param {object} event A synthetic event.
   * @return {?object} The plugin that created the supplied event.
   * @internal
   */
  getPluginModuleForEvent: function(event) {
    var dispatchConfig = event.dispatchConfig;
    if (dispatchConfig.registrationName) {
      return EventPluginRegistry.registrationNameModules[
        dispatchConfig.registrationName
      ] || null;
    }
    for (var phase in dispatchConfig.phasedRegistrationNames) {
      if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {
        continue;
      }
      var PluginModule = EventPluginRegistry.registrationNameModules[
        dispatchConfig.phasedRegistrationNames[phase]
      ];
      if (PluginModule) {
        return PluginModule;
      }
    }
    return null;
  },

  /**
   * Exposed for unit testing.
   * @private
   */
  _resetEventPlugins: function() {
    EventPluginOrder = null;
    for (var pluginName in namesToPlugins) {
      if (namesToPlugins.hasOwnProperty(pluginName)) {
        delete namesToPlugins[pluginName];
      }
    }
    EventPluginRegistry.plugins.length = 0;

    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
    for (var eventName in eventNameDispatchConfigs) {
      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
        delete eventNameDispatchConfigs[eventName];
      }
    }

    var registrationNameModules = EventPluginRegistry.registrationNameModules;
    for (var registrationName in registrationNameModules) {
      if (registrationNameModules.hasOwnProperty(registrationName)) {
        delete registrationNameModules[registrationName];
      }
    }
  }

};

module.exports = EventPluginRegistry;

},{"135":135}],19:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule EventPluginUtils
 */

'use strict';

var EventConstants = _dereq_(15);

var invariant = _dereq_(135);

/**
 * Injected dependencies:
 */

/**
 * - `Mount`: [required] Module that can convert between React dom IDs and
 *   actual node references.
 */
var injection = {
  Mount: null,
  injectMount: function(InjectedMount) {
    injection.Mount = InjectedMount;
    if ("production" !== "development") {
      ("production" !== "development" ? invariant(
        InjectedMount && InjectedMount.getNode,
        'EventPluginUtils.injection.injectMount(...): Injected Mount module ' +
        'is missing getNode.'
      ) : invariant(InjectedMount && InjectedMount.getNode));
    }
  }
};

var topLevelTypes = EventConstants.topLevelTypes;

function isEndish(topLevelType) {
  return topLevelType === topLevelTypes.topMouseUp ||
         topLevelType === topLevelTypes.topTouchEnd ||
         topLevelType === topLevelTypes.topTouchCancel;
}

function isMoveish(topLevelType) {
  return topLevelType === topLevelTypes.topMouseMove ||
         topLevelType === topLevelTypes.topTouchMove;
}
function isStartish(topLevelType) {
  return topLevelType === topLevelTypes.topMouseDown ||
         topLevelType === topLevelTypes.topTouchStart;
}


var validateEventDispatches;
if ("production" !== "development") {
  validateEventDispatches = function(event) {
    var dispatchListeners = event._dispatchListeners;
    var dispatchIDs = event._dispatchIDs;

    var listenersIsArr = Array.isArray(dispatchListeners);
    var idsIsArr = Array.isArray(dispatchIDs);
    var IDsLen = idsIsArr ? dispatchIDs.length : dispatchIDs ? 1 : 0;
    var listenersLen = listenersIsArr ?
      dispatchListeners.length :
      dispatchListeners ? 1 : 0;

    ("production" !== "development" ? invariant(
      idsIsArr === listenersIsArr && IDsLen === listenersLen,
      'EventPluginUtils: Invalid `event`.'
    ) : invariant(idsIsArr === listenersIsArr && IDsLen === listenersLen));
  };
}

/**
 * Invokes `cb(event, listener, id)`. Avoids using call if no scope is
 * provided. The `(listener,id)` pair effectively forms the "dispatch" but are
 * kept separate to conserve memory.
 */
function forEachEventDispatch(event, cb) {
  var dispatchListeners = event._dispatchListeners;
  var dispatchIDs = event._dispatchIDs;
  if ("production" !== "development") {
    validateEventDispatches(event);
  }
  if (Array.isArray(dispatchListeners)) {
    for (var i = 0; i < dispatchListeners.length; i++) {
      if (event.isPropagationStopped()) {
        break;
      }
      // Listeners and IDs are two parallel arrays that are always in sync.
      cb(event, dispatchListeners[i], dispatchIDs[i]);
    }
  } else if (dispatchListeners) {
    cb(event, dispatchListeners, dispatchIDs);
  }
}

/**
 * Default implementation of PluginModule.executeDispatch().
 * @param {SyntheticEvent} SyntheticEvent to handle
 * @param {function} Application-level callback
 * @param {string} domID DOM id to pass to the callback.
 */
function executeDispatch(event, listener, domID) {
  event.currentTarget = injection.Mount.getNode(domID);
  var returnValue = listener(event, domID);
  event.currentTarget = null;
  return returnValue;
}

/**
 * Standard/simple iteration through an event's collected dispatches.
 */
function executeDispatchesInOrder(event, cb) {
  forEachEventDispatch(event, cb);
  event._dispatchListeners = null;
  event._dispatchIDs = null;
}

/**
 * Standard/simple iteration through an event's collected dispatches, but stops
 * at the first dispatch execution returning true, and returns that id.
 *
 * @return id of the first dispatch execution who's listener returns true, or
 * null if no listener returned true.
 */
function executeDispatchesInOrderStopAtTrueImpl(event) {
  var dispatchListeners = event._dispatchListeners;
  var dispatchIDs = event._dispatchIDs;
  if ("production" !== "development") {
    validateEventDispatches(event);
  }
  if (Array.isArray(dispatchListeners)) {
    for (var i = 0; i < dispatchListeners.length; i++) {
      if (event.isPropagationStopped()) {
        break;
      }
      // Listeners and IDs are two parallel arrays that are always in sync.
      if (dispatchListeners[i](event, dispatchIDs[i])) {
        return dispatchIDs[i];
      }
    }
  } else if (dispatchListeners) {
    if (dispatchListeners(event, dispatchIDs)) {
      return dispatchIDs;
    }
  }
  return null;
}

/**
 * @see executeDispatchesInOrderStopAtTrueImpl
 */
function executeDispatchesInOrderStopAtTrue(event) {
  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
  event._dispatchIDs = null;
  event._dispatchListeners = null;
  return ret;
}

/**
 * Execution of a "direct" dispatch - there must be at most one dispatch
 * accumulated on the event or it is considered an error. It doesn't really make
 * sense for an event with multiple dispatches (bubbled) to keep track of the
 * return values at each dispatch execution, but it does tend to make sense when
 * dealing with "direct" dispatches.
 *
 * @return The return value of executing the single dispatch.
 */
function executeDirectDispatch(event) {
  if ("production" !== "development") {
    validateEventDispatches(event);
  }
  var dispatchListener = event._dispatchListeners;
  var dispatchID = event._dispatchIDs;
  ("production" !== "development" ? invariant(
    !Array.isArray(dispatchListener),
    'executeDirectDispatch(...): Invalid `event`.'
  ) : invariant(!Array.isArray(dispatchListener)));
  var res = dispatchListener ?
    dispatchListener(event, dispatchID) :
    null;
  event._dispatchListeners = null;
  event._dispatchIDs = null;
  return res;
}

/**
 * @param {SyntheticEvent} event
 * @return {bool} True iff number of dispatches accumulated is greater than 0.
 */
function hasDispatches(event) {
  return !!event._dispatchListeners;
}

/**
 * General utilities that are useful in creating custom Event Plugins.
 */
var EventPluginUtils = {
  isEndish: isEndish,
  isMoveish: isMoveish,
  isStartish: isStartish,

  executeDirectDispatch: executeDirectDispatch,
  executeDispatch: executeDispatch,
  executeDispatchesInOrder: executeDispatchesInOrder,
  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
  hasDispatches: hasDispatches,
  injection: injection,
  useTouchEvents: false
};

module.exports = EventPluginUtils;

},{"135":135,"15":15}],20:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule EventPropagators
 */

'use strict';

var EventConstants = _dereq_(15);
var EventPluginHub = _dereq_(17);

var accumulateInto = _dereq_(105);
var forEachAccumulated = _dereq_(120);

var PropagationPhases = EventConstants.PropagationPhases;
var getListener = EventPluginHub.getListener;

/**
 * Some event types have a notion of different registration names for different
 * "phases" of propagation. This finds listeners by a given phase.
 */
function listenerAtPhase(id, event, propagationPhase) {
  var registrationName =
    event.dispatchConfig.phasedRegistrationNames[propagationPhase];
  return getListener(id, registrationName);
}

/**
 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
 * here, allows us to not have to bind or create functions for each event.
 * Mutating the event's members allows us to not have to create a wrapping
 * "dispatch" object that pairs the event with the listener.
 */
function accumulateDirectionalDispatches(domID, upwards, event) {
  if ("production" !== "development") {
    if (!domID) {
      throw new Error('Dispatching id must not be null');
    }
  }
  var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;
  var listener = listenerAtPhase(domID, event, phase);
  if (listener) {
    event._dispatchListeners =
      accumulateInto(event._dispatchListeners, listener);
    event._dispatchIDs = accumulateInto(event._dispatchIDs, domID);
  }
}

/**
 * Collect dispatches (must be entirely collected before dispatching - see unit
 * tests). Lazily allocate the array to conserve memory.  We must loop through
 * each event and perform the traversal for each one. We can not perform a
 * single traversal for the entire collection of events because each event may
 * have a different target.
 */
function accumulateTwoPhaseDispatchesSingle(event) {
  if (event && event.dispatchConfig.phasedRegistrationNames) {
    EventPluginHub.injection.getInstanceHandle().traverseTwoPhase(
      event.dispatchMarker,
      accumulateDirectionalDispatches,
      event
    );
  }
}


/**
 * Accumulates without regard to direction, does not look for phased
 * registration names. Same as `accumulateDirectDispatchesSingle` but without
 * requiring that the `dispatchMarker` be the same as the dispatched ID.
 */
function accumulateDispatches(id, ignoredDirection, event) {
  if (event && event.dispatchConfig.registrationName) {
    var registrationName = event.dispatchConfig.registrationName;
    var listener = getListener(id, registrationName);
    if (listener) {
      event._dispatchListeners =
        accumulateInto(event._dispatchListeners, listener);
      event._dispatchIDs = accumulateInto(event._dispatchIDs, id);
    }
  }
}

/**
 * Accumulates dispatches on an `SyntheticEvent`, but only for the
 * `dispatchMarker`.
 * @param {SyntheticEvent} event
 */
function accumulateDirectDispatchesSingle(event) {
  if (event && event.dispatchConfig.registrationName) {
    accumulateDispatches(event.dispatchMarker, null, event);
  }
}

function accumulateTwoPhaseDispatches(events) {
  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
}

function accumulateEnterLeaveDispatches(leave, enter, fromID, toID) {
  EventPluginHub.injection.getInstanceHandle().traverseEnterLeave(
    fromID,
    toID,
    accumulateDispatches,
    leave,
    enter
  );
}


function accumulateDirectDispatches(events) {
  forEachAccumulated(events, accumulateDirectDispatchesSingle);
}



/**
 * A small set of propagation patterns, each of which will accept a small amount
 * of information, and generate a set of "dispatch ready event objects" - which
 * are sets of events that have already been annotated with a set of dispatched
 * listener functions/ids. The API is designed this way to discourage these
 * propagation strategies from actually executing the dispatches, since we
 * always want to collect the entire set of dispatches before executing event a
 * single one.
 *
 * @constructor EventPropagators
 */
var EventPropagators = {
  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
  accumulateDirectDispatches: accumulateDirectDispatches,
  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
};

module.exports = EventPropagators;

},{"105":105,"120":120,"15":15,"17":17}],21:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ExecutionEnvironment
 */

/*jslint evil: true */

"use strict";

var canUseDOM = !!(
  (typeof window !== 'undefined' &&
  window.document && window.document.createElement)
);

/**
 * Simple, lightweight module assisting with the detection and context of
 * Worker. Helps avoid circular dependencies and allows code to reason about
 * whether or not they are in a Worker, even if they never include the main
 * `ReactWorker` dependency.
 */
var ExecutionEnvironment = {

  canUseDOM: canUseDOM,

  canUseWorkers: typeof Worker !== 'undefined',

  canUseEventListeners:
    canUseDOM && !!(window.addEventListener || window.attachEvent),

  canUseViewport: canUseDOM && !!window.screen,

  isInWorker: !canUseDOM // For now, this is true - might change in the future.

};

module.exports = ExecutionEnvironment;

},{}],22:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule FallbackCompositionState
 * @typechecks static-only
 */

'use strict';

var PooledClass = _dereq_(28);

var assign = _dereq_(27);
var getTextContentAccessor = _dereq_(130);

/**
 * This helper class stores information about text content of a target node,
 * allowing comparison of content before and after a given event.
 *
 * Identify the node where selection currently begins, then observe
 * both its text content and its current position in the DOM. Since the
 * browser may natively replace the target node during composition, we can
 * use its position to find its replacement.
 *
 * @param {DOMEventTarget} root
 */
function FallbackCompositionState(root) {
  this._root = root;
  this._startText = this.getText();
  this._fallbackText = null;
}

assign(FallbackCompositionState.prototype, {
  /**
   * Get current text of input.
   *
   * @return {string}
   */
  getText: function() {
    if ('value' in this._root) {
      return this._root.value;
    }
    return this._root[getTextContentAccessor()];
  },

  /**
   * Determine the differing substring between the initially stored
   * text content and the current content.
   *
   * @return {string}
   */
  getData: function() {
    if (this._fallbackText) {
      return this._fallbackText;
    }

    var start;
    var startValue = this._startText;
    var startLength = startValue.length;
    var end;
    var endValue = this.getText();
    var endLength = endValue.length;

    for (start = 0; start < startLength; start++) {
      if (startValue[start] !== endValue[start]) {
        break;
      }
    }

    var minEnd = startLength - start;
    for (end = 1; end <= minEnd; end++) {
      if (startValue[startLength - end] !== endValue[endLength - end]) {
        break;
      }
    }

    var sliceTail = end > 1 ? 1 - end : undefined;
    this._fallbackText = endValue.slice(start, sliceTail);
    return this._fallbackText;
  }
});

PooledClass.addPoolingTo(FallbackCompositionState);

module.exports = FallbackCompositionState;

},{"130":130,"27":27,"28":28}],23:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule HTMLDOMPropertyConfig
 */

/*jslint bitwise: true*/

'use strict';

var DOMProperty = _dereq_(10);
var ExecutionEnvironment = _dereq_(21);

var MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;
var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
var HAS_SIDE_EFFECTS = DOMProperty.injection.HAS_SIDE_EFFECTS;
var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
var HAS_POSITIVE_NUMERIC_VALUE =
  DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
var HAS_OVERLOADED_BOOLEAN_VALUE =
  DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;

var hasSVG;
if (ExecutionEnvironment.canUseDOM) {
  var implementation = document.implementation;
  hasSVG = (
    implementation &&
    implementation.hasFeature &&
    implementation.hasFeature(
      'http://www.w3.org/TR/SVG11/feature#BasicStructure',
      '1.1'
    )
  );
}


var HTMLDOMPropertyConfig = {
  isCustomAttribute: RegExp.prototype.test.bind(
    /^(data|aria)-[a-z_][a-z\d_.\-]*$/
  ),
  Properties: {
    /**
     * Standard Properties
     */
    accept: null,
    acceptCharset: null,
    accessKey: null,
    action: null,
    allowFullScreen: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
    allowTransparency: MUST_USE_ATTRIBUTE,
    alt: null,
    async: HAS_BOOLEAN_VALUE,
    autoComplete: null,
    // autoFocus is polyfilled/normalized by AutoFocusMixin
    // autoFocus: HAS_BOOLEAN_VALUE,
    autoPlay: HAS_BOOLEAN_VALUE,
    cellPadding: null,
    cellSpacing: null,
    charSet: MUST_USE_ATTRIBUTE,
    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    classID: MUST_USE_ATTRIBUTE,
    // To set className on SVG elements, it's necessary to use .setAttribute;
    // this works on HTML elements too in all browsers except IE8. Conveniently,
    // IE8 doesn't support SVG and so we can simply use the attribute in
    // browsers that support SVG and the property in browsers that don't,
    // regardless of whether the element is HTML or SVG.
    className: hasSVG ? MUST_USE_ATTRIBUTE : MUST_USE_PROPERTY,
    cols: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
    colSpan: null,
    content: null,
    contentEditable: null,
    contextMenu: MUST_USE_ATTRIBUTE,
    controls: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    coords: null,
    crossOrigin: null,
    data: null, // For `<object />` acts as `src`.
    dateTime: MUST_USE_ATTRIBUTE,
    defer: HAS_BOOLEAN_VALUE,
    dir: null,
    disabled: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
    download: HAS_OVERLOADED_BOOLEAN_VALUE,
    draggable: null,
    encType: null,
    form: MUST_USE_ATTRIBUTE,
    formAction: MUST_USE_ATTRIBUTE,
    formEncType: MUST_USE_ATTRIBUTE,
    formMethod: MUST_USE_ATTRIBUTE,
    formNoValidate: HAS_BOOLEAN_VALUE,
    formTarget: MUST_USE_ATTRIBUTE,
    frameBorder: MUST_USE_ATTRIBUTE,
    headers: null,
    height: MUST_USE_ATTRIBUTE,
    hidden: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
    high: null,
    href: null,
    hrefLang: null,
    htmlFor: null,
    httpEquiv: null,
    icon: null,
    id: MUST_USE_PROPERTY,
    label: null,
    lang: null,
    list: MUST_USE_ATTRIBUTE,
    loop: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    low: null,
    manifest: MUST_USE_ATTRIBUTE,
    marginHeight: null,
    marginWidth: null,
    max: null,
    maxLength: MUST_USE_ATTRIBUTE,
    media: MUST_USE_ATTRIBUTE,
    mediaGroup: null,
    method: null,
    min: null,
    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    name: null,
    noValidate: HAS_BOOLEAN_VALUE,
    open: HAS_BOOLEAN_VALUE,
    optimum: null,
    pattern: null,
    placeholder: null,
    poster: null,
    preload: null,
    radioGroup: null,
    readOnly: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    rel: null,
    required: HAS_BOOLEAN_VALUE,
    role: MUST_USE_ATTRIBUTE,
    rows: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
    rowSpan: null,
    sandbox: null,
    scope: null,
    scoped: HAS_BOOLEAN_VALUE,
    scrolling: null,
    seamless: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    shape: null,
    size: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
    sizes: MUST_USE_ATTRIBUTE,
    span: HAS_POSITIVE_NUMERIC_VALUE,
    spellCheck: null,
    src: null,
    srcDoc: MUST_USE_PROPERTY,
    srcSet: MUST_USE_ATTRIBUTE,
    start: HAS_NUMERIC_VALUE,
    step: null,
    style: null,
    tabIndex: null,
    target: null,
    title: null,
    type: null,
    useMap: null,
    value: MUST_USE_PROPERTY | HAS_SIDE_EFFECTS,
    width: MUST_USE_ATTRIBUTE,
    wmode: MUST_USE_ATTRIBUTE,

    /**
     * Non-standard Properties
     */
    // autoCapitalize and autoCorrect are supported in Mobile Safari for
    // keyboard hints.
    autoCapitalize: null,
    autoCorrect: null,
    // itemProp, itemScope, itemType are for
    // Microdata support. See http://schema.org/docs/gs.html
    itemProp: MUST_USE_ATTRIBUTE,
    itemScope: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
    itemType: MUST_USE_ATTRIBUTE,
    // itemID and itemRef are for Microdata support as well but
    // only specified in the the WHATWG spec document. See
    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
    itemID: MUST_USE_ATTRIBUTE,
    itemRef: MUST_USE_ATTRIBUTE,
    // property is supported for OpenGraph in meta tags.
    property: null,
    // IE-only attribute that controls focus behavior
    unselectable: MUST_USE_ATTRIBUTE
  },
  DOMAttributeNames: {
    acceptCharset: 'accept-charset',
    className: 'class',
    htmlFor: 'for',
    httpEquiv: 'http-equiv'
  },
  DOMPropertyNames: {
    autoCapitalize: 'autocapitalize',
    autoComplete: 'autocomplete',
    autoCorrect: 'autocorrect',
    autoFocus: 'autofocus',
    autoPlay: 'autoplay',
    // `encoding` is equivalent to `enctype`, IE8 lacks an `enctype` setter.
    // http://www.w3.org/TR/html5/forms.html#dom-fs-encoding
    encType: 'encoding',
    hrefLang: 'hreflang',
    radioGroup: 'radiogroup',
    spellCheck: 'spellcheck',
    srcDoc: 'srcdoc',
    srcSet: 'srcset'
  }
};

module.exports = HTMLDOMPropertyConfig;

},{"10":10,"21":21}],24:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule LinkedValueUtils
 * @typechecks static-only
 */

'use strict';

var ReactPropTypes = _dereq_(78);

var invariant = _dereq_(135);

var hasReadOnlyValue = {
  'button': true,
  'checkbox': true,
  'image': true,
  'hidden': true,
  'radio': true,
  'reset': true,
  'submit': true
};

function _assertSingleLink(input) {
  ("production" !== "development" ? invariant(
    input.props.checkedLink == null || input.props.valueLink == null,
    'Cannot provide a checkedLink and a valueLink. If you want to use ' +
    'checkedLink, you probably don\'t want to use valueLink and vice versa.'
  ) : invariant(input.props.checkedLink == null || input.props.valueLink == null));
}
function _assertValueLink(input) {
  _assertSingleLink(input);
  ("production" !== "development" ? invariant(
    input.props.value == null && input.props.onChange == null,
    'Cannot provide a valueLink and a value or onChange event. If you want ' +
    'to use value or onChange, you probably don\'t want to use valueLink.'
  ) : invariant(input.props.value == null && input.props.onChange == null));
}

function _assertCheckedLink(input) {
  _assertSingleLink(input);
  ("production" !== "development" ? invariant(
    input.props.checked == null && input.props.onChange == null,
    'Cannot provide a checkedLink and a checked property or onChange event. ' +
    'If you want to use checked or onChange, you probably don\'t want to ' +
    'use checkedLink'
  ) : invariant(input.props.checked == null && input.props.onChange == null));
}

/**
 * @param {SyntheticEvent} e change event to handle
 */
function _handleLinkedValueChange(e) {
  /*jshint validthis:true */
  this.props.valueLink.requestChange(e.target.value);
}

/**
  * @param {SyntheticEvent} e change event to handle
  */
function _handleLinkedCheckChange(e) {
  /*jshint validthis:true */
  this.props.checkedLink.requestChange(e.target.checked);
}

/**
 * Provide a linked `value` attribute for controlled forms. You should not use
 * this outside of the ReactDOM controlled form components.
 */
var LinkedValueUtils = {
  Mixin: {
    propTypes: {
      value: function(props, propName, componentName) {
        if (!props[propName] ||
            hasReadOnlyValue[props.type] ||
            props.onChange ||
            props.readOnly ||
            props.disabled) {
          return null;
        }
        return new Error(
          'You provided a `value` prop to a form field without an ' +
          '`onChange` handler. This will render a read-only field. If ' +
          'the field should be mutable use `defaultValue`. Otherwise, ' +
          'set either `onChange` or `readOnly`.'
        );
      },
      checked: function(props, propName, componentName) {
        if (!props[propName] ||
            props.onChange ||
            props.readOnly ||
            props.disabled) {
          return null;
        }
        return new Error(
          'You provided a `checked` prop to a form field without an ' +
          '`onChange` handler. This will render a read-only field. If ' +
          'the field should be mutable use `defaultChecked`. Otherwise, ' +
          'set either `onChange` or `readOnly`.'
        );
      },
      onChange: ReactPropTypes.func
    }
  },

  /**
   * @param {ReactComponent} input Form component
   * @return {*} current value of the input either from value prop or link.
   */
  getValue: function(input) {
    if (input.props.valueLink) {
      _assertValueLink(input);
      return input.props.valueLink.value;
    }
    return input.props.value;
  },

  /**
   * @param {ReactComponent} input Form component
   * @return {*} current checked status of the input either from checked prop
   *             or link.
   */
  getChecked: function(input) {
    if (input.props.checkedLink) {
      _assertCheckedLink(input);
      return input.props.checkedLink.value;
    }
    return input.props.checked;
  },

  /**
   * @param {ReactComponent} input Form component
   * @return {function} change callback either from onChange prop or link.
   */
  getOnChange: function(input) {
    if (input.props.valueLink) {
      _assertValueLink(input);
      return _handleLinkedValueChange;
    } else if (input.props.checkedLink) {
      _assertCheckedLink(input);
      return _handleLinkedCheckChange;
    }
    return input.props.onChange;
  }
};

module.exports = LinkedValueUtils;

},{"135":135,"78":78}],25:[function(_dereq_,module,exports){
/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule LocalEventTrapMixin
 */

'use strict';

var ReactBrowserEventEmitter = _dereq_(30);

var accumulateInto = _dereq_(105);
var forEachAccumulated = _dereq_(120);
var invariant = _dereq_(135);

function remove(event) {
  event.remove();
}

var LocalEventTrapMixin = {
  trapBubbledEvent:function(topLevelType, handlerBaseName) {
    ("production" !== "development" ? invariant(this.isMounted(), 'Must be mounted to trap events') : invariant(this.isMounted()));
    // If a component renders to null or if another component fatals and causes
    // the state of the tree to be corrupted, `node` here can be null.
    var node = this.getDOMNode();
    ("production" !== "development" ? invariant(
      node,
      'LocalEventTrapMixin.trapBubbledEvent(...): Requires node to be rendered.'
    ) : invariant(node));
    var listener = ReactBrowserEventEmitter.trapBubbledEvent(
      topLevelType,
      handlerBaseName,
      node
    );
    this._localEventListeners =
      accumulateInto(this._localEventListeners, listener);
  },

  // trapCapturedEvent would look nearly identical. We don't implement that
  // method because it isn't currently needed.

  componentWillUnmount:function() {
    if (this._localEventListeners) {
      forEachAccumulated(this._localEventListeners, remove);
    }
  }
};

module.exports = LocalEventTrapMixin;

},{"105":105,"120":120,"135":135,"30":30}],26:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule MobileSafariClickEventPlugin
 * @typechecks static-only
 */

'use strict';

var EventConstants = _dereq_(15);

var emptyFunction = _dereq_(114);

var topLevelTypes = EventConstants.topLevelTypes;

/**
 * Mobile Safari does not fire properly bubble click events on non-interactive
 * elements, which means delegated click listeners do not fire. The workaround
 * for this bug involves attaching an empty click listener on the target node.
 *
 * This particular plugin works around the bug by attaching an empty click
 * listener on `touchstart` (which does fire on every element).
 */
var MobileSafariClickEventPlugin = {

  eventTypes: null,

  /**
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {DOMEventTarget} topLevelTarget The listening component root node.
   * @param {string} topLevelTargetID ID of `topLevelTarget`.
   * @param {object} nativeEvent Native browser event.
   * @return {*} An accumulation of synthetic events.
   * @see {EventPluginHub.extractEvents}
   */
  extractEvents: function(
      topLevelType,
      topLevelTarget,
      topLevelTargetID,
      nativeEvent) {
    if (topLevelType === topLevelTypes.topTouchStart) {
      var target = nativeEvent.target;
      if (target && !target.onclick) {
        target.onclick = emptyFunction;
      }
    }
  }

};

module.exports = MobileSafariClickEventPlugin;

},{"114":114,"15":15}],27:[function(_dereq_,module,exports){
/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule Object.assign
 */

// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign

'use strict';

function assign(target, sources) {
  if (target == null) {
    throw new TypeError('Object.assign target cannot be null or undefined');
  }

  var to = Object(target);
  var hasOwnProperty = Object.prototype.hasOwnProperty;

  for (var nextIndex = 1; nextIndex < arguments.length; nextIndex++) {
    var nextSource = arguments[nextIndex];
    if (nextSource == null) {
      continue;
    }

    var from = Object(nextSource);

    // We don't currently support accessors nor proxies. Therefore this
    // copy cannot throw. If we ever supported this then we must handle
    // exceptions and side-effects. We don't support symbols so they won't
    // be transferred.

    for (var key in from) {
      if (hasOwnProperty.call(from, key)) {
        to[key] = from[key];
      }
    }
  }

  return to;
}

module.exports = assign;

},{}],28:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule PooledClass
 */

'use strict';

var invariant = _dereq_(135);

/**
 * Static poolers. Several custom versions for each potential number of
 * arguments. A completely generic pooler is easy to implement, but would
 * require accessing the `arguments` object. In each of these, `this` refers to
 * the Class itself, not an instance. If any others are needed, simply add them
 * here, or in their own files.
 */
var oneArgumentPooler = function(copyFieldsFrom) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, copyFieldsFrom);
    return instance;
  } else {
    return new Klass(copyFieldsFrom);
  }
};

var twoArgumentPooler = function(a1, a2) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2);
    return instance;
  } else {
    return new Klass(a1, a2);
  }
};

var threeArgumentPooler = function(a1, a2, a3) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3);
    return instance;
  } else {
    return new Klass(a1, a2, a3);
  }
};

var fiveArgumentPooler = function(a1, a2, a3, a4, a5) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3, a4, a5);
    return instance;
  } else {
    return new Klass(a1, a2, a3, a4, a5);
  }
};

var standardReleaser = function(instance) {
  var Klass = this;
  ("production" !== "development" ? invariant(
    instance instanceof Klass,
    'Trying to release an instance into a pool of a different type.'
  ) : invariant(instance instanceof Klass));
  if (instance.destructor) {
    instance.destructor();
  }
  if (Klass.instancePool.length < Klass.poolSize) {
    Klass.instancePool.push(instance);
  }
};

var DEFAULT_POOL_SIZE = 10;
var DEFAULT_POOLER = oneArgumentPooler;

/**
 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
 * itself (statically) not adding any prototypical fields. Any CopyConstructor
 * you give this may have a `poolSize` property, and will look for a
 * prototypical `destructor` on instances (optional).
 *
 * @param {Function} CopyConstructor Constructor that can be used to reset.
 * @param {Function} pooler Customizable pooler.
 */
var addPoolingTo = function(CopyConstructor, pooler) {
  var NewKlass = CopyConstructor;
  NewKlass.instancePool = [];
  NewKlass.getPooled = pooler || DEFAULT_POOLER;
  if (!NewKlass.poolSize) {
    NewKlass.poolSize = DEFAULT_POOL_SIZE;
  }
  NewKlass.release = standardReleaser;
  return NewKlass;
};

var PooledClass = {
  addPoolingTo: addPoolingTo,
  oneArgumentPooler: oneArgumentPooler,
  twoArgumentPooler: twoArgumentPooler,
  threeArgumentPooler: threeArgumentPooler,
  fiveArgumentPooler: fiveArgumentPooler
};

module.exports = PooledClass;

},{"135":135}],29:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactBrowserComponentMixin
 */

'use strict';

var findDOMNode = _dereq_(117);

var ReactBrowserComponentMixin = {
  /**
   * Returns the DOM node rendered by this component.
   *
   * @return {DOMElement} The root node of this component.
   * @final
   * @protected
   */
  getDOMNode: function() {
    return findDOMNode(this);
  }
};

module.exports = ReactBrowserComponentMixin;

},{"117":117}],30:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactBrowserEventEmitter
 * @typechecks static-only
 */

'use strict';

var EventConstants = _dereq_(15);
var EventPluginHub = _dereq_(17);
var EventPluginRegistry = _dereq_(18);
var ReactEventEmitterMixin = _dereq_(61);
var ViewportMetrics = _dereq_(104);

var assign = _dereq_(27);
var isEventSupported = _dereq_(136);

/**
 * Summary of `ReactBrowserEventEmitter` event handling:
 *
 *  - Top-level delegation is used to trap most native browser events. This
 *    may only occur in the main thread and is the responsibility of
 *    ReactEventListener, which is injected and can therefore support pluggable
 *    event sources. This is the only work that occurs in the main thread.
 *
 *  - We normalize and de-duplicate events to account for browser quirks. This
 *    may be done in the worker thread.
 *
 *  - Forward these native events (with the associated top-level type used to
 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
 *    to extract any synthetic events.
 *
 *  - The `EventPluginHub` will then process each event by annotating them with
 *    "dispatches", a sequence of listeners and IDs that care about that event.
 *
 *  - The `EventPluginHub` then dispatches the events.
 *
 * Overview of React and the event system:
 *
 * +------------+    .
 * |    DOM     |    .
 * +------------+    .
 *       |           .
 *       v           .
 * +------------+    .
 * | ReactEvent |    .
 * |  Listener  |    .
 * +------------+    .                         +-----------+
 *       |           .               +--------+|SimpleEvent|
 *       |           .               |         |Plugin     |
 * +-----|------+    .               v         +-----------+
 * |     |      |    .    +--------------+                    +------------+
 * |     +-----------.--->|EventPluginHub|                    |    Event   |
 * |            |    .    |              |     +-----------+  | Propagators|
 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
 * |            |    .    |              |     +-----------+  |  utilities |
 * |     +-----------.--->|              |                    +------------+
 * |     |      |    .    +--------------+
 * +-----|------+    .                ^        +-----------+
 *       |           .                |        |Enter/Leave|
 *       +           .                +-------+|Plugin     |
 * +-------------+   .                         +-----------+
 * | application |   .
 * |-------------|   .
 * |             |   .
 * |             |   .
 * +-------------+   .
 *                   .
 *    React Core     .  General Purpose Event Plugin System
 */

var alreadyListeningTo = {};
var isMonitoringScrollValue = false;
var reactTopListenersCounter = 0;

// For events like 'submit' which don't consistently bubble (which we trap at a
// lower node than `document`), binding at `document` would cause duplicate
// events so we don't include them here
var topEventMapping = {
  topBlur: 'blur',
  topChange: 'change',
  topClick: 'click',
  topCompositionEnd: 'compositionend',
  topCompositionStart: 'compositionstart',
  topCompositionUpdate: 'compositionupdate',
  topContextMenu: 'contextmenu',
  topCopy: 'copy',
  topCut: 'cut',
  topDoubleClick: 'dblclick',
  topDrag: 'drag',
  topDragEnd: 'dragend',
  topDragEnter: 'dragenter',
  topDragExit: 'dragexit',
  topDragLeave: 'dragleave',
  topDragOver: 'dragover',
  topDragStart: 'dragstart',
  topDrop: 'drop',
  topFocus: 'focus',
  topInput: 'input',
  topKeyDown: 'keydown',
  topKeyPress: 'keypress',
  topKeyUp: 'keyup',
  topMouseDown: 'mousedown',
  topMouseMove: 'mousemove',
  topMouseOut: 'mouseout',
  topMouseOver: 'mouseover',
  topMouseUp: 'mouseup',
  topPaste: 'paste',
  topScroll: 'scroll',
  topSelectionChange: 'selectionchange',
  topTextInput: 'textInput',
  topTouchCancel: 'touchcancel',
  topTouchEnd: 'touchend',
  topTouchMove: 'touchmove',
  topTouchStart: 'touchstart',
  topWheel: 'wheel'
};

/**
 * To ensure no conflicts with other potential React instances on the page
 */
var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);

function getListeningForDocument(mountAt) {
  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
  // directly.
  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
    mountAt[topListenersIDKey] = reactTopListenersCounter++;
    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
  }
  return alreadyListeningTo[mountAt[topListenersIDKey]];
}

/**
 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
 * example:
 *
 *   ReactBrowserEventEmitter.putListener('myID', 'onClick', myFunction);
 *
 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
 *
 * @internal
 */
var ReactBrowserEventEmitter = assign({}, ReactEventEmitterMixin, {

  /**
   * Injectable event backend
   */
  ReactEventListener: null,

  injection: {
    /**
     * @param {object} ReactEventListener
     */
    injectReactEventListener: function(ReactEventListener) {
      ReactEventListener.setHandleTopLevel(
        ReactBrowserEventEmitter.handleTopLevel
      );
      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
    }
  },

  /**
   * Sets whether or not any created callbacks should be enabled.
   *
   * @param {boolean} enabled True if callbacks should be enabled.
   */
  setEnabled: function(enabled) {
    if (ReactBrowserEventEmitter.ReactEventListener) {
      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
    }
  },

  /**
   * @return {boolean} True if callbacks are enabled.
   */
  isEnabled: function() {
    return !!(
      (ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled())
    );
  },

  /**
   * We listen for bubbled touch events on the document object.
   *
   * Firefox v8.01 (and possibly others) exhibited strange behavior when
   * mounting `onmousemove` events at some node that was not the document
   * element. The symptoms were that if your mouse is not moving over something
   * contained within that mount point (for example on the background) the
   * top-level listeners for `onmousemove` won't be called. However, if you
   * register the `mousemove` on the document object, then it will of course
   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
   * top-level listeners to the document object only, at least for these
   * movement types of events and possibly all events.
   *
   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
   *
   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
   * they bubble to document.
   *
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @param {object} contentDocumentHandle Document which owns the container
   */
  listenTo: function(registrationName, contentDocumentHandle) {
    var mountAt = contentDocumentHandle;
    var isListening = getListeningForDocument(mountAt);
    var dependencies = EventPluginRegistry.
      registrationNameDependencies[registrationName];

    var topLevelTypes = EventConstants.topLevelTypes;
    for (var i = 0, l = dependencies.length; i < l; i++) {
      var dependency = dependencies[i];
      if (!(
            (isListening.hasOwnProperty(dependency) && isListening[dependency])
          )) {
        if (dependency === topLevelTypes.topWheel) {
          if (isEventSupported('wheel')) {
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
              topLevelTypes.topWheel,
              'wheel',
              mountAt
            );
          } else if (isEventSupported('mousewheel')) {
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
              topLevelTypes.topWheel,
              'mousewheel',
              mountAt
            );
          } else {
            // Firefox needs to capture a different mouse scroll event.
            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
              topLevelTypes.topWheel,
              'DOMMouseScroll',
              mountAt
            );
          }
        } else if (dependency === topLevelTypes.topScroll) {

          if (isEventSupported('scroll', true)) {
            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
              topLevelTypes.topScroll,
              'scroll',
              mountAt
            );
          } else {
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
              topLevelTypes.topScroll,
              'scroll',
              ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE
            );
          }
        } else if (dependency === topLevelTypes.topFocus ||
            dependency === topLevelTypes.topBlur) {

          if (isEventSupported('focus', true)) {
            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
              topLevelTypes.topFocus,
              'focus',
              mountAt
            );
            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
              topLevelTypes.topBlur,
              'blur',
              mountAt
            );
          } else if (isEventSupported('focusin')) {
            // IE has `focusin` and `focusout` events which bubble.
            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
              topLevelTypes.topFocus,
              'focusin',
              mountAt
            );
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
              topLevelTypes.topBlur,
              'focusout',
              mountAt
            );
          }

          // to make sure blur and focus event listeners are only attached once
          isListening[topLevelTypes.topBlur] = true;
          isListening[topLevelTypes.topFocus] = true;
        } else if (topEventMapping.hasOwnProperty(dependency)) {
          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
            dependency,
            topEventMapping[dependency],
            mountAt
          );
        }

        isListening[dependency] = true;
      }
    }
  },

  trapBubbledEvent: function(topLevelType, handlerBaseName, handle) {
    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
      topLevelType,
      handlerBaseName,
      handle
    );
  },

  trapCapturedEvent: function(topLevelType, handlerBaseName, handle) {
    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
      topLevelType,
      handlerBaseName,
      handle
    );
  },

  /**
   * Listens to window scroll and resize events. We cache scroll values so that
   * application code can access them without triggering reflows.
   *
   * NOTE: Scroll events do not bubble.
   *
   * @see http://www.quirksmode.org/dom/events/scroll.html
   */
  ensureScrollValueMonitoring: function() {
    if (!isMonitoringScrollValue) {
      var refresh = ViewportMetrics.refreshScrollValues;
      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
      isMonitoringScrollValue = true;
    }
  },

  eventNameDispatchConfigs: EventPluginHub.eventNameDispatchConfigs,

  registrationNameModules: EventPluginHub.registrationNameModules,

  putListener: EventPluginHub.putListener,

  getListener: EventPluginHub.getListener,

  deleteListener: EventPluginHub.deleteListener,

  deleteAllListeners: EventPluginHub.deleteAllListeners

});

module.exports = ReactBrowserEventEmitter;

},{"104":104,"136":136,"15":15,"17":17,"18":18,"27":27,"61":61}],31:[function(_dereq_,module,exports){
/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactChildReconciler
 * @typechecks static-only
 */

'use strict';

var ReactReconciler = _dereq_(81);

var flattenChildren = _dereq_(118);
var instantiateReactComponent = _dereq_(134);
var shouldUpdateReactComponent = _dereq_(151);

/**
 * ReactChildReconciler provides helpers for initializing or updating a set of
 * children. Its output is suitable for passing it onto ReactMultiChild which
 * does diffed reordering and insertion.
 */
var ReactChildReconciler = {

  /**
   * Generates a "mount image" for each of the supplied children. In the case
   * of `ReactDOMComponent`, a mount image is a string of markup.
   *
   * @param {?object} nestedChildNodes Nested child maps.
   * @return {?object} A set of child instances.
   * @internal
   */
  instantiateChildren: function(nestedChildNodes, transaction, context) {
    var children = flattenChildren(nestedChildNodes);
    for (var name in children) {
      if (children.hasOwnProperty(name)) {
        var child = children[name];
        // The rendered children must be turned into instances as they're
        // mounted.
        var childInstance = instantiateReactComponent(child, null);
        children[name] = childInstance;
      }
    }
    return children;
  },

  /**
   * Updates the rendered children and returns a new set of children.
   *
   * @param {?object} prevChildren Previously initialized set of children.
   * @param {?object} nextNestedChildNodes Nested child maps.
   * @param {ReactReconcileTransaction} transaction
   * @param {object} context
   * @return {?object} A new set of child instances.
   * @internal
   */
  updateChildren: function(
    prevChildren,
    nextNestedChildNodes,
    transaction,
    context) {
    // We currently don't have a way to track moves here but if we use iterators
    // instead of for..in we can zip the iterators and check if an item has
    // moved.
    // TODO: If nothing has changed, return the prevChildren object so that we
    // can quickly bailout if nothing has changed.
    var nextChildren = flattenChildren(nextNestedChildNodes);
    if (!nextChildren && !prevChildren) {
      return null;
    }
    var name;
    for (name in nextChildren) {
      if (!nextChildren.hasOwnProperty(name)) {
        continue;
      }
      var prevChild = prevChildren && prevChildren[name];
      var prevElement = prevChild && prevChild._currentElement;
      var nextElement = nextChildren[name];
      if (shouldUpdateReactComponent(prevElement, nextElement)) {
        ReactReconciler.receiveComponent(
          prevChild, nextElement, transaction, context
        );
        nextChildren[name] = prevChild;
      } else {
        if (prevChild) {
          ReactReconciler.unmountComponent(prevChild, name);
        }
        // The child must be instantiated before it's mounted.
        var nextChildInstance = instantiateReactComponent(
          nextElement,
          null
        );
        nextChildren[name] = nextChildInstance;
      }
    }
    // Unmount children that are no longer present.
    for (name in prevChildren) {
      if (prevChildren.hasOwnProperty(name) &&
          !(nextChildren && nextChildren.hasOwnProperty(name))) {
        ReactReconciler.unmountComponent(prevChildren[name]);
      }
    }
    return nextChildren;
  },

  /**
   * Unmounts all rendered children. This should be used to clean up children
   * when this component is unmounted.
   *
   * @param {?object} renderedChildren Previously initialized set of children.
   * @internal
   */
  unmountChildren: function(renderedChildren) {
    for (var name in renderedChildren) {
      var renderedChild = renderedChildren[name];
      ReactReconciler.unmountComponent(renderedChild);
    }
  }

};

module.exports = ReactChildReconciler;

},{"118":118,"134":134,"151":151,"81":81}],32:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactChildren
 */

'use strict';

var PooledClass = _dereq_(28);
var ReactFragment = _dereq_(63);

var traverseAllChildren = _dereq_(153);
var warning = _dereq_(154);

var twoArgumentPooler = PooledClass.twoArgumentPooler;
var threeArgumentPooler = PooledClass.threeArgumentPooler;

/**
 * PooledClass representing the bookkeeping associated with performing a child
 * traversal. Allows avoiding binding callbacks.
 *
 * @constructor ForEachBookKeeping
 * @param {!function} forEachFunction Function to perform traversal with.
 * @param {?*} forEachContext Context to perform context with.
 */
function ForEachBookKeeping(forEachFunction, forEachContext) {
  this.forEachFunction = forEachFunction;
  this.forEachContext = forEachContext;
}
PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);

function forEachSingleChild(traverseContext, child, name, i) {
  var forEachBookKeeping = traverseContext;
  forEachBookKeeping.forEachFunction.call(
    forEachBookKeeping.forEachContext, child, i);
}

/**
 * Iterates through children that are typically specified as `props.children`.
 *
 * The provided forEachFunc(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} forEachFunc.
 * @param {*} forEachContext Context for forEachContext.
 */
function forEachChildren(children, forEachFunc, forEachContext) {
  if (children == null) {
    return children;
  }

  var traverseContext =
    ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
  traverseAllChildren(children, forEachSingleChild, traverseContext);
  ForEachBookKeeping.release(traverseContext);
}

/**
 * PooledClass representing the bookkeeping associated with performing a child
 * mapping. Allows avoiding binding callbacks.
 *
 * @constructor MapBookKeeping
 * @param {!*} mapResult Object containing the ordered map of results.
 * @param {!function} mapFunction Function to perform mapping with.
 * @param {?*} mapContext Context to perform mapping with.
 */
function MapBookKeeping(mapResult, mapFunction, mapContext) {
  this.mapResult = mapResult;
  this.mapFunction = mapFunction;
  this.mapContext = mapContext;
}
PooledClass.addPoolingTo(MapBookKeeping, threeArgumentPooler);

function mapSingleChildIntoContext(traverseContext, child, name, i) {
  var mapBookKeeping = traverseContext;
  var mapResult = mapBookKeeping.mapResult;

  var keyUnique = !mapResult.hasOwnProperty(name);
  if ("production" !== "development") {
    ("production" !== "development" ? warning(
      keyUnique,
      'ReactChildren.map(...): Encountered two children with the same key, ' +
      '`%s`. Child keys must be unique; when two children share a key, only ' +
      'the first child will be used.',
      name
    ) : null);
  }

  if (keyUnique) {
    var mappedChild =
      mapBookKeeping.mapFunction.call(mapBookKeeping.mapContext, child, i);
    mapResult[name] = mappedChild;
  }
}

/**
 * Maps children that are typically specified as `props.children`.
 *
 * The provided mapFunction(child, key, index) will be called for each
 * leaf child.
 *
 * TODO: This may likely break any calls to `ReactChildren.map` that were
 * previously relying on the fact that we guarded against null children.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} mapFunction.
 * @param {*} mapContext Context for mapFunction.
 * @return {object} Object containing the ordered map of results.
 */
function mapChildren(children, func, context) {
  if (children == null) {
    return children;
  }

  var mapResult = {};
  var traverseContext = MapBookKeeping.getPooled(mapResult, func, context);
  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
  MapBookKeeping.release(traverseContext);
  return ReactFragment.create(mapResult);
}

function forEachSingleChildDummy(traverseContext, child, name, i) {
  return null;
}

/**
 * Count the number of children that are typically specified as
 * `props.children`.
 *
 * @param {?*} children Children tree container.
 * @return {number} The number of children.
 */
function countChildren(children, context) {
  return traverseAllChildren(children, forEachSingleChildDummy, null);
}

var ReactChildren = {
  forEach: forEachChildren,
  map: mapChildren,
  count: countChildren
};

module.exports = ReactChildren;

},{"153":153,"154":154,"28":28,"63":63}],33:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactClass
 */

'use strict';

var ReactComponent = _dereq_(34);
var ReactCurrentOwner = _dereq_(39);
var ReactElement = _dereq_(57);
var ReactErrorUtils = _dereq_(60);
var ReactInstanceMap = _dereq_(67);
var ReactLifeCycle = _dereq_(68);
var ReactPropTypeLocations = _dereq_(77);
var ReactPropTypeLocationNames = _dereq_(76);
var ReactUpdateQueue = _dereq_(86);

var assign = _dereq_(27);
var invariant = _dereq_(135);
var keyMirror = _dereq_(140);
var keyOf = _dereq_(141);
var warning = _dereq_(154);

var MIXINS_KEY = keyOf({mixins: null});

/**
 * Policies that describe methods in `ReactClassInterface`.
 */
var SpecPolicy = keyMirror({
  /**
   * These methods may be defined only once by the class specification or mixin.
   */
  DEFINE_ONCE: null,
  /**
   * These methods may be defined by both the class specification and mixins.
   * Subsequent definitions will be chained. These methods must return void.
   */
  DEFINE_MANY: null,
  /**
   * These methods are overriding the base class.
   */
  OVERRIDE_BASE: null,
  /**
   * These methods are similar to DEFINE_MANY, except we assume they return
   * objects. We try to merge the keys of the return values of all the mixed in
   * functions. If there is a key conflict we throw.
   */
  DEFINE_MANY_MERGED: null
});


var injectedMixins = [];

/**
 * Composite components are higher-level components that compose other composite
 * or native components.
 *
 * To create a new type of `ReactClass`, pass a specification of
 * your new class to `React.createClass`. The only requirement of your class
 * specification is that you implement a `render` method.
 *
 *   var MyComponent = React.createClass({
 *     render: function() {
 *       return <div>Hello World</div>;
 *     }
 *   });
 *
 * The class specification supports a specific protocol of methods that have
 * special meaning (e.g. `render`). See `ReactClassInterface` for
 * more the comprehensive protocol. Any other properties and methods in the
 * class specification will available on the prototype.
 *
 * @interface ReactClassInterface
 * @internal
 */
var ReactClassInterface = {

  /**
   * An array of Mixin objects to include when defining your component.
   *
   * @type {array}
   * @optional
   */
  mixins: SpecPolicy.DEFINE_MANY,

  /**
   * An object containing properties and methods that should be defined on
   * the component's constructor instead of its prototype (static methods).
   *
   * @type {object}
   * @optional
   */
  statics: SpecPolicy.DEFINE_MANY,

  /**
   * Definition of prop types for this component.
   *
   * @type {object}
   * @optional
   */
  propTypes: SpecPolicy.DEFINE_MANY,

  /**
   * Definition of context types for this component.
   *
   * @type {object}
   * @optional
   */
  contextTypes: SpecPolicy.DEFINE_MANY,

  /**
   * Definition of context types this component sets for its children.
   *
   * @type {object}
   * @optional
   */
  childContextTypes: SpecPolicy.DEFINE_MANY,

  // ==== Definition methods ====

  /**
   * Invoked when the component is mounted. Values in the mapping will be set on
   * `this.props` if that prop is not specified (i.e. using an `in` check).
   *
   * This method is invoked before `getInitialState` and therefore cannot rely
   * on `this.state` or use `this.setState`.
   *
   * @return {object}
   * @optional
   */
  getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,

  /**
   * Invoked once before the component is mounted. The return value will be used
   * as the initial value of `this.state`.
   *
   *   getInitialState: function() {
   *     return {
   *       isOn: false,
   *       fooBaz: new BazFoo()
   *     }
   *   }
   *
   * @return {object}
   * @optional
   */
  getInitialState: SpecPolicy.DEFINE_MANY_MERGED,

  /**
   * @return {object}
   * @optional
   */
  getChildContext: SpecPolicy.DEFINE_MANY_MERGED,

  /**
   * Uses props from `this.props` and state from `this.state` to render the
   * structure of the component.
   *
   * No guarantees are made about when or how often this method is invoked, so
   * it must not have side effects.
   *
   *   render: function() {
   *     var name = this.props.name;
   *     return <div>Hello, {name}!</div>;
   *   }
   *
   * @return {ReactComponent}
   * @nosideeffects
   * @required
   */
  render: SpecPolicy.DEFINE_ONCE,



  // ==== Delegate methods ====

  /**
   * Invoked when the component is initially created and about to be mounted.
   * This may have side effects, but any external subscriptions or data created
   * by this method must be cleaned up in `componentWillUnmount`.
   *
   * @optional
   */
  componentWillMount: SpecPolicy.DEFINE_MANY,

  /**
   * Invoked when the component has been mounted and has a DOM representation.
   * However, there is no guarantee that the DOM node is in the document.
   *
   * Use this as an opportunity to operate on the DOM when the component has
   * been mounted (initialized and rendered) for the first time.
   *
   * @param {DOMElement} rootNode DOM element representing the component.
   * @optional
   */
  componentDidMount: SpecPolicy.DEFINE_MANY,

  /**
   * Invoked before the component receives new props.
   *
   * Use this as an opportunity to react to a prop transition by updating the
   * state using `this.setState`. Current props are accessed via `this.props`.
   *
   *   componentWillReceiveProps: function(nextProps, nextContext) {
   *     this.setState({
   *       likesIncreasing: nextProps.likeCount > this.props.likeCount
   *     });
   *   }
   *
   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
   * transition may cause a state change, but the opposite is not true. If you
   * need it, you are probably looking for `componentWillUpdate`.
   *
   * @param {object} nextProps
   * @optional
   */
  componentWillReceiveProps: SpecPolicy.DEFINE_MANY,

  /**
   * Invoked while deciding if the component should be updated as a result of
   * receiving new props, state and/or context.
   *
   * Use this as an opportunity to `return false` when you're certain that the
   * transition to the new props/state/context will not require a component
   * update.
   *
   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
   *     return !equal(nextProps, this.props) ||
   *       !equal(nextState, this.state) ||
   *       !equal(nextContext, this.context);
   *   }
   *
   * @param {object} nextProps
   * @param {?object} nextState
   * @param {?object} nextContext
   * @return {boolean} True if the component should update.
   * @optional
   */
  shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,

  /**
   * Invoked when the component is about to update due to a transition from
   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
   * and `nextContext`.
   *
   * Use this as an opportunity to perform preparation before an update occurs.
   *
   * NOTE: You **cannot** use `this.setState()` in this method.
   *
   * @param {object} nextProps
   * @param {?object} nextState
   * @param {?object} nextContext
   * @param {ReactReconcileTransaction} transaction
   * @optional
   */
  componentWillUpdate: SpecPolicy.DEFINE_MANY,

  /**
   * Invoked when the component's DOM representation has been updated.
   *
   * Use this as an opportunity to operate on the DOM when the component has
   * been updated.
   *
   * @param {object} prevProps
   * @param {?object} prevState
   * @param {?object} prevContext
   * @param {DOMElement} rootNode DOM element representing the component.
   * @optional
   */
  componentDidUpdate: SpecPolicy.DEFINE_MANY,

  /**
   * Invoked when the component is about to be removed from its parent and have
   * its DOM representation destroyed.
   *
   * Use this as an opportunity to deallocate any external resources.
   *
   * NOTE: There is no `componentDidUnmount` since your component will have been
   * destroyed by that point.
   *
   * @optional
   */
  componentWillUnmount: SpecPolicy.DEFINE_MANY,



  // ==== Advanced methods ====

  /**
   * Updates the component's currently mounted DOM representation.
   *
   * By default, this implements React's rendering and reconciliation algorithm.
   * Sophisticated clients may wish to override this.
   *
   * @param {ReactReconcileTransaction} transaction
   * @internal
   * @overridable
   */
  updateComponent: SpecPolicy.OVERRIDE_BASE

};

/**
 * Mapping from class specification keys to special processing functions.
 *
 * Although these are declared like instance properties in the specification
 * when defining classes using `React.createClass`, they are actually static
 * and are accessible on the constructor instead of the prototype. Despite
 * being static, they must be defined outside of the "statics" key under
 * which all other static methods are defined.
 */
var RESERVED_SPEC_KEYS = {
  displayName: function(Constructor, displayName) {
    Constructor.displayName = displayName;
  },
  mixins: function(Constructor, mixins) {
    if (mixins) {
      for (var i = 0; i < mixins.length; i++) {
        mixSpecIntoComponent(Constructor, mixins[i]);
      }
    }
  },
  childContextTypes: function(Constructor, childContextTypes) {
    if ("production" !== "development") {
      validateTypeDef(
        Constructor,
        childContextTypes,
        ReactPropTypeLocations.childContext
      );
    }
    Constructor.childContextTypes = assign(
      {},
      Constructor.childContextTypes,
      childContextTypes
    );
  },
  contextTypes: function(Constructor, contextTypes) {
    if ("production" !== "development") {
      validateTypeDef(
        Constructor,
        contextTypes,
        ReactPropTypeLocations.context
      );
    }
    Constructor.contextTypes = assign(
      {},
      Constructor.contextTypes,
      contextTypes
    );
  },
  /**
   * Special case getDefaultProps which should move into statics but requires
   * automatic merging.
   */
  getDefaultProps: function(Constructor, getDefaultProps) {
    if (Constructor.getDefaultProps) {
      Constructor.getDefaultProps = createMergedResultFunction(
        Constructor.getDefaultProps,
        getDefaultProps
      );
    } else {
      Constructor.getDefaultProps = getDefaultProps;
    }
  },
  propTypes: function(Constructor, propTypes) {
    if ("production" !== "development") {
      validateTypeDef(
        Constructor,
        propTypes,
        ReactPropTypeLocations.prop
      );
    }
    Constructor.propTypes = assign(
      {},
      Constructor.propTypes,
      propTypes
    );
  },
  statics: function(Constructor, statics) {
    mixStaticSpecIntoComponent(Constructor, statics);
  }
};

function validateTypeDef(Constructor, typeDef, location) {
  for (var propName in typeDef) {
    if (typeDef.hasOwnProperty(propName)) {
      // use a warning instead of an invariant so components
      // don't show up in prod but not in __DEV__
      ("production" !== "development" ? warning(
        typeof typeDef[propName] === 'function',
        '%s: %s type `%s` is invalid; it must be a function, usually from ' +
        'React.PropTypes.',
        Constructor.displayName || 'ReactClass',
        ReactPropTypeLocationNames[location],
        propName
      ) : null);
    }
  }
}

function validateMethodOverride(proto, name) {
  var specPolicy = ReactClassInterface.hasOwnProperty(name) ?
    ReactClassInterface[name] :
    null;

  // Disallow overriding of base class methods unless explicitly allowed.
  if (ReactClassMixin.hasOwnProperty(name)) {
    ("production" !== "development" ? invariant(
      specPolicy === SpecPolicy.OVERRIDE_BASE,
      'ReactClassInterface: You are attempting to override ' +
      '`%s` from your class specification. Ensure that your method names ' +
      'do not overlap with React methods.',
      name
    ) : invariant(specPolicy === SpecPolicy.OVERRIDE_BASE));
  }

  // Disallow defining methods more than once unless explicitly allowed.
  if (proto.hasOwnProperty(name)) {
    ("production" !== "development" ? invariant(
      specPolicy === SpecPolicy.DEFINE_MANY ||
      specPolicy === SpecPolicy.DEFINE_MANY_MERGED,
      'ReactClassInterface: You are attempting to define ' +
      '`%s` on your component more than once. This conflict may be due ' +
      'to a mixin.',
      name
    ) : invariant(specPolicy === SpecPolicy.DEFINE_MANY ||
    specPolicy === SpecPolicy.DEFINE_MANY_MERGED));
  }
}

/**
 * Mixin helper which handles policy validation and reserved
 * specification keys when building React classses.
 */
function mixSpecIntoComponent(Constructor, spec) {
  if (!spec) {
    return;
  }

  ("production" !== "development" ? invariant(
    typeof spec !== 'function',
    'ReactClass: You\'re attempting to ' +
    'use a component class as a mixin. Instead, just use a regular object.'
  ) : invariant(typeof spec !== 'function'));
  ("production" !== "development" ? invariant(
    !ReactElement.isValidElement(spec),
    'ReactClass: You\'re attempting to ' +
    'use a component as a mixin. Instead, just use a regular object.'
  ) : invariant(!ReactElement.isValidElement(spec)));

  var proto = Constructor.prototype;

  // By handling mixins before any other properties, we ensure the same
  // chaining order is applied to methods with DEFINE_MANY policy, whether
  // mixins are listed before or after these methods in the spec.
  if (spec.hasOwnProperty(MIXINS_KEY)) {
    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
  }

  for (var name in spec) {
    if (!spec.hasOwnProperty(name)) {
      continue;
    }

    if (name === MIXINS_KEY) {
      // We have already handled mixins in a special case above
      continue;
    }

    var property = spec[name];
    validateMethodOverride(proto, name);

    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
      RESERVED_SPEC_KEYS[name](Constructor, property);
    } else {
      // Setup methods on prototype:
      // The following member methods should not be automatically bound:
      // 1. Expected ReactClass methods (in the "interface").
      // 2. Overridden methods (that were mixed in).
      var isReactClassMethod =
        ReactClassInterface.hasOwnProperty(name);
      var isAlreadyDefined = proto.hasOwnProperty(name);
      var markedDontBind = property && property.__reactDontBind;
      var isFunction = typeof property === 'function';
      var shouldAutoBind =
        isFunction &&
        !isReactClassMethod &&
        !isAlreadyDefined &&
        !markedDontBind;

      if (shouldAutoBind) {
        if (!proto.__reactAutoBindMap) {
          proto.__reactAutoBindMap = {};
        }
        proto.__reactAutoBindMap[name] = property;
        proto[name] = property;
      } else {
        if (isAlreadyDefined) {
          var specPolicy = ReactClassInterface[name];

          // These cases should already be caught by validateMethodOverride
          ("production" !== "development" ? invariant(
            isReactClassMethod && (
              (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)
            ),
            'ReactClass: Unexpected spec policy %s for key %s ' +
            'when mixing in component specs.',
            specPolicy,
            name
          ) : invariant(isReactClassMethod && (
            (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)
          )));

          // For methods which are defined more than once, call the existing
          // methods before calling the new property, merging if appropriate.
          if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {
            proto[name] = createMergedResultFunction(proto[name], property);
          } else if (specPolicy === SpecPolicy.DEFINE_MANY) {
            proto[name] = createChainedFunction(proto[name], property);
          }
        } else {
          proto[name] = property;
          if ("production" !== "development") {
            // Add verbose displayName to the function, which helps when looking
            // at profiling tools.
            if (typeof property === 'function' && spec.displayName) {
              proto[name].displayName = spec.displayName + '_' + name;
            }
          }
        }
      }
    }
  }
}

function mixStaticSpecIntoComponent(Constructor, statics) {
  if (!statics) {
    return;
  }
  for (var name in statics) {
    var property = statics[name];
    if (!statics.hasOwnProperty(name)) {
      continue;
    }

    var isReserved = name in RESERVED_SPEC_KEYS;
    ("production" !== "development" ? invariant(
      !isReserved,
      'ReactClass: You are attempting to define a reserved ' +
      'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' +
      'as an instance property instead; it will still be accessible on the ' +
      'constructor.',
      name
    ) : invariant(!isReserved));

    var isInherited = name in Constructor;
    ("production" !== "development" ? invariant(
      !isInherited,
      'ReactClass: You are attempting to define ' +
      '`%s` on your component more than once. This conflict may be ' +
      'due to a mixin.',
      name
    ) : invariant(!isInherited));
    Constructor[name] = property;
  }
}

/**
 * Merge two objects, but throw if both contain the same key.
 *
 * @param {object} one The first object, which is mutated.
 * @param {object} two The second object
 * @return {object} one after it has been mutated to contain everything in two.
 */
function mergeIntoWithNoDuplicateKeys(one, two) {
  ("production" !== "development" ? invariant(
    one && two && typeof one === 'object' && typeof two === 'object',
    'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.'
  ) : invariant(one && two && typeof one === 'object' && typeof two === 'object'));

  for (var key in two) {
    if (two.hasOwnProperty(key)) {
      ("production" !== "development" ? invariant(
        one[key] === undefined,
        'mergeIntoWithNoDuplicateKeys(): ' +
        'Tried to merge two objects with the same key: `%s`. This conflict ' +
        'may be due to a mixin; in particular, this may be caused by two ' +
        'getInitialState() or getDefaultProps() methods returning objects ' +
        'with clashing keys.',
        key
      ) : invariant(one[key] === undefined));
      one[key] = two[key];
    }
  }
  return one;
}

/**
 * Creates a function that invokes two functions and merges their return values.
 *
 * @param {function} one Function to invoke first.
 * @param {function} two Function to invoke second.
 * @return {function} Function that invokes the two argument functions.
 * @private
 */
function createMergedResultFunction(one, two) {
  return function mergedResult() {
    var a = one.apply(this, arguments);
    var b = two.apply(this, arguments);
    if (a == null) {
      return b;
    } else if (b == null) {
      return a;
    }
    var c = {};
    mergeIntoWithNoDuplicateKeys(c, a);
    mergeIntoWithNoDuplicateKeys(c, b);
    return c;
  };
}

/**
 * Creates a function that invokes two functions and ignores their return vales.
 *
 * @param {function} one Function to invoke first.
 * @param {function} two Function to invoke second.
 * @return {function} Function that invokes the two argument functions.
 * @private
 */
function createChainedFunction(one, two) {
  return function chainedFunction() {
    one.apply(this, arguments);
    two.apply(this, arguments);
  };
}

/**
 * Binds a method to the component.
 *
 * @param {object} component Component whose method is going to be bound.
 * @param {function} method Method to be bound.
 * @return {function} The bound method.
 */
function bindAutoBindMethod(component, method) {
  var boundMethod = method.bind(component);
  if ("production" !== "development") {
    boundMethod.__reactBoundContext = component;
    boundMethod.__reactBoundMethod = method;
    boundMethod.__reactBoundArguments = null;
    var componentName = component.constructor.displayName;
    var _bind = boundMethod.bind;
    /* eslint-disable block-scoped-var, no-undef */
    boundMethod.bind = function(newThis ) {for (var args=[],$__0=1,$__1=arguments.length;$__0<$__1;$__0++) args.push(arguments[$__0]);
      // User is trying to bind() an autobound method; we effectively will
      // ignore the value of "this" that the user is trying to use, so
      // let's warn.
      if (newThis !== component && newThis !== null) {
        ("production" !== "development" ? warning(
          false,
          'bind(): React component methods may only be bound to the ' +
          'component instance. See %s',
          componentName
        ) : null);
      } else if (!args.length) {
        ("production" !== "development" ? warning(
          false,
          'bind(): You are binding a component method to the component. ' +
          'React does this for you automatically in a high-performance ' +
          'way, so you can safely remove this call. See %s',
          componentName
        ) : null);
        return boundMethod;
      }
      var reboundMethod = _bind.apply(boundMethod, arguments);
      reboundMethod.__reactBoundContext = component;
      reboundMethod.__reactBoundMethod = method;
      reboundMethod.__reactBoundArguments = args;
      return reboundMethod;
      /* eslint-enable */
    };
  }
  return boundMethod;
}

/**
 * Binds all auto-bound methods in a component.
 *
 * @param {object} component Component whose method is going to be bound.
 */
function bindAutoBindMethods(component) {
  for (var autoBindKey in component.__reactAutoBindMap) {
    if (component.__reactAutoBindMap.hasOwnProperty(autoBindKey)) {
      var method = component.__reactAutoBindMap[autoBindKey];
      component[autoBindKey] = bindAutoBindMethod(
        component,
        ReactErrorUtils.guard(
          method,
          component.constructor.displayName + '.' + autoBindKey
        )
      );
    }
  }
}

var typeDeprecationDescriptor = {
  enumerable: false,
  get: function() {
    var displayName = this.displayName || this.name || 'Component';
    ("production" !== "development" ? warning(
      false,
      '%s.type is deprecated. Use %s directly to access the class.',
      displayName,
      displayName
    ) : null);
    Object.defineProperty(this, 'type', {
      value: this
    });
    return this;
  }
};

/**
 * Add more to the ReactClass base class. These are all legacy features and
 * therefore not already part of the modern ReactComponent.
 */
var ReactClassMixin = {

  /**
   * TODO: This will be deprecated because state should always keep a consistent
   * type signature and the only use case for this, is to avoid that.
   */
  replaceState: function(newState, callback) {
    ReactUpdateQueue.enqueueReplaceState(this, newState);
    if (callback) {
      ReactUpdateQueue.enqueueCallback(this, callback);
    }
  },

  /**
   * Checks whether or not this composite component is mounted.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function() {
    if ("production" !== "development") {
      var owner = ReactCurrentOwner.current;
      if (owner !== null) {
        ("production" !== "development" ? warning(
          owner._warnedAboutRefsInRender,
          '%s is accessing isMounted inside its render() function. ' +
          'render() should be a pure function of props and state. It should ' +
          'never access something that requires stale data from the previous ' +
          'render, such as refs. Move this logic to componentDidMount and ' +
          'componentDidUpdate instead.',
          owner.getName() || 'A component'
        ) : null);
        owner._warnedAboutRefsInRender = true;
      }
    }
    var internalInstance = ReactInstanceMap.get(this);
    return (
      internalInstance &&
      internalInstance !== ReactLifeCycle.currentlyMountingInstance
    );
  },

  /**
   * Sets a subset of the props.
   *
   * @param {object} partialProps Subset of the next props.
   * @param {?function} callback Called after props are updated.
   * @final
   * @public
   * @deprecated
   */
  setProps: function(partialProps, callback) {
    ReactUpdateQueue.enqueueSetProps(this, partialProps);
    if (callback) {
      ReactUpdateQueue.enqueueCallback(this, callback);
    }
  },

  /**
   * Replace all the props.
   *
   * @param {object} newProps Subset of the next props.
   * @param {?function} callback Called after props are updated.
   * @final
   * @public
   * @deprecated
   */
  replaceProps: function(newProps, callback) {
    ReactUpdateQueue.enqueueReplaceProps(this, newProps);
    if (callback) {
      ReactUpdateQueue.enqueueCallback(this, callback);
    }
  }
};

var ReactClassComponent = function() {};
assign(
  ReactClassComponent.prototype,
  ReactComponent.prototype,
  ReactClassMixin
);

/**
 * Module for creating composite components.
 *
 * @class ReactClass
 */
var ReactClass = {

  /**
   * Creates a composite component class given a class specification.
   *
   * @param {object} spec Class specification (which must define `render`).
   * @return {function} Component constructor function.
   * @public
   */
  createClass: function(spec) {
    var Constructor = function(props, context) {
      // This constructor is overridden by mocks. The argument is used
      // by mocks to assert on what gets mounted.

      if ("production" !== "development") {
        ("production" !== "development" ? warning(
          this instanceof Constructor,
          'Something is calling a React component directly. Use a factory or ' +
          'JSX instead. See: https://fb.me/react-legacyfactory'
        ) : null);
      }

      // Wire up auto-binding
      if (this.__reactAutoBindMap) {
        bindAutoBindMethods(this);
      }

      this.props = props;
      this.context = context;
      this.state = null;

      // ReactClasses doesn't have constructors. Instead, they use the
      // getInitialState and componentWillMount methods for initialization.

      var initialState = this.getInitialState ? this.getInitialState() : null;
      if ("production" !== "development") {
        // We allow auto-mocks to proceed as if they're returning null.
        if (typeof initialState === 'undefined' &&
            this.getInitialState._isMockFunction) {
          // This is probably bad practice. Consider warning here and
          // deprecating this convenience.
          initialState = null;
        }
      }
      ("production" !== "development" ? invariant(
        typeof initialState === 'object' && !Array.isArray(initialState),
        '%s.getInitialState(): must return an object or null',
        Constructor.displayName || 'ReactCompositeComponent'
      ) : invariant(typeof initialState === 'object' && !Array.isArray(initialState)));

      this.state = initialState;
    };
    Constructor.prototype = new ReactClassComponent();
    Constructor.prototype.constructor = Constructor;

    injectedMixins.forEach(
      mixSpecIntoComponent.bind(null, Constructor)
    );

    mixSpecIntoComponent(Constructor, spec);

    // Initialize the defaultProps property after all mixins have been merged
    if (Constructor.getDefaultProps) {
      Constructor.defaultProps = Constructor.getDefaultProps();
    }

    if ("production" !== "development") {
      // This is a tag to indicate that the use of these method names is ok,
      // since it's used with createClass. If it's not, then it's likely a
      // mistake so we'll warn you to use the static property, property
      // initializer or constructor respectively.
      if (Constructor.getDefaultProps) {
        Constructor.getDefaultProps.isReactClassApproved = {};
      }
      if (Constructor.prototype.getInitialState) {
        Constructor.prototype.getInitialState.isReactClassApproved = {};
      }
    }

    ("production" !== "development" ? invariant(
      Constructor.prototype.render,
      'createClass(...): Class specification must implement a `render` method.'
    ) : invariant(Constructor.prototype.render));

    if ("production" !== "development") {
      ("production" !== "development" ? warning(
        !Constructor.prototype.componentShouldUpdate,
        '%s has a method called ' +
        'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +
        'The name is phrased as a question because the function is ' +
        'expected to return a value.',
        spec.displayName || 'A component'
      ) : null);
    }

    // Reduce time spent doing lookups by setting these on the prototype.
    for (var methodName in ReactClassInterface) {
      if (!Constructor.prototype[methodName]) {
        Constructor.prototype[methodName] = null;
      }
    }

    // Legacy hook
    Constructor.type = Constructor;
    if ("production" !== "development") {
      try {
        Object.defineProperty(Constructor, 'type', typeDeprecationDescriptor);
      } catch (x) {
        // IE will fail on defineProperty (es5-shim/sham too)
      }
    }

    return Constructor;
  },

  injection: {
    injectMixin: function(mixin) {
      injectedMixins.push(mixin);
    }
  }

};

module.exports = ReactClass;

},{"135":135,"140":140,"141":141,"154":154,"27":27,"34":34,"39":39,"57":57,"60":60,"67":67,"68":68,"76":76,"77":77,"86":86}],34:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactComponent
 */

'use strict';

var ReactUpdateQueue = _dereq_(86);

var invariant = _dereq_(135);
var warning = _dereq_(154);

/**
 * Base class helpers for the updating state of a component.
 */
function ReactComponent(props, context) {
  this.props = props;
  this.context = context;
}

/**
 * Sets a subset of the state. Always use this to mutate
 * state. You should treat `this.state` as immutable.
 *
 * There is no guarantee that `this.state` will be immediately updated, so
 * accessing `this.state` after calling this method may return the old value.
 *
 * There is no guarantee that calls to `setState` will run synchronously,
 * as they may eventually be batched together.  You can provide an optional
 * callback that will be executed when the call to setState is actually
 * completed.
 *
 * When a function is provided to setState, it will be called at some point in
 * the future (not synchronously). It will be called with the up to date
 * component arguments (state, props, context). These values can be different
 * from this.* because your function may be called after receiveProps but before
 * shouldComponentUpdate, and this new state, props, and context will not yet be
 * assigned to this.
 *
 * @param {object|function} partialState Next partial state or function to
 *        produce next partial state to be merged with current state.
 * @param {?function} callback Called after state is updated.
 * @final
 * @protected
 */
ReactComponent.prototype.setState = function(partialState, callback) {
  ("production" !== "development" ? invariant(
    typeof partialState === 'object' ||
    typeof partialState === 'function' ||
    partialState == null,
    'setState(...): takes an object of state variables to update or a ' +
    'function which returns an object of state variables.'
  ) : invariant(typeof partialState === 'object' ||
  typeof partialState === 'function' ||
  partialState == null));
  if ("production" !== "development") {
    ("production" !== "development" ? warning(
      partialState != null,
      'setState(...): You passed an undefined or null state object; ' +
      'instead, use forceUpdate().'
    ) : null);
  }
  ReactUpdateQueue.enqueueSetState(this, partialState);
  if (callback) {
    ReactUpdateQueue.enqueueCallback(this, callback);
  }
};

/**
 * Forces an update. This should only be invoked when it is known with
 * certainty that we are **not** in a DOM transaction.
 *
 * You may want to call this when you know that some deeper aspect of the
 * component's state has changed but `setState` was not called.
 *
 * This will not invoke `shouldComponentUpdate`, but it will invoke
 * `componentWillUpdate` and `componentDidUpdate`.
 *
 * @param {?function} callback Called after update is complete.
 * @final
 * @protected
 */
ReactComponent.prototype.forceUpdate = function(callback) {
  ReactUpdateQueue.enqueueForceUpdate(this);
  if (callback) {
    ReactUpdateQueue.enqueueCallback(this, callback);
  }
};

/**
 * Deprecated APIs. These APIs used to exist on classic React classes but since
 * we would like to deprecate them, we're not going to move them over to this
 * modern base class. Instead, we define a getter that warns if it's accessed.
 */
if ("production" !== "development") {
  var deprecatedAPIs = {
    getDOMNode: [
      'getDOMNode',
      'Use React.findDOMNode(component) instead.'
    ],
    isMounted: [
      'isMounted',
      'Instead, make sure to clean up subscriptions and pending requests in ' +
      'componentWillUnmount to prevent memory leaks.'
    ],
    replaceProps: [
      'replaceProps',
      'Instead call React.render again at the top level.'
    ],
    replaceState: [
      'replaceState',
      'Refactor your code to use setState instead (see ' +
      'https://github.com/facebook/react/issues/3236).'
    ],
    setProps: [
      'setProps',
      'Instead call React.render again at the top level.'
    ]
  };
  var defineDeprecationWarning = function(methodName, info) {
    try {
      Object.defineProperty(ReactComponent.prototype, methodName, {
        get: function() {
          ("production" !== "development" ? warning(
            false,
            '%s(...) is deprecated in plain JavaScript React classes. %s',
            info[0],
            info[1]
          ) : null);
          return undefined;
        }
      });
    } catch (x) {
      // IE will fail on defineProperty (es5-shim/sham too)
    }
  };
  for (var fnName in deprecatedAPIs) {
    if (deprecatedAPIs.hasOwnProperty(fnName)) {
      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
    }
  }
}

module.exports = ReactComponent;

},{"135":135,"154":154,"86":86}],35:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactComponentBrowserEnvironment
 */

/*jslint evil: true */

'use strict';

var ReactDOMIDOperations = _dereq_(44);
var ReactMount = _dereq_(70);

/**
 * Abstracts away all functionality of the reconciler that requires knowledge of
 * the browser context. TODO: These callers should be refactored to avoid the
 * need for this injection.
 */
var ReactComponentBrowserEnvironment = {

  processChildrenUpdates:
    ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,

  replaceNodeWithMarkupByID:
    ReactDOMIDOperations.dangerouslyReplaceNodeWithMarkupByID,

  /**
   * If a particular environment requires that some resources be cleaned up,
   * specify this in the injected Mixin. In the DOM, we would likely want to
   * purge any cached node ID lookups.
   *
   * @private
   */
  unmountIDFromEnvironment: function(rootNodeID) {
    ReactMount.purgeID(rootNodeID);
  }

};

module.exports = ReactComponentBrowserEnvironment;

},{"44":44,"70":70}],36:[function(_dereq_,module,exports){
/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactComponentEnvironment
 */

'use strict';

var invariant = _dereq_(135);

var injected = false;

var ReactComponentEnvironment = {

  /**
   * Optionally injectable environment dependent cleanup hook. (server vs.
   * browser etc). Example: A browser system caches DOM nodes based on component
   * ID and must remove that cache entry when this instance is unmounted.
   */
  unmountIDFromEnvironment: null,

  /**
   * Optionally injectable hook for swapping out mount images in the middle of
   * the tree.
   */
  replaceNodeWithMarkupByID: null,

  /**
   * Optionally injectable hook for processing a queue of child updates. Will
   * later move into MultiChildComponents.
   */
  processChildrenUpdates: null,

  injection: {
    injectEnvironment: function(environment) {
      ("production" !== "development" ? invariant(
        !injected,
        'ReactCompositeComponent: injectEnvironment() can only be called once.'
      ) : invariant(!injected));
      ReactComponentEnvironment.unmountIDFromEnvironment =
        environment.unmountIDFromEnvironment;
      ReactComponentEnvironment.replaceNodeWithMarkupByID =
        environment.replaceNodeWithMarkupByID;
      ReactComponentEnvironment.processChildrenUpdates =
        environment.processChildrenUpdates;
      injected = true;
    }
  }

};

module.exports = ReactComponentEnvironment;

},{"135":135}],37:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactCompositeComponent
 */

'use strict';

var ReactComponentEnvironment = _dereq_(36);
var ReactContext = _dereq_(38);
var ReactCurrentOwner = _dereq_(39);
var ReactElement = _dereq_(57);
var ReactElementValidator = _dereq_(58);
var ReactInstanceMap = _dereq_(67);
var ReactLifeCycle = _dereq_(68);
var ReactNativeComponent = _dereq_(73);
var ReactPerf = _dereq_(75);
var ReactPropTypeLocations = _dereq_(77);
var ReactPropTypeLocationNames = _dereq_(76);
var ReactReconciler = _dereq_(81);
var ReactUpdates = _dereq_(87);

var assign = _dereq_(27);
var emptyObject = _dereq_(115);
var invariant = _dereq_(135);
var shouldUpdateReactComponent = _dereq_(151);
var warning = _dereq_(154);

function getDeclarationErrorAddendum(component) {
  var owner = component._currentElement._owner || null;
  if (owner) {
    var name = owner.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

/**
 * ------------------ The Life-Cycle of a Composite Component ------------------
 *
 * - constructor: Initialization of state. The instance is now retained.
 *   - componentWillMount
 *   - render
 *   - [children's constructors]
 *     - [children's componentWillMount and render]
 *     - [children's componentDidMount]
 *     - componentDidMount
 *
 *       Update Phases:
 *       - componentWillReceiveProps (only called if parent updated)
 *       - shouldComponentUpdate
 *         - componentWillUpdate
 *           - render
 *           - [children's constructors or receive props phases]
 *         - componentDidUpdate
 *
 *     - componentWillUnmount
 *     - [children's componentWillUnmount]
 *   - [children destroyed]
 * - (destroyed): The instance is now blank, released by React and ready for GC.
 *
 * -----------------------------------------------------------------------------
 */

/**
 * An incrementing ID assigned to each component when it is mounted. This is
 * used to enforce the order in which `ReactUpdates` updates dirty components.
 *
 * @private
 */
var nextMountID = 1;

/**
 * @lends {ReactCompositeComponent.prototype}
 */
var ReactCompositeComponentMixin = {

  /**
   * Base constructor for all composite component.
   *
   * @param {ReactElement} element
   * @final
   * @internal
   */
  construct: function(element) {
    this._currentElement = element;
    this._rootNodeID = null;
    this._instance = null;

    // See ReactUpdateQueue
    this._pendingElement = null;
    this._pendingStateQueue = null;
    this._pendingReplaceState = false;
    this._pendingForceUpdate = false;

    this._renderedComponent = null;

    this._context = null;
    this._mountOrder = 0;
    this._isTopLevel = false;

    // See ReactUpdates and ReactUpdateQueue.
    this._pendingCallbacks = null;
  },

  /**
   * Initializes the component, renders markup, and registers event listeners.
   *
   * @param {string} rootID DOM ID of the root node.
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @return {?string} Rendered markup to be inserted into the DOM.
   * @final
   * @internal
   */
  mountComponent: function(rootID, transaction, context) {
    this._context = context;
    this._mountOrder = nextMountID++;
    this._rootNodeID = rootID;

    var publicProps = this._processProps(this._currentElement.props);
    var publicContext = this._processContext(this._currentElement._context);

    var Component = ReactNativeComponent.getComponentClassForElement(
      this._currentElement
    );

    // Initialize the public class
    var inst = new Component(publicProps, publicContext);

    if ("production" !== "development") {
      // This will throw later in _renderValidatedComponent, but add an early
      // warning now to help debugging
      ("production" !== "development" ? warning(
        inst.render != null,
        '%s(...): No `render` method found on the returned component ' +
        'instance: you may have forgotten to define `render` in your ' +
        'component or you may have accidentally tried to render an element ' +
        'whose type is a function that isn\'t a React component.',
        Component.displayName || Component.name || 'Component'
      ) : null);
    }

    // These should be set up in the constructor, but as a convenience for
    // simpler class abstractions, we set them up after the fact.
    inst.props = publicProps;
    inst.context = publicContext;
    inst.refs = emptyObject;

    this._instance = inst;

    // Store a reference from the instance back to the internal representation
    ReactInstanceMap.set(inst, this);

    if ("production" !== "development") {
      this._warnIfContextsDiffer(this._currentElement._context, context);
    }

    if ("production" !== "development") {
      // Since plain JS classes are defined without any special initialization
      // logic, we can not catch common errors early. Therefore, we have to
      // catch them here, at initialization time, instead.
      ("production" !== "development" ? warning(
        !inst.getInitialState ||
        inst.getInitialState.isReactClassApproved,
        'getInitialState was defined on %s, a plain JavaScript class. ' +
        'This is only supported for classes created using React.createClass. ' +
        'Did you mean to define a state property instead?',
        this.getName() || 'a component'
      ) : null);
      ("production" !== "development" ? warning(
        !inst.getDefaultProps ||
        inst.getDefaultProps.isReactClassApproved,
        'getDefaultProps was defined on %s, a plain JavaScript class. ' +
        'This is only supported for classes created using React.createClass. ' +
        'Use a static property to define defaultProps instead.',
        this.getName() || 'a component'
      ) : null);
      ("production" !== "development" ? warning(
        !inst.propTypes,
        'propTypes was defined as an instance property on %s. Use a static ' +
        'property to define propTypes instead.',
        this.getName() || 'a component'
      ) : null);
      ("production" !== "development" ? warning(
        !inst.contextTypes,
        'contextTypes was defined as an instance property on %s. Use a ' +
        'static property to define contextTypes instead.',
        this.getName() || 'a component'
      ) : null);
      ("production" !== "development" ? warning(
        typeof inst.componentShouldUpdate !== 'function',
        '%s has a method called ' +
        'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +
        'The name is phrased as a question because the function is ' +
        'expected to return a value.',
        (this.getName() || 'A component')
      ) : null);
    }

    var initialState = inst.state;
    if (initialState === undefined) {
      inst.state = initialState = null;
    }
    ("production" !== "development" ? invariant(
      typeof initialState === 'object' && !Array.isArray(initialState),
      '%s.state: must be set to an object or null',
      this.getName() || 'ReactCompositeComponent'
    ) : invariant(typeof initialState === 'object' && !Array.isArray(initialState)));

    this._pendingStateQueue = null;
    this._pendingReplaceState = false;
    this._pendingForceUpdate = false;

    var childContext;
    var renderedElement;

    var previouslyMounting = ReactLifeCycle.currentlyMountingInstance;
    ReactLifeCycle.currentlyMountingInstance = this;
    try {
      if (inst.componentWillMount) {
        inst.componentWillMount();
        // When mounting, calls to `setState` by `componentWillMount` will set
        // `this._pendingStateQueue` without triggering a re-render.
        if (this._pendingStateQueue) {
          inst.state = this._processPendingState(inst.props, inst.context);
        }
      }

      childContext = this._getValidatedChildContext(context);
      renderedElement = this._renderValidatedComponent(childContext);
    } finally {
      ReactLifeCycle.currentlyMountingInstance = previouslyMounting;
    }

    this._renderedComponent = this._instantiateReactComponent(
      renderedElement,
      this._currentElement.type // The wrapping type
    );

    var markup = ReactReconciler.mountComponent(
      this._renderedComponent,
      rootID,
      transaction,
      this._mergeChildContext(context, childContext)
    );
    if (inst.componentDidMount) {
      transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
    }

    return markup;
  },

  /**
   * Releases any resources allocated by `mountComponent`.
   *
   * @final
   * @internal
   */
  unmountComponent: function() {
    var inst = this._instance;

    if (inst.componentWillUnmount) {
      var previouslyUnmounting = ReactLifeCycle.currentlyUnmountingInstance;
      ReactLifeCycle.currentlyUnmountingInstance = this;
      try {
        inst.componentWillUnmount();
      } finally {
        ReactLifeCycle.currentlyUnmountingInstance = previouslyUnmounting;
      }
    }

    ReactReconciler.unmountComponent(this._renderedComponent);
    this._renderedComponent = null;

    // Reset pending fields
    this._pendingStateQueue = null;
    this._pendingReplaceState = false;
    this._pendingForceUpdate = false;
    this._pendingCallbacks = null;
    this._pendingElement = null;

    // These fields do not really need to be reset since this object is no
    // longer accessible.
    this._context = null;
    this._rootNodeID = null;

    // Delete the reference from the instance to this internal representation
    // which allow the internals to be properly cleaned up even if the user
    // leaks a reference to the public instance.
    ReactInstanceMap.remove(inst);

    // Some existing components rely on inst.props even after they've been
    // destroyed (in event handlers).
    // TODO: inst.props = null;
    // TODO: inst.state = null;
    // TODO: inst.context = null;
  },

  /**
   * Schedule a partial update to the props. Only used for internal testing.
   *
   * @param {object} partialProps Subset of the next props.
   * @param {?function} callback Called after props are updated.
   * @final
   * @internal
   */
  _setPropsInternal: function(partialProps, callback) {
    // This is a deoptimized path. We optimize for always having an element.
    // This creates an extra internal element.
    var element = this._pendingElement || this._currentElement;
    this._pendingElement = ReactElement.cloneAndReplaceProps(
      element,
      assign({}, element.props, partialProps)
    );
    ReactUpdates.enqueueUpdate(this, callback);
  },

  /**
   * Filters the context object to only contain keys specified in
   * `contextTypes`
   *
   * @param {object} context
   * @return {?object}
   * @private
   */
  _maskContext: function(context) {
    var maskedContext = null;
    // This really should be getting the component class for the element,
    // but we know that we're not going to need it for built-ins.
    if (typeof this._currentElement.type === 'string') {
      return emptyObject;
    }
    var contextTypes = this._currentElement.type.contextTypes;
    if (!contextTypes) {
      return emptyObject;
    }
    maskedContext = {};
    for (var contextName in contextTypes) {
      maskedContext[contextName] = context[contextName];
    }
    return maskedContext;
  },

  /**
   * Filters the context object to only contain keys specified in
   * `contextTypes`, and asserts that they are valid.
   *
   * @param {object} context
   * @return {?object}
   * @private
   */
  _processContext: function(context) {
    var maskedContext = this._maskContext(context);
    if ("production" !== "development") {
      var Component = ReactNativeComponent.getComponentClassForElement(
        this._currentElement
      );
      if (Component.contextTypes) {
        this._checkPropTypes(
          Component.contextTypes,
          maskedContext,
          ReactPropTypeLocations.context
        );
      }
    }
    return maskedContext;
  },

  /**
   * @param {object} currentContext
   * @return {object}
   * @private
   */
  _getValidatedChildContext: function(currentContext) {
    var inst = this._instance;
    var childContext = inst.getChildContext && inst.getChildContext();
    if (childContext) {
      ("production" !== "development" ? invariant(
        typeof inst.constructor.childContextTypes === 'object',
        '%s.getChildContext(): childContextTypes must be defined in order to ' +
        'use getChildContext().',
        this.getName() || 'ReactCompositeComponent'
      ) : invariant(typeof inst.constructor.childContextTypes === 'object'));
      if ("production" !== "development") {
        this._checkPropTypes(
          inst.constructor.childContextTypes,
          childContext,
          ReactPropTypeLocations.childContext
        );
      }
      for (var name in childContext) {
        ("production" !== "development" ? invariant(
          name in inst.constructor.childContextTypes,
          '%s.getChildContext(): key "%s" is not defined in childContextTypes.',
          this.getName() || 'ReactCompositeComponent',
          name
        ) : invariant(name in inst.constructor.childContextTypes));
      }
      return childContext;
    }
    return null;
  },

  _mergeChildContext: function(currentContext, childContext) {
    if (childContext) {
      return assign({}, currentContext, childContext);
    }
    return currentContext;
  },

  /**
   * Processes props by setting default values for unspecified props and
   * asserting that the props are valid. Does not mutate its argument; returns
   * a new props object with defaults merged in.
   *
   * @param {object} newProps
   * @return {object}
   * @private
   */
  _processProps: function(newProps) {
    if ("production" !== "development") {
      var Component = ReactNativeComponent.getComponentClassForElement(
        this._currentElement
      );
      if (Component.propTypes) {
        this._checkPropTypes(
          Component.propTypes,
          newProps,
          ReactPropTypeLocations.prop
        );
      }
    }
    return newProps;
  },

  /**
   * Assert that the props are valid
   *
   * @param {object} propTypes Map of prop name to a ReactPropType
   * @param {object} props
   * @param {string} location e.g. "prop", "context", "child context"
   * @private
   */
  _checkPropTypes: function(propTypes, props, location) {
    // TODO: Stop validating prop types here and only use the element
    // validation.
    var componentName = this.getName();
    for (var propName in propTypes) {
      if (propTypes.hasOwnProperty(propName)) {
        var error;
        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          ("production" !== "development" ? invariant(
            typeof propTypes[propName] === 'function',
            '%s: %s type `%s` is invalid; it must be a function, usually ' +
            'from React.PropTypes.',
            componentName || 'React class',
            ReactPropTypeLocationNames[location],
            propName
          ) : invariant(typeof propTypes[propName] === 'function'));
          error = propTypes[propName](props, propName, componentName, location);
        } catch (ex) {
          error = ex;
        }
        if (error instanceof Error) {
          // We may want to extend this logic for similar errors in
          // React.render calls, so I'm abstracting it away into
          // a function to minimize refactoring in the future
          var addendum = getDeclarationErrorAddendum(this);

          if (location === ReactPropTypeLocations.prop) {
            // Preface gives us something to blacklist in warning module
            ("production" !== "development" ? warning(
              false,
              'Failed Composite propType: %s%s',
              error.message,
              addendum
            ) : null);
          } else {
            ("production" !== "development" ? warning(
              false,
              'Failed Context Types: %s%s',
              error.message,
              addendum
            ) : null);
          }
        }
      }
    }
  },

  receiveComponent: function(nextElement, transaction, nextContext) {
    var prevElement = this._currentElement;
    var prevContext = this._context;

    this._pendingElement = null;

    this.updateComponent(
      transaction,
      prevElement,
      nextElement,
      prevContext,
      nextContext
    );
  },

  /**
   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
   * is set, update the component.
   *
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  performUpdateIfNecessary: function(transaction) {
    if (this._pendingElement != null) {
      ReactReconciler.receiveComponent(
        this,
        this._pendingElement || this._currentElement,
        transaction,
        this._context
      );
    }

    if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
      if ("production" !== "development") {
        ReactElementValidator.checkAndWarnForMutatedProps(
          this._currentElement
        );
      }

      this.updateComponent(
        transaction,
        this._currentElement,
        this._currentElement,
        this._context,
        this._context
      );
    }
  },

  /**
   * Compare two contexts, warning if they are different
   * TODO: Remove this check when owner-context is removed
   */
   _warnIfContextsDiffer: function(ownerBasedContext, parentBasedContext) {
    ownerBasedContext = this._maskContext(ownerBasedContext);
    parentBasedContext = this._maskContext(parentBasedContext);
    var parentKeys = Object.keys(parentBasedContext).sort();
    var displayName = this.getName() || 'ReactCompositeComponent';
    for (var i = 0; i < parentKeys.length; i++) {
      var key = parentKeys[i];
      ("production" !== "development" ? warning(
        ownerBasedContext[key] === parentBasedContext[key],
        'owner-based and parent-based contexts differ '  +
        '(values: `%s` vs `%s`) for key (%s) while mounting %s ' +
        '(see: http://fb.me/react-context-by-parent)',
        ownerBasedContext[key],
        parentBasedContext[key],
        key,
        displayName
      ) : null);
    }
  },

  /**
   * Perform an update to a mounted component. The componentWillReceiveProps and
   * shouldComponentUpdate methods are called, then (assuming the update isn't
   * skipped) the remaining update lifecycle methods are called and the DOM
   * representation is updated.
   *
   * By default, this implements React's rendering and reconciliation algorithm.
   * Sophisticated clients may wish to override this.
   *
   * @param {ReactReconcileTransaction} transaction
   * @param {ReactElement} prevParentElement
   * @param {ReactElement} nextParentElement
   * @internal
   * @overridable
   */
  updateComponent: function(
    transaction,
    prevParentElement,
    nextParentElement,
    prevUnmaskedContext,
    nextUnmaskedContext
  ) {
    var inst = this._instance;

    var nextContext = inst.context;
    var nextProps = inst.props;

    // Distinguish between a props update versus a simple state update
    if (prevParentElement !== nextParentElement) {
      nextContext = this._processContext(nextParentElement._context);
      nextProps = this._processProps(nextParentElement.props);

      if ("production" !== "development") {
        if (nextUnmaskedContext != null) {
          this._warnIfContextsDiffer(
            nextParentElement._context,
            nextUnmaskedContext
          );
        }
      }

      // An update here will schedule an update but immediately set
      // _pendingStateQueue which will ensure that any state updates gets
      // immediately reconciled instead of waiting for the next batch.

      if (inst.componentWillReceiveProps) {
        inst.componentWillReceiveProps(nextProps, nextContext);
      }
    }

    var nextState = this._processPendingState(nextProps, nextContext);

    var shouldUpdate =
      this._pendingForceUpdate ||
      !inst.shouldComponentUpdate ||
      inst.shouldComponentUpdate(nextProps, nextState, nextContext);

    if ("production" !== "development") {
      ("production" !== "development" ? warning(
        typeof shouldUpdate !== 'undefined',
        '%s.shouldComponentUpdate(): Returned undefined instead of a ' +
        'boolean value. Make sure to return true or false.',
        this.getName() || 'ReactCompositeComponent'
      ) : null);
    }

    if (shouldUpdate) {
      this._pendingForceUpdate = false;
      // Will set `this.props`, `this.state` and `this.context`.
      this._performComponentUpdate(
        nextParentElement,
        nextProps,
        nextState,
        nextContext,
        transaction,
        nextUnmaskedContext
      );
    } else {
      // If it's determined that a component should not update, we still want
      // to set props and state but we shortcut the rest of the update.
      this._currentElement = nextParentElement;
      this._context = nextUnmaskedContext;
      inst.props = nextProps;
      inst.state = nextState;
      inst.context = nextContext;
    }
  },

  _processPendingState: function(props, context) {
    var inst = this._instance;
    var queue = this._pendingStateQueue;
    var replace = this._pendingReplaceState;
    this._pendingReplaceState = false;
    this._pendingStateQueue = null;

    if (!queue) {
      return inst.state;
    }

    if (replace && queue.length === 1) {
      return queue[0];
    }

    var nextState = assign({}, replace ? queue[0] : inst.state);
    for (var i = replace ? 1 : 0; i < queue.length; i++) {
      var partial = queue[i];
      assign(
        nextState,
        typeof partial === 'function' ?
          partial.call(inst, nextState, props, context) :
          partial
      );
    }

    return nextState;
  },

  /**
   * Merges new props and state, notifies delegate methods of update and
   * performs update.
   *
   * @param {ReactElement} nextElement Next element
   * @param {object} nextProps Next public object to set as properties.
   * @param {?object} nextState Next object to set as state.
   * @param {?object} nextContext Next public object to set as context.
   * @param {ReactReconcileTransaction} transaction
   * @param {?object} unmaskedContext
   * @private
   */
  _performComponentUpdate: function(
    nextElement,
    nextProps,
    nextState,
    nextContext,
    transaction,
    unmaskedContext
  ) {
    var inst = this._instance;

    var prevProps = inst.props;
    var prevState = inst.state;
    var prevContext = inst.context;

    if (inst.componentWillUpdate) {
      inst.componentWillUpdate(nextProps, nextState, nextContext);
    }

    this._currentElement = nextElement;
    this._context = unmaskedContext;
    inst.props = nextProps;
    inst.state = nextState;
    inst.context = nextContext;

    this._updateRenderedComponent(transaction, unmaskedContext);

    if (inst.componentDidUpdate) {
      transaction.getReactMountReady().enqueue(
        inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext),
        inst
      );
    }
  },

  /**
   * Call the component's `render` method and update the DOM accordingly.
   *
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  _updateRenderedComponent: function(transaction, context) {
    var prevComponentInstance = this._renderedComponent;
    var prevRenderedElement = prevComponentInstance._currentElement;
    var childContext = this._getValidatedChildContext();
    var nextRenderedElement = this._renderValidatedComponent(childContext);
    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
      ReactReconciler.receiveComponent(
        prevComponentInstance,
        nextRenderedElement,
        transaction,
        this._mergeChildContext(context, childContext)
      );
    } else {
      // These two IDs are actually the same! But nothing should rely on that.
      var thisID = this._rootNodeID;
      var prevComponentID = prevComponentInstance._rootNodeID;
      ReactReconciler.unmountComponent(prevComponentInstance);

      this._renderedComponent = this._instantiateReactComponent(
        nextRenderedElement,
        this._currentElement.type
      );
      var nextMarkup = ReactReconciler.mountComponent(
        this._renderedComponent,
        thisID,
        transaction,
        this._mergeChildContext(context, childContext)
      );
      this._replaceNodeWithMarkupByID(prevComponentID, nextMarkup);
    }
  },

  /**
   * @protected
   */
  _replaceNodeWithMarkupByID: function(prevComponentID, nextMarkup) {
    ReactComponentEnvironment.replaceNodeWithMarkupByID(
      prevComponentID,
      nextMarkup
    );
  },

  /**
   * @protected
   */
  _renderValidatedComponentWithoutOwnerOrContext: function() {
    var inst = this._instance;
    var renderedComponent = inst.render();
    if ("production" !== "development") {
      // We allow auto-mocks to proceed as if they're returning null.
      if (typeof renderedComponent === 'undefined' &&
          inst.render._isMockFunction) {
        // This is probably bad practice. Consider warning here and
        // deprecating this convenience.
        renderedComponent = null;
      }
    }

    return renderedComponent;
  },

  /**
   * @private
   */
  _renderValidatedComponent: function(childContext) {
    var renderedComponent;
    var previousContext = ReactContext.current;
    ReactContext.current = this._mergeChildContext(
      this._currentElement._context,
      childContext
    );
    ReactCurrentOwner.current = this;
    try {
      renderedComponent =
        this._renderValidatedComponentWithoutOwnerOrContext();
    } finally {
      ReactContext.current = previousContext;
      ReactCurrentOwner.current = null;
    }
    ("production" !== "development" ? invariant(
      // TODO: An `isValidNode` function would probably be more appropriate
      renderedComponent === null || renderedComponent === false ||
      ReactElement.isValidElement(renderedComponent),
      '%s.render(): A valid ReactComponent must be returned. You may have ' +
        'returned undefined, an array or some other invalid object.',
      this.getName() || 'ReactCompositeComponent'
    ) : invariant(// TODO: An `isValidNode` function would probably be more appropriate
    renderedComponent === null || renderedComponent === false ||
    ReactElement.isValidElement(renderedComponent)));
    return renderedComponent;
  },

  /**
   * Lazily allocates the refs object and stores `component` as `ref`.
   *
   * @param {string} ref Reference name.
   * @param {component} component Component to store as `ref`.
   * @final
   * @private
   */
  attachRef: function(ref, component) {
    var inst = this.getPublicInstance();
    var refs = inst.refs === emptyObject ? (inst.refs = {}) : inst.refs;
    refs[ref] = component.getPublicInstance();
  },

  /**
   * Detaches a reference name.
   *
   * @param {string} ref Name to dereference.
   * @final
   * @private
   */
  detachRef: function(ref) {
    var refs = this.getPublicInstance().refs;
    delete refs[ref];
  },

  /**
   * Get a text description of the component that can be used to identify it
   * in error messages.
   * @return {string} The name or null.
   * @internal
   */
  getName: function() {
    var type = this._currentElement.type;
    var constructor = this._instance && this._instance.constructor;
    return (
      type.displayName || (constructor && constructor.displayName) ||
      type.name || (constructor && constructor.name) ||
      null
    );
  },

  /**
   * Get the publicly accessible representation of this component - i.e. what
   * is exposed by refs and returned by React.render. Can be null for stateless
   * components.
   *
   * @return {ReactComponent} the public component instance.
   * @internal
   */
  getPublicInstance: function() {
    return this._instance;
  },

  // Stub
  _instantiateReactComponent: null

};

ReactPerf.measureMethods(
  ReactCompositeComponentMixin,
  'ReactCompositeComponent',
  {
    mountComponent: 'mountComponent',
    updateComponent: 'updateComponent',
    _renderValidatedComponent: '_renderValidatedComponent'
  }
);

var ReactCompositeComponent = {

  Mixin: ReactCompositeComponentMixin

};

module.exports = ReactCompositeComponent;

},{"115":115,"135":135,"151":151,"154":154,"27":27,"36":36,"38":38,"39":39,"57":57,"58":58,"67":67,"68":68,"73":73,"75":75,"76":76,"77":77,"81":81,"87":87}],38:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactContext
 */

'use strict';

var assign = _dereq_(27);
var emptyObject = _dereq_(115);
var warning = _dereq_(154);

var didWarn = false;

/**
 * Keeps track of the current context.
 *
 * The context is automatically passed down the component ownership hierarchy
 * and is accessible via `this.context` on ReactCompositeComponents.
 */
var ReactContext = {

  /**
   * @internal
   * @type {object}
   */
  current: emptyObject,

  /**
   * Temporarily extends the current context while executing scopedCallback.
   *
   * A typical use case might look like
   *
   *  render: function() {
   *    var children = ReactContext.withContext({foo: 'foo'}, () => (
   *
   *    ));
   *    return <div>{children}</div>;
   *  }
   *
   * @param {object} newContext New context to merge into the existing context
   * @param {function} scopedCallback Callback to run with the new context
   * @return {ReactComponent|array<ReactComponent>}
   */
  withContext: function(newContext, scopedCallback) {
    if ("production" !== "development") {
      ("production" !== "development" ? warning(
        didWarn,
        'withContext is deprecated and will be removed in a future version. ' +
        'Use a wrapper component with getChildContext instead.'
      ) : null);

      didWarn = true;
    }

    var result;
    var previousContext = ReactContext.current;
    ReactContext.current = assign({}, previousContext, newContext);
    try {
      result = scopedCallback();
    } finally {
      ReactContext.current = previousContext;
    }
    return result;
  }

};

module.exports = ReactContext;

},{"115":115,"154":154,"27":27}],39:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactCurrentOwner
 */

'use strict';

/**
 * Keeps track of the current owner.
 *
 * The current owner is the component who should own any components that are
 * currently being constructed.
 *
 * The depth indicate how many composite components are above this render level.
 */
var ReactCurrentOwner = {

  /**
   * @internal
   * @type {ReactComponent}
   */
  current: null

};

module.exports = ReactCurrentOwner;

},{}],40:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOM
 * @typechecks static-only
 */

'use strict';

var ReactElement = _dereq_(57);
var ReactElementValidator = _dereq_(58);

var mapObject = _dereq_(142);

/**
 * Create a factory that creates HTML tag elements.
 *
 * @param {string} tag Tag name (e.g. `div`).
 * @private
 */
function createDOMFactory(tag) {
  if ("production" !== "development") {
    return ReactElementValidator.createFactory(tag);
  }
  return ReactElement.createFactory(tag);
}

/**
 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
 * This is also accessible via `React.DOM`.
 *
 * @public
 */
var ReactDOM = mapObject({
  a: 'a',
  abbr: 'abbr',
  address: 'address',
  area: 'area',
  article: 'article',
  aside: 'aside',
  audio: 'audio',
  b: 'b',
  base: 'base',
  bdi: 'bdi',
  bdo: 'bdo',
  big: 'big',
  blockquote: 'blockquote',
  body: 'body',
  br: 'br',
  button: 'button',
  canvas: 'canvas',
  caption: 'caption',
  cite: 'cite',
  code: 'code',
  col: 'col',
  colgroup: 'colgroup',
  data: 'data',
  datalist: 'datalist',
  dd: 'dd',
  del: 'del',
  details: 'details',
  dfn: 'dfn',
  dialog: 'dialog',
  div: 'div',
  dl: 'dl',
  dt: 'dt',
  em: 'em',
  embed: 'embed',
  fieldset: 'fieldset',
  figcaption: 'figcaption',
  figure: 'figure',
  footer: 'footer',
  form: 'form',
  h1: 'h1',
  h2: 'h2',
  h3: 'h3',
  h4: 'h4',
  h5: 'h5',
  h6: 'h6',
  head: 'head',
  header: 'header',
  hr: 'hr',
  html: 'html',
  i: 'i',
  iframe: 'iframe',
  img: 'img',
  input: 'input',
  ins: 'ins',
  kbd: 'kbd',
  keygen: 'keygen',
  label: 'label',
  legend: 'legend',
  li: 'li',
  link: 'link',
  main: 'main',
  map: 'map',
  mark: 'mark',
  menu: 'menu',
  menuitem: 'menuitem',
  meta: 'meta',
  meter: 'meter',
  nav: 'nav',
  noscript: 'noscript',
  object: 'object',
  ol: 'ol',
  optgroup: 'optgroup',
  option: 'option',
  output: 'output',
  p: 'p',
  param: 'param',
  picture: 'picture',
  pre: 'pre',
  progress: 'progress',
  q: 'q',
  rp: 'rp',
  rt: 'rt',
  ruby: 'ruby',
  s: 's',
  samp: 'samp',
  script: 'script',
  section: 'section',
  select: 'select',
  small: 'small',
  source: 'source',
  span: 'span',
  strong: 'strong',
  style: 'style',
  sub: 'sub',
  summary: 'summary',
  sup: 'sup',
  table: 'table',
  tbody: 'tbody',
  td: 'td',
  textarea: 'textarea',
  tfoot: 'tfoot',
  th: 'th',
  thead: 'thead',
  time: 'time',
  title: 'title',
  tr: 'tr',
  track: 'track',
  u: 'u',
  ul: 'ul',
  'var': 'var',
  video: 'video',
  wbr: 'wbr',

  // SVG
  circle: 'circle',
  clipPath: 'clipPath',
  defs: 'defs',
  ellipse: 'ellipse',
  g: 'g',
  line: 'line',
  linearGradient: 'linearGradient',
  mask: 'mask',
  path: 'path',
  pattern: 'pattern',
  polygon: 'polygon',
  polyline: 'polyline',
  radialGradient: 'radialGradient',
  rect: 'rect',
  stop: 'stop',
  svg: 'svg',
  text: 'text',
  tspan: 'tspan'

}, createDOMFactory);

module.exports = ReactDOM;

},{"142":142,"57":57,"58":58}],41:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMButton
 */

'use strict';

var AutoFocusMixin = _dereq_(2);
var ReactBrowserComponentMixin = _dereq_(29);
var ReactClass = _dereq_(33);
var ReactElement = _dereq_(57);

var keyMirror = _dereq_(140);

var button = ReactElement.createFactory('button');

var mouseListenerNames = keyMirror({
  onClick: true,
  onDoubleClick: true,
  onMouseDown: true,
  onMouseMove: true,
  onMouseUp: true,
  onClickCapture: true,
  onDoubleClickCapture: true,
  onMouseDownCapture: true,
  onMouseMoveCapture: true,
  onMouseUpCapture: true
});

/**
 * Implements a <button> native component that does not receive mouse events
 * when `disabled` is set.
 */
var ReactDOMButton = ReactClass.createClass({
  displayName: 'ReactDOMButton',
  tagName: 'BUTTON',

  mixins: [AutoFocusMixin, ReactBrowserComponentMixin],

  render: function() {
    var props = {};

    // Copy the props; except the mouse listeners if we're disabled
    for (var key in this.props) {
      if (this.props.hasOwnProperty(key) &&
          (!this.props.disabled || !mouseListenerNames[key])) {
        props[key] = this.props[key];
      }
    }

    return button(props, this.props.children);
  }

});

module.exports = ReactDOMButton;

},{"140":140,"2":2,"29":29,"33":33,"57":57}],42:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMComponent
 * @typechecks static-only
 */

/* global hasOwnProperty:true */

'use strict';

var CSSPropertyOperations = _dereq_(5);
var DOMProperty = _dereq_(10);
var DOMPropertyOperations = _dereq_(11);
var ReactBrowserEventEmitter = _dereq_(30);
var ReactComponentBrowserEnvironment =
  _dereq_(35);
var ReactMount = _dereq_(70);
var ReactMultiChild = _dereq_(71);
var ReactPerf = _dereq_(75);

var assign = _dereq_(27);
var escapeTextContentForBrowser = _dereq_(116);
var invariant = _dereq_(135);
var isEventSupported = _dereq_(136);
var keyOf = _dereq_(141);
var warning = _dereq_(154);

var deleteListener = ReactBrowserEventEmitter.deleteListener;
var listenTo = ReactBrowserEventEmitter.listenTo;
var registrationNameModules = ReactBrowserEventEmitter.registrationNameModules;

// For quickly matching children type, to test if can be treated as content.
var CONTENT_TYPES = {'string': true, 'number': true};

var STYLE = keyOf({style: null});

var ELEMENT_NODE_TYPE = 1;

/**
 * Optionally injectable operations for mutating the DOM
 */
var BackendIDOperations = null;

/**
 * @param {?object} props
 */
function assertValidProps(props) {
  if (!props) {
    return;
  }
  // Note the use of `==` which checks for null or undefined.
  if (props.dangerouslySetInnerHTML != null) {
    ("production" !== "development" ? invariant(
      props.children == null,
      'Can only set one of `children` or `props.dangerouslySetInnerHTML`.'
    ) : invariant(props.children == null));
    ("production" !== "development" ? invariant(
      typeof props.dangerouslySetInnerHTML === 'object' &&
      '__html' in props.dangerouslySetInnerHTML,
      '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. ' +
      'Please visit https://fb.me/react-invariant-dangerously-set-inner-html ' +
      'for more information.'
    ) : invariant(typeof props.dangerouslySetInnerHTML === 'object' &&
    '__html' in props.dangerouslySetInnerHTML));
  }
  if ("production" !== "development") {
    ("production" !== "development" ? warning(
      props.innerHTML == null,
      'Directly setting property `innerHTML` is not permitted. ' +
      'For more information, lookup documentation on `dangerouslySetInnerHTML`.'
    ) : null);
    ("production" !== "development" ? warning(
      !props.contentEditable || props.children == null,
      'A component is `contentEditable` and contains `children` managed by ' +
      'React. It is now your responsibility to guarantee that none of ' +
      'those nodes are unexpectedly modified or duplicated. This is ' +
      'probably not intentional.'
    ) : null);
  }
  ("production" !== "development" ? invariant(
    props.style == null || typeof props.style === 'object',
    'The `style` prop expects a mapping from style properties to values, ' +
    'not a string. For example, style={{marginRight: spacing + \'em\'}} when ' +
    'using JSX.'
  ) : invariant(props.style == null || typeof props.style === 'object'));
}

function putListener(id, registrationName, listener, transaction) {
  if ("production" !== "development") {
    // IE8 has no API for event capturing and the `onScroll` event doesn't
    // bubble.
    ("production" !== "development" ? warning(
      registrationName !== 'onScroll' || isEventSupported('scroll', true),
      'This browser doesn\'t support the `onScroll` event'
    ) : null);
  }
  var container = ReactMount.findReactContainerForID(id);
  if (container) {
    var doc = container.nodeType === ELEMENT_NODE_TYPE ?
      container.ownerDocument :
      container;
    listenTo(registrationName, doc);
  }
  transaction.getPutListenerQueue().enqueuePutListener(
    id,
    registrationName,
    listener
  );
}

// For HTML, certain tags should omit their close tag. We keep a whitelist for
// those special cased tags.

var omittedCloseTags = {
  'area': true,
  'base': true,
  'br': true,
  'col': true,
  'embed': true,
  'hr': true,
  'img': true,
  'input': true,
  'keygen': true,
  'link': true,
  'meta': true,
  'param': true,
  'source': true,
  'track': true,
  'wbr': true
  // NOTE: menuitem's close tag should be omitted, but that causes problems.
};

// We accept any tag to be rendered but since this gets injected into abitrary
// HTML, we want to make sure that it's a safe tag.
// http://www.w3.org/TR/REC-xml/#NT-Name

var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
var validatedTagCache = {};
var hasOwnProperty = {}.hasOwnProperty;

function validateDangerousTag(tag) {
  if (!hasOwnProperty.call(validatedTagCache, tag)) {
    ("production" !== "development" ? invariant(VALID_TAG_REGEX.test(tag), 'Invalid tag: %s', tag) : invariant(VALID_TAG_REGEX.test(tag)));
    validatedTagCache[tag] = true;
  }
}

/**
 * Creates a new React class that is idempotent and capable of containing other
 * React components. It accepts event listeners and DOM properties that are
 * valid according to `DOMProperty`.
 *
 *  - Event listeners: `onClick`, `onMouseDown`, etc.
 *  - DOM properties: `className`, `name`, `title`, etc.
 *
 * The `style` property functions differently from the DOM API. It accepts an
 * object mapping of style properties to values.
 *
 * @constructor ReactDOMComponent
 * @extends ReactMultiChild
 */
function ReactDOMComponent(tag) {
  validateDangerousTag(tag);
  this._tag = tag;
  this._renderedChildren = null;
  this._previousStyleCopy = null;
  this._rootNodeID = null;
}

ReactDOMComponent.displayName = 'ReactDOMComponent';

ReactDOMComponent.Mixin = {

  construct: function(element) {
    this._currentElement = element;
  },

  /**
   * Generates root tag markup then recurses. This method has side effects and
   * is not idempotent.
   *
   * @internal
   * @param {string} rootID The root DOM ID for this node.
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @return {string} The computed markup.
   */
  mountComponent: function(rootID, transaction, context) {
    this._rootNodeID = rootID;
    assertValidProps(this._currentElement.props);
    var closeTag = omittedCloseTags[this._tag] ? '' : '</' + this._tag + '>';
    return (
      this._createOpenTagMarkupAndPutListeners(transaction) +
      this._createContentMarkup(transaction, context) +
      closeTag
    );
  },

  /**
   * Creates markup for the open tag and all attributes.
   *
   * This method has side effects because events get registered.
   *
   * Iterating over object properties is faster than iterating over arrays.
   * @see http://jsperf.com/obj-vs-arr-iteration
   *
   * @private
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @return {string} Markup of opening tag.
   */
  _createOpenTagMarkupAndPutListeners: function(transaction) {
    var props = this._currentElement.props;
    var ret = '<' + this._tag;

    for (var propKey in props) {
      if (!props.hasOwnProperty(propKey)) {
        continue;
      }
      var propValue = props[propKey];
      if (propValue == null) {
        continue;
      }
      if (registrationNameModules.hasOwnProperty(propKey)) {
        putListener(this._rootNodeID, propKey, propValue, transaction);
      } else {
        if (propKey === STYLE) {
          if (propValue) {
            propValue = this._previousStyleCopy = assign({}, props.style);
          }
          propValue = CSSPropertyOperations.createMarkupForStyles(propValue);
        }
        var markup =
          DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
        if (markup) {
          ret += ' ' + markup;
        }
      }
    }

    // For static pages, no need to put React ID and checksum. Saves lots of
    // bytes.
    if (transaction.renderToStaticMarkup) {
      return ret + '>';
    }

    var markupForID = DOMPropertyOperations.createMarkupForID(this._rootNodeID);
    return ret + ' ' + markupForID + '>';
  },

  /**
   * Creates markup for the content between the tags.
   *
   * @private
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {object} context
   * @return {string} Content markup.
   */
  _createContentMarkup: function(transaction, context) {
    var prefix = '';
    if (this._tag === 'listing' ||
        this._tag === 'pre' ||
        this._tag === 'textarea') {
      // Add an initial newline because browsers ignore the first newline in
      // a <listing>, <pre>, or <textarea> as an "authoring convenience" -- see
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody.
      prefix = '\n';
    }

    var props = this._currentElement.props;

    // Intentional use of != to avoid catching zero/false.
    var innerHTML = props.dangerouslySetInnerHTML;
    if (innerHTML != null) {
      if (innerHTML.__html != null) {
        return prefix + innerHTML.__html;
      }
    } else {
      var contentToUse =
        CONTENT_TYPES[typeof props.children] ? props.children : null;
      var childrenToUse = contentToUse != null ? null : props.children;
      if (contentToUse != null) {
        return prefix + escapeTextContentForBrowser(contentToUse);
      } else if (childrenToUse != null) {
        var mountImages = this.mountChildren(
          childrenToUse,
          transaction,
          context
        );
        return prefix + mountImages.join('');
      }
    }
    return prefix;
  },

  receiveComponent: function(nextElement, transaction, context) {
    var prevElement = this._currentElement;
    this._currentElement = nextElement;
    this.updateComponent(transaction, prevElement, nextElement, context);
  },

  /**
   * Updates a native DOM component after it has already been allocated and
   * attached to the DOM. Reconciles the root DOM node, then recurses.
   *
   * @param {ReactReconcileTransaction} transaction
   * @param {ReactElement} prevElement
   * @param {ReactElement} nextElement
   * @internal
   * @overridable
   */
  updateComponent: function(transaction, prevElement, nextElement, context) {
    assertValidProps(this._currentElement.props);
    this._updateDOMProperties(prevElement.props, transaction);
    this._updateDOMChildren(prevElement.props, transaction, context);
  },

  /**
   * Reconciles the properties by detecting differences in property values and
   * updating the DOM as necessary. This function is probably the single most
   * critical path for performance optimization.
   *
   * TODO: Benchmark whether checking for changed values in memory actually
   *       improves performance (especially statically positioned elements).
   * TODO: Benchmark the effects of putting this at the top since 99% of props
   *       do not change for a given reconciliation.
   * TODO: Benchmark areas that can be improved with caching.
   *
   * @private
   * @param {object} lastProps
   * @param {ReactReconcileTransaction} transaction
   */
  _updateDOMProperties: function(lastProps, transaction) {
    var nextProps = this._currentElement.props;
    var propKey;
    var styleName;
    var styleUpdates;
    for (propKey in lastProps) {
      if (nextProps.hasOwnProperty(propKey) ||
         !lastProps.hasOwnProperty(propKey)) {
        continue;
      }
      if (propKey === STYLE) {
        var lastStyle = this._previousStyleCopy;
        for (styleName in lastStyle) {
          if (lastStyle.hasOwnProperty(styleName)) {
            styleUpdates = styleUpdates || {};
            styleUpdates[styleName] = '';
          }
        }
        this._previousStyleCopy = null;
      } else if (registrationNameModules.hasOwnProperty(propKey)) {
        deleteListener(this._rootNodeID, propKey);
      } else if (
          DOMProperty.isStandardName[propKey] ||
          DOMProperty.isCustomAttribute(propKey)) {
        BackendIDOperations.deletePropertyByID(
          this._rootNodeID,
          propKey
        );
      }
    }
    for (propKey in nextProps) {
      var nextProp = nextProps[propKey];
      var lastProp = propKey === STYLE ?
        this._previousStyleCopy :
        lastProps[propKey];
      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp) {
        continue;
      }
      if (propKey === STYLE) {
        if (nextProp) {
          nextProp = this._previousStyleCopy = assign({}, nextProp);
        } else {
          this._previousStyleCopy = null;
        }
        if (lastProp) {
          // Unset styles on `lastProp` but not on `nextProp`.
          for (styleName in lastProp) {
            if (lastProp.hasOwnProperty(styleName) &&
                (!nextProp || !nextProp.hasOwnProperty(styleName))) {
              styleUpdates = styleUpdates || {};
              styleUpdates[styleName] = '';
            }
          }
          // Update styles that changed since `lastProp`.
          for (styleName in nextProp) {
            if (nextProp.hasOwnProperty(styleName) &&
                lastProp[styleName] !== nextProp[styleName]) {
              styleUpdates = styleUpdates || {};
              styleUpdates[styleName] = nextProp[styleName];
            }
          }
        } else {
          // Relies on `updateStylesByID` not mutating `styleUpdates`.
          styleUpdates = nextProp;
        }
      } else if (registrationNameModules.hasOwnProperty(propKey)) {
        putListener(this._rootNodeID, propKey, nextProp, transaction);
      } else if (
          DOMProperty.isStandardName[propKey] ||
          DOMProperty.isCustomAttribute(propKey)) {
        BackendIDOperations.updatePropertyByID(
          this._rootNodeID,
          propKey,
          nextProp
        );
      }
    }
    if (styleUpdates) {
      BackendIDOperations.updateStylesByID(
        this._rootNodeID,
        styleUpdates
      );
    }
  },

  /**
   * Reconciles the children with the various properties that affect the
   * children content.
   *
   * @param {object} lastProps
   * @param {ReactReconcileTransaction} transaction
   */
  _updateDOMChildren: function(lastProps, transaction, context) {
    var nextProps = this._currentElement.props;

    var lastContent =
      CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
    var nextContent =
      CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;

    var lastHtml =
      lastProps.dangerouslySetInnerHTML &&
      lastProps.dangerouslySetInnerHTML.__html;
    var nextHtml =
      nextProps.dangerouslySetInnerHTML &&
      nextProps.dangerouslySetInnerHTML.__html;

    // Note the use of `!=` which checks for null or undefined.
    var lastChildren = lastContent != null ? null : lastProps.children;
    var nextChildren = nextContent != null ? null : nextProps.children;

    // If we're switching from children to content/html or vice versa, remove
    // the old content
    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
    if (lastChildren != null && nextChildren == null) {
      this.updateChildren(null, transaction, context);
    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
      this.updateTextContent('');
    }

    if (nextContent != null) {
      if (lastContent !== nextContent) {
        this.updateTextContent('' + nextContent);
      }
    } else if (nextHtml != null) {
      if (lastHtml !== nextHtml) {
        BackendIDOperations.updateInnerHTMLByID(
          this._rootNodeID,
          nextHtml
        );
      }
    } else if (nextChildren != null) {
      this.updateChildren(nextChildren, transaction, context);
    }
  },

  /**
   * Destroys all event registrations for this instance. Does not remove from
   * the DOM. That must be done by the parent.
   *
   * @internal
   */
  unmountComponent: function() {
    this.unmountChildren();
    ReactBrowserEventEmitter.deleteAllListeners(this._rootNodeID);
    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);
    this._rootNodeID = null;
  }

};

ReactPerf.measureMethods(ReactDOMComponent, 'ReactDOMComponent', {
  mountComponent: 'mountComponent',
  updateComponent: 'updateComponent'
});

assign(
  ReactDOMComponent.prototype,
  ReactDOMComponent.Mixin,
  ReactMultiChild.Mixin
);

ReactDOMComponent.injection = {
  injectIDOperations: function(IDOperations) {
    ReactDOMComponent.BackendIDOperations = BackendIDOperations = IDOperations;
  }
};

module.exports = ReactDOMComponent;

},{"10":10,"11":11,"116":116,"135":135,"136":136,"141":141,"154":154,"27":27,"30":30,"35":35,"5":5,"70":70,"71":71,"75":75}],43:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMForm
 */

'use strict';

var EventConstants = _dereq_(15);
var LocalEventTrapMixin = _dereq_(25);
var ReactBrowserComponentMixin = _dereq_(29);
var ReactClass = _dereq_(33);
var ReactElement = _dereq_(57);

var form = ReactElement.createFactory('form');

/**
 * Since onSubmit doesn't bubble OR capture on the top level in IE8, we need
 * to capture it on the <form> element itself. There are lots of hacks we could
 * do to accomplish this, but the most reliable is to make <form> a
 * composite component and use `componentDidMount` to attach the event handlers.
 */
var ReactDOMForm = ReactClass.createClass({
  displayName: 'ReactDOMForm',
  tagName: 'FORM',

  mixins: [ReactBrowserComponentMixin, LocalEventTrapMixin],

  render: function() {
    // TODO: Instead of using `ReactDOM` directly, we should use JSX. However,
    // `jshint` fails to parse JSX so in order for linting to work in the open
    // source repo, we need to just use `ReactDOM.form`.
    return form(this.props);
  },

  componentDidMount: function() {
    this.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset');
    this.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit');
  }
});

module.exports = ReactDOMForm;

},{"15":15,"25":25,"29":29,"33":33,"57":57}],44:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMIDOperations
 * @typechecks static-only
 */

/*jslint evil: true */

'use strict';

var CSSPropertyOperations = _dereq_(5);
var DOMChildrenOperations = _dereq_(9);
var DOMPropertyOperations = _dereq_(11);
var ReactMount = _dereq_(70);
var ReactPerf = _dereq_(75);

var invariant = _dereq_(135);
var setInnerHTML = _dereq_(148);

/**
 * Errors for properties that should not be updated with `updatePropertyById()`.
 *
 * @type {object}
 * @private
 */
var INVALID_PROPERTY_ERRORS = {
  dangerouslySetInnerHTML:
    '`dangerouslySetInnerHTML` must be set using `updateInnerHTMLByID()`.',
  style: '`style` must be set using `updateStylesByID()`.'
};

/**
 * Operations used to process updates to DOM nodes. This is made injectable via
 * `ReactDOMComponent.BackendIDOperations`.
 */
var ReactDOMIDOperations = {

  /**
   * Updates a DOM node with new property values. This should only be used to
   * update DOM properties in `DOMProperty`.
   *
   * @param {string} id ID of the node to update.
   * @param {string} name A valid property name, see `DOMProperty`.
   * @param {*} value New value of the property.
   * @internal
   */
  updatePropertyByID: function(id, name, value) {
    var node = ReactMount.getNode(id);
    ("production" !== "development" ? invariant(
      !INVALID_PROPERTY_ERRORS.hasOwnProperty(name),
      'updatePropertyByID(...): %s',
      INVALID_PROPERTY_ERRORS[name]
    ) : invariant(!INVALID_PROPERTY_ERRORS.hasOwnProperty(name)));

    // If we're updating to null or undefined, we should remove the property
    // from the DOM node instead of inadvertantly setting to a string. This
    // brings us in line with the same behavior we have on initial render.
    if (value != null) {
      DOMPropertyOperations.setValueForProperty(node, name, value);
    } else {
      DOMPropertyOperations.deleteValueForProperty(node, name);
    }
  },

  /**
   * Updates a DOM node to remove a property. This should only be used to remove
   * DOM properties in `DOMProperty`.
   *
   * @param {string} id ID of the node to update.
   * @param {string} name A property name to remove, see `DOMProperty`.
   * @internal
   */
  deletePropertyByID: function(id, name, value) {
    var node = ReactMount.getNode(id);
    ("production" !== "development" ? invariant(
      !INVALID_PROPERTY_ERRORS.hasOwnProperty(name),
      'updatePropertyByID(...): %s',
      INVALID_PROPERTY_ERRORS[name]
    ) : invariant(!INVALID_PROPERTY_ERRORS.hasOwnProperty(name)));
    DOMPropertyOperations.deleteValueForProperty(node, name, value);
  },

  /**
   * Updates a DOM node with new style values. If a value is specified as '',
   * the corresponding style property will be unset.
   *
   * @param {string} id ID of the node to update.
   * @param {object} styles Mapping from styles to values.
   * @internal
   */
  updateStylesByID: function(id, styles) {
    var node = ReactMount.getNode(id);
    CSSPropertyOperations.setValueForStyles(node, styles);
  },

  /**
   * Updates a DOM node's innerHTML.
   *
   * @param {string} id ID of the node to update.
   * @param {string} html An HTML string.
   * @internal
   */
  updateInnerHTMLByID: function(id, html) {
    var node = ReactMount.getNode(id);
    setInnerHTML(node, html);
  },

  /**
   * Updates a DOM node's text content set by `props.content`.
   *
   * @param {string} id ID of the node to update.
   * @param {string} content Text content.
   * @internal
   */
  updateTextContentByID: function(id, content) {
    var node = ReactMount.getNode(id);
    DOMChildrenOperations.updateTextContent(node, content);
  },

  /**
   * Replaces a DOM node that exists in the document with markup.
   *
   * @param {string} id ID of child to be replaced.
   * @param {string} markup Dangerous markup to inject in place of child.
   * @internal
   * @see {Danger.dangerouslyReplaceNodeWithMarkup}
   */
  dangerouslyReplaceNodeWithMarkupByID: function(id, markup) {
    var node = ReactMount.getNode(id);
    DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup(node, markup);
  },

  /**
   * Updates a component's children by processing a series of updates.
   *
   * @param {array<object>} updates List of update configurations.
   * @param {array<string>} markup List of markup strings.
   * @internal
   */
  dangerouslyProcessChildrenUpdates: function(updates, markup) {
    for (var i = 0; i < updates.length; i++) {
      updates[i].parentNode = ReactMount.getNode(updates[i].parentID);
    }
    DOMChildrenOperations.processUpdates(updates, markup);
  }
};

ReactPerf.measureMethods(ReactDOMIDOperations, 'ReactDOMIDOperations', {
  updatePropertyByID: 'updatePropertyByID',
  deletePropertyByID: 'deletePropertyByID',
  updateStylesByID: 'updateStylesByID',
  updateInnerHTMLByID: 'updateInnerHTMLByID',
  updateTextContentByID: 'updateTextContentByID',
  dangerouslyReplaceNodeWithMarkupByID: 'dangerouslyReplaceNodeWithMarkupByID',
  dangerouslyProcessChildrenUpdates: 'dangerouslyProcessChildrenUpdates'
});

module.exports = ReactDOMIDOperations;

},{"11":11,"135":135,"148":148,"5":5,"70":70,"75":75,"9":9}],45:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMIframe
 */

'use strict';

var EventConstants = _dereq_(15);
var LocalEventTrapMixin = _dereq_(25);
var ReactBrowserComponentMixin = _dereq_(29);
var ReactClass = _dereq_(33);
var ReactElement = _dereq_(57);

var iframe = ReactElement.createFactory('iframe');

/**
 * Since onLoad doesn't bubble OR capture on the top level in IE8, we need to
 * capture it on the <iframe> element itself. There are lots of hacks we could
 * do to accomplish this, but the most reliable is to make <iframe> a composite
 * component and use `componentDidMount` to attach the event handlers.
 */
var ReactDOMIframe = ReactClass.createClass({
  displayName: 'ReactDOMIframe',
  tagName: 'IFRAME',

  mixins: [ReactBrowserComponentMixin, LocalEventTrapMixin],

  render: function() {
    return iframe(this.props);
  },

  componentDidMount: function() {
    this.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load');
  }
});

module.exports = ReactDOMIframe;

},{"15":15,"25":25,"29":29,"33":33,"57":57}],46:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMImg
 */

'use strict';

var EventConstants = _dereq_(15);
var LocalEventTrapMixin = _dereq_(25);
var ReactBrowserComponentMixin = _dereq_(29);
var ReactClass = _dereq_(33);
var ReactElement = _dereq_(57);

var img = ReactElement.createFactory('img');

/**
 * Since onLoad doesn't bubble OR capture on the top level in IE8, we need to
 * capture it on the <img> element itself. There are lots of hacks we could do
 * to accomplish this, but the most reliable is to make <img> a composite
 * component and use `componentDidMount` to attach the event handlers.
 */
var ReactDOMImg = ReactClass.createClass({
  displayName: 'ReactDOMImg',
  tagName: 'IMG',

  mixins: [ReactBrowserComponentMixin, LocalEventTrapMixin],

  render: function() {
    return img(this.props);
  },

  componentDidMount: function() {
    this.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load');
    this.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error');
  }
});

module.exports = ReactDOMImg;

},{"15":15,"25":25,"29":29,"33":33,"57":57}],47:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMInput
 */

'use strict';

var AutoFocusMixin = _dereq_(2);
var DOMPropertyOperations = _dereq_(11);
var LinkedValueUtils = _dereq_(24);
var ReactBrowserComponentMixin = _dereq_(29);
var ReactClass = _dereq_(33);
var ReactElement = _dereq_(57);
var ReactMount = _dereq_(70);
var ReactUpdates = _dereq_(87);

var assign = _dereq_(27);
var invariant = _dereq_(135);

var input = ReactElement.createFactory('input');

var instancesByReactID = {};

function forceUpdateIfMounted() {
  /*jshint validthis:true */
  if (this.isMounted()) {
    this.forceUpdate();
  }
}

/**
 * Implements an <input> native component that allows setting these optional
 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
 *
 * If `checked` or `value` are not supplied (or null/undefined), user actions
 * that affect the checked state or value will trigger updates to the element.
 *
 * If they are supplied (and not null/undefined), the rendered element will not
 * trigger updates to the element. Instead, the props must change in order for
 * the rendered element to be updated.
 *
 * The rendered element will be initialized as unchecked (or `defaultChecked`)
 * with an empty value (or `defaultValue`).
 *
 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
 */
var ReactDOMInput = ReactClass.createClass({
  displayName: 'ReactDOMInput',
  tagName: 'INPUT',

  mixins: [AutoFocusMixin, LinkedValueUtils.Mixin, ReactBrowserComponentMixin],

  getInitialState: function() {
    var defaultValue = this.props.defaultValue;
    return {
      initialChecked: this.props.defaultChecked || false,
      initialValue: defaultValue != null ? defaultValue : null
    };
  },

  render: function() {
    // Clone `this.props` so we don't mutate the input.
    var props = assign({}, this.props);

    props.defaultChecked = null;
    props.defaultValue = null;

    var value = LinkedValueUtils.getValue(this);
    props.value = value != null ? value : this.state.initialValue;

    var checked = LinkedValueUtils.getChecked(this);
    props.checked = checked != null ? checked : this.state.initialChecked;

    props.onChange = this._handleChange;

    return input(props, this.props.children);
  },

  componentDidMount: function() {
    var id = ReactMount.getID(this.getDOMNode());
    instancesByReactID[id] = this;
  },

  componentWillUnmount: function() {
    var rootNode = this.getDOMNode();
    var id = ReactMount.getID(rootNode);
    delete instancesByReactID[id];
  },

  componentDidUpdate: function(prevProps, prevState, prevContext) {
    var rootNode = this.getDOMNode();
    if (this.props.checked != null) {
      DOMPropertyOperations.setValueForProperty(
        rootNode,
        'checked',
        this.props.checked || false
      );
    }

    var value = LinkedValueUtils.getValue(this);
    if (value != null) {
      // Cast `value` to a string to ensure the value is set correctly. While
      // browsers typically do this as necessary, jsdom doesn't.
      DOMPropertyOperations.setValueForProperty(rootNode, 'value', '' + value);
    }
  },

  _handleChange: function(event) {
    var returnValue;
    var onChange = LinkedValueUtils.getOnChange(this);
    if (onChange) {
      returnValue = onChange.call(this, event);
    }
    // Here we use asap to wait until all updates have propagated, which
    // is important when using controlled components within layers:
    // https://github.com/facebook/react/issues/1698
    ReactUpdates.asap(forceUpdateIfMounted, this);

    var name = this.props.name;
    if (this.props.type === 'radio' && name != null) {
      var rootNode = this.getDOMNode();
      var queryRoot = rootNode;

      while (queryRoot.parentNode) {
        queryRoot = queryRoot.parentNode;
      }

      // If `rootNode.form` was non-null, then we could try `form.elements`,
      // but that sometimes behaves strangely in IE8. We could also try using
      // `form.getElementsByName`, but that will only return direct children
      // and won't include inputs that use the HTML5 `form=` attribute. Since
      // the input might not even be in a form, let's just use the global
      // `querySelectorAll` to ensure we don't miss anything.
      var group = queryRoot.querySelectorAll(
        'input[name=' + JSON.stringify('' + name) + '][type="radio"]');

      for (var i = 0, groupLen = group.length; i < groupLen; i++) {
        var otherNode = group[i];
        if (otherNode === rootNode ||
            otherNode.form !== rootNode.form) {
          continue;
        }
        var otherID = ReactMount.getID(otherNode);
        ("production" !== "development" ? invariant(
          otherID,
          'ReactDOMInput: Mixing React and non-React radio inputs with the ' +
          'same `name` is not supported.'
        ) : invariant(otherID));
        var otherInstance = instancesByReactID[otherID];
        ("production" !== "development" ? invariant(
          otherInstance,
          'ReactDOMInput: Unknown radio button ID %s.',
          otherID
        ) : invariant(otherInstance));
        // If this is a controlled radio button group, forcing the input that
        // was previously checked to update will cause it to be come re-checked
        // as appropriate.
        ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
      }
    }

    return returnValue;
  }

});

module.exports = ReactDOMInput;

},{"11":11,"135":135,"2":2,"24":24,"27":27,"29":29,"33":33,"57":57,"70":70,"87":87}],48:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMOption
 */

'use strict';

var ReactBrowserComponentMixin = _dereq_(29);
var ReactClass = _dereq_(33);
var ReactElement = _dereq_(57);

var warning = _dereq_(154);

var option = ReactElement.createFactory('option');

/**
 * Implements an <option> native component that warns when `selected` is set.
 */
var ReactDOMOption = ReactClass.createClass({
  displayName: 'ReactDOMOption',
  tagName: 'OPTION',

  mixins: [ReactBrowserComponentMixin],

  componentWillMount: function() {
    // TODO (yungsters): Remove support for `selected` in <option>.
    if ("production" !== "development") {
      ("production" !== "development" ? warning(
        this.props.selected == null,
        'Use the `defaultValue` or `value` props on <select> instead of ' +
        'setting `selected` on <option>.'
      ) : null);
    }
  },

  render: function() {
    return option(this.props, this.props.children);
  }

});

module.exports = ReactDOMOption;

},{"154":154,"29":29,"33":33,"57":57}],49:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMSelect
 */

'use strict';

var AutoFocusMixin = _dereq_(2);
var LinkedValueUtils = _dereq_(24);
var ReactBrowserComponentMixin = _dereq_(29);
var ReactClass = _dereq_(33);
var ReactElement = _dereq_(57);
var ReactUpdates = _dereq_(87);

var assign = _dereq_(27);

var select = ReactElement.createFactory('select');

function updateOptionsIfPendingUpdateAndMounted() {
  /*jshint validthis:true */
  if (this._pendingUpdate) {
    this._pendingUpdate = false;
    var value = LinkedValueUtils.getValue(this);
    if (value != null && this.isMounted()) {
      updateOptions(this, value);
    }
  }
}

/**
 * Validation function for `value` and `defaultValue`.
 * @private
 */
function selectValueType(props, propName, componentName) {
  if (props[propName] == null) {
    return null;
  }
  if (props.multiple) {
    if (!Array.isArray(props[propName])) {
      return new Error(
        ("The `" + propName + "` prop supplied to <select> must be an array if ") +
        ("`multiple` is true.")
      );
    }
  } else {
    if (Array.isArray(props[propName])) {
      return new Error(
        ("The `" + propName + "` prop supplied to <select> must be a scalar ") +
        ("value if `multiple` is false.")
      );
    }
  }
}

/**
 * @param {ReactComponent} component Instance of ReactDOMSelect
 * @param {*} propValue A stringable (with `multiple`, a list of stringables).
 * @private
 */
function updateOptions(component, propValue) {
  var selectedValue, i, l;
  var options = component.getDOMNode().options;

  if (component.props.multiple) {
    selectedValue = {};
    for (i = 0, l = propValue.length; i < l; i++) {
      selectedValue['' + propValue[i]] = true;
    }
    for (i = 0, l = options.length; i < l; i++) {
      var selected = selectedValue.hasOwnProperty(options[i].value);
      if (options[i].selected !== selected) {
        options[i].selected = selected;
      }
    }
  } else {
    // Do not set `select.value` as exact behavior isn't consistent across all
    // browsers for all cases.
    selectedValue = '' + propValue;
    for (i = 0, l = options.length; i < l; i++) {
      if (options[i].value === selectedValue) {
        options[i].selected = true;
        return;
      }
    }
    if (options.length) {
      options[0].selected = true;
    }
  }
}

/**
 * Implements a <select> native component that allows optionally setting the
 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
 * stringable. If `multiple` is true, the prop must be an array of stringables.
 *
 * If `value` is not supplied (or null/undefined), user actions that change the
 * selected option will trigger updates to the rendered options.
 *
 * If it is supplied (and not null/undefined), the rendered options will not
 * update in response to user actions. Instead, the `value` prop must change in
 * order for the rendered options to update.
 *
 * If `defaultValue` is provided, any options with the supplied values will be
 * selected.
 */
var ReactDOMSelect = ReactClass.createClass({
  displayName: 'ReactDOMSelect',
  tagName: 'SELECT',

  mixins: [AutoFocusMixin, LinkedValueUtils.Mixin, ReactBrowserComponentMixin],

  propTypes: {
    defaultValue: selectValueType,
    value: selectValueType
  },

  render: function() {
    // Clone `this.props` so we don't mutate the input.
    var props = assign({}, this.props);

    props.onChange = this._handleChange;
    props.value = null;

    return select(props, this.props.children);
  },

  componentWillMount: function() {
    this._pendingUpdate = false;
  },

  componentDidMount: function() {
    var value = LinkedValueUtils.getValue(this);
    if (value != null) {
      updateOptions(this, value);
    } else if (this.props.defaultValue != null) {
      updateOptions(this, this.props.defaultValue);
    }
  },

  componentDidUpdate: function(prevProps) {
    var value = LinkedValueUtils.getValue(this);
    if (value != null) {
      this._pendingUpdate = false;
      updateOptions(this, value);
    } else if (!prevProps.multiple !== !this.props.multiple) {
      // For simplicity, reapply `defaultValue` if `multiple` is toggled.
      if (this.props.defaultValue != null) {
        updateOptions(this, this.props.defaultValue);
      } else {
        // Revert the select back to its default unselected state.
        updateOptions(this, this.props.multiple ? [] : '');
      }
    }
  },

  _handleChange: function(event) {
    var returnValue;
    var onChange = LinkedValueUtils.getOnChange(this);
    if (onChange) {
      returnValue = onChange.call(this, event);
    }

    this._pendingUpdate = true;
    ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
    return returnValue;
  }

});

module.exports = ReactDOMSelect;

},{"2":2,"24":24,"27":27,"29":29,"33":33,"57":57,"87":87}],50:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMSelection
 */

'use strict';

var ExecutionEnvironment = _dereq_(21);

var getNodeForCharacterOffset = _dereq_(128);
var getTextContentAccessor = _dereq_(130);

/**
 * While `isCollapsed` is available on the Selection object and `collapsed`
 * is available on the Range object, IE11 sometimes gets them wrong.
 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
 */
function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
  return anchorNode === focusNode && anchorOffset === focusOffset;
}

/**
 * Get the appropriate anchor and focus node/offset pairs for IE.
 *
 * The catch here is that IE's selection API doesn't provide information
 * about whether the selection is forward or backward, so we have to
 * behave as though it's always forward.
 *
 * IE text differs from modern selection in that it behaves as though
 * block elements end with a new line. This means character offsets will
 * differ between the two APIs.
 *
 * @param {DOMElement} node
 * @return {object}
 */
function getIEOffsets(node) {
  var selection = document.selection;
  var selectedRange = selection.createRange();
  var selectedLength = selectedRange.text.length;

  // Duplicate selection so we can move range without breaking user selection.
  var fromStart = selectedRange.duplicate();
  fromStart.moveToElementText(node);
  fromStart.setEndPoint('EndToStart', selectedRange);

  var startOffset = fromStart.text.length;
  var endOffset = startOffset + selectedLength;

  return {
    start: startOffset,
    end: endOffset
  };
}

/**
 * @param {DOMElement} node
 * @return {?object}
 */
function getModernOffsets(node) {
  var selection = window.getSelection && window.getSelection();

  if (!selection || selection.rangeCount === 0) {
    return null;
  }

  var anchorNode = selection.anchorNode;
  var anchorOffset = selection.anchorOffset;
  var focusNode = selection.focusNode;
  var focusOffset = selection.focusOffset;

  var currentRange = selection.getRangeAt(0);

  // If the node and offset values are the same, the selection is collapsed.
  // `Selection.isCollapsed` is available natively, but IE sometimes gets
  // this value wrong.
  var isSelectionCollapsed = isCollapsed(
    selection.anchorNode,
    selection.anchorOffset,
    selection.focusNode,
    selection.focusOffset
  );

  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;

  var tempRange = currentRange.cloneRange();
  tempRange.selectNodeContents(node);
  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);

  var isTempRangeCollapsed = isCollapsed(
    tempRange.startContainer,
    tempRange.startOffset,
    tempRange.endContainer,
    tempRange.endOffset
  );

  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
  var end = start + rangeLength;

  // Detect whether the selection is backward.
  var detectionRange = document.createRange();
  detectionRange.setStart(anchorNode, anchorOffset);
  detectionRange.setEnd(focusNode, focusOffset);
  var isBackward = detectionRange.collapsed;

  return {
    start: isBackward ? end : start,
    end: isBackward ? start : end
  };
}

/**
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */
function setIEOffsets(node, offsets) {
  var range = document.selection.createRange().duplicate();
  var start, end;

  if (typeof offsets.end === 'undefined') {
    start = offsets.start;
    end = start;
  } else if (offsets.start > offsets.end) {
    start = offsets.end;
    end = offsets.start;
  } else {
    start = offsets.start;
    end = offsets.end;
  }

  range.moveToElementText(node);
  range.moveStart('character', start);
  range.setEndPoint('EndToStart', range);
  range.moveEnd('character', end - start);
  range.select();
}

/**
 * In modern non-IE browsers, we can support both forward and backward
 * selections.
 *
 * Note: IE10+ supports the Selection object, but it does not support
 * the `extend` method, which means that even in modern IE, it's not possible
 * to programatically create a backward selection. Thus, for all IE
 * versions, we use the old IE API to create our selections.
 *
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */
function setModernOffsets(node, offsets) {
  if (!window.getSelection) {
    return;
  }

  var selection = window.getSelection();
  var length = node[getTextContentAccessor()].length;
  var start = Math.min(offsets.start, length);
  var end = typeof offsets.end === 'undefined' ?
            start : Math.min(offsets.end, length);

  // IE 11 uses modern selection, but doesn't support the extend method.
  // Flip backward selections, so we can set with a single range.
  if (!selection.extend && start > end) {
    var temp = end;
    end = start;
    start = temp;
  }

  var startMarker = getNodeForCharacterOffset(node, start);
  var endMarker = getNodeForCharacterOffset(node, end);

  if (startMarker && endMarker) {
    var range = document.createRange();
    range.setStart(startMarker.node, startMarker.offset);
    selection.removeAllRanges();

    if (start > end) {
      selection.addRange(range);
      selection.extend(endMarker.node, endMarker.offset);
    } else {
      range.setEnd(endMarker.node, endMarker.offset);
      selection.addRange(range);
    }
  }
}

var useIEOffsets = (
  ExecutionEnvironment.canUseDOM &&
  'selection' in document &&
  !('getSelection' in window)
);

var ReactDOMSelection = {
  /**
   * @param {DOMElement} node
   */
  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,

  /**
   * @param {DOMElement|DOMTextNode} node
   * @param {object} offsets
   */
  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
};

module.exports = ReactDOMSelection;

},{"128":128,"130":130,"21":21}],51:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMTextComponent
 * @typechecks static-only
 */

'use strict';

var DOMPropertyOperations = _dereq_(11);
var ReactComponentBrowserEnvironment =
  _dereq_(35);
var ReactDOMComponent = _dereq_(42);

var assign = _dereq_(27);
var escapeTextContentForBrowser = _dereq_(116);

/**
 * Text nodes violate a couple assumptions that React makes about components:
 *
 *  - When mounting text into the DOM, adjacent text nodes are merged.
 *  - Text nodes cannot be assigned a React root ID.
 *
 * This component is used to wrap strings in elements so that they can undergo
 * the same reconciliation that is applied to elements.
 *
 * TODO: Investigate representing React components in the DOM with text nodes.
 *
 * @class ReactDOMTextComponent
 * @extends ReactComponent
 * @internal
 */
var ReactDOMTextComponent = function(props) {
  // This constructor and its argument is currently used by mocks.
};

assign(ReactDOMTextComponent.prototype, {

  /**
   * @param {ReactText} text
   * @internal
   */
  construct: function(text) {
    // TODO: This is really a ReactText (ReactNode), not a ReactElement
    this._currentElement = text;
    this._stringText = '' + text;

    // Properties
    this._rootNodeID = null;
    this._mountIndex = 0;
  },

  /**
   * Creates the markup for this text node. This node is not intended to have
   * any features besides containing text content.
   *
   * @param {string} rootID DOM ID of the root node.
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @return {string} Markup for this text node.
   * @internal
   */
  mountComponent: function(rootID, transaction, context) {
    this._rootNodeID = rootID;
    var escapedText = escapeTextContentForBrowser(this._stringText);

    if (transaction.renderToStaticMarkup) {
      // Normally we'd wrap this in a `span` for the reasons stated above, but
      // since this is a situation where React won't take over (static pages),
      // we can simply return the text as it is.
      return escapedText;
    }

    return (
      '<span ' + DOMPropertyOperations.createMarkupForID(rootID) + '>' +
        escapedText +
      '</span>'
    );
  },

  /**
   * Updates this component by updating the text content.
   *
   * @param {ReactText} nextText The next text content
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  receiveComponent: function(nextText, transaction) {
    if (nextText !== this._currentElement) {
      this._currentElement = nextText;
      var nextStringText = '' + nextText;
      if (nextStringText !== this._stringText) {
        // TODO: Save this as pending props and use performUpdateIfNecessary
        // and/or updateComponent to do the actual update for consistency with
        // other component types?
        this._stringText = nextStringText;
        ReactDOMComponent.BackendIDOperations.updateTextContentByID(
          this._rootNodeID,
          nextStringText
        );
      }
    }
  },

  unmountComponent: function() {
    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);
  }

});

module.exports = ReactDOMTextComponent;

},{"11":11,"116":116,"27":27,"35":35,"42":42}],52:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMTextarea
 */

'use strict';

var AutoFocusMixin = _dereq_(2);
var DOMPropertyOperations = _dereq_(11);
var LinkedValueUtils = _dereq_(24);
var ReactBrowserComponentMixin = _dereq_(29);
var ReactClass = _dereq_(33);
var ReactElement = _dereq_(57);
var ReactUpdates = _dereq_(87);

var assign = _dereq_(27);
var invariant = _dereq_(135);

var warning = _dereq_(154);

var textarea = ReactElement.createFactory('textarea');

function forceUpdateIfMounted() {
  /*jshint validthis:true */
  if (this.isMounted()) {
    this.forceUpdate();
  }
}

/**
 * Implements a <textarea> native component that allows setting `value`, and
 * `defaultValue`. This differs from the traditional DOM API because value is
 * usually set as PCDATA children.
 *
 * If `value` is not supplied (or null/undefined), user actions that affect the
 * value will trigger updates to the element.
 *
 * If `value` is supplied (and not null/undefined), the rendered element will
 * not trigger updates to the element. Instead, the `value` prop must change in
 * order for the rendered element to be updated.
 *
 * The rendered element will be initialized with an empty value, the prop
 * `defaultValue` if specified, or the children content (deprecated).
 */
var ReactDOMTextarea = ReactClass.createClass({
  displayName: 'ReactDOMTextarea',
  tagName: 'TEXTAREA',

  mixins: [AutoFocusMixin, LinkedValueUtils.Mixin, ReactBrowserComponentMixin],

  getInitialState: function() {
    var defaultValue = this.props.defaultValue;
    // TODO (yungsters): Remove support for children content in <textarea>.
    var children = this.props.children;
    if (children != null) {
      if ("production" !== "development") {
        ("production" !== "development" ? warning(
          false,
          'Use the `defaultValue` or `value` props instead of setting ' +
          'children on <textarea>.'
        ) : null);
      }
      ("production" !== "development" ? invariant(
        defaultValue == null,
        'If you supply `defaultValue` on a <textarea>, do not pass children.'
      ) : invariant(defaultValue == null));
      if (Array.isArray(children)) {
        ("production" !== "development" ? invariant(
          children.length <= 1,
          '<textarea> can only have at most one child.'
        ) : invariant(children.length <= 1));
        children = children[0];
      }

      defaultValue = '' + children;
    }
    if (defaultValue == null) {
      defaultValue = '';
    }
    var value = LinkedValueUtils.getValue(this);
    return {
      // We save the initial value so that `ReactDOMComponent` doesn't update
      // `textContent` (unnecessary since we update value).
      // The initial value can be a boolean or object so that's why it's
      // forced to be a string.
      initialValue: '' + (value != null ? value : defaultValue)
    };
  },

  render: function() {
    // Clone `this.props` so we don't mutate the input.
    var props = assign({}, this.props);

    ("production" !== "development" ? invariant(
      props.dangerouslySetInnerHTML == null,
      '`dangerouslySetInnerHTML` does not make sense on <textarea>.'
    ) : invariant(props.dangerouslySetInnerHTML == null));

    props.defaultValue = null;
    props.value = null;
    props.onChange = this._handleChange;

    // Always set children to the same thing. In IE9, the selection range will
    // get reset if `textContent` is mutated.
    return textarea(props, this.state.initialValue);
  },

  componentDidUpdate: function(prevProps, prevState, prevContext) {
    var value = LinkedValueUtils.getValue(this);
    if (value != null) {
      var rootNode = this.getDOMNode();
      // Cast `value` to a string to ensure the value is set correctly. While
      // browsers typically do this as necessary, jsdom doesn't.
      DOMPropertyOperations.setValueForProperty(rootNode, 'value', '' + value);
    }
  },

  _handleChange: function(event) {
    var returnValue;
    var onChange = LinkedValueUtils.getOnChange(this);
    if (onChange) {
      returnValue = onChange.call(this, event);
    }
    ReactUpdates.asap(forceUpdateIfMounted, this);
    return returnValue;
  }

});

module.exports = ReactDOMTextarea;

},{"11":11,"135":135,"154":154,"2":2,"24":24,"27":27,"29":29,"33":33,"57":57,"87":87}],53:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDefaultBatchingStrategy
 */

'use strict';

var ReactUpdates = _dereq_(87);
var Transaction = _dereq_(103);

var assign = _dereq_(27);
var emptyFunction = _dereq_(114);

var RESET_BATCHED_UPDATES = {
  initialize: emptyFunction,
  close: function() {
    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
  }
};

var FLUSH_BATCHED_UPDATES = {
  initialize: emptyFunction,
  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
};

var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];

function ReactDefaultBatchingStrategyTransaction() {
  this.reinitializeTransaction();
}

assign(
  ReactDefaultBatchingStrategyTransaction.prototype,
  Transaction.Mixin,
  {
    getTransactionWrappers: function() {
      return TRANSACTION_WRAPPERS;
    }
  }
);

var transaction = new ReactDefaultBatchingStrategyTransaction();

var ReactDefaultBatchingStrategy = {
  isBatchingUpdates: false,

  /**
   * Call the provided function in a context within which calls to `setState`
   * and friends are batched such that components aren't updated unnecessarily.
   */
  batchedUpdates: function(callback, a, b, c, d) {
    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;

    ReactDefaultBatchingStrategy.isBatchingUpdates = true;

    // The code is written this way to avoid extra allocations
    if (alreadyBatchingUpdates) {
      callback(a, b, c, d);
    } else {
      transaction.perform(callback, null, a, b, c, d);
    }
  }
};

module.exports = ReactDefaultBatchingStrategy;

},{"103":103,"114":114,"27":27,"87":87}],54:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDefaultInjection
 */

'use strict';

var BeforeInputEventPlugin = _dereq_(3);
var ChangeEventPlugin = _dereq_(7);
var ClientReactRootIndex = _dereq_(8);
var DefaultEventPluginOrder = _dereq_(13);
var EnterLeaveEventPlugin = _dereq_(14);
var ExecutionEnvironment = _dereq_(21);
var HTMLDOMPropertyConfig = _dereq_(23);
var MobileSafariClickEventPlugin = _dereq_(26);
var ReactBrowserComponentMixin = _dereq_(29);
var ReactClass = _dereq_(33);
var ReactComponentBrowserEnvironment =
  _dereq_(35);
var ReactDefaultBatchingStrategy = _dereq_(53);
var ReactDOMComponent = _dereq_(42);
var ReactDOMButton = _dereq_(41);
var ReactDOMForm = _dereq_(43);
var ReactDOMImg = _dereq_(46);
var ReactDOMIDOperations = _dereq_(44);
var ReactDOMIframe = _dereq_(45);
var ReactDOMInput = _dereq_(47);
var ReactDOMOption = _dereq_(48);
var ReactDOMSelect = _dereq_(49);
var ReactDOMTextarea = _dereq_(52);
var ReactDOMTextComponent = _dereq_(51);
var ReactElement = _dereq_(57);
var ReactEventListener = _dereq_(62);
var ReactInjection = _dereq_(64);
var ReactInstanceHandles = _dereq_(66);
var ReactMount = _dereq_(70);
var ReactReconcileTransaction = _dereq_(80);
var SelectEventPlugin = _dereq_(89);
var ServerReactRootIndex = _dereq_(90);
var SimpleEventPlugin = _dereq_(91);
var SVGDOMPropertyConfig = _dereq_(88);

var createFullPageComponent = _dereq_(111);

function autoGenerateWrapperClass(type) {
  return ReactClass.createClass({
    tagName: type.toUpperCase(),
    render: function() {
      return new ReactElement(
        type,
        null,
        null,
        null,
        null,
        this.props
      );
    }
  });
}

function inject() {
  ReactInjection.EventEmitter.injectReactEventListener(
    ReactEventListener
  );

  /**
   * Inject modules for resolving DOM hierarchy and plugin ordering.
   */
  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
  ReactInjection.EventPluginHub.injectInstanceHandle(ReactInstanceHandles);
  ReactInjection.EventPluginHub.injectMount(ReactMount);

  /**
   * Some important event plugins included by default (without having to require
   * them).
   */
  ReactInjection.EventPluginHub.injectEventPluginsByName({
    SimpleEventPlugin: SimpleEventPlugin,
    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
    ChangeEventPlugin: ChangeEventPlugin,
    MobileSafariClickEventPlugin: MobileSafariClickEventPlugin,
    SelectEventPlugin: SelectEventPlugin,
    BeforeInputEventPlugin: BeforeInputEventPlugin
  });

  ReactInjection.NativeComponent.injectGenericComponentClass(
    ReactDOMComponent
  );

  ReactInjection.NativeComponent.injectTextComponentClass(
    ReactDOMTextComponent
  );

  ReactInjection.NativeComponent.injectAutoWrapper(
    autoGenerateWrapperClass
  );

  // This needs to happen before createFullPageComponent() otherwise the mixin
  // won't be included.
  ReactInjection.Class.injectMixin(ReactBrowserComponentMixin);

  ReactInjection.NativeComponent.injectComponentClasses({
    'button': ReactDOMButton,
    'form': ReactDOMForm,
    'iframe': ReactDOMIframe,
    'img': ReactDOMImg,
    'input': ReactDOMInput,
    'option': ReactDOMOption,
    'select': ReactDOMSelect,
    'textarea': ReactDOMTextarea,

    'html': createFullPageComponent('html'),
    'head': createFullPageComponent('head'),
    'body': createFullPageComponent('body')
  });

  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);

  ReactInjection.EmptyComponent.injectEmptyComponent('noscript');

  ReactInjection.Updates.injectReconcileTransaction(
    ReactReconcileTransaction
  );
  ReactInjection.Updates.injectBatchingStrategy(
    ReactDefaultBatchingStrategy
  );

  ReactInjection.RootIndex.injectCreateReactRootIndex(
    ExecutionEnvironment.canUseDOM ?
      ClientReactRootIndex.createReactRootIndex :
      ServerReactRootIndex.createReactRootIndex
  );

  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
  ReactInjection.DOMComponent.injectIDOperations(ReactDOMIDOperations);

  if ("production" !== "development") {
    var url = (ExecutionEnvironment.canUseDOM && window.location.href) || '';
    if ((/[?&]react_perf\b/).test(url)) {
      var ReactDefaultPerf = _dereq_(55);
      ReactDefaultPerf.start();
    }
  }
}

module.exports = {
  inject: inject
};

},{"111":111,"13":13,"14":14,"21":21,"23":23,"26":26,"29":29,"3":3,"33":33,"35":35,"41":41,"42":42,"43":43,"44":44,"45":45,"46":46,"47":47,"48":48,"49":49,"51":51,"52":52,"53":53,"55":55,"57":57,"62":62,"64":64,"66":66,"7":7,"70":70,"8":8,"80":80,"88":88,"89":89,"90":90,"91":91}],55:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDefaultPerf
 * @typechecks static-only
 */

'use strict';

var DOMProperty = _dereq_(10);
var ReactDefaultPerfAnalysis = _dereq_(56);
var ReactMount = _dereq_(70);
var ReactPerf = _dereq_(75);

var performanceNow = _dereq_(146);

function roundFloat(val) {
  return Math.floor(val * 100) / 100;
}

function addValue(obj, key, val) {
  obj[key] = (obj[key] || 0) + val;
}

var ReactDefaultPerf = {
  _allMeasurements: [], // last item in the list is the current one
  _mountStack: [0],
  _injected: false,

  start: function() {
    if (!ReactDefaultPerf._injected) {
      ReactPerf.injection.injectMeasure(ReactDefaultPerf.measure);
    }

    ReactDefaultPerf._allMeasurements.length = 0;
    ReactPerf.enableMeasure = true;
  },

  stop: function() {
    ReactPerf.enableMeasure = false;
  },

  getLastMeasurements: function() {
    return ReactDefaultPerf._allMeasurements;
  },

  printExclusive: function(measurements) {
    measurements = measurements || ReactDefaultPerf._allMeasurements;
    var summary = ReactDefaultPerfAnalysis.getExclusiveSummary(measurements);
    console.table(summary.map(function(item) {
      return {
        'Component class name': item.componentName,
        'Total inclusive time (ms)': roundFloat(item.inclusive),
        'Exclusive mount time (ms)': roundFloat(item.exclusive),
        'Exclusive render time (ms)': roundFloat(item.render),
        'Mount time per instance (ms)': roundFloat(item.exclusive / item.count),
        'Render time per instance (ms)': roundFloat(item.render / item.count),
        'Instances': item.count
      };
    }));
    // TODO: ReactDefaultPerfAnalysis.getTotalTime() does not return the correct
    // number.
  },

  printInclusive: function(measurements) {
    measurements = measurements || ReactDefaultPerf._allMeasurements;
    var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(measurements);
    console.table(summary.map(function(item) {
      return {
        'Owner > component': item.componentName,
        'Inclusive time (ms)': roundFloat(item.time),
        'Instances': item.count
      };
    }));
    console.log(
      'Total time:',
      ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms'
    );
  },

  getMeasurementsSummaryMap: function(measurements) {
    var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(
      measurements,
      true
    );
    return summary.map(function(item) {
      return {
        'Owner > component': item.componentName,
        'Wasted time (ms)': item.time,
        'Instances': item.count
      };
    });
  },

  printWasted: function(measurements) {
    measurements = measurements || ReactDefaultPerf._allMeasurements;
    console.table(ReactDefaultPerf.getMeasurementsSummaryMap(measurements));
    console.log(
      'Total time:',
      ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms'
    );
  },

  printDOM: function(measurements) {
    measurements = measurements || ReactDefaultPerf._allMeasurements;
    var summary = ReactDefaultPerfAnalysis.getDOMSummary(measurements);
    console.table(summary.map(function(item) {
      var result = {};
      result[DOMProperty.ID_ATTRIBUTE_NAME] = item.id;
      result['type'] = item.type;
      result['args'] = JSON.stringify(item.args);
      return result;
    }));
    console.log(
      'Total time:',
      ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms'
    );
  },

  _recordWrite: function(id, fnName, totalTime, args) {
    // TODO: totalTime isn't that useful since it doesn't count paints/reflows
    var writes =
      ReactDefaultPerf
        ._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1]
        .writes;
    writes[id] = writes[id] || [];
    writes[id].push({
      type: fnName,
      time: totalTime,
      args: args
    });
  },

  measure: function(moduleName, fnName, func) {
    return function() {for (var args=[],$__0=0,$__1=arguments.length;$__0<$__1;$__0++) args.push(arguments[$__0]);
      var totalTime;
      var rv;
      var start;

      if (fnName === '_renderNewRootComponent' ||
          fnName === 'flushBatchedUpdates') {
        // A "measurement" is a set of metrics recorded for each flush. We want
        // to group the metrics for a given flush together so we can look at the
        // components that rendered and the DOM operations that actually
        // happened to determine the amount of "wasted work" performed.
        ReactDefaultPerf._allMeasurements.push({
          exclusive: {},
          inclusive: {},
          render: {},
          counts: {},
          writes: {},
          displayNames: {},
          totalTime: 0
        });
        start = performanceNow();
        rv = func.apply(this, args);
        ReactDefaultPerf._allMeasurements[
          ReactDefaultPerf._allMeasurements.length - 1
        ].totalTime = performanceNow() - start;
        return rv;
      } else if (fnName === '_mountImageIntoNode' ||
          moduleName === 'ReactDOMIDOperations') {
        start = performanceNow();
        rv = func.apply(this, args);
        totalTime = performanceNow() - start;

        if (fnName === '_mountImageIntoNode') {
          var mountID = ReactMount.getID(args[1]);
          ReactDefaultPerf._recordWrite(mountID, fnName, totalTime, args[0]);
        } else if (fnName === 'dangerouslyProcessChildrenUpdates') {
          // special format
          args[0].forEach(function(update) {
            var writeArgs = {};
            if (update.fromIndex !== null) {
              writeArgs.fromIndex = update.fromIndex;
            }
            if (update.toIndex !== null) {
              writeArgs.toIndex = update.toIndex;
            }
            if (update.textContent !== null) {
              writeArgs.textContent = update.textContent;
            }
            if (update.markupIndex !== null) {
              writeArgs.markup = args[1][update.markupIndex];
            }
            ReactDefaultPerf._recordWrite(
              update.parentID,
              update.type,
              totalTime,
              writeArgs
            );
          });
        } else {
          // basic format
          ReactDefaultPerf._recordWrite(
            args[0],
            fnName,
            totalTime,
            Array.prototype.slice.call(args, 1)
          );
        }
        return rv;
      } else if (moduleName === 'ReactCompositeComponent' && (
        (// TODO: receiveComponent()?
        (fnName === 'mountComponent' ||
        fnName === 'updateComponent' || fnName === '_renderValidatedComponent')))) {

        if (typeof this._currentElement.type === 'string') {
          return func.apply(this, args);
        }

        var rootNodeID = fnName === 'mountComponent' ?
          args[0] :
          this._rootNodeID;
        var isRender = fnName === '_renderValidatedComponent';
        var isMount = fnName === 'mountComponent';

        var mountStack = ReactDefaultPerf._mountStack;
        var entry = ReactDefaultPerf._allMeasurements[
          ReactDefaultPerf._allMeasurements.length - 1
        ];

        if (isRender) {
          addValue(entry.counts, rootNodeID, 1);
        } else if (isMount) {
          mountStack.push(0);
        }

        start = performanceNow();
        rv = func.apply(this, args);
        totalTime = performanceNow() - start;

        if (isRender) {
          addValue(entry.render, rootNodeID, totalTime);
        } else if (isMount) {
          var subMountTime = mountStack.pop();
          mountStack[mountStack.length - 1] += totalTime;
          addValue(entry.exclusive, rootNodeID, totalTime - subMountTime);
          addValue(entry.inclusive, rootNodeID, totalTime);
        } else {
          addValue(entry.inclusive, rootNodeID, totalTime);
        }

        entry.displayNames[rootNodeID] = {
          current: this.getName(),
          owner: this._currentElement._owner ?
            this._currentElement._owner.getName() :
            '<root>'
        };

        return rv;
      } else {
        return func.apply(this, args);
      }
    };
  }
};

module.exports = ReactDefaultPerf;

},{"10":10,"146":146,"56":56,"70":70,"75":75}],56:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDefaultPerfAnalysis
 */

var assign = _dereq_(27);

// Don't try to save users less than 1.2ms (a number I made up)
var DONT_CARE_THRESHOLD = 1.2;
var DOM_OPERATION_TYPES = {
  '_mountImageIntoNode': 'set innerHTML',
  INSERT_MARKUP: 'set innerHTML',
  MOVE_EXISTING: 'move',
  REMOVE_NODE: 'remove',
  TEXT_CONTENT: 'set textContent',
  'updatePropertyByID': 'update attribute',
  'deletePropertyByID': 'delete attribute',
  'updateStylesByID': 'update styles',
  'updateInnerHTMLByID': 'set innerHTML',
  'dangerouslyReplaceNodeWithMarkupByID': 'replace'
};

function getTotalTime(measurements) {
  // TODO: return number of DOM ops? could be misleading.
  // TODO: measure dropped frames after reconcile?
  // TODO: log total time of each reconcile and the top-level component
  // class that triggered it.
  var totalTime = 0;
  for (var i = 0; i < measurements.length; i++) {
    var measurement = measurements[i];
    totalTime += measurement.totalTime;
  }
  return totalTime;
}

function getDOMSummary(measurements) {
  var items = [];
  for (var i = 0; i < measurements.length; i++) {
    var measurement = measurements[i];
    var id;

    for (id in measurement.writes) {
      measurement.writes[id].forEach(function(write) {
        items.push({
          id: id,
          type: DOM_OPERATION_TYPES[write.type] || write.type,
          args: write.args
        });
      });
    }
  }
  return items;
}

function getExclusiveSummary(measurements) {
  var candidates = {};
  var displayName;

  for (var i = 0; i < measurements.length; i++) {
    var measurement = measurements[i];
    var allIDs = assign(
      {},
      measurement.exclusive,
      measurement.inclusive
    );

    for (var id in allIDs) {
      displayName = measurement.displayNames[id].current;

      candidates[displayName] = candidates[displayName] || {
        componentName: displayName,
        inclusive: 0,
        exclusive: 0,
        render: 0,
        count: 0
      };
      if (measurement.render[id]) {
        candidates[displayName].render += measurement.render[id];
      }
      if (measurement.exclusive[id]) {
        candidates[displayName].exclusive += measurement.exclusive[id];
      }
      if (measurement.inclusive[id]) {
        candidates[displayName].inclusive += measurement.inclusive[id];
      }
      if (measurement.counts[id]) {
        candidates[displayName].count += measurement.counts[id];
      }
    }
  }

  // Now make a sorted array with the results.
  var arr = [];
  for (displayName in candidates) {
    if (candidates[displayName].exclusive >= DONT_CARE_THRESHOLD) {
      arr.push(candidates[displayName]);
    }
  }

  arr.sort(function(a, b) {
    return b.exclusive - a.exclusive;
  });

  return arr;
}

function getInclusiveSummary(measurements, onlyClean) {
  var candidates = {};
  var inclusiveKey;

  for (var i = 0; i < measurements.length; i++) {
    var measurement = measurements[i];
    var allIDs = assign(
      {},
      measurement.exclusive,
      measurement.inclusive
    );
    var cleanComponents;

    if (onlyClean) {
      cleanComponents = getUnchangedComponents(measurement);
    }

    for (var id in allIDs) {
      if (onlyClean && !cleanComponents[id]) {
        continue;
      }

      var displayName = measurement.displayNames[id];

      // Inclusive time is not useful for many components without knowing where
      // they are instantiated. So we aggregate inclusive time with both the
      // owner and current displayName as the key.
      inclusiveKey = displayName.owner + ' > ' + displayName.current;

      candidates[inclusiveKey] = candidates[inclusiveKey] || {
        componentName: inclusiveKey,
        time: 0,
        count: 0
      };

      if (measurement.inclusive[id]) {
        candidates[inclusiveKey].time += measurement.inclusive[id];
      }
      if (measurement.counts[id]) {
        candidates[inclusiveKey].count += measurement.counts[id];
      }
    }
  }

  // Now make a sorted array with the results.
  var arr = [];
  for (inclusiveKey in candidates) {
    if (candidates[inclusiveKey].time >= DONT_CARE_THRESHOLD) {
      arr.push(candidates[inclusiveKey]);
    }
  }

  arr.sort(function(a, b) {
    return b.time - a.time;
  });

  return arr;
}

function getUnchangedComponents(measurement) {
  // For a given reconcile, look at which components did not actually
  // render anything to the DOM and return a mapping of their ID to
  // the amount of time it took to render the entire subtree.
  var cleanComponents = {};
  var dirtyLeafIDs = Object.keys(measurement.writes);
  var allIDs = assign({}, measurement.exclusive, measurement.inclusive);

  for (var id in allIDs) {
    var isDirty = false;
    // For each component that rendered, see if a component that triggered
    // a DOM op is in its subtree.
    for (var i = 0; i < dirtyLeafIDs.length; i++) {
      if (dirtyLeafIDs[i].indexOf(id) === 0) {
        isDirty = true;
        break;
      }
    }
    if (!isDirty && measurement.counts[id] > 0) {
      cleanComponents[id] = true;
    }
  }
  return cleanComponents;
}

var ReactDefaultPerfAnalysis = {
  getExclusiveSummary: getExclusiveSummary,
  getInclusiveSummary: getInclusiveSummary,
  getDOMSummary: getDOMSummary,
  getTotalTime: getTotalTime
};

module.exports = ReactDefaultPerfAnalysis;

},{"27":27}],57:[function(_dereq_,module,exports){
/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactElement
 */

'use strict';

var ReactContext = _dereq_(38);
var ReactCurrentOwner = _dereq_(39);

var assign = _dereq_(27);
var warning = _dereq_(154);

var RESERVED_PROPS = {
  key: true,
  ref: true
};

/**
 * Warn for mutations.
 *
 * @internal
 * @param {object} object
 * @param {string} key
 */
function defineWarningProperty(object, key) {
  Object.defineProperty(object, key, {

    configurable: false,
    enumerable: true,

    get: function() {
      if (!this._store) {
        return null;
      }
      return this._store[key];
    },

    set: function(value) {
      ("production" !== "development" ? warning(
        false,
        'Don\'t set the %s property of the React element. Instead, ' +
        'specify the correct value when initially creating the element.',
        key
      ) : null);
      this._store[key] = value;
    }

  });
}

/**
 * This is updated to true if the membrane is successfully created.
 */
var useMutationMembrane = false;

/**
 * Warn for mutations.
 *
 * @internal
 * @param {object} element
 */
function defineMutationMembrane(prototype) {
  try {
    var pseudoFrozenProperties = {
      props: true
    };
    for (var key in pseudoFrozenProperties) {
      defineWarningProperty(prototype, key);
    }
    useMutationMembrane = true;
  } catch (x) {
    // IE will fail on defineProperty
  }
}

/**
 * Base constructor for all React elements. This is only used to make this
 * work with a dynamic instanceof check. Nothing should live on this prototype.
 *
 * @param {*} type
 * @param {string|object} ref
 * @param {*} key
 * @param {*} props
 * @internal
 */
var ReactElement = function(type, key, ref, owner, context, props) {
  // Built-in properties that belong on the element
  this.type = type;
  this.key = key;
  this.ref = ref;

  // Record the component responsible for creating this element.
  this._owner = owner;

  // TODO: Deprecate withContext, and then the context becomes accessible
  // through the owner.
  this._context = context;

  if ("production" !== "development") {
    // The validation flag and props are currently mutative. We put them on
    // an external backing store so that we can freeze the whole object.
    // This can be replaced with a WeakMap once they are implemented in
    // commonly used development environments.
    this._store = {props: props, originalProps: assign({}, props)};

    // To make comparing ReactElements easier for testing purposes, we make
    // the validation flag non-enumerable (where possible, which should
    // include every environment we run tests in), so the test framework
    // ignores it.
    try {
      Object.defineProperty(this._store, 'validated', {
        configurable: false,
        enumerable: false,
        writable: true
      });
    } catch (x) {
    }
    this._store.validated = false;

    // We're not allowed to set props directly on the object so we early
    // return and rely on the prototype membrane to forward to the backing
    // store.
    if (useMutationMembrane) {
      Object.freeze(this);
      return;
    }
  }

  this.props = props;
};

// We intentionally don't expose the function on the constructor property.
// ReactElement should be indistinguishable from a plain object.
ReactElement.prototype = {
  _isReactElement: true
};

if ("production" !== "development") {
  defineMutationMembrane(ReactElement.prototype);
}

ReactElement.createElement = function(type, config, children) {
  var propName;

  // Reserved names are extracted
  var props = {};

  var key = null;
  var ref = null;

  if (config != null) {
    ref = config.ref === undefined ? null : config.ref;
    key = config.key === undefined ? null : '' + config.key;
    // Remaining properties are added to a new props object
    for (propName in config) {
      if (config.hasOwnProperty(propName) &&
          !RESERVED_PROPS.hasOwnProperty(propName)) {
        props[propName] = config[propName];
      }
    }
  }

  // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.
  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    props.children = childArray;
  }

  // Resolve default props
  if (type && type.defaultProps) {
    var defaultProps = type.defaultProps;
    for (propName in defaultProps) {
      if (typeof props[propName] === 'undefined') {
        props[propName] = defaultProps[propName];
      }
    }
  }

  return new ReactElement(
    type,
    key,
    ref,
    ReactCurrentOwner.current,
    ReactContext.current,
    props
  );
};

ReactElement.createFactory = function(type) {
  var factory = ReactElement.createElement.bind(null, type);
  // Expose the type on the factory and the prototype so that it can be
  // easily accessed on elements. E.g. <Foo />.type === Foo.type.
  // This should not be named `constructor` since this may not be the function
  // that created the element, and it may not even be a constructor.
  // Legacy hook TODO: Warn if this is accessed
  factory.type = type;
  return factory;
};

ReactElement.cloneAndReplaceProps = function(oldElement, newProps) {
  var newElement = new ReactElement(
    oldElement.type,
    oldElement.key,
    oldElement.ref,
    oldElement._owner,
    oldElement._context,
    newProps
  );

  if ("production" !== "development") {
    // If the key on the original is valid, then the clone is valid
    newElement._store.validated = oldElement._store.validated;
  }
  return newElement;
};

ReactElement.cloneElement = function(element, config, children) {
  var propName;

  // Original props are copied
  var props = assign({}, element.props);

  // Reserved names are extracted
  var key = element.key;
  var ref = element.ref;

  // Owner will be preserved, unless ref is overridden
  var owner = element._owner;

  if (config != null) {
    if (config.ref !== undefined) {
      // Silently steal the ref from the parent.
      ref = config.ref;
      owner = ReactCurrentOwner.current;
    }
    if (config.key !== undefined) {
      key = '' + config.key;
    }
    // Remaining properties override existing props
    for (propName in config) {
      if (config.hasOwnProperty(propName) &&
          !RESERVED_PROPS.hasOwnProperty(propName)) {
        props[propName] = config[propName];
      }
    }
  }

  // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.
  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    props.children = childArray;
  }

  return new ReactElement(
    element.type,
    key,
    ref,
    owner,
    element._context,
    props
  );
};

/**
 * @param {?object} object
 * @return {boolean} True if `object` is a valid component.
 * @final
 */
ReactElement.isValidElement = function(object) {
  // ReactTestUtils is often used outside of beforeEach where as React is
  // within it. This leads to two different instances of React on the same
  // page. To identify a element from a different React instance we use
  // a flag instead of an instanceof check.
  var isElement = !!(object && object._isReactElement);
  // if (isElement && !(object instanceof ReactElement)) {
  // This is an indicator that you're using multiple versions of React at the
  // same time. This will screw with ownership and stuff. Fix it, please.
  // TODO: We could possibly warn here.
  // }
  return isElement;
};

module.exports = ReactElement;

},{"154":154,"27":27,"38":38,"39":39}],58:[function(_dereq_,module,exports){
/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactElementValidator
 */

/**
 * ReactElementValidator provides a wrapper around a element factory
 * which validates the props passed to the element. This is intended to be
 * used only in DEV and could be replaced by a static type checker for languages
 * that support it.
 */

'use strict';

var ReactElement = _dereq_(57);
var ReactFragment = _dereq_(63);
var ReactPropTypeLocations = _dereq_(77);
var ReactPropTypeLocationNames = _dereq_(76);
var ReactCurrentOwner = _dereq_(39);
var ReactNativeComponent = _dereq_(73);

var getIteratorFn = _dereq_(126);
var invariant = _dereq_(135);
var warning = _dereq_(154);

function getDeclarationErrorAddendum() {
  if (ReactCurrentOwner.current) {
    var name = ReactCurrentOwner.current.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

/**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */
var ownerHasKeyUseWarning = {};

var loggedTypeFailures = {};

var NUMERIC_PROPERTY_REGEX = /^\d+$/;

/**
 * Gets the instance's name for use in warnings.
 *
 * @internal
 * @return {?string} Display name or undefined
 */
function getName(instance) {
  var publicInstance = instance && instance.getPublicInstance();
  if (!publicInstance) {
    return undefined;
  }
  var constructor = publicInstance.constructor;
  if (!constructor) {
    return undefined;
  }
  return constructor.displayName || constructor.name || undefined;
}

/**
 * Gets the current owner's displayName for use in warnings.
 *
 * @internal
 * @return {?string} Display name or undefined
 */
function getCurrentOwnerDisplayName() {
  var current = ReactCurrentOwner.current;
  return (
    current && getName(current) || undefined
  );
}

/**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */
function validateExplicitKey(element, parentType) {
  if (element._store.validated || element.key != null) {
    return;
  }
  element._store.validated = true;

  warnAndMonitorForKeyUse(
    'Each child in an array or iterator should have a unique "key" prop.',
    element,
    parentType
  );
}

/**
 * Warn if the key is being defined as an object property but has an incorrect
 * value.
 *
 * @internal
 * @param {string} name Property name of the key.
 * @param {ReactElement} element Component that requires a key.
 * @param {*} parentType element's parent's type.
 */
function validatePropertyKey(name, element, parentType) {
  if (!NUMERIC_PROPERTY_REGEX.test(name)) {
    return;
  }
  warnAndMonitorForKeyUse(
    'Child objects should have non-numeric keys so ordering is preserved.',
    element,
    parentType
  );
}

/**
 * Shared warning and monitoring code for the key warnings.
 *
 * @internal
 * @param {string} message The base warning that gets output.
 * @param {ReactElement} element Component that requires a key.
 * @param {*} parentType element's parent's type.
 */
function warnAndMonitorForKeyUse(message, element, parentType) {
  var ownerName = getCurrentOwnerDisplayName();
  var parentName = typeof parentType === 'string' ?
    parentType : parentType.displayName || parentType.name;

  var useName = ownerName || parentName;
  var memoizer = ownerHasKeyUseWarning[message] || (
    (ownerHasKeyUseWarning[message] = {})
  );
  if (memoizer.hasOwnProperty(useName)) {
    return;
  }
  memoizer[useName] = true;

  var parentOrOwnerAddendum =
    ownerName ? (" Check the render method of " + ownerName + ".") :
    parentName ? (" Check the React.render call using <" + parentName + ">.") :
    '';

  // Usually the current owner is the offender, but if it accepts children as a
  // property, it may be the creator of the child that's responsible for
  // assigning it a key.
  var childOwnerAddendum = '';
  if (element &&
      element._owner &&
      element._owner !== ReactCurrentOwner.current) {
    // Name of the component that originally created this child.
    var childOwnerName = getName(element._owner);

    childOwnerAddendum = (" It was passed a child from " + childOwnerName + ".");
  }

  ("production" !== "development" ? warning(
    false,
    message + '%s%s See https://fb.me/react-warning-keys for more information.',
    parentOrOwnerAddendum,
    childOwnerAddendum
  ) : null);
}

/**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */
function validateChildKeys(node, parentType) {
  if (Array.isArray(node)) {
    for (var i = 0; i < node.length; i++) {
      var child = node[i];
      if (ReactElement.isValidElement(child)) {
        validateExplicitKey(child, parentType);
      }
    }
  } else if (ReactElement.isValidElement(node)) {
    // This element was passed in a valid location.
    node._store.validated = true;
  } else if (node) {
    var iteratorFn = getIteratorFn(node);
    // Entry iterators provide implicit keys.
    if (iteratorFn) {
      if (iteratorFn !== node.entries) {
        var iterator = iteratorFn.call(node);
        var step;
        while (!(step = iterator.next()).done) {
          if (ReactElement.isValidElement(step.value)) {
            validateExplicitKey(step.value, parentType);
          }
        }
      }
    } else if (typeof node === 'object') {
      var fragment = ReactFragment.extractIfFragment(node);
      for (var key in fragment) {
        if (fragment.hasOwnProperty(key)) {
          validatePropertyKey(key, fragment[key], parentType);
        }
      }
    }
  }
}

/**
 * Assert that the props are valid
 *
 * @param {string} componentName Name of the component for error messages.
 * @param {object} propTypes Map of prop name to a ReactPropType
 * @param {object} props
 * @param {string} location e.g. "prop", "context", "child context"
 * @private
 */
function checkPropTypes(componentName, propTypes, props, location) {
  for (var propName in propTypes) {
    if (propTypes.hasOwnProperty(propName)) {
      var error;
      // Prop type validation may throw. In case they do, we don't want to
      // fail the render phase where it didn't fail before. So we log it.
      // After these have been cleaned up, we'll let them throw.
      try {
        // This is intentionally an invariant that gets caught. It's the same
        // behavior as without this statement except with a better message.
        ("production" !== "development" ? invariant(
          typeof propTypes[propName] === 'function',
          '%s: %s type `%s` is invalid; it must be a function, usually from ' +
          'React.PropTypes.',
          componentName || 'React class',
          ReactPropTypeLocationNames[location],
          propName
        ) : invariant(typeof propTypes[propName] === 'function'));
        error = propTypes[propName](props, propName, componentName, location);
      } catch (ex) {
        error = ex;
      }
      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
        // Only monitor this failure once because there tends to be a lot of the
        // same error.
        loggedTypeFailures[error.message] = true;

        var addendum = getDeclarationErrorAddendum(this);
        ("production" !== "development" ? warning(false, 'Failed propType: %s%s', error.message, addendum) : null);
      }
    }
  }
}

var warnedPropsMutations = {};

/**
 * Warn about mutating props when setting `propName` on `element`.
 *
 * @param {string} propName The string key within props that was set
 * @param {ReactElement} element
 */
function warnForPropsMutation(propName, element) {
  var type = element.type;
  var elementName = typeof type === 'string' ? type : type.displayName;
  var ownerName = element._owner ?
    element._owner.getPublicInstance().constructor.displayName : null;

  var warningKey = propName + '|' + elementName + '|' + ownerName;
  if (warnedPropsMutations.hasOwnProperty(warningKey)) {
    return;
  }
  warnedPropsMutations[warningKey] = true;

  var elementInfo = '';
  if (elementName) {
    elementInfo = ' <' + elementName + ' />';
  }
  var ownerInfo = '';
  if (ownerName) {
    ownerInfo = ' The element was created by ' + ownerName + '.';
  }

  ("production" !== "development" ? warning(
    false,
    'Don\'t set .props.%s of the React component%s. Instead, specify the ' +
    'correct value when initially creating the element or use ' +
    'React.cloneElement to make a new element with updated props.%s',
    propName,
    elementInfo,
    ownerInfo
  ) : null);
}

// Inline Object.is polyfill
function is(a, b) {
  if (a !== a) {
    // NaN
    return b !== b;
  }
  if (a === 0 && b === 0) {
    // +-0
    return 1 / a === 1 / b;
  }
  return a === b;
}

/**
 * Given an element, check if its props have been mutated since element
 * creation (or the last call to this function). In particular, check if any
 * new props have been added, which we can't directly catch by defining warning
 * properties on the props object.
 *
 * @param {ReactElement} element
 */
function checkAndWarnForMutatedProps(element) {
  if (!element._store) {
    // Element was created using `new ReactElement` directly or with
    // `ReactElement.createElement`; skip mutation checking
    return;
  }

  var originalProps = element._store.originalProps;
  var props = element.props;

  for (var propName in props) {
    if (props.hasOwnProperty(propName)) {
      if (!originalProps.hasOwnProperty(propName) ||
          !is(originalProps[propName], props[propName])) {
        warnForPropsMutation(propName, element);

        // Copy over the new value so that the two props objects match again
        originalProps[propName] = props[propName];
      }
    }
  }
}

/**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */
function validatePropTypes(element) {
  if (element.type == null) {
    // This has already warned. Don't throw.
    return;
  }
  // Extract the component class from the element. Converts string types
  // to a composite class which may have propTypes.
  // TODO: Validating a string's propTypes is not decoupled from the
  // rendering target which is problematic.
  var componentClass = ReactNativeComponent.getComponentClassForElement(
    element
  );
  var name = componentClass.displayName || componentClass.name;
  if (componentClass.propTypes) {
    checkPropTypes(
      name,
      componentClass.propTypes,
      element.props,
      ReactPropTypeLocations.prop
    );
  }
  if (typeof componentClass.getDefaultProps === 'function') {
    ("production" !== "development" ? warning(
      componentClass.getDefaultProps.isReactClassApproved,
      'getDefaultProps is only used on classic React.createClass ' +
      'definitions. Use a static property named `defaultProps` instead.'
    ) : null);
  }
}

var ReactElementValidator = {

  checkAndWarnForMutatedProps: checkAndWarnForMutatedProps,

  createElement: function(type, props, children) {
    // We warn in this case but don't throw. We expect the element creation to
    // succeed and there will likely be errors in render.
    ("production" !== "development" ? warning(
      type != null,
      'React.createElement: type should not be null or undefined. It should ' +
        'be a string (for DOM elements) or a ReactClass (for composite ' +
        'components).'
    ) : null);

    var element = ReactElement.createElement.apply(this, arguments);

    // The result can be nullish if a mock or a custom function is used.
    // TODO: Drop this when these are no longer allowed as the type argument.
    if (element == null) {
      return element;
    }

    for (var i = 2; i < arguments.length; i++) {
      validateChildKeys(arguments[i], type);
    }

    validatePropTypes(element);

    return element;
  },

  createFactory: function(type) {
    var validatedFactory = ReactElementValidator.createElement.bind(
      null,
      type
    );
    // Legacy hook TODO: Warn if this is accessed
    validatedFactory.type = type;

    if ("production" !== "development") {
      try {
        Object.defineProperty(
          validatedFactory,
          'type',
          {
            enumerable: false,
            get: function() {
              ("production" !== "development" ? warning(
                false,
                'Factory.type is deprecated. Access the class directly ' +
                'before passing it to createFactory.'
              ) : null);
              Object.defineProperty(this, 'type', {
                value: type
              });
              return type;
            }
          }
        );
      } catch (x) {
        // IE will fail on defineProperty (es5-shim/sham too)
      }
    }


    return validatedFactory;
  },

  cloneElement: function(element, props, children) {
    var newElement = ReactElement.cloneElement.apply(this, arguments);
    for (var i = 2; i < arguments.length; i++) {
      validateChildKeys(arguments[i], newElement.type);
    }
    validatePropTypes(newElement);
    return newElement;
  }

};

module.exports = ReactElementValidator;

},{"126":126,"135":135,"154":154,"39":39,"57":57,"63":63,"73":73,"76":76,"77":77}],59:[function(_dereq_,module,exports){
/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactEmptyComponent
 */

'use strict';

var ReactElement = _dereq_(57);
var ReactInstanceMap = _dereq_(67);

var invariant = _dereq_(135);

var component;
// This registry keeps track of the React IDs of the components that rendered to
// `null` (in reality a placeholder such as `noscript`)
var nullComponentIDsRegistry = {};

var ReactEmptyComponentInjection = {
  injectEmptyComponent: function(emptyComponent) {
    component = ReactElement.createFactory(emptyComponent);
  }
};

var ReactEmptyComponentType = function() {};
ReactEmptyComponentType.prototype.componentDidMount = function() {
  var internalInstance = ReactInstanceMap.get(this);
  // TODO: Make sure we run these methods in the correct order, we shouldn't
  // need this check. We're going to assume if we're here it means we ran
  // componentWillUnmount already so there is no internal instance (it gets
  // removed as part of the unmounting process).
  if (!internalInstance) {
    return;
  }
  registerNullComponentID(internalInstance._rootNodeID);
};
ReactEmptyComponentType.prototype.componentWillUnmount = function() {
  var internalInstance = ReactInstanceMap.get(this);
  // TODO: Get rid of this check. See TODO in componentDidMount.
  if (!internalInstance) {
    return;
  }
  deregisterNullComponentID(internalInstance._rootNodeID);
};
ReactEmptyComponentType.prototype.render = function() {
  ("production" !== "development" ? invariant(
    component,
    'Trying to return null from a render, but no null placeholder component ' +
    'was injected.'
  ) : invariant(component));
  return component();
};

var emptyElement = ReactElement.createElement(ReactEmptyComponentType);

/**
 * Mark the component as having rendered to null.
 * @param {string} id Component's `_rootNodeID`.
 */
function registerNullComponentID(id) {
  nullComponentIDsRegistry[id] = true;
}

/**
 * Unmark the component as having rendered to null: it renders to something now.
 * @param {string} id Component's `_rootNodeID`.
 */
function deregisterNullComponentID(id) {
  delete nullComponentIDsRegistry[id];
}

/**
 * @param {string} id Component's `_rootNodeID`.
 * @return {boolean} True if the component is rendered to null.
 */
function isNullComponentID(id) {
  return !!nullComponentIDsRegistry[id];
}

var ReactEmptyComponent = {
  emptyElement: emptyElement,
  injection: ReactEmptyComponentInjection,
  isNullComponentID: isNullComponentID
};

module.exports = ReactEmptyComponent;

},{"135":135,"57":57,"67":67}],60:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactErrorUtils
 * @typechecks
 */

"use strict";

var ReactErrorUtils = {
  /**
   * Creates a guarded version of a function. This is supposed to make debugging
   * of event handlers easier. To aid debugging with the browser's debugger,
   * this currently simply returns the original function.
   *
   * @param {function} func Function to be executed
   * @param {string} name The name of the guard
   * @return {function}
   */
  guard: function(func, name) {
    return func;
  }
};

module.exports = ReactErrorUtils;

},{}],61:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactEventEmitterMixin
 */

'use strict';

var EventPluginHub = _dereq_(17);

function runEventQueueInBatch(events) {
  EventPluginHub.enqueueEvents(events);
  EventPluginHub.processEventQueue();
}

var ReactEventEmitterMixin = {

  /**
   * Streams a fired top-level event to `EventPluginHub` where plugins have the
   * opportunity to create `ReactEvent`s to be dispatched.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {object} topLevelTarget The listening component root node.
   * @param {string} topLevelTargetID ID of `topLevelTarget`.
   * @param {object} nativeEvent Native environment event.
   */
  handleTopLevel: function(
      topLevelType,
      topLevelTarget,
      topLevelTargetID,
      nativeEvent) {
    var events = EventPluginHub.extractEvents(
      topLevelType,
      topLevelTarget,
      topLevelTargetID,
      nativeEvent
    );

    runEventQueueInBatch(events);
  }
};

module.exports = ReactEventEmitterMixin;

},{"17":17}],62:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactEventListener
 * @typechecks static-only
 */

'use strict';

var EventListener = _dereq_(16);
var ExecutionEnvironment = _dereq_(21);
var PooledClass = _dereq_(28);
var ReactInstanceHandles = _dereq_(66);
var ReactMount = _dereq_(70);
var ReactUpdates = _dereq_(87);

var assign = _dereq_(27);
var getEventTarget = _dereq_(125);
var getUnboundedScrollPosition = _dereq_(131);

/**
 * Finds the parent React component of `node`.
 *
 * @param {*} node
 * @return {?DOMEventTarget} Parent container, or `null` if the specified node
 *                           is not nested.
 */
function findParent(node) {
  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
  // traversal, but caching is difficult to do correctly without using a
  // mutation observer to listen for all DOM changes.
  var nodeID = ReactMount.getID(node);
  var rootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);
  var container = ReactMount.findReactContainerForID(rootID);
  var parent = ReactMount.getFirstReactDOM(container);
  return parent;
}

// Used to store ancestor hierarchy in top level callback
function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
  this.topLevelType = topLevelType;
  this.nativeEvent = nativeEvent;
  this.ancestors = [];
}
assign(TopLevelCallbackBookKeeping.prototype, {
  destructor: function() {
    this.topLevelType = null;
    this.nativeEvent = null;
    this.ancestors.length = 0;
  }
});
PooledClass.addPoolingTo(
  TopLevelCallbackBookKeeping,
  PooledClass.twoArgumentPooler
);

function handleTopLevelImpl(bookKeeping) {
  var topLevelTarget = ReactMount.getFirstReactDOM(
    getEventTarget(bookKeeping.nativeEvent)
  ) || window;

  // Loop through the hierarchy, in case there's any nested components.
  // It's important that we build the array of ancestors before calling any
  // event handlers, because event handlers can modify the DOM, leading to
  // inconsistencies with ReactMount's node cache. See #1105.
  var ancestor = topLevelTarget;
  while (ancestor) {
    bookKeeping.ancestors.push(ancestor);
    ancestor = findParent(ancestor);
  }

  for (var i = 0, l = bookKeeping.ancestors.length; i < l; i++) {
    topLevelTarget = bookKeeping.ancestors[i];
    var topLevelTargetID = ReactMount.getID(topLevelTarget) || '';
    ReactEventListener._handleTopLevel(
      bookKeeping.topLevelType,
      topLevelTarget,
      topLevelTargetID,
      bookKeeping.nativeEvent
    );
  }
}

function scrollValueMonitor(cb) {
  var scrollPosition = getUnboundedScrollPosition(window);
  cb(scrollPosition);
}

var ReactEventListener = {
  _enabled: true,
  _handleTopLevel: null,

  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,

  setHandleTopLevel: function(handleTopLevel) {
    ReactEventListener._handleTopLevel = handleTopLevel;
  },

  setEnabled: function(enabled) {
    ReactEventListener._enabled = !!enabled;
  },

  isEnabled: function() {
    return ReactEventListener._enabled;
  },


  /**
   * Traps top-level events by using event bubbling.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {string} handlerBaseName Event name (e.g. "click").
   * @param {object} handle Element on which to attach listener.
   * @return {object} An object with a remove function which will forcefully
   *                  remove the listener.
   * @internal
   */
  trapBubbledEvent: function(topLevelType, handlerBaseName, handle) {
    var element = handle;
    if (!element) {
      return null;
    }
    return EventListener.listen(
      element,
      handlerBaseName,
      ReactEventListener.dispatchEvent.bind(null, topLevelType)
    );
  },

  /**
   * Traps a top-level event by using event capturing.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {string} handlerBaseName Event name (e.g. "click").
   * @param {object} handle Element on which to attach listener.
   * @return {object} An object with a remove function which will forcefully
   *                  remove the listener.
   * @internal
   */
  trapCapturedEvent: function(topLevelType, handlerBaseName, handle) {
    var element = handle;
    if (!element) {
      return null;
    }
    return EventListener.capture(
      element,
      handlerBaseName,
      ReactEventListener.dispatchEvent.bind(null, topLevelType)
    );
  },

  monitorScrollValue: function(refresh) {
    var callback = scrollValueMonitor.bind(null, refresh);
    EventListener.listen(window, 'scroll', callback);
  },

  dispatchEvent: function(topLevelType, nativeEvent) {
    if (!ReactEventListener._enabled) {
      return;
    }

    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(
      topLevelType,
      nativeEvent
    );
    try {
      // Event queue being processed in the same cycle allows
      // `preventDefault`.
      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
    } finally {
      TopLevelCallbackBookKeeping.release(bookKeeping);
    }
  }
};

module.exports = ReactEventListener;

},{"125":125,"131":131,"16":16,"21":21,"27":27,"28":28,"66":66,"70":70,"87":87}],63:[function(_dereq_,module,exports){
/**
 * Copyright 2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
* @providesModule ReactFragment
*/

'use strict';

var ReactElement = _dereq_(57);

var warning = _dereq_(154);

/**
 * We used to allow keyed objects to serve as a collection of ReactElements,
 * or nested sets. This allowed us a way to explicitly key a set a fragment of
 * components. This is now being replaced with an opaque data structure.
 * The upgrade path is to call React.addons.createFragment({ key: value }) to
 * create a keyed fragment. The resulting data structure is opaque, for now.
 */

if ("production" !== "development") {
  var fragmentKey = '_reactFragment';
  var didWarnKey = '_reactDidWarn';
  var canWarnForReactFragment = false;

  try {
    // Feature test. Don't even try to issue this warning if we can't use
    // enumerable: false.

    var dummy = function() {
      return 1;
    };

    Object.defineProperty(
      {},
      fragmentKey,
      {enumerable: false, value: true}
    );

    Object.defineProperty(
      {},
      'key',
      {enumerable: true, get: dummy}
    );

    canWarnForReactFragment = true;
  } catch (x) { }

  var proxyPropertyAccessWithWarning = function(obj, key) {
    Object.defineProperty(obj, key, {
      enumerable: true,
      get: function() {
        ("production" !== "development" ? warning(
          this[didWarnKey],
          'A ReactFragment is an opaque type. Accessing any of its ' +
          'properties is deprecated. Pass it to one of the React.Children ' +
          'helpers.'
        ) : null);
        this[didWarnKey] = true;
        return this[fragmentKey][key];
      },
      set: function(value) {
        ("production" !== "development" ? warning(
          this[didWarnKey],
          'A ReactFragment is an immutable opaque type. Mutating its ' +
          'properties is deprecated.'
        ) : null);
        this[didWarnKey] = true;
        this[fragmentKey][key] = value;
      }
    });
  };

  var issuedWarnings = {};

  var didWarnForFragment = function(fragment) {
    // We use the keys and the type of the value as a heuristic to dedupe the
    // warning to avoid spamming too much.
    var fragmentCacheKey = '';
    for (var key in fragment) {
      fragmentCacheKey += key + ':' + (typeof fragment[key]) + ',';
    }
    var alreadyWarnedOnce = !!issuedWarnings[fragmentCacheKey];
    issuedWarnings[fragmentCacheKey] = true;
    return alreadyWarnedOnce;
  };
}

var ReactFragment = {
  // Wrap a keyed object in an opaque proxy that warns you if you access any
  // of its properties.
  create: function(object) {
    if ("production" !== "development") {
      if (typeof object !== 'object' || !object || Array.isArray(object)) {
        ("production" !== "development" ? warning(
          false,
          'React.addons.createFragment only accepts a single object.',
          object
        ) : null);
        return object;
      }
      if (ReactElement.isValidElement(object)) {
        ("production" !== "development" ? warning(
          false,
          'React.addons.createFragment does not accept a ReactElement ' +
          'without a wrapper object.'
        ) : null);
        return object;
      }
      if (canWarnForReactFragment) {
        var proxy = {};
        Object.defineProperty(proxy, fragmentKey, {
          enumerable: false,
          value: object
        });
        Object.defineProperty(proxy, didWarnKey, {
          writable: true,
          enumerable: false,
          value: false
        });
        for (var key in object) {
          proxyPropertyAccessWithWarning(proxy, key);
        }
        Object.preventExtensions(proxy);
        return proxy;
      }
    }
    return object;
  },
  // Extract the original keyed object from the fragment opaque type. Warn if
  // a plain object is passed here.
  extract: function(fragment) {
    if ("production" !== "development") {
      if (canWarnForReactFragment) {
        if (!fragment[fragmentKey]) {
          ("production" !== "development" ? warning(
            didWarnForFragment(fragment),
            'Any use of a keyed object should be wrapped in ' +
            'React.addons.createFragment(object) before being passed as a ' +
            'child.'
          ) : null);
          return fragment;
        }
        return fragment[fragmentKey];
      }
    }
    return fragment;
  },
  // Check if this is a fragment and if so, extract the keyed object. If it
  // is a fragment-like object, warn that it should be wrapped. Ignore if we
  // can't determine what kind of object this is.
  extractIfFragment: function(fragment) {
    if ("production" !== "development") {
      if (canWarnForReactFragment) {
        // If it is the opaque type, return the keyed object.
        if (fragment[fragmentKey]) {
          return fragment[fragmentKey];
        }
        // Otherwise, check each property if it has an element, if it does
        // it is probably meant as a fragment, so we can warn early. Defer,
        // the warning to extract.
        for (var key in fragment) {
          if (fragment.hasOwnProperty(key) &&
              ReactElement.isValidElement(fragment[key])) {
            // This looks like a fragment object, we should provide an
            // early warning.
            return ReactFragment.extract(fragment);
          }
        }
      }
    }
    return fragment;
  }
};

module.exports = ReactFragment;

},{"154":154,"57":57}],64:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactInjection
 */

'use strict';

var DOMProperty = _dereq_(10);
var EventPluginHub = _dereq_(17);
var ReactComponentEnvironment = _dereq_(36);
var ReactClass = _dereq_(33);
var ReactEmptyComponent = _dereq_(59);
var ReactBrowserEventEmitter = _dereq_(30);
var ReactNativeComponent = _dereq_(73);
var ReactDOMComponent = _dereq_(42);
var ReactPerf = _dereq_(75);
var ReactRootIndex = _dereq_(83);
var ReactUpdates = _dereq_(87);

var ReactInjection = {
  Component: ReactComponentEnvironment.injection,
  Class: ReactClass.injection,
  DOMComponent: ReactDOMComponent.injection,
  DOMProperty: DOMProperty.injection,
  EmptyComponent: ReactEmptyComponent.injection,
  EventPluginHub: EventPluginHub.injection,
  EventEmitter: ReactBrowserEventEmitter.injection,
  NativeComponent: ReactNativeComponent.injection,
  Perf: ReactPerf.injection,
  RootIndex: ReactRootIndex.injection,
  Updates: ReactUpdates.injection
};

module.exports = ReactInjection;

},{"10":10,"17":17,"30":30,"33":33,"36":36,"42":42,"59":59,"73":73,"75":75,"83":83,"87":87}],65:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactInputSelection
 */

'use strict';

var ReactDOMSelection = _dereq_(50);

var containsNode = _dereq_(109);
var focusNode = _dereq_(119);
var getActiveElement = _dereq_(121);

function isInDocument(node) {
  return containsNode(document.documentElement, node);
}

/**
 * @ReactInputSelection: React input selection module. Based on Selection.js,
 * but modified to be suitable for react and has a couple of bug fixes (doesn't
 * assume buttons have range selections allowed).
 * Input selection module for React.
 */
var ReactInputSelection = {

  hasSelectionCapabilities: function(elem) {
    return elem && (
      ((elem.nodeName === 'INPUT' && elem.type === 'text') ||
      elem.nodeName === 'TEXTAREA' || elem.contentEditable === 'true')
    );
  },

  getSelectionInformation: function() {
    var focusedElem = getActiveElement();
    return {
      focusedElem: focusedElem,
      selectionRange:
          ReactInputSelection.hasSelectionCapabilities(focusedElem) ?
          ReactInputSelection.getSelection(focusedElem) :
          null
    };
  },

  /**
   * @restoreSelection: If any selection information was potentially lost,
   * restore it. This is useful when performing operations that could remove dom
   * nodes and place them back in, resulting in focus being lost.
   */
  restoreSelection: function(priorSelectionInformation) {
    var curFocusedElem = getActiveElement();
    var priorFocusedElem = priorSelectionInformation.focusedElem;
    var priorSelectionRange = priorSelectionInformation.selectionRange;
    if (curFocusedElem !== priorFocusedElem &&
        isInDocument(priorFocusedElem)) {
      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
        ReactInputSelection.setSelection(
          priorFocusedElem,
          priorSelectionRange
        );
      }
      focusNode(priorFocusedElem);
    }
  },

  /**
   * @getSelection: Gets the selection bounds of a focused textarea, input or
   * contentEditable node.
   * -@input: Look up selection bounds of this input
   * -@return {start: selectionStart, end: selectionEnd}
   */
  getSelection: function(input) {
    var selection;

    if ('selectionStart' in input) {
      // Modern browser with input or textarea.
      selection = {
        start: input.selectionStart,
        end: input.selectionEnd
      };
    } else if (document.selection && input.nodeName === 'INPUT') {
      // IE8 input.
      var range = document.selection.createRange();
      // There can only be one selection per document in IE, so it must
      // be in our element.
      if (range.parentElement() === input) {
        selection = {
          start: -range.moveStart('character', -input.value.length),
          end: -range.moveEnd('character', -input.value.length)
        };
      }
    } else {
      // Content editable or old IE textarea.
      selection = ReactDOMSelection.getOffsets(input);
    }

    return selection || {start: 0, end: 0};
  },

  /**
   * @setSelection: Sets the selection bounds of a textarea or input and focuses
   * the input.
   * -@input     Set selection bounds of this input or textarea
   * -@offsets   Object of same form that is returned from get*
   */
  setSelection: function(input, offsets) {
    var start = offsets.start;
    var end = offsets.end;
    if (typeof end === 'undefined') {
      end = start;
    }

    if ('selectionStart' in input) {
      input.selectionStart = start;
      input.selectionEnd = Math.min(end, input.value.length);
    } else if (document.selection && input.nodeName === 'INPUT') {
      var range = input.createTextRange();
      range.collapse(true);
      range.moveStart('character', start);
      range.moveEnd('character', end - start);
      range.select();
    } else {
      ReactDOMSelection.setOffsets(input, offsets);
    }
  }
};

module.exports = ReactInputSelection;

},{"109":109,"119":119,"121":121,"50":50}],66:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactInstanceHandles
 * @typechecks static-only
 */

'use strict';

var ReactRootIndex = _dereq_(83);

var invariant = _dereq_(135);

var SEPARATOR = '.';
var SEPARATOR_LENGTH = SEPARATOR.length;

/**
 * Maximum depth of traversals before we consider the possibility of a bad ID.
 */
var MAX_TREE_DEPTH = 100;

/**
 * Creates a DOM ID prefix to use when mounting React components.
 *
 * @param {number} index A unique integer
 * @return {string} React root ID.
 * @internal
 */
function getReactRootIDString(index) {
  return SEPARATOR + index.toString(36);
}

/**
 * Checks if a character in the supplied ID is a separator or the end.
 *
 * @param {string} id A React DOM ID.
 * @param {number} index Index of the character to check.
 * @return {boolean} True if the character is a separator or end of the ID.
 * @private
 */
function isBoundary(id, index) {
  return id.charAt(index) === SEPARATOR || index === id.length;
}

/**
 * Checks if the supplied string is a valid React DOM ID.
 *
 * @param {string} id A React DOM ID, maybe.
 * @return {boolean} True if the string is a valid React DOM ID.
 * @private
 */
function isValidID(id) {
  return id === '' || (
    id.charAt(0) === SEPARATOR && id.charAt(id.length - 1) !== SEPARATOR
  );
}

/**
 * Checks if the first ID is an ancestor of or equal to the second ID.
 *
 * @param {string} ancestorID
 * @param {string} descendantID
 * @return {boolean} True if `ancestorID` is an ancestor of `descendantID`.
 * @internal
 */
function isAncestorIDOf(ancestorID, descendantID) {
  return (
    descendantID.indexOf(ancestorID) === 0 &&
    isBoundary(descendantID, ancestorID.length)
  );
}

/**
 * Gets the parent ID of the supplied React DOM ID, `id`.
 *
 * @param {string} id ID of a component.
 * @return {string} ID of the parent, or an empty string.
 * @private
 */
function getParentID(id) {
  return id ? id.substr(0, id.lastIndexOf(SEPARATOR)) : '';
}

/**
 * Gets the next DOM ID on the tree path from the supplied `ancestorID` to the
 * supplied `destinationID`. If they are equal, the ID is returned.
 *
 * @param {string} ancestorID ID of an ancestor node of `destinationID`.
 * @param {string} destinationID ID of the destination node.
 * @return {string} Next ID on the path from `ancestorID` to `destinationID`.
 * @private
 */
function getNextDescendantID(ancestorID, destinationID) {
  ("production" !== "development" ? invariant(
    isValidID(ancestorID) && isValidID(destinationID),
    'getNextDescendantID(%s, %s): Received an invalid React DOM ID.',
    ancestorID,
    destinationID
  ) : invariant(isValidID(ancestorID) && isValidID(destinationID)));
  ("production" !== "development" ? invariant(
    isAncestorIDOf(ancestorID, destinationID),
    'getNextDescendantID(...): React has made an invalid assumption about ' +
    'the DOM hierarchy. Expected `%s` to be an ancestor of `%s`.',
    ancestorID,
    destinationID
  ) : invariant(isAncestorIDOf(ancestorID, destinationID)));
  if (ancestorID === destinationID) {
    return ancestorID;
  }
  // Skip over the ancestor and the immediate separator. Traverse until we hit
  // another separator or we reach the end of `destinationID`.
  var start = ancestorID.length + SEPARATOR_LENGTH;
  var i;
  for (i = start; i < destinationID.length; i++) {
    if (isBoundary(destinationID, i)) {
      break;
    }
  }
  return destinationID.substr(0, i);
}

/**
 * Gets the nearest common ancestor ID of two IDs.
 *
 * Using this ID scheme, the nearest common ancestor ID is the longest common
 * prefix of the two IDs that immediately preceded a "marker" in both strings.
 *
 * @param {string} oneID
 * @param {string} twoID
 * @return {string} Nearest common ancestor ID, or the empty string if none.
 * @private
 */
function getFirstCommonAncestorID(oneID, twoID) {
  var minLength = Math.min(oneID.length, twoID.length);
  if (minLength === 0) {
    return '';
  }
  var lastCommonMarkerIndex = 0;
  // Use `<=` to traverse until the "EOL" of the shorter string.
  for (var i = 0; i <= minLength; i++) {
    if (isBoundary(oneID, i) && isBoundary(twoID, i)) {
      lastCommonMarkerIndex = i;
    } else if (oneID.charAt(i) !== twoID.charAt(i)) {
      break;
    }
  }
  var longestCommonID = oneID.substr(0, lastCommonMarkerIndex);
  ("production" !== "development" ? invariant(
    isValidID(longestCommonID),
    'getFirstCommonAncestorID(%s, %s): Expected a valid React DOM ID: %s',
    oneID,
    twoID,
    longestCommonID
  ) : invariant(isValidID(longestCommonID)));
  return longestCommonID;
}

/**
 * Traverses the parent path between two IDs (either up or down). The IDs must
 * not be the same, and there must exist a parent path between them. If the
 * callback returns `false`, traversal is stopped.
 *
 * @param {?string} start ID at which to start traversal.
 * @param {?string} stop ID at which to end traversal.
 * @param {function} cb Callback to invoke each ID with.
 * @param {?boolean} skipFirst Whether or not to skip the first node.
 * @param {?boolean} skipLast Whether or not to skip the last node.
 * @private
 */
function traverseParentPath(start, stop, cb, arg, skipFirst, skipLast) {
  start = start || '';
  stop = stop || '';
  ("production" !== "development" ? invariant(
    start !== stop,
    'traverseParentPath(...): Cannot traverse from and to the same ID, `%s`.',
    start
  ) : invariant(start !== stop));
  var traverseUp = isAncestorIDOf(stop, start);
  ("production" !== "development" ? invariant(
    traverseUp || isAncestorIDOf(start, stop),
    'traverseParentPath(%s, %s, ...): Cannot traverse from two IDs that do ' +
    'not have a parent path.',
    start,
    stop
  ) : invariant(traverseUp || isAncestorIDOf(start, stop)));
  // Traverse from `start` to `stop` one depth at a time.
  var depth = 0;
  var traverse = traverseUp ? getParentID : getNextDescendantID;
  for (var id = start; /* until break */; id = traverse(id, stop)) {
    var ret;
    if ((!skipFirst || id !== start) && (!skipLast || id !== stop)) {
      ret = cb(id, traverseUp, arg);
    }
    if (ret === false || id === stop) {
      // Only break //after// visiting `stop`.
      break;
    }
    ("production" !== "development" ? invariant(
      depth++ < MAX_TREE_DEPTH,
      'traverseParentPath(%s, %s, ...): Detected an infinite loop while ' +
      'traversing the React DOM ID tree. This may be due to malformed IDs: %s',
      start, stop
    ) : invariant(depth++ < MAX_TREE_DEPTH));
  }
}

/**
 * Manages the IDs assigned to DOM representations of React components. This
 * uses a specific scheme in order to traverse the DOM efficiently (e.g. in
 * order to simulate events).
 *
 * @internal
 */
var ReactInstanceHandles = {

  /**
   * Constructs a React root ID
   * @return {string} A React root ID.
   */
  createReactRootID: function() {
    return getReactRootIDString(ReactRootIndex.createReactRootIndex());
  },

  /**
   * Constructs a React ID by joining a root ID with a name.
   *
   * @param {string} rootID Root ID of a parent component.
   * @param {string} name A component's name (as flattened children).
   * @return {string} A React ID.
   * @internal
   */
  createReactID: function(rootID, name) {
    return rootID + name;
  },

  /**
   * Gets the DOM ID of the React component that is the root of the tree that
   * contains the React component with the supplied DOM ID.
   *
   * @param {string} id DOM ID of a React component.
   * @return {?string} DOM ID of the React component that is the root.
   * @internal
   */
  getReactRootIDFromNodeID: function(id) {
    if (id && id.charAt(0) === SEPARATOR && id.length > 1) {
      var index = id.indexOf(SEPARATOR, 1);
      return index > -1 ? id.substr(0, index) : id;
    }
    return null;
  },

  /**
   * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
   * should would receive a `mouseEnter` or `mouseLeave` event.
   *
   * NOTE: Does not invoke the callback on the nearest common ancestor because
   * nothing "entered" or "left" that element.
   *
   * @param {string} leaveID ID being left.
   * @param {string} enterID ID being entered.
   * @param {function} cb Callback to invoke on each entered/left ID.
   * @param {*} upArg Argument to invoke the callback with on left IDs.
   * @param {*} downArg Argument to invoke the callback with on entered IDs.
   * @internal
   */
  traverseEnterLeave: function(leaveID, enterID, cb, upArg, downArg) {
    var ancestorID = getFirstCommonAncestorID(leaveID, enterID);
    if (ancestorID !== leaveID) {
      traverseParentPath(leaveID, ancestorID, cb, upArg, false, true);
    }
    if (ancestorID !== enterID) {
      traverseParentPath(ancestorID, enterID, cb, downArg, true, false);
    }
  },

  /**
   * Simulates the traversal of a two-phase, capture/bubble event dispatch.
   *
   * NOTE: This traversal happens on IDs without touching the DOM.
   *
   * @param {string} targetID ID of the target node.
   * @param {function} cb Callback to invoke.
   * @param {*} arg Argument to invoke the callback with.
   * @internal
   */
  traverseTwoPhase: function(targetID, cb, arg) {
    if (targetID) {
      traverseParentPath('', targetID, cb, arg, true, false);
      traverseParentPath(targetID, '', cb, arg, false, true);
    }
  },

  /**
   * Traverse a node ID, calling the supplied `cb` for each ancestor ID. For
   * example, passing `.0.$row-0.1` would result in `cb` getting called
   * with `.0`, `.0.$row-0`, and `.0.$row-0.1`.
   *
   * NOTE: This traversal happens on IDs without touching the DOM.
   *
   * @param {string} targetID ID of the target node.
   * @param {function} cb Callback to invoke.
   * @param {*} arg Argument to invoke the callback with.
   * @internal
   */
  traverseAncestors: function(targetID, cb, arg) {
    traverseParentPath('', targetID, cb, arg, true, false);
  },

  /**
   * Exposed for unit testing.
   * @private
   */
  _getFirstCommonAncestorID: getFirstCommonAncestorID,

  /**
   * Exposed for unit testing.
   * @private
   */
  _getNextDescendantID: getNextDescendantID,

  isAncestorIDOf: isAncestorIDOf,

  SEPARATOR: SEPARATOR

};

module.exports = ReactInstanceHandles;

},{"135":135,"83":83}],67:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactInstanceMap
 */

'use strict';

/**
 * `ReactInstanceMap` maintains a mapping from a public facing stateful
 * instance (key) and the internal representation (value). This allows public
 * methods to accept the user facing instance as an argument and map them back
 * to internal methods.
 */

// TODO: Replace this with ES6: var ReactInstanceMap = new Map();
var ReactInstanceMap = {

  /**
   * This API should be called `delete` but we'd have to make sure to always
   * transform these to strings for IE support. When this transform is fully
   * supported we can rename it.
   */
  remove: function(key) {
    key._reactInternalInstance = undefined;
  },

  get: function(key) {
    return key._reactInternalInstance;
  },

  has: function(key) {
    return key._reactInternalInstance !== undefined;
  },

  set: function(key, value) {
    key._reactInternalInstance = value;
  }

};

module.exports = ReactInstanceMap;

},{}],68:[function(_dereq_,module,exports){
/**
 * Copyright 2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactLifeCycle
 */

'use strict';

/**
 * This module manages the bookkeeping when a component is in the process
 * of being mounted or being unmounted. This is used as a way to enforce
 * invariants (or warnings) when it is not recommended to call
 * setState/forceUpdate.
 *
 * currentlyMountingInstance: During the construction phase, it is not possible
 * to trigger an update since the instance is not fully mounted yet. However, we
 * currently allow this as a convenience for mutating the initial state.
 *
 * currentlyUnmountingInstance: During the unmounting phase, the instance is
 * still mounted and can therefore schedule an update. However, this is not
 * recommended and probably an error since it's about to be unmounted.
 * Therefore we still want to trigger in an error for that case.
 */

var ReactLifeCycle = {
  currentlyMountingInstance: null,
  currentlyUnmountingInstance: null
};

module.exports = ReactLifeCycle;

},{}],69:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactMarkupChecksum
 */

'use strict';

var adler32 = _dereq_(106);

var ReactMarkupChecksum = {
  CHECKSUM_ATTR_NAME: 'data-react-checksum',

  /**
   * @param {string} markup Markup string
   * @return {string} Markup string with checksum attribute attached
   */
  addChecksumToMarkup: function(markup) {
    var checksum = adler32(markup);
    return markup.replace(
      '>',
      ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '">'
    );
  },

  /**
   * @param {string} markup to use
   * @param {DOMElement} element root React element
   * @returns {boolean} whether or not the markup is the same
   */
  canReuseMarkup: function(markup, element) {
    var existingChecksum = element.getAttribute(
      ReactMarkupChecksum.CHECKSUM_ATTR_NAME
    );
    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
    var markupChecksum = adler32(markup);
    return markupChecksum === existingChecksum;
  }
};

module.exports = ReactMarkupChecksum;

},{"106":106}],70:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactMount
 */

'use strict';

var DOMProperty = _dereq_(10);
var ReactBrowserEventEmitter = _dereq_(30);
var ReactCurrentOwner = _dereq_(39);
var ReactElement = _dereq_(57);
var ReactElementValidator = _dereq_(58);
var ReactEmptyComponent = _dereq_(59);
var ReactInstanceHandles = _dereq_(66);
var ReactInstanceMap = _dereq_(67);
var ReactMarkupChecksum = _dereq_(69);
var ReactPerf = _dereq_(75);
var ReactReconciler = _dereq_(81);
var ReactUpdateQueue = _dereq_(86);
var ReactUpdates = _dereq_(87);

var emptyObject = _dereq_(115);
var containsNode = _dereq_(109);
var getReactRootElementInContainer = _dereq_(129);
var instantiateReactComponent = _dereq_(134);
var invariant = _dereq_(135);
var setInnerHTML = _dereq_(148);
var shouldUpdateReactComponent = _dereq_(151);
var warning = _dereq_(154);

var SEPARATOR = ReactInstanceHandles.SEPARATOR;

var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
var nodeCache = {};

var ELEMENT_NODE_TYPE = 1;
var DOC_NODE_TYPE = 9;

/** Mapping from reactRootID to React component instance. */
var instancesByReactRootID = {};

/** Mapping from reactRootID to `container` nodes. */
var containersByReactRootID = {};

if ("production" !== "development") {
  /** __DEV__-only mapping from reactRootID to root elements. */
  var rootElementsByReactRootID = {};
}

// Used to store breadth-first search state in findComponentRoot.
var findComponentRootReusableArray = [];

/**
 * Finds the index of the first character
 * that's not common between the two given strings.
 *
 * @return {number} the index of the character where the strings diverge
 */
function firstDifferenceIndex(string1, string2) {
  var minLen = Math.min(string1.length, string2.length);
  for (var i = 0; i < minLen; i++) {
    if (string1.charAt(i) !== string2.charAt(i)) {
      return i;
    }
  }
  return string1.length === string2.length ? -1 : minLen;
}

/**
 * @param {DOMElement} container DOM element that may contain a React component.
 * @return {?string} A "reactRoot" ID, if a React component is rendered.
 */
function getReactRootID(container) {
  var rootElement = getReactRootElementInContainer(container);
  return rootElement && ReactMount.getID(rootElement);
}

/**
 * Accessing node[ATTR_NAME] or calling getAttribute(ATTR_NAME) on a form
 * element can return its control whose name or ID equals ATTR_NAME. All
 * DOM nodes support `getAttributeNode` but this can also get called on
 * other objects so just return '' if we're given something other than a
 * DOM node (such as window).
 *
 * @param {?DOMElement|DOMWindow|DOMDocument|DOMTextNode} node DOM node.
 * @return {string} ID of the supplied `domNode`.
 */
function getID(node) {
  var id = internalGetID(node);
  if (id) {
    if (nodeCache.hasOwnProperty(id)) {
      var cached = nodeCache[id];
      if (cached !== node) {
        ("production" !== "development" ? invariant(
          !isValid(cached, id),
          'ReactMount: Two valid but unequal nodes with the same `%s`: %s',
          ATTR_NAME, id
        ) : invariant(!isValid(cached, id)));

        nodeCache[id] = node;
      }
    } else {
      nodeCache[id] = node;
    }
  }

  return id;
}

function internalGetID(node) {
  // If node is something like a window, document, or text node, none of
  // which support attributes or a .getAttribute method, gracefully return
  // the empty string, as if the attribute were missing.
  return node && node.getAttribute && node.getAttribute(ATTR_NAME) || '';
}

/**
 * Sets the React-specific ID of the given node.
 *
 * @param {DOMElement} node The DOM node whose ID will be set.
 * @param {string} id The value of the ID attribute.
 */
function setID(node, id) {
  var oldID = internalGetID(node);
  if (oldID !== id) {
    delete nodeCache[oldID];
  }
  node.setAttribute(ATTR_NAME, id);
  nodeCache[id] = node;
}

/**
 * Finds the node with the supplied React-generated DOM ID.
 *
 * @param {string} id A React-generated DOM ID.
 * @return {DOMElement} DOM node with the suppled `id`.
 * @internal
 */
function getNode(id) {
  if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {
    nodeCache[id] = ReactMount.findReactNodeByID(id);
  }
  return nodeCache[id];
}

/**
 * Finds the node with the supplied public React instance.
 *
 * @param {*} instance A public React instance.
 * @return {?DOMElement} DOM node with the suppled `id`.
 * @internal
 */
function getNodeFromInstance(instance) {
  var id = ReactInstanceMap.get(instance)._rootNodeID;
  if (ReactEmptyComponent.isNullComponentID(id)) {
    return null;
  }
  if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {
    nodeCache[id] = ReactMount.findReactNodeByID(id);
  }
  return nodeCache[id];
}

/**
 * A node is "valid" if it is contained by a currently mounted container.
 *
 * This means that the node does not have to be contained by a document in
 * order to be considered valid.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @param {string} id The expected ID of the node.
 * @return {boolean} Whether the node is contained by a mounted container.
 */
function isValid(node, id) {
  if (node) {
    ("production" !== "development" ? invariant(
      internalGetID(node) === id,
      'ReactMount: Unexpected modification of `%s`',
      ATTR_NAME
    ) : invariant(internalGetID(node) === id));

    var container = ReactMount.findReactContainerForID(id);
    if (container && containsNode(container, node)) {
      return true;
    }
  }

  return false;
}

/**
 * Causes the cache to forget about one React-specific ID.
 *
 * @param {string} id The ID to forget.
 */
function purgeID(id) {
  delete nodeCache[id];
}

var deepestNodeSoFar = null;
function findDeepestCachedAncestorImpl(ancestorID) {
  var ancestor = nodeCache[ancestorID];
  if (ancestor && isValid(ancestor, ancestorID)) {
    deepestNodeSoFar = ancestor;
  } else {
    // This node isn't populated in the cache, so presumably none of its
    // descendants are. Break out of the loop.
    return false;
  }
}

/**
 * Return the deepest cached node whose ID is a prefix of `targetID`.
 */
function findDeepestCachedAncestor(targetID) {
  deepestNodeSoFar = null;
  ReactInstanceHandles.traverseAncestors(
    targetID,
    findDeepestCachedAncestorImpl
  );

  var foundNode = deepestNodeSoFar;
  deepestNodeSoFar = null;
  return foundNode;
}

/**
 * Mounts this component and inserts it into the DOM.
 *
 * @param {ReactComponent} componentInstance The instance to mount.
 * @param {string} rootID DOM ID of the root node.
 * @param {DOMElement} container DOM element to mount into.
 * @param {ReactReconcileTransaction} transaction
 * @param {boolean} shouldReuseMarkup If true, do not insert markup
 */
function mountComponentIntoNode(
    componentInstance,
    rootID,
    container,
    transaction,
    shouldReuseMarkup) {
  var markup = ReactReconciler.mountComponent(
    componentInstance, rootID, transaction, emptyObject
  );
  componentInstance._isTopLevel = true;
  ReactMount._mountImageIntoNode(markup, container, shouldReuseMarkup);
}

/**
 * Batched mount.
 *
 * @param {ReactComponent} componentInstance The instance to mount.
 * @param {string} rootID DOM ID of the root node.
 * @param {DOMElement} container DOM element to mount into.
 * @param {boolean} shouldReuseMarkup If true, do not insert markup
 */
function batchedMountComponentIntoNode(
    componentInstance,
    rootID,
    container,
    shouldReuseMarkup) {
  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled();
  transaction.perform(
    mountComponentIntoNode,
    null,
    componentInstance,
    rootID,
    container,
    transaction,
    shouldReuseMarkup
  );
  ReactUpdates.ReactReconcileTransaction.release(transaction);
}

/**
 * Mounting is the process of initializing a React component by creating its
 * representative DOM elements and inserting them into a supplied `container`.
 * Any prior content inside `container` is destroyed in the process.
 *
 *   ReactMount.render(
 *     component,
 *     document.getElementById('container')
 *   );
 *
 *   <div id="container">                   <-- Supplied `container`.
 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
 *       // ...                                 component.
 *     </div>
 *   </div>
 *
 * Inside of `container`, the first element rendered is the "reactRoot".
 */
var ReactMount = {
  /** Exposed for debugging purposes **/
  _instancesByReactRootID: instancesByReactRootID,

  /**
   * This is a hook provided to support rendering React components while
   * ensuring that the apparent scroll position of its `container` does not
   * change.
   *
   * @param {DOMElement} container The `container` being rendered into.
   * @param {function} renderCallback This must be called once to do the render.
   */
  scrollMonitor: function(container, renderCallback) {
    renderCallback();
  },

  /**
   * Take a component that's already mounted into the DOM and replace its props
   * @param {ReactComponent} prevComponent component instance already in the DOM
   * @param {ReactElement} nextElement component instance to render
   * @param {DOMElement} container container to render into
   * @param {?function} callback function triggered on completion
   */
  _updateRootComponent: function(
      prevComponent,
      nextElement,
      container,
      callback) {
    if ("production" !== "development") {
      ReactElementValidator.checkAndWarnForMutatedProps(nextElement);
    }

    ReactMount.scrollMonitor(container, function() {
      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement);
      if (callback) {
        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
      }
    });

    if ("production" !== "development") {
      // Record the root element in case it later gets transplanted.
      rootElementsByReactRootID[getReactRootID(container)] =
        getReactRootElementInContainer(container);
    }

    return prevComponent;
  },

  /**
   * Register a component into the instance map and starts scroll value
   * monitoring
   * @param {ReactComponent} nextComponent component instance to render
   * @param {DOMElement} container container to render into
   * @return {string} reactRoot ID prefix
   */
  _registerComponent: function(nextComponent, container) {
    ("production" !== "development" ? invariant(
      container && (
        (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)
      ),
      '_registerComponent(...): Target container is not a DOM element.'
    ) : invariant(container && (
      (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)
    )));

    ReactBrowserEventEmitter.ensureScrollValueMonitoring();

    var reactRootID = ReactMount.registerContainer(container);
    instancesByReactRootID[reactRootID] = nextComponent;
    return reactRootID;
  },

  /**
   * Render a new component into the DOM.
   * @param {ReactElement} nextElement element to render
   * @param {DOMElement} container container to render into
   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
   * @return {ReactComponent} nextComponent
   */
  _renderNewRootComponent: function(
    nextElement,
    container,
    shouldReuseMarkup
  ) {
    // Various parts of our code (such as ReactCompositeComponent's
    // _renderValidatedComponent) assume that calls to render aren't nested;
    // verify that that's the case.
    ("production" !== "development" ? warning(
      ReactCurrentOwner.current == null,
      '_renderNewRootComponent(): Render methods should be a pure function ' +
      'of props and state; triggering nested component updates from ' +
      'render is not allowed. If necessary, trigger nested updates in ' +
      'componentDidUpdate.'
    ) : null);

    var componentInstance = instantiateReactComponent(nextElement, null);
    var reactRootID = ReactMount._registerComponent(
      componentInstance,
      container
    );

    // The initial render is synchronous but any updates that happen during
    // rendering, in componentWillMount or componentDidMount, will be batched
    // according to the current batching strategy.

    ReactUpdates.batchedUpdates(
      batchedMountComponentIntoNode,
      componentInstance,
      reactRootID,
      container,
      shouldReuseMarkup
    );

    if ("production" !== "development") {
      // Record the root element in case it later gets transplanted.
      rootElementsByReactRootID[reactRootID] =
        getReactRootElementInContainer(container);
    }

    return componentInstance;
  },

  /**
   * Renders a React component into the DOM in the supplied `container`.
   *
   * If the React component was previously rendered into `container`, this will
   * perform an update on it and only mutate the DOM as necessary to reflect the
   * latest React component.
   *
   * @param {ReactElement} nextElement Component element to render.
   * @param {DOMElement} container DOM element to render into.
   * @param {?function} callback function triggered on completion
   * @return {ReactComponent} Component instance rendered in `container`.
   */
  render: function(nextElement, container, callback) {
    ("production" !== "development" ? invariant(
      ReactElement.isValidElement(nextElement),
      'React.render(): Invalid component element.%s',
      (
        typeof nextElement === 'string' ?
          ' Instead of passing an element string, make sure to instantiate ' +
          'it by passing it to React.createElement.' :
        typeof nextElement === 'function' ?
          ' Instead of passing a component class, make sure to instantiate ' +
          'it by passing it to React.createElement.' :
        // Check if it quacks like an element
        nextElement != null && nextElement.props !== undefined ?
          ' This may be caused by unintentionally loading two independent ' +
          'copies of React.' :
          ''
      )
    ) : invariant(ReactElement.isValidElement(nextElement)));

    var prevComponent = instancesByReactRootID[getReactRootID(container)];

    if (prevComponent) {
      var prevElement = prevComponent._currentElement;
      if (shouldUpdateReactComponent(prevElement, nextElement)) {
        return ReactMount._updateRootComponent(
          prevComponent,
          nextElement,
          container,
          callback
        ).getPublicInstance();
      } else {
        ReactMount.unmountComponentAtNode(container);
      }
    }

    var reactRootElement = getReactRootElementInContainer(container);
    var containerHasReactMarkup =
      reactRootElement && ReactMount.isRenderedByReact(reactRootElement);

    if ("production" !== "development") {
      if (!containerHasReactMarkup || reactRootElement.nextSibling) {
        var rootElementSibling = reactRootElement;
        while (rootElementSibling) {
          if (ReactMount.isRenderedByReact(rootElementSibling)) {
            ("production" !== "development" ? warning(
              false,
              'render(): Target node has markup rendered by React, but there ' +
              'are unrelated nodes as well. This is most commonly caused by ' +
              'white-space inserted around server-rendered markup.'
            ) : null);
            break;
          }

          rootElementSibling = rootElementSibling.nextSibling;
        }
      }
    }

    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent;

    var component = ReactMount._renderNewRootComponent(
      nextElement,
      container,
      shouldReuseMarkup
    ).getPublicInstance();
    if (callback) {
      callback.call(component);
    }
    return component;
  },

  /**
   * Constructs a component instance of `constructor` with `initialProps` and
   * renders it into the supplied `container`.
   *
   * @param {function} constructor React component constructor.
   * @param {?object} props Initial props of the component instance.
   * @param {DOMElement} container DOM element to render into.
   * @return {ReactComponent} Component instance rendered in `container`.
   */
  constructAndRenderComponent: function(constructor, props, container) {
    var element = ReactElement.createElement(constructor, props);
    return ReactMount.render(element, container);
  },

  /**
   * Constructs a component instance of `constructor` with `initialProps` and
   * renders it into a container node identified by supplied `id`.
   *
   * @param {function} componentConstructor React component constructor
   * @param {?object} props Initial props of the component instance.
   * @param {string} id ID of the DOM element to render into.
   * @return {ReactComponent} Component instance rendered in the container node.
   */
  constructAndRenderComponentByID: function(constructor, props, id) {
    var domNode = document.getElementById(id);
    ("production" !== "development" ? invariant(
      domNode,
      'Tried to get element with id of "%s" but it is not present on the page.',
      id
    ) : invariant(domNode));
    return ReactMount.constructAndRenderComponent(constructor, props, domNode);
  },

  /**
   * Registers a container node into which React components will be rendered.
   * This also creates the "reactRoot" ID that will be assigned to the element
   * rendered within.
   *
   * @param {DOMElement} container DOM element to register as a container.
   * @return {string} The "reactRoot" ID of elements rendered within.
   */
  registerContainer: function(container) {
    var reactRootID = getReactRootID(container);
    if (reactRootID) {
      // If one exists, make sure it is a valid "reactRoot" ID.
      reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID);
    }
    if (!reactRootID) {
      // No valid "reactRoot" ID found, create one.
      reactRootID = ReactInstanceHandles.createReactRootID();
    }
    containersByReactRootID[reactRootID] = container;
    return reactRootID;
  },

  /**
   * Unmounts and destroys the React component rendered in the `container`.
   *
   * @param {DOMElement} container DOM element containing a React component.
   * @return {boolean} True if a component was found in and unmounted from
   *                   `container`
   */
  unmountComponentAtNode: function(container) {
    // Various parts of our code (such as ReactCompositeComponent's
    // _renderValidatedComponent) assume that calls to render aren't nested;
    // verify that that's the case. (Strictly speaking, unmounting won't cause a
    // render but we still don't expect to be in a render call here.)
    ("production" !== "development" ? warning(
      ReactCurrentOwner.current == null,
      'unmountComponentAtNode(): Render methods should be a pure function of ' +
      'props and state; triggering nested component updates from render is ' +
      'not allowed. If necessary, trigger nested updates in ' +
      'componentDidUpdate.'
    ) : null);

    ("production" !== "development" ? invariant(
      container && (
        (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)
      ),
      'unmountComponentAtNode(...): Target container is not a DOM element.'
    ) : invariant(container && (
      (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)
    )));

    var reactRootID = getReactRootID(container);
    var component = instancesByReactRootID[reactRootID];
    if (!component) {
      return false;
    }
    ReactMount.unmountComponentFromNode(component, container);
    delete instancesByReactRootID[reactRootID];
    delete containersByReactRootID[reactRootID];
    if ("production" !== "development") {
      delete rootElementsByReactRootID[reactRootID];
    }
    return true;
  },

  /**
   * Unmounts a component and removes it from the DOM.
   *
   * @param {ReactComponent} instance React component instance.
   * @param {DOMElement} container DOM element to unmount from.
   * @final
   * @internal
   * @see {ReactMount.unmountComponentAtNode}
   */
  unmountComponentFromNode: function(instance, container) {
    ReactReconciler.unmountComponent(instance);

    if (container.nodeType === DOC_NODE_TYPE) {
      container = container.documentElement;
    }

    // http://jsperf.com/emptying-a-node
    while (container.lastChild) {
      container.removeChild(container.lastChild);
    }
  },

  /**
   * Finds the container DOM element that contains React component to which the
   * supplied DOM `id` belongs.
   *
   * @param {string} id The ID of an element rendered by a React component.
   * @return {?DOMElement} DOM element that contains the `id`.
   */
  findReactContainerForID: function(id) {
    var reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(id);
    var container = containersByReactRootID[reactRootID];

    if ("production" !== "development") {
      var rootElement = rootElementsByReactRootID[reactRootID];
      if (rootElement && rootElement.parentNode !== container) {
        ("production" !== "development" ? invariant(
          // Call internalGetID here because getID calls isValid which calls
          // findReactContainerForID (this function).
          internalGetID(rootElement) === reactRootID,
          'ReactMount: Root element ID differed from reactRootID.'
        ) : invariant(// Call internalGetID here because getID calls isValid which calls
        // findReactContainerForID (this function).
        internalGetID(rootElement) === reactRootID));

        var containerChild = container.firstChild;
        if (containerChild &&
            reactRootID === internalGetID(containerChild)) {
          // If the container has a new child with the same ID as the old
          // root element, then rootElementsByReactRootID[reactRootID] is
          // just stale and needs to be updated. The case that deserves a
          // warning is when the container is empty.
          rootElementsByReactRootID[reactRootID] = containerChild;
        } else {
          ("production" !== "development" ? warning(
            false,
            'ReactMount: Root element has been removed from its original ' +
            'container. New container:', rootElement.parentNode
          ) : null);
        }
      }
    }

    return container;
  },

  /**
   * Finds an element rendered by React with the supplied ID.
   *
   * @param {string} id ID of a DOM node in the React component.
   * @return {DOMElement} Root DOM node of the React component.
   */
  findReactNodeByID: function(id) {
    var reactRoot = ReactMount.findReactContainerForID(id);
    return ReactMount.findComponentRoot(reactRoot, id);
  },

  /**
   * True if the supplied `node` is rendered by React.
   *
   * @param {*} node DOM Element to check.
   * @return {boolean} True if the DOM Element appears to be rendered by React.
   * @internal
   */
  isRenderedByReact: function(node) {
    if (node.nodeType !== 1) {
      // Not a DOMElement, therefore not a React component
      return false;
    }
    var id = ReactMount.getID(node);
    return id ? id.charAt(0) === SEPARATOR : false;
  },

  /**
   * Traverses up the ancestors of the supplied node to find a node that is a
   * DOM representation of a React component.
   *
   * @param {*} node
   * @return {?DOMEventTarget}
   * @internal
   */
  getFirstReactDOM: function(node) {
    var current = node;
    while (current && current.parentNode !== current) {
      if (ReactMount.isRenderedByReact(current)) {
        return current;
      }
      current = current.parentNode;
    }
    return null;
  },

  /**
   * Finds a node with the supplied `targetID` inside of the supplied
   * `ancestorNode`.  Exploits the ID naming scheme to perform the search
   * quickly.
   *
   * @param {DOMEventTarget} ancestorNode Search from this root.
   * @pararm {string} targetID ID of the DOM representation of the component.
   * @return {DOMEventTarget} DOM node with the supplied `targetID`.
   * @internal
   */
  findComponentRoot: function(ancestorNode, targetID) {
    var firstChildren = findComponentRootReusableArray;
    var childIndex = 0;

    var deepestAncestor = findDeepestCachedAncestor(targetID) || ancestorNode;

    firstChildren[0] = deepestAncestor.firstChild;
    firstChildren.length = 1;

    while (childIndex < firstChildren.length) {
      var child = firstChildren[childIndex++];
      var targetChild;

      while (child) {
        var childID = ReactMount.getID(child);
        if (childID) {
          // Even if we find the node we're looking for, we finish looping
          // through its siblings to ensure they're cached so that we don't have
          // to revisit this node again. Otherwise, we make n^2 calls to getID
          // when visiting the many children of a single node in order.

          if (targetID === childID) {
            targetChild = child;
          } else if (ReactInstanceHandles.isAncestorIDOf(childID, targetID)) {
            // If we find a child whose ID is an ancestor of the given ID,
            // then we can be sure that we only want to search the subtree
            // rooted at this child, so we can throw out the rest of the
            // search state.
            firstChildren.length = childIndex = 0;
            firstChildren.push(child.firstChild);
          }

        } else {
          // If this child had no ID, then there's a chance that it was
          // injected automatically by the browser, as when a `<table>`
          // element sprouts an extra `<tbody>` child as a side effect of
          // `.innerHTML` parsing. Optimistically continue down this
          // branch, but not before examining the other siblings.
          firstChildren.push(child.firstChild);
        }

        child = child.nextSibling;
      }

      if (targetChild) {
        // Emptying firstChildren/findComponentRootReusableArray is
        // not necessary for correctness, but it helps the GC reclaim
        // any nodes that were left at the end of the search.
        firstChildren.length = 0;

        return targetChild;
      }
    }

    firstChildren.length = 0;

    ("production" !== "development" ? invariant(
      false,
      'findComponentRoot(..., %s): Unable to find element. This probably ' +
      'means the DOM was unexpectedly mutated (e.g., by the browser), ' +
      'usually due to forgetting a <tbody> when using tables, nesting tags ' +
      'like <form>, <p>, or <a>, or using non-SVG elements in an <svg> ' +
      'parent. ' +
      'Try inspecting the child nodes of the element with React ID `%s`.',
      targetID,
      ReactMount.getID(ancestorNode)
    ) : invariant(false));
  },

  _mountImageIntoNode: function(markup, container, shouldReuseMarkup) {
    ("production" !== "development" ? invariant(
      container && (
        (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)
      ),
      'mountComponentIntoNode(...): Target container is not valid.'
    ) : invariant(container && (
      (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)
    )));

    if (shouldReuseMarkup) {
      var rootElement = getReactRootElementInContainer(container);
      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
        return;
      } else {
        var checksum = rootElement.getAttribute(
          ReactMarkupChecksum.CHECKSUM_ATTR_NAME
        );
        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

        var rootMarkup = rootElement.outerHTML;
        rootElement.setAttribute(
          ReactMarkupChecksum.CHECKSUM_ATTR_NAME,
          checksum
        );

        var diffIndex = firstDifferenceIndex(markup, rootMarkup);
        var difference = ' (client) ' +
          markup.substring(diffIndex - 20, diffIndex + 20) +
          '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);

        ("production" !== "development" ? invariant(
          container.nodeType !== DOC_NODE_TYPE,
          'You\'re trying to render a component to the document using ' +
          'server rendering but the checksum was invalid. This usually ' +
          'means you rendered a different component type or props on ' +
          'the client from the one on the server, or your render() ' +
          'methods are impure. React cannot handle this case due to ' +
          'cross-browser quirks by rendering at the document root. You ' +
          'should look for environment dependent code in your components ' +
          'and ensure the props are the same client and server side:\n%s',
          difference
        ) : invariant(container.nodeType !== DOC_NODE_TYPE));

        if ("production" !== "development") {
          ("production" !== "development" ? warning(
            false,
            'React attempted to reuse markup in a container but the ' +
            'checksum was invalid. This generally means that you are ' +
            'using server rendering and the markup generated on the ' +
            'server was not what the client was expecting. React injected ' +
            'new markup to compensate which works but you have lost many ' +
            'of the benefits of server rendering. Instead, figure out ' +
            'why the markup being generated is different on the client ' +
            'or server:\n%s',
            difference
          ) : null);
        }
      }
    }

    ("production" !== "development" ? invariant(
      container.nodeType !== DOC_NODE_TYPE,
      'You\'re trying to render a component to the document but ' +
        'you didn\'t use server rendering. We can\'t do this ' +
        'without using server rendering due to cross-browser quirks. ' +
        'See React.renderToString() for server rendering.'
    ) : invariant(container.nodeType !== DOC_NODE_TYPE));

    setInnerHTML(container, markup);
  },

  /**
   * React ID utilities.
   */

  getReactRootID: getReactRootID,

  getID: getID,

  setID: setID,

  getNode: getNode,

  getNodeFromInstance: getNodeFromInstance,

  purgeID: purgeID
};

ReactPerf.measureMethods(ReactMount, 'ReactMount', {
  _renderNewRootComponent: '_renderNewRootComponent',
  _mountImageIntoNode: '_mountImageIntoNode'
});

module.exports = ReactMount;

},{"10":10,"109":109,"115":115,"129":129,"134":134,"135":135,"148":148,"151":151,"154":154,"30":30,"39":39,"57":57,"58":58,"59":59,"66":66,"67":67,"69":69,"75":75,"81":81,"86":86,"87":87}],71:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactMultiChild
 * @typechecks static-only
 */

'use strict';

var ReactComponentEnvironment = _dereq_(36);
var ReactMultiChildUpdateTypes = _dereq_(72);

var ReactReconciler = _dereq_(81);
var ReactChildReconciler = _dereq_(31);

/**
 * Updating children of a component may trigger recursive updates. The depth is
 * used to batch recursive updates to render markup more efficiently.
 *
 * @type {number}
 * @private
 */
var updateDepth = 0;

/**
 * Queue of update configuration objects.
 *
 * Each object has a `type` property that is in `ReactMultiChildUpdateTypes`.
 *
 * @type {array<object>}
 * @private
 */
var updateQueue = [];

/**
 * Queue of markup to be rendered.
 *
 * @type {array<string>}
 * @private
 */
var markupQueue = [];

/**
 * Enqueues markup to be rendered and inserted at a supplied index.
 *
 * @param {string} parentID ID of the parent component.
 * @param {string} markup Markup that renders into an element.
 * @param {number} toIndex Destination index.
 * @private
 */
function enqueueMarkup(parentID, markup, toIndex) {
  // NOTE: Null values reduce hidden classes.
  updateQueue.push({
    parentID: parentID,
    parentNode: null,
    type: ReactMultiChildUpdateTypes.INSERT_MARKUP,
    markupIndex: markupQueue.push(markup) - 1,
    textContent: null,
    fromIndex: null,
    toIndex: toIndex
  });
}

/**
 * Enqueues moving an existing element to another index.
 *
 * @param {string} parentID ID of the parent component.
 * @param {number} fromIndex Source index of the existing element.
 * @param {number} toIndex Destination index of the element.
 * @private
 */
function enqueueMove(parentID, fromIndex, toIndex) {
  // NOTE: Null values reduce hidden classes.
  updateQueue.push({
    parentID: parentID,
    parentNode: null,
    type: ReactMultiChildUpdateTypes.MOVE_EXISTING,
    markupIndex: null,
    textContent: null,
    fromIndex: fromIndex,
    toIndex: toIndex
  });
}

/**
 * Enqueues removing an element at an index.
 *
 * @param {string} parentID ID of the parent component.
 * @param {number} fromIndex Index of the element to remove.
 * @private
 */
function enqueueRemove(parentID, fromIndex) {
  // NOTE: Null values reduce hidden classes.
  updateQueue.push({
    parentID: parentID,
    parentNode: null,
    type: ReactMultiChildUpdateTypes.REMOVE_NODE,
    markupIndex: null,
    textContent: null,
    fromIndex: fromIndex,
    toIndex: null
  });
}

/**
 * Enqueues setting the text content.
 *
 * @param {string} parentID ID of the parent component.
 * @param {string} textContent Text content to set.
 * @private
 */
function enqueueTextContent(parentID, textContent) {
  // NOTE: Null values reduce hidden classes.
  updateQueue.push({
    parentID: parentID,
    parentNode: null,
    type: ReactMultiChildUpdateTypes.TEXT_CONTENT,
    markupIndex: null,
    textContent: textContent,
    fromIndex: null,
    toIndex: null
  });
}

/**
 * Processes any enqueued updates.
 *
 * @private
 */
function processQueue() {
  if (updateQueue.length) {
    ReactComponentEnvironment.processChildrenUpdates(
      updateQueue,
      markupQueue
    );
    clearQueue();
  }
}

/**
 * Clears any enqueued updates.
 *
 * @private
 */
function clearQueue() {
  updateQueue.length = 0;
  markupQueue.length = 0;
}

/**
 * ReactMultiChild are capable of reconciling multiple children.
 *
 * @class ReactMultiChild
 * @internal
 */
var ReactMultiChild = {

  /**
   * Provides common functionality for components that must reconcile multiple
   * children. This is used by `ReactDOMComponent` to mount, update, and
   * unmount child components.
   *
   * @lends {ReactMultiChild.prototype}
   */
  Mixin: {

    /**
     * Generates a "mount image" for each of the supplied children. In the case
     * of `ReactDOMComponent`, a mount image is a string of markup.
     *
     * @param {?object} nestedChildren Nested child maps.
     * @return {array} An array of mounted representations.
     * @internal
     */
    mountChildren: function(nestedChildren, transaction, context) {
      var children = ReactChildReconciler.instantiateChildren(
        nestedChildren, transaction, context
      );
      this._renderedChildren = children;
      var mountImages = [];
      var index = 0;
      for (var name in children) {
        if (children.hasOwnProperty(name)) {
          var child = children[name];
          // Inlined for performance, see `ReactInstanceHandles.createReactID`.
          var rootID = this._rootNodeID + name;
          var mountImage = ReactReconciler.mountComponent(
            child,
            rootID,
            transaction,
            context
          );
          child._mountIndex = index;
          mountImages.push(mountImage);
          index++;
        }
      }
      return mountImages;
    },

    /**
     * Replaces any rendered children with a text content string.
     *
     * @param {string} nextContent String of content.
     * @internal
     */
    updateTextContent: function(nextContent) {
      updateDepth++;
      var errorThrown = true;
      try {
        var prevChildren = this._renderedChildren;
        // Remove any rendered children.
        ReactChildReconciler.unmountChildren(prevChildren);
        // TODO: The setTextContent operation should be enough
        for (var name in prevChildren) {
          if (prevChildren.hasOwnProperty(name)) {
            this._unmountChildByName(prevChildren[name], name);
          }
        }
        // Set new text content.
        this.setTextContent(nextContent);
        errorThrown = false;
      } finally {
        updateDepth--;
        if (!updateDepth) {
          if (errorThrown) {
            clearQueue();
          } else {
            processQueue();
          }
        }
      }
    },

    /**
     * Updates the rendered children with new children.
     *
     * @param {?object} nextNestedChildren Nested child maps.
     * @param {ReactReconcileTransaction} transaction
     * @internal
     */
    updateChildren: function(nextNestedChildren, transaction, context) {
      updateDepth++;
      var errorThrown = true;
      try {
        this._updateChildren(nextNestedChildren, transaction, context);
        errorThrown = false;
      } finally {
        updateDepth--;
        if (!updateDepth) {
          if (errorThrown) {
            clearQueue();
          } else {
            processQueue();
          }
        }

      }
    },

    /**
     * Improve performance by isolating this hot code path from the try/catch
     * block in `updateChildren`.
     *
     * @param {?object} nextNestedChildren Nested child maps.
     * @param {ReactReconcileTransaction} transaction
     * @final
     * @protected
     */
    _updateChildren: function(nextNestedChildren, transaction, context) {
      var prevChildren = this._renderedChildren;
      var nextChildren = ReactChildReconciler.updateChildren(
        prevChildren, nextNestedChildren, transaction, context
      );
      this._renderedChildren = nextChildren;
      if (!nextChildren && !prevChildren) {
        return;
      }
      var name;
      // `nextIndex` will increment for each child in `nextChildren`, but
      // `lastIndex` will be the last index visited in `prevChildren`.
      var lastIndex = 0;
      var nextIndex = 0;
      for (name in nextChildren) {
        if (!nextChildren.hasOwnProperty(name)) {
          continue;
        }
        var prevChild = prevChildren && prevChildren[name];
        var nextChild = nextChildren[name];
        if (prevChild === nextChild) {
          this.moveChild(prevChild, nextIndex, lastIndex);
          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
          prevChild._mountIndex = nextIndex;
        } else {
          if (prevChild) {
            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
            this._unmountChildByName(prevChild, name);
          }
          // The child must be instantiated before it's mounted.
          this._mountChildByNameAtIndex(
            nextChild, name, nextIndex, transaction, context
          );
        }
        nextIndex++;
      }
      // Remove children that are no longer present.
      for (name in prevChildren) {
        if (prevChildren.hasOwnProperty(name) &&
            !(nextChildren && nextChildren.hasOwnProperty(name))) {
          this._unmountChildByName(prevChildren[name], name);
        }
      }
    },

    /**
     * Unmounts all rendered children. This should be used to clean up children
     * when this component is unmounted.
     *
     * @internal
     */
    unmountChildren: function() {
      var renderedChildren = this._renderedChildren;
      ReactChildReconciler.unmountChildren(renderedChildren);
      this._renderedChildren = null;
    },

    /**
     * Moves a child component to the supplied index.
     *
     * @param {ReactComponent} child Component to move.
     * @param {number} toIndex Destination index of the element.
     * @param {number} lastIndex Last index visited of the siblings of `child`.
     * @protected
     */
    moveChild: function(child, toIndex, lastIndex) {
      // If the index of `child` is less than `lastIndex`, then it needs to
      // be moved. Otherwise, we do not need to move it because a child will be
      // inserted or moved before `child`.
      if (child._mountIndex < lastIndex) {
        enqueueMove(this._rootNodeID, child._mountIndex, toIndex);
      }
    },

    /**
     * Creates a child component.
     *
     * @param {ReactComponent} child Component to create.
     * @param {string} mountImage Markup to insert.
     * @protected
     */
    createChild: function(child, mountImage) {
      enqueueMarkup(this._rootNodeID, mountImage, child._mountIndex);
    },

    /**
     * Removes a child component.
     *
     * @param {ReactComponent} child Child to remove.
     * @protected
     */
    removeChild: function(child) {
      enqueueRemove(this._rootNodeID, child._mountIndex);
    },

    /**
     * Sets this text content string.
     *
     * @param {string} textContent Text content to set.
     * @protected
     */
    setTextContent: function(textContent) {
      enqueueTextContent(this._rootNodeID, textContent);
    },

    /**
     * Mounts a child with the supplied name.
     *
     * NOTE: This is part of `updateChildren` and is here for readability.
     *
     * @param {ReactComponent} child Component to mount.
     * @param {string} name Name of the child.
     * @param {number} index Index at which to insert the child.
     * @param {ReactReconcileTransaction} transaction
     * @private
     */
    _mountChildByNameAtIndex: function(
      child,
      name,
      index,
      transaction,
      context) {
      // Inlined for performance, see `ReactInstanceHandles.createReactID`.
      var rootID = this._rootNodeID + name;
      var mountImage = ReactReconciler.mountComponent(
        child,
        rootID,
        transaction,
        context
      );
      child._mountIndex = index;
      this.createChild(child, mountImage);
    },

    /**
     * Unmounts a rendered child by name.
     *
     * NOTE: This is part of `updateChildren` and is here for readability.
     *
     * @param {ReactComponent} child Component to unmount.
     * @param {string} name Name of the child in `this._renderedChildren`.
     * @private
     */
    _unmountChildByName: function(child, name) {
      this.removeChild(child);
      child._mountIndex = null;
    }

  }

};

module.exports = ReactMultiChild;

},{"31":31,"36":36,"72":72,"81":81}],72:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactMultiChildUpdateTypes
 */

'use strict';

var keyMirror = _dereq_(140);

/**
 * When a component's children are updated, a series of update configuration
 * objects are created in order to batch and serialize the required changes.
 *
 * Enumerates all the possible types of update configurations.
 *
 * @internal
 */
var ReactMultiChildUpdateTypes = keyMirror({
  INSERT_MARKUP: null,
  MOVE_EXISTING: null,
  REMOVE_NODE: null,
  TEXT_CONTENT: null
});

module.exports = ReactMultiChildUpdateTypes;

},{"140":140}],73:[function(_dereq_,module,exports){
/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactNativeComponent
 */

'use strict';

var assign = _dereq_(27);
var invariant = _dereq_(135);

var autoGenerateWrapperClass = null;
var genericComponentClass = null;
// This registry keeps track of wrapper classes around native tags
var tagToComponentClass = {};
var textComponentClass = null;

var ReactNativeComponentInjection = {
  // This accepts a class that receives the tag string. This is a catch all
  // that can render any kind of tag.
  injectGenericComponentClass: function(componentClass) {
    genericComponentClass = componentClass;
  },
  // This accepts a text component class that takes the text string to be
  // rendered as props.
  injectTextComponentClass: function(componentClass) {
    textComponentClass = componentClass;
  },
  // This accepts a keyed object with classes as values. Each key represents a
  // tag. That particular tag will use this class instead of the generic one.
  injectComponentClasses: function(componentClasses) {
    assign(tagToComponentClass, componentClasses);
  },
  // Temporary hack since we expect DOM refs to behave like composites,
  // for this release.
  injectAutoWrapper: function(wrapperFactory) {
    autoGenerateWrapperClass = wrapperFactory;
  }
};

/**
 * Get a composite component wrapper class for a specific tag.
 *
 * @param {ReactElement} element The tag for which to get the class.
 * @return {function} The React class constructor function.
 */
function getComponentClassForElement(element) {
  if (typeof element.type === 'function') {
    return element.type;
  }
  var tag = element.type;
  var componentClass = tagToComponentClass[tag];
  if (componentClass == null) {
    tagToComponentClass[tag] = componentClass = autoGenerateWrapperClass(tag);
  }
  return componentClass;
}

/**
 * Get a native internal component class for a specific tag.
 *
 * @param {ReactElement} element The element to create.
 * @return {function} The internal class constructor function.
 */
function createInternalComponent(element) {
  ("production" !== "development" ? invariant(
    genericComponentClass,
    'There is no registered component for the tag %s',
    element.type
  ) : invariant(genericComponentClass));
  return new genericComponentClass(element.type, element.props);
}

/**
 * @param {ReactText} text
 * @return {ReactComponent}
 */
function createInstanceForText(text) {
  return new textComponentClass(text);
}

/**
 * @param {ReactComponent} component
 * @return {boolean}
 */
function isTextComponent(component) {
  return component instanceof textComponentClass;
}

var ReactNativeComponent = {
  getComponentClassForElement: getComponentClassForElement,
  createInternalComponent: createInternalComponent,
  createInstanceForText: createInstanceForText,
  isTextComponent: isTextComponent,
  injection: ReactNativeComponentInjection
};

module.exports = ReactNativeComponent;

},{"135":135,"27":27}],74:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactOwner
 */

'use strict';

var invariant = _dereq_(135);

/**
 * ReactOwners are capable of storing references to owned components.
 *
 * All components are capable of //being// referenced by owner components, but
 * only ReactOwner components are capable of //referencing// owned components.
 * The named reference is known as a "ref".
 *
 * Refs are available when mounted and updated during reconciliation.
 *
 *   var MyComponent = React.createClass({
 *     render: function() {
 *       return (
 *         <div onClick={this.handleClick}>
 *           <CustomComponent ref="custom" />
 *         </div>
 *       );
 *     },
 *     handleClick: function() {
 *       this.refs.custom.handleClick();
 *     },
 *     componentDidMount: function() {
 *       this.refs.custom.initialize();
 *     }
 *   });
 *
 * Refs should rarely be used. When refs are used, they should only be done to
 * control data that is not handled by React's data flow.
 *
 * @class ReactOwner
 */
var ReactOwner = {

  /**
   * @param {?object} object
   * @return {boolean} True if `object` is a valid owner.
   * @final
   */
  isValidOwner: function(object) {
    return !!(
      (object &&
      typeof object.attachRef === 'function' && typeof object.detachRef === 'function')
    );
  },

  /**
   * Adds a component by ref to an owner component.
   *
   * @param {ReactComponent} component Component to reference.
   * @param {string} ref Name by which to refer to the component.
   * @param {ReactOwner} owner Component on which to record the ref.
   * @final
   * @internal
   */
  addComponentAsRefTo: function(component, ref, owner) {
    ("production" !== "development" ? invariant(
      ReactOwner.isValidOwner(owner),
      'addComponentAsRefTo(...): Only a ReactOwner can have refs. This ' +
      'usually means that you\'re trying to add a ref to a component that ' +
      'doesn\'t have an owner (that is, was not created inside of another ' +
      'component\'s `render` method). Try rendering this component inside of ' +
      'a new top-level component which will hold the ref.'
    ) : invariant(ReactOwner.isValidOwner(owner)));
    owner.attachRef(ref, component);
  },

  /**
   * Removes a component by ref from an owner component.
   *
   * @param {ReactComponent} component Component to dereference.
   * @param {string} ref Name of the ref to remove.
   * @param {ReactOwner} owner Component on which the ref is recorded.
   * @final
   * @internal
   */
  removeComponentAsRefFrom: function(component, ref, owner) {
    ("production" !== "development" ? invariant(
      ReactOwner.isValidOwner(owner),
      'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. This ' +
      'usually means that you\'re trying to remove a ref to a component that ' +
      'doesn\'t have an owner (that is, was not created inside of another ' +
      'component\'s `render` method). Try rendering this component inside of ' +
      'a new top-level component which will hold the ref.'
    ) : invariant(ReactOwner.isValidOwner(owner)));
    // Check that `component` is still the current ref because we do not want to
    // detach the ref if another component stole it.
    if (owner.getPublicInstance().refs[ref] === component.getPublicInstance()) {
      owner.detachRef(ref);
    }
  }

};

module.exports = ReactOwner;

},{"135":135}],75:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactPerf
 * @typechecks static-only
 */

'use strict';

/**
 * ReactPerf is a general AOP system designed to measure performance. This
 * module only has the hooks: see ReactDefaultPerf for the analysis tool.
 */
var ReactPerf = {
  /**
   * Boolean to enable/disable measurement. Set to false by default to prevent
   * accidental logging and perf loss.
   */
  enableMeasure: false,

  /**
   * Holds onto the measure function in use. By default, don't measure
   * anything, but we'll override this if we inject a measure function.
   */
  storedMeasure: _noMeasure,

  /**
   * @param {object} object
   * @param {string} objectName
   * @param {object<string>} methodNames
   */
  measureMethods: function(object, objectName, methodNames) {
    if ("production" !== "development") {
      for (var key in methodNames) {
        if (!methodNames.hasOwnProperty(key)) {
          continue;
        }
        object[key] = ReactPerf.measure(
          objectName,
          methodNames[key],
          object[key]
        );
      }
    }
  },

  /**
   * Use this to wrap methods you want to measure. Zero overhead in production.
   *
   * @param {string} objName
   * @param {string} fnName
   * @param {function} func
   * @return {function}
   */
  measure: function(objName, fnName, func) {
    if ("production" !== "development") {
      var measuredFunc = null;
      var wrapper = function() {
        if (ReactPerf.enableMeasure) {
          if (!measuredFunc) {
            measuredFunc = ReactPerf.storedMeasure(objName, fnName, func);
          }
          return measuredFunc.apply(this, arguments);
        }
        return func.apply(this, arguments);
      };
      wrapper.displayName = objName + '_' + fnName;
      return wrapper;
    }
    return func;
  },

  injection: {
    /**
     * @param {function} measure
     */
    injectMeasure: function(measure) {
      ReactPerf.storedMeasure = measure;
    }
  }
};

/**
 * Simply passes through the measured function, without measuring it.
 *
 * @param {string} objName
 * @param {string} fnName
 * @param {function} func
 * @return {function}
 */
function _noMeasure(objName, fnName, func) {
  return func;
}

module.exports = ReactPerf;

},{}],76:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactPropTypeLocationNames
 */

'use strict';

var ReactPropTypeLocationNames = {};

if ("production" !== "development") {
  ReactPropTypeLocationNames = {
    prop: 'prop',
    context: 'context',
    childContext: 'child context'
  };
}

module.exports = ReactPropTypeLocationNames;

},{}],77:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactPropTypeLocations
 */

'use strict';

var keyMirror = _dereq_(140);

var ReactPropTypeLocations = keyMirror({
  prop: null,
  context: null,
  childContext: null
});

module.exports = ReactPropTypeLocations;

},{"140":140}],78:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactPropTypes
 */

'use strict';

var ReactElement = _dereq_(57);
var ReactFragment = _dereq_(63);
var ReactPropTypeLocationNames = _dereq_(76);

var emptyFunction = _dereq_(114);

/**
 * Collection of methods that allow declaration and validation of props that are
 * supplied to React components. Example usage:
 *
 *   var Props = require('ReactPropTypes');
 *   var MyArticle = React.createClass({
 *     propTypes: {
 *       // An optional string prop named "description".
 *       description: Props.string,
 *
 *       // A required enum prop named "category".
 *       category: Props.oneOf(['News','Photos']).isRequired,
 *
 *       // A prop named "dialog" that requires an instance of Dialog.
 *       dialog: Props.instanceOf(Dialog).isRequired
 *     },
 *     render: function() { ... }
 *   });
 *
 * A more formal specification of how these methods are used:
 *
 *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
 *   decl := ReactPropTypes.{type}(.isRequired)?
 *
 * Each and every declaration produces a function with the same signature. This
 * allows the creation of custom validation functions. For example:
 *
 *  var MyLink = React.createClass({
 *    propTypes: {
 *      // An optional string or URI prop named "href".
 *      href: function(props, propName, componentName) {
 *        var propValue = props[propName];
 *        if (propValue != null && typeof propValue !== 'string' &&
 *            !(propValue instanceof URI)) {
 *          return new Error(
 *            'Expected a string or an URI for ' + propName + ' in ' +
 *            componentName
 *          );
 *        }
 *      }
 *    },
 *    render: function() {...}
 *  });
 *
 * @internal
 */

var ANONYMOUS = '<<anonymous>>';

var elementTypeChecker = createElementTypeChecker();
var nodeTypeChecker = createNodeChecker();

var ReactPropTypes = {
  array: createPrimitiveTypeChecker('array'),
  bool: createPrimitiveTypeChecker('boolean'),
  func: createPrimitiveTypeChecker('function'),
  number: createPrimitiveTypeChecker('number'),
  object: createPrimitiveTypeChecker('object'),
  string: createPrimitiveTypeChecker('string'),

  any: createAnyTypeChecker(),
  arrayOf: createArrayOfTypeChecker,
  element: elementTypeChecker,
  instanceOf: createInstanceTypeChecker,
  node: nodeTypeChecker,
  objectOf: createObjectOfTypeChecker,
  oneOf: createEnumTypeChecker,
  oneOfType: createUnionTypeChecker,
  shape: createShapeTypeChecker
};

function createChainableTypeChecker(validate) {
  function checkType(isRequired, props, propName, componentName, location) {
    componentName = componentName || ANONYMOUS;
    if (props[propName] == null) {
      var locationName = ReactPropTypeLocationNames[location];
      if (isRequired) {
        return new Error(
          ("Required " + locationName + " `" + propName + "` was not specified in ") +
          ("`" + componentName + "`.")
        );
      }
      return null;
    } else {
      return validate(props, propName, componentName, location);
    }
  }

  var chainedCheckType = checkType.bind(null, false);
  chainedCheckType.isRequired = checkType.bind(null, true);

  return chainedCheckType;
}

function createPrimitiveTypeChecker(expectedType) {
  function validate(props, propName, componentName, location) {
    var propValue = props[propName];
    var propType = getPropType(propValue);
    if (propType !== expectedType) {
      var locationName = ReactPropTypeLocationNames[location];
      // `propValue` being instance of, say, date/regexp, pass the 'object'
      // check, but we can offer a more precise error message here rather than
      // 'of type `object`'.
      var preciseType = getPreciseType(propValue);

      return new Error(
        ("Invalid " + locationName + " `" + propName + "` of type `" + preciseType + "` ") +
        ("supplied to `" + componentName + "`, expected `" + expectedType + "`.")
      );
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createAnyTypeChecker() {
  return createChainableTypeChecker(emptyFunction.thatReturns(null));
}

function createArrayOfTypeChecker(typeChecker) {
  function validate(props, propName, componentName, location) {
    var propValue = props[propName];
    if (!Array.isArray(propValue)) {
      var locationName = ReactPropTypeLocationNames[location];
      var propType = getPropType(propValue);
      return new Error(
        ("Invalid " + locationName + " `" + propName + "` of type ") +
        ("`" + propType + "` supplied to `" + componentName + "`, expected an array.")
      );
    }
    for (var i = 0; i < propValue.length; i++) {
      var error = typeChecker(propValue, i, componentName, location);
      if (error instanceof Error) {
        return error;
      }
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createElementTypeChecker() {
  function validate(props, propName, componentName, location) {
    if (!ReactElement.isValidElement(props[propName])) {
      var locationName = ReactPropTypeLocationNames[location];
      return new Error(
        ("Invalid " + locationName + " `" + propName + "` supplied to ") +
        ("`" + componentName + "`, expected a ReactElement.")
      );
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createInstanceTypeChecker(expectedClass) {
  function validate(props, propName, componentName, location) {
    if (!(props[propName] instanceof expectedClass)) {
      var locationName = ReactPropTypeLocationNames[location];
      var expectedClassName = expectedClass.name || ANONYMOUS;
      return new Error(
        ("Invalid " + locationName + " `" + propName + "` supplied to ") +
        ("`" + componentName + "`, expected instance of `" + expectedClassName + "`.")
      );
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createEnumTypeChecker(expectedValues) {
  function validate(props, propName, componentName, location) {
    var propValue = props[propName];
    for (var i = 0; i < expectedValues.length; i++) {
      if (propValue === expectedValues[i]) {
        return null;
      }
    }

    var locationName = ReactPropTypeLocationNames[location];
    var valuesString = JSON.stringify(expectedValues);
    return new Error(
      ("Invalid " + locationName + " `" + propName + "` of value `" + propValue + "` ") +
      ("supplied to `" + componentName + "`, expected one of " + valuesString + ".")
    );
  }
  return createChainableTypeChecker(validate);
}

function createObjectOfTypeChecker(typeChecker) {
  function validate(props, propName, componentName, location) {
    var propValue = props[propName];
    var propType = getPropType(propValue);
    if (propType !== 'object') {
      var locationName = ReactPropTypeLocationNames[location];
      return new Error(
        ("Invalid " + locationName + " `" + propName + "` of type ") +
        ("`" + propType + "` supplied to `" + componentName + "`, expected an object.")
      );
    }
    for (var key in propValue) {
      if (propValue.hasOwnProperty(key)) {
        var error = typeChecker(propValue, key, componentName, location);
        if (error instanceof Error) {
          return error;
        }
      }
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createUnionTypeChecker(arrayOfTypeCheckers) {
  function validate(props, propName, componentName, location) {
    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (checker(props, propName, componentName, location) == null) {
        return null;
      }
    }

    var locationName = ReactPropTypeLocationNames[location];
    return new Error(
      ("Invalid " + locationName + " `" + propName + "` supplied to ") +
      ("`" + componentName + "`.")
    );
  }
  return createChainableTypeChecker(validate);
}

function createNodeChecker() {
  function validate(props, propName, componentName, location) {
    if (!isNode(props[propName])) {
      var locationName = ReactPropTypeLocationNames[location];
      return new Error(
        ("Invalid " + locationName + " `" + propName + "` supplied to ") +
        ("`" + componentName + "`, expected a ReactNode.")
      );
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createShapeTypeChecker(shapeTypes) {
  function validate(props, propName, componentName, location) {
    var propValue = props[propName];
    var propType = getPropType(propValue);
    if (propType !== 'object') {
      var locationName = ReactPropTypeLocationNames[location];
      return new Error(
        ("Invalid " + locationName + " `" + propName + "` of type `" + propType + "` ") +
        ("supplied to `" + componentName + "`, expected `object`.")
      );
    }
    for (var key in shapeTypes) {
      var checker = shapeTypes[key];
      if (!checker) {
        continue;
      }
      var error = checker(propValue, key, componentName, location);
      if (error) {
        return error;
      }
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function isNode(propValue) {
  switch (typeof propValue) {
    case 'number':
    case 'string':
    case 'undefined':
      return true;
    case 'boolean':
      return !propValue;
    case 'object':
      if (Array.isArray(propValue)) {
        return propValue.every(isNode);
      }
      if (propValue === null || ReactElement.isValidElement(propValue)) {
        return true;
      }
      propValue = ReactFragment.extractIfFragment(propValue);
      for (var k in propValue) {
        if (!isNode(propValue[k])) {
          return false;
        }
      }
      return true;
    default:
      return false;
  }
}

// Equivalent of `typeof` but with special handling for array and regexp.
function getPropType(propValue) {
  var propType = typeof propValue;
  if (Array.isArray(propValue)) {
    return 'array';
  }
  if (propValue instanceof RegExp) {
    // Old webkits (at least until Android 4.0) return 'function' rather than
    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
    // passes PropTypes.object.
    return 'object';
  }
  return propType;
}

// This handles more types than `getPropType`. Only used for error messages.
// See `createPrimitiveTypeChecker`.
function getPreciseType(propValue) {
  var propType = getPropType(propValue);
  if (propType === 'object') {
    if (propValue instanceof Date) {
      return 'date';
    } else if (propValue instanceof RegExp) {
      return 'regexp';
    }
  }
  return propType;
}

module.exports = ReactPropTypes;

},{"114":114,"57":57,"63":63,"76":76}],79:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactPutListenerQueue
 */

'use strict';

var PooledClass = _dereq_(28);
var ReactBrowserEventEmitter = _dereq_(30);

var assign = _dereq_(27);

function ReactPutListenerQueue() {
  this.listenersToPut = [];
}

assign(ReactPutListenerQueue.prototype, {
  enqueuePutListener: function(rootNodeID, propKey, propValue) {
    this.listenersToPut.push({
      rootNodeID: rootNodeID,
      propKey: propKey,
      propValue: propValue
    });
  },

  putListeners: function() {
    for (var i = 0; i < this.listenersToPut.length; i++) {
      var listenerToPut = this.listenersToPut[i];
      ReactBrowserEventEmitter.putListener(
        listenerToPut.rootNodeID,
        listenerToPut.propKey,
        listenerToPut.propValue
      );
    }
  },

  reset: function() {
    this.listenersToPut.length = 0;
  },

  destructor: function() {
    this.reset();
  }
});

PooledClass.addPoolingTo(ReactPutListenerQueue);

module.exports = ReactPutListenerQueue;

},{"27":27,"28":28,"30":30}],80:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactReconcileTransaction
 * @typechecks static-only
 */

'use strict';

var CallbackQueue = _dereq_(6);
var PooledClass = _dereq_(28);
var ReactBrowserEventEmitter = _dereq_(30);
var ReactInputSelection = _dereq_(65);
var ReactPutListenerQueue = _dereq_(79);
var Transaction = _dereq_(103);

var assign = _dereq_(27);

/**
 * Ensures that, when possible, the selection range (currently selected text
 * input) is not disturbed by performing the transaction.
 */
var SELECTION_RESTORATION = {
  /**
   * @return {Selection} Selection information.
   */
  initialize: ReactInputSelection.getSelectionInformation,
  /**
   * @param {Selection} sel Selection information returned from `initialize`.
   */
  close: ReactInputSelection.restoreSelection
};

/**
 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
 * high level DOM manipulations (like temporarily removing a text input from the
 * DOM).
 */
var EVENT_SUPPRESSION = {
  /**
   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
   * the reconciliation.
   */
  initialize: function() {
    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
    ReactBrowserEventEmitter.setEnabled(false);
    return currentlyEnabled;
  },

  /**
   * @param {boolean} previouslyEnabled Enabled status of
   *   `ReactBrowserEventEmitter` before the reconciliation occured. `close`
   *   restores the previous value.
   */
  close: function(previouslyEnabled) {
    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
  }
};

/**
 * Provides a queue for collecting `componentDidMount` and
 * `componentDidUpdate` callbacks during the the transaction.
 */
var ON_DOM_READY_QUEUEING = {
  /**
   * Initializes the internal `onDOMReady` queue.
   */
  initialize: function() {
    this.reactMountReady.reset();
  },

  /**
   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
   */
  close: function() {
    this.reactMountReady.notifyAll();
  }
};

var PUT_LISTENER_QUEUEING = {
  initialize: function() {
    this.putListenerQueue.reset();
  },

  close: function() {
    this.putListenerQueue.putListeners();
  }
};

/**
 * Executed within the scope of the `Transaction` instance. Consider these as
 * being member methods, but with an implied ordering while being isolated from
 * each other.
 */
var TRANSACTION_WRAPPERS = [
  PUT_LISTENER_QUEUEING,
  SELECTION_RESTORATION,
  EVENT_SUPPRESSION,
  ON_DOM_READY_QUEUEING
];

/**
 * Currently:
 * - The order that these are listed in the transaction is critical:
 * - Suppresses events.
 * - Restores selection range.
 *
 * Future:
 * - Restore document/overflow scroll positions that were unintentionally
 *   modified via DOM insertions above the top viewport boundary.
 * - Implement/integrate with customized constraint based layout system and keep
 *   track of which dimensions must be remeasured.
 *
 * @class ReactReconcileTransaction
 */
function ReactReconcileTransaction() {
  this.reinitializeTransaction();
  // Only server-side rendering really needs this option (see
  // `ReactServerRendering`), but server-side uses
  // `ReactServerRenderingTransaction` instead. This option is here so that it's
  // accessible and defaults to false when `ReactDOMComponent` and
  // `ReactTextComponent` checks it in `mountComponent`.`
  this.renderToStaticMarkup = false;
  this.reactMountReady = CallbackQueue.getPooled(null);
  this.putListenerQueue = ReactPutListenerQueue.getPooled();
}

var Mixin = {
  /**
   * @see Transaction
   * @abstract
   * @final
   * @return {array<object>} List of operation wrap proceedures.
   *   TODO: convert to array<TransactionWrapper>
   */
  getTransactionWrappers: function() {
    return TRANSACTION_WRAPPERS;
  },

  /**
   * @return {object} The queue to collect `onDOMReady` callbacks with.
   */
  getReactMountReady: function() {
    return this.reactMountReady;
  },

  getPutListenerQueue: function() {
    return this.putListenerQueue;
  },

  /**
   * `PooledClass` looks for this, and will invoke this before allowing this
   * instance to be resused.
   */
  destructor: function() {
    CallbackQueue.release(this.reactMountReady);
    this.reactMountReady = null;

    ReactPutListenerQueue.release(this.putListenerQueue);
    this.putListenerQueue = null;
  }
};


assign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);

PooledClass.addPoolingTo(ReactReconcileTransaction);

module.exports = ReactReconcileTransaction;

},{"103":103,"27":27,"28":28,"30":30,"6":6,"65":65,"79":79}],81:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactReconciler
 */

'use strict';

var ReactRef = _dereq_(82);
var ReactElementValidator = _dereq_(58);

/**
 * Helper to call ReactRef.attachRefs with this composite component, split out
 * to avoid allocations in the transaction mount-ready queue.
 */
function attachRefs() {
  ReactRef.attachRefs(this, this._currentElement);
}

var ReactReconciler = {

  /**
   * Initializes the component, renders markup, and registers event listeners.
   *
   * @param {ReactComponent} internalInstance
   * @param {string} rootID DOM ID of the root node.
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @return {?string} Rendered markup to be inserted into the DOM.
   * @final
   * @internal
   */
  mountComponent: function(internalInstance, rootID, transaction, context) {
    var markup = internalInstance.mountComponent(rootID, transaction, context);
    if ("production" !== "development") {
      ReactElementValidator.checkAndWarnForMutatedProps(
        internalInstance._currentElement
      );
    }
    transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
    return markup;
  },

  /**
   * Releases any resources allocated by `mountComponent`.
   *
   * @final
   * @internal
   */
  unmountComponent: function(internalInstance) {
    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
    internalInstance.unmountComponent();
  },

  /**
   * Update a component using a new element.
   *
   * @param {ReactComponent} internalInstance
   * @param {ReactElement} nextElement
   * @param {ReactReconcileTransaction} transaction
   * @param {object} context
   * @internal
   */
  receiveComponent: function(
    internalInstance, nextElement, transaction, context
  ) {
    var prevElement = internalInstance._currentElement;

    if (nextElement === prevElement && nextElement._owner != null) {
      // Since elements are immutable after the owner is rendered,
      // we can do a cheap identity compare here to determine if this is a
      // superfluous reconcile. It's possible for state to be mutable but such
      // change should trigger an update of the owner which would recreate
      // the element. We explicitly check for the existence of an owner since
      // it's possible for an element created outside a composite to be
      // deeply mutated and reused.
      return;
    }

    if ("production" !== "development") {
      ReactElementValidator.checkAndWarnForMutatedProps(nextElement);
    }

    var refsChanged = ReactRef.shouldUpdateRefs(
      prevElement,
      nextElement
    );

    if (refsChanged) {
      ReactRef.detachRefs(internalInstance, prevElement);
    }

    internalInstance.receiveComponent(nextElement, transaction, context);

    if (refsChanged) {
      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
    }
  },

  /**
   * Flush any dirty changes in a component.
   *
   * @param {ReactComponent} internalInstance
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  performUpdateIfNecessary: function(
    internalInstance,
    transaction
  ) {
    internalInstance.performUpdateIfNecessary(transaction);
  }

};

module.exports = ReactReconciler;

},{"58":58,"82":82}],82:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactRef
 */

'use strict';

var ReactOwner = _dereq_(74);

var ReactRef = {};

function attachRef(ref, component, owner) {
  if (typeof ref === 'function') {
    ref(component.getPublicInstance());
  } else {
    // Legacy ref
    ReactOwner.addComponentAsRefTo(component, ref, owner);
  }
}

function detachRef(ref, component, owner) {
  if (typeof ref === 'function') {
    ref(null);
  } else {
    // Legacy ref
    ReactOwner.removeComponentAsRefFrom(component, ref, owner);
  }
}

ReactRef.attachRefs = function(instance, element) {
  var ref = element.ref;
  if (ref != null) {
    attachRef(ref, instance, element._owner);
  }
};

ReactRef.shouldUpdateRefs = function(prevElement, nextElement) {
  // If either the owner or a `ref` has changed, make sure the newest owner
  // has stored a reference to `this`, and the previous owner (if different)
  // has forgotten the reference to `this`. We use the element instead
  // of the public this.props because the post processing cannot determine
  // a ref. The ref conceptually lives on the element.

  // TODO: Should this even be possible? The owner cannot change because
  // it's forbidden by shouldUpdateReactComponent. The ref can change
  // if you swap the keys of but not the refs. Reconsider where this check
  // is made. It probably belongs where the key checking and
  // instantiateReactComponent is done.

  return (
    nextElement._owner !== prevElement._owner ||
    nextElement.ref !== prevElement.ref
  );
};

ReactRef.detachRefs = function(instance, element) {
  var ref = element.ref;
  if (ref != null) {
    detachRef(ref, instance, element._owner);
  }
};

module.exports = ReactRef;

},{"74":74}],83:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactRootIndex
 * @typechecks
 */

'use strict';

var ReactRootIndexInjection = {
  /**
   * @param {function} _createReactRootIndex
   */
  injectCreateReactRootIndex: function(_createReactRootIndex) {
    ReactRootIndex.createReactRootIndex = _createReactRootIndex;
  }
};

var ReactRootIndex = {
  createReactRootIndex: null,
  injection: ReactRootIndexInjection
};

module.exports = ReactRootIndex;

},{}],84:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks static-only
 * @providesModule ReactServerRendering
 */
'use strict';

var ReactElement = _dereq_(57);
var ReactInstanceHandles = _dereq_(66);
var ReactMarkupChecksum = _dereq_(69);
var ReactServerRenderingTransaction =
  _dereq_(85);

var emptyObject = _dereq_(115);
var instantiateReactComponent = _dereq_(134);
var invariant = _dereq_(135);

/**
 * @param {ReactElement} element
 * @return {string} the HTML markup
 */
function renderToString(element) {
  ("production" !== "development" ? invariant(
    ReactElement.isValidElement(element),
    'renderToString(): You must pass a valid ReactElement.'
  ) : invariant(ReactElement.isValidElement(element)));

  var transaction;
  try {
    var id = ReactInstanceHandles.createReactRootID();
    transaction = ReactServerRenderingTransaction.getPooled(false);

    return transaction.perform(function() {
      var componentInstance = instantiateReactComponent(element, null);
      var markup =
        componentInstance.mountComponent(id, transaction, emptyObject);
      return ReactMarkupChecksum.addChecksumToMarkup(markup);
    }, null);
  } finally {
    ReactServerRenderingTransaction.release(transaction);
  }
}

/**
 * @param {ReactElement} element
 * @return {string} the HTML markup, without the extra React ID and checksum
 * (for generating static pages)
 */
function renderToStaticMarkup(element) {
  ("production" !== "development" ? invariant(
    ReactElement.isValidElement(element),
    'renderToStaticMarkup(): You must pass a valid ReactElement.'
  ) : invariant(ReactElement.isValidElement(element)));

  var transaction;
  try {
    var id = ReactInstanceHandles.createReactRootID();
    transaction = ReactServerRenderingTransaction.getPooled(true);

    return transaction.perform(function() {
      var componentInstance = instantiateReactComponent(element, null);
      return componentInstance.mountComponent(id, transaction, emptyObject);
    }, null);
  } finally {
    ReactServerRenderingTransaction.release(transaction);
  }
}

module.exports = {
  renderToString: renderToString,
  renderToStaticMarkup: renderToStaticMarkup
};

},{"115":115,"134":134,"135":135,"57":57,"66":66,"69":69,"85":85}],85:[function(_dereq_,module,exports){
/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactServerRenderingTransaction
 * @typechecks
 */

'use strict';

var PooledClass = _dereq_(28);
var CallbackQueue = _dereq_(6);
var ReactPutListenerQueue = _dereq_(79);
var Transaction = _dereq_(103);

var assign = _dereq_(27);
var emptyFunction = _dereq_(114);

/**
 * Provides a `CallbackQueue` queue for collecting `onDOMReady` callbacks
 * during the performing of the transaction.
 */
var ON_DOM_READY_QUEUEING = {
  /**
   * Initializes the internal `onDOMReady` queue.
   */
  initialize: function() {
    this.reactMountReady.reset();
  },

  close: emptyFunction
};

var PUT_LISTENER_QUEUEING = {
  initialize: function() {
    this.putListenerQueue.reset();
  },

  close: emptyFunction
};

/**
 * Executed within the scope of the `Transaction` instance. Consider these as
 * being member methods, but with an implied ordering while being isolated from
 * each other.
 */
var TRANSACTION_WRAPPERS = [
  PUT_LISTENER_QUEUEING,
  ON_DOM_READY_QUEUEING
];

/**
 * @class ReactServerRenderingTransaction
 * @param {boolean} renderToStaticMarkup
 */
function ReactServerRenderingTransaction(renderToStaticMarkup) {
  this.reinitializeTransaction();
  this.renderToStaticMarkup = renderToStaticMarkup;
  this.reactMountReady = CallbackQueue.getPooled(null);
  this.putListenerQueue = ReactPutListenerQueue.getPooled();
}

var Mixin = {
  /**
   * @see Transaction
   * @abstract
   * @final
   * @return {array} Empty list of operation wrap proceedures.
   */
  getTransactionWrappers: function() {
    return TRANSACTION_WRAPPERS;
  },

  /**
   * @return {object} The queue to collect `onDOMReady` callbacks with.
   */
  getReactMountReady: function() {
    return this.reactMountReady;
  },

  getPutListenerQueue: function() {
    return this.putListenerQueue;
  },

  /**
   * `PooledClass` looks for this, and will invoke this before allowing this
   * instance to be resused.
   */
  destructor: function() {
    CallbackQueue.release(this.reactMountReady);
    this.reactMountReady = null;

    ReactPutListenerQueue.release(this.putListenerQueue);
    this.putListenerQueue = null;
  }
};


assign(
  ReactServerRenderingTransaction.prototype,
  Transaction.Mixin,
  Mixin
);

PooledClass.addPoolingTo(ReactServerRenderingTransaction);

module.exports = ReactServerRenderingTransaction;

},{"103":103,"114":114,"27":27,"28":28,"6":6,"79":79}],86:[function(_dereq_,module,exports){
/**
 * Copyright 2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactUpdateQueue
 */

'use strict';

var ReactLifeCycle = _dereq_(68);
var ReactCurrentOwner = _dereq_(39);
var ReactElement = _dereq_(57);
var ReactInstanceMap = _dereq_(67);
var ReactUpdates = _dereq_(87);

var assign = _dereq_(27);
var invariant = _dereq_(135);
var warning = _dereq_(154);

function enqueueUpdate(internalInstance) {
  if (internalInstance !== ReactLifeCycle.currentlyMountingInstance) {
    // If we're in a componentWillMount handler, don't enqueue a rerender
    // because ReactUpdates assumes we're in a browser context (which is
    // wrong for server rendering) and we're about to do a render anyway.
    // See bug in #1740.
    ReactUpdates.enqueueUpdate(internalInstance);
  }
}

function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
  ("production" !== "development" ? invariant(
    ReactCurrentOwner.current == null,
    '%s(...): Cannot update during an existing state transition ' +
    '(such as within `render`). Render methods should be a pure function ' +
    'of props and state.',
    callerName
  ) : invariant(ReactCurrentOwner.current == null));

  var internalInstance = ReactInstanceMap.get(publicInstance);
  if (!internalInstance) {
    if ("production" !== "development") {
      // Only warn when we have a callerName. Otherwise we should be silent.
      // We're probably calling from enqueueCallback. We don't want to warn
      // there because we already warned for the corresponding lifecycle method.
      ("production" !== "development" ? warning(
        !callerName,
        '%s(...): Can only update a mounted or mounting component. ' +
        'This usually means you called %s() on an unmounted ' +
        'component. This is a no-op.',
        callerName,
        callerName
      ) : null);
    }
    return null;
  }

  if (internalInstance === ReactLifeCycle.currentlyUnmountingInstance) {
    return null;
  }

  return internalInstance;
}

/**
 * ReactUpdateQueue allows for state updates to be scheduled into a later
 * reconciliation step.
 */
var ReactUpdateQueue = {

  /**
   * Enqueue a callback that will be executed after all the pending updates
   * have processed.
   *
   * @param {ReactClass} publicInstance The instance to use as `this` context.
   * @param {?function} callback Called after state is updated.
   * @internal
   */
  enqueueCallback: function(publicInstance, callback) {
    ("production" !== "development" ? invariant(
      typeof callback === 'function',
      'enqueueCallback(...): You called `setProps`, `replaceProps`, ' +
      '`setState`, `replaceState`, or `forceUpdate` with a callback that ' +
      'isn\'t callable.'
    ) : invariant(typeof callback === 'function'));
    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);

    // Previously we would throw an error if we didn't have an internal
    // instance. Since we want to make it a no-op instead, we mirror the same
    // behavior we have in other enqueue* methods.
    // We also need to ignore callbacks in componentWillMount. See
    // enqueueUpdates.
    if (!internalInstance ||
        internalInstance === ReactLifeCycle.currentlyMountingInstance) {
      return null;
    }

    if (internalInstance._pendingCallbacks) {
      internalInstance._pendingCallbacks.push(callback);
    } else {
      internalInstance._pendingCallbacks = [callback];
    }
    // TODO: The callback here is ignored when setState is called from
    // componentWillMount. Either fix it or disallow doing so completely in
    // favor of getInitialState. Alternatively, we can disallow
    // componentWillMount during server-side rendering.
    enqueueUpdate(internalInstance);
  },

  enqueueCallbackInternal: function(internalInstance, callback) {
    ("production" !== "development" ? invariant(
      typeof callback === 'function',
      'enqueueCallback(...): You called `setProps`, `replaceProps`, ' +
      '`setState`, `replaceState`, or `forceUpdate` with a callback that ' +
      'isn\'t callable.'
    ) : invariant(typeof callback === 'function'));
    if (internalInstance._pendingCallbacks) {
      internalInstance._pendingCallbacks.push(callback);
    } else {
      internalInstance._pendingCallbacks = [callback];
    }
    enqueueUpdate(internalInstance);
  },

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldUpdateComponent`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @internal
   */
  enqueueForceUpdate: function(publicInstance) {
    var internalInstance = getInternalInstanceReadyForUpdate(
      publicInstance,
      'forceUpdate'
    );

    if (!internalInstance) {
      return;
    }

    internalInstance._pendingForceUpdate = true;

    enqueueUpdate(internalInstance);
  },

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @internal
   */
  enqueueReplaceState: function(publicInstance, completeState) {
    var internalInstance = getInternalInstanceReadyForUpdate(
      publicInstance,
      'replaceState'
    );

    if (!internalInstance) {
      return;
    }

    internalInstance._pendingStateQueue = [completeState];
    internalInstance._pendingReplaceState = true;

    enqueueUpdate(internalInstance);
  },

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @internal
   */
  enqueueSetState: function(publicInstance, partialState) {
    var internalInstance = getInternalInstanceReadyForUpdate(
      publicInstance,
      'setState'
    );

    if (!internalInstance) {
      return;
    }

    var queue =
      internalInstance._pendingStateQueue ||
      (internalInstance._pendingStateQueue = []);
    queue.push(partialState);

    enqueueUpdate(internalInstance);
  },

  /**
   * Sets a subset of the props.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialProps Subset of the next props.
   * @internal
   */
  enqueueSetProps: function(publicInstance, partialProps) {
    var internalInstance = getInternalInstanceReadyForUpdate(
      publicInstance,
      'setProps'
    );

    if (!internalInstance) {
      return;
    }

    ("production" !== "development" ? invariant(
      internalInstance._isTopLevel,
      'setProps(...): You called `setProps` on a ' +
      'component with a parent. This is an anti-pattern since props will ' +
      'get reactively updated when rendered. Instead, change the owner\'s ' +
      '`render` method to pass the correct value as props to the component ' +
      'where it is created.'
    ) : invariant(internalInstance._isTopLevel));

    // Merge with the pending element if it exists, otherwise with existing
    // element props.
    var element = internalInstance._pendingElement ||
                  internalInstance._currentElement;
    var props = assign({}, element.props, partialProps);
    internalInstance._pendingElement = ReactElement.cloneAndReplaceProps(
      element,
      props
    );

    enqueueUpdate(internalInstance);
  },

  /**
   * Replaces all of the props.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} props New props.
   * @internal
   */
  enqueueReplaceProps: function(publicInstance, props) {
    var internalInstance = getInternalInstanceReadyForUpdate(
      publicInstance,
      'replaceProps'
    );

    if (!internalInstance) {
      return;
    }

    ("production" !== "development" ? invariant(
      internalInstance._isTopLevel,
      'replaceProps(...): You called `replaceProps` on a ' +
      'component with a parent. This is an anti-pattern since props will ' +
      'get reactively updated when rendered. Instead, change the owner\'s ' +
      '`render` method to pass the correct value as props to the component ' +
      'where it is created.'
    ) : invariant(internalInstance._isTopLevel));

    // Merge with the pending element if it exists, otherwise with existing
    // element props.
    var element = internalInstance._pendingElement ||
                  internalInstance._currentElement;
    internalInstance._pendingElement = ReactElement.cloneAndReplaceProps(
      element,
      props
    );

    enqueueUpdate(internalInstance);
  },

  enqueueElementInternal: function(internalInstance, newElement) {
    internalInstance._pendingElement = newElement;
    enqueueUpdate(internalInstance);
  }

};

module.exports = ReactUpdateQueue;

},{"135":135,"154":154,"27":27,"39":39,"57":57,"67":67,"68":68,"87":87}],87:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactUpdates
 */

'use strict';

var CallbackQueue = _dereq_(6);
var PooledClass = _dereq_(28);
var ReactCurrentOwner = _dereq_(39);
var ReactPerf = _dereq_(75);
var ReactReconciler = _dereq_(81);
var Transaction = _dereq_(103);

var assign = _dereq_(27);
var invariant = _dereq_(135);
var warning = _dereq_(154);

var dirtyComponents = [];
var asapCallbackQueue = CallbackQueue.getPooled();
var asapEnqueued = false;

var batchingStrategy = null;

function ensureInjected() {
  ("production" !== "development" ? invariant(
    ReactUpdates.ReactReconcileTransaction && batchingStrategy,
    'ReactUpdates: must inject a reconcile transaction class and batching ' +
    'strategy'
  ) : invariant(ReactUpdates.ReactReconcileTransaction && batchingStrategy));
}

var NESTED_UPDATES = {
  initialize: function() {
    this.dirtyComponentsLength = dirtyComponents.length;
  },
  close: function() {
    if (this.dirtyComponentsLength !== dirtyComponents.length) {
      // Additional updates were enqueued by componentDidUpdate handlers or
      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
      // these new updates so that if A's componentDidUpdate calls setState on
      // B, B will update before the callback A's updater provided when calling
      // setState.
      dirtyComponents.splice(0, this.dirtyComponentsLength);
      flushBatchedUpdates();
    } else {
      dirtyComponents.length = 0;
    }
  }
};

var UPDATE_QUEUEING = {
  initialize: function() {
    this.callbackQueue.reset();
  },
  close: function() {
    this.callbackQueue.notifyAll();
  }
};

var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];

function ReactUpdatesFlushTransaction() {
  this.reinitializeTransaction();
  this.dirtyComponentsLength = null;
  this.callbackQueue = CallbackQueue.getPooled();
  this.reconcileTransaction =
    ReactUpdates.ReactReconcileTransaction.getPooled();
}

assign(
  ReactUpdatesFlushTransaction.prototype,
  Transaction.Mixin, {
  getTransactionWrappers: function() {
    return TRANSACTION_WRAPPERS;
  },

  destructor: function() {
    this.dirtyComponentsLength = null;
    CallbackQueue.release(this.callbackQueue);
    this.callbackQueue = null;
    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
    this.reconcileTransaction = null;
  },

  perform: function(method, scope, a) {
    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
    // with this transaction's wrappers around it.
    return Transaction.Mixin.perform.call(
      this,
      this.reconcileTransaction.perform,
      this.reconcileTransaction,
      method,
      scope,
      a
    );
  }
});

PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

function batchedUpdates(callback, a, b, c, d) {
  ensureInjected();
  batchingStrategy.batchedUpdates(callback, a, b, c, d);
}

/**
 * Array comparator for ReactComponents by mount ordering.
 *
 * @param {ReactComponent} c1 first component you're comparing
 * @param {ReactComponent} c2 second component you're comparing
 * @return {number} Return value usable by Array.prototype.sort().
 */
function mountOrderComparator(c1, c2) {
  return c1._mountOrder - c2._mountOrder;
}

function runBatchedUpdates(transaction) {
  var len = transaction.dirtyComponentsLength;
  ("production" !== "development" ? invariant(
    len === dirtyComponents.length,
    'Expected flush transaction\'s stored dirty-components length (%s) to ' +
    'match dirty-components array length (%s).',
    len,
    dirtyComponents.length
  ) : invariant(len === dirtyComponents.length));

  // Since reconciling a component higher in the owner hierarchy usually (not
  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
  // them before their children by sorting the array.
  dirtyComponents.sort(mountOrderComparator);

  for (var i = 0; i < len; i++) {
    // If a component is unmounted before pending changes apply, it will still
    // be here, but we assume that it has cleared its _pendingCallbacks and
    // that performUpdateIfNecessary is a noop.
    var component = dirtyComponents[i];

    // If performUpdateIfNecessary happens to enqueue any new updates, we
    // shouldn't execute the callbacks until the next render happens, so
    // stash the callbacks first
    var callbacks = component._pendingCallbacks;
    component._pendingCallbacks = null;

    ReactReconciler.performUpdateIfNecessary(
      component,
      transaction.reconcileTransaction
    );

    if (callbacks) {
      for (var j = 0; j < callbacks.length; j++) {
        transaction.callbackQueue.enqueue(
          callbacks[j],
          component.getPublicInstance()
        );
      }
    }
  }
}

var flushBatchedUpdates = function() {
  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
  // array and perform any updates enqueued by mount-ready handlers (i.e.,
  // componentDidUpdate) but we need to check here too in order to catch
  // updates enqueued by setState callbacks and asap calls.
  while (dirtyComponents.length || asapEnqueued) {
    if (dirtyComponents.length) {
      var transaction = ReactUpdatesFlushTransaction.getPooled();
      transaction.perform(runBatchedUpdates, null, transaction);
      ReactUpdatesFlushTransaction.release(transaction);
    }

    if (asapEnqueued) {
      asapEnqueued = false;
      var queue = asapCallbackQueue;
      asapCallbackQueue = CallbackQueue.getPooled();
      queue.notifyAll();
      CallbackQueue.release(queue);
    }
  }
};
flushBatchedUpdates = ReactPerf.measure(
  'ReactUpdates',
  'flushBatchedUpdates',
  flushBatchedUpdates
);

/**
 * Mark a component as needing a rerender, adding an optional callback to a
 * list of functions which will be executed once the rerender occurs.
 */
function enqueueUpdate(component) {
  ensureInjected();

  // Various parts of our code (such as ReactCompositeComponent's
  // _renderValidatedComponent) assume that calls to render aren't nested;
  // verify that that's the case. (This is called by each top-level update
  // function, like setProps, setState, forceUpdate, etc.; creation and
  // destruction of top-level components is guarded in ReactMount.)
  ("production" !== "development" ? warning(
    ReactCurrentOwner.current == null,
    'enqueueUpdate(): Render methods should be a pure function of props ' +
    'and state; triggering nested component updates from render is not ' +
    'allowed. If necessary, trigger nested updates in ' +
    'componentDidUpdate.'
  ) : null);

  if (!batchingStrategy.isBatchingUpdates) {
    batchingStrategy.batchedUpdates(enqueueUpdate, component);
    return;
  }

  dirtyComponents.push(component);
}

/**
 * Enqueue a callback to be run at the end of the current batching cycle. Throws
 * if no updates are currently being performed.
 */
function asap(callback, context) {
  ("production" !== "development" ? invariant(
    batchingStrategy.isBatchingUpdates,
    'ReactUpdates.asap: Can\'t enqueue an asap callback in a context where' +
    'updates are not being batched.'
  ) : invariant(batchingStrategy.isBatchingUpdates));
  asapCallbackQueue.enqueue(callback, context);
  asapEnqueued = true;
}

var ReactUpdatesInjection = {
  injectReconcileTransaction: function(ReconcileTransaction) {
    ("production" !== "development" ? invariant(
      ReconcileTransaction,
      'ReactUpdates: must provide a reconcile transaction class'
    ) : invariant(ReconcileTransaction));
    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
  },

  injectBatchingStrategy: function(_batchingStrategy) {
    ("production" !== "development" ? invariant(
      _batchingStrategy,
      'ReactUpdates: must provide a batching strategy'
    ) : invariant(_batchingStrategy));
    ("production" !== "development" ? invariant(
      typeof _batchingStrategy.batchedUpdates === 'function',
      'ReactUpdates: must provide a batchedUpdates() function'
    ) : invariant(typeof _batchingStrategy.batchedUpdates === 'function'));
    ("production" !== "development" ? invariant(
      typeof _batchingStrategy.isBatchingUpdates === 'boolean',
      'ReactUpdates: must provide an isBatchingUpdates boolean attribute'
    ) : invariant(typeof _batchingStrategy.isBatchingUpdates === 'boolean'));
    batchingStrategy = _batchingStrategy;
  }
};

var ReactUpdates = {
  /**
   * React references `ReactReconcileTransaction` using this property in order
   * to allow dependency injection.
   *
   * @internal
   */
  ReactReconcileTransaction: null,

  batchedUpdates: batchedUpdates,
  enqueueUpdate: enqueueUpdate,
  flushBatchedUpdates: flushBatchedUpdates,
  injection: ReactUpdatesInjection,
  asap: asap
};

module.exports = ReactUpdates;

},{"103":103,"135":135,"154":154,"27":27,"28":28,"39":39,"6":6,"75":75,"81":81}],88:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SVGDOMPropertyConfig
 */

/*jslint bitwise: true*/

'use strict';

var DOMProperty = _dereq_(10);

var MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;

var SVGDOMPropertyConfig = {
  Properties: {
    clipPath: MUST_USE_ATTRIBUTE,
    cx: MUST_USE_ATTRIBUTE,
    cy: MUST_USE_ATTRIBUTE,
    d: MUST_USE_ATTRIBUTE,
    dx: MUST_USE_ATTRIBUTE,
    dy: MUST_USE_ATTRIBUTE,
    fill: MUST_USE_ATTRIBUTE,
    fillOpacity: MUST_USE_ATTRIBUTE,
    fontFamily: MUST_USE_ATTRIBUTE,
    fontSize: MUST_USE_ATTRIBUTE,
    fx: MUST_USE_ATTRIBUTE,
    fy: MUST_USE_ATTRIBUTE,
    gradientTransform: MUST_USE_ATTRIBUTE,
    gradientUnits: MUST_USE_ATTRIBUTE,
    markerEnd: MUST_USE_ATTRIBUTE,
    markerMid: MUST_USE_ATTRIBUTE,
    markerStart: MUST_USE_ATTRIBUTE,
    offset: MUST_USE_ATTRIBUTE,
    opacity: MUST_USE_ATTRIBUTE,
    patternContentUnits: MUST_USE_ATTRIBUTE,
    patternUnits: MUST_USE_ATTRIBUTE,
    points: MUST_USE_ATTRIBUTE,
    preserveAspectRatio: MUST_USE_ATTRIBUTE,
    r: MUST_USE_ATTRIBUTE,
    rx: MUST_USE_ATTRIBUTE,
    ry: MUST_USE_ATTRIBUTE,
    spreadMethod: MUST_USE_ATTRIBUTE,
    stopColor: MUST_USE_ATTRIBUTE,
    stopOpacity: MUST_USE_ATTRIBUTE,
    stroke: MUST_USE_ATTRIBUTE,
    strokeDasharray: MUST_USE_ATTRIBUTE,
    strokeLinecap: MUST_USE_ATTRIBUTE,
    strokeOpacity: MUST_USE_ATTRIBUTE,
    strokeWidth: MUST_USE_ATTRIBUTE,
    textAnchor: MUST_USE_ATTRIBUTE,
    transform: MUST_USE_ATTRIBUTE,
    version: MUST_USE_ATTRIBUTE,
    viewBox: MUST_USE_ATTRIBUTE,
    x1: MUST_USE_ATTRIBUTE,
    x2: MUST_USE_ATTRIBUTE,
    x: MUST_USE_ATTRIBUTE,
    y1: MUST_USE_ATTRIBUTE,
    y2: MUST_USE_ATTRIBUTE,
    y: MUST_USE_ATTRIBUTE
  },
  DOMAttributeNames: {
    clipPath: 'clip-path',
    fillOpacity: 'fill-opacity',
    fontFamily: 'font-family',
    fontSize: 'font-size',
    gradientTransform: 'gradientTransform',
    gradientUnits: 'gradientUnits',
    markerEnd: 'marker-end',
    markerMid: 'marker-mid',
    markerStart: 'marker-start',
    patternContentUnits: 'patternContentUnits',
    patternUnits: 'patternUnits',
    preserveAspectRatio: 'preserveAspectRatio',
    spreadMethod: 'spreadMethod',
    stopColor: 'stop-color',
    stopOpacity: 'stop-opacity',
    strokeDasharray: 'stroke-dasharray',
    strokeLinecap: 'stroke-linecap',
    strokeOpacity: 'stroke-opacity',
    strokeWidth: 'stroke-width',
    textAnchor: 'text-anchor',
    viewBox: 'viewBox'
  }
};

module.exports = SVGDOMPropertyConfig;

},{"10":10}],89:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SelectEventPlugin
 */

'use strict';

var EventConstants = _dereq_(15);
var EventPropagators = _dereq_(20);
var ReactInputSelection = _dereq_(65);
var SyntheticEvent = _dereq_(95);

var getActiveElement = _dereq_(121);
var isTextInputElement = _dereq_(138);
var keyOf = _dereq_(141);
var shallowEqual = _dereq_(150);

var topLevelTypes = EventConstants.topLevelTypes;

var eventTypes = {
  select: {
    phasedRegistrationNames: {
      bubbled: keyOf({onSelect: null}),
      captured: keyOf({onSelectCapture: null})
    },
    dependencies: [
      topLevelTypes.topBlur,
      topLevelTypes.topContextMenu,
      topLevelTypes.topFocus,
      topLevelTypes.topKeyDown,
      topLevelTypes.topMouseDown,
      topLevelTypes.topMouseUp,
      topLevelTypes.topSelectionChange
    ]
  }
};

var activeElement = null;
var activeElementID = null;
var lastSelection = null;
var mouseDown = false;

/**
 * Get an object which is a unique representation of the current selection.
 *
 * The return value will not be consistent across nodes or browsers, but
 * two identical selections on the same node will return identical objects.
 *
 * @param {DOMElement} node
 * @param {object}
 */
function getSelection(node) {
  if ('selectionStart' in node &&
      ReactInputSelection.hasSelectionCapabilities(node)) {
    return {
      start: node.selectionStart,
      end: node.selectionEnd
    };
  } else if (window.getSelection) {
    var selection = window.getSelection();
    return {
      anchorNode: selection.anchorNode,
      anchorOffset: selection.anchorOffset,
      focusNode: selection.focusNode,
      focusOffset: selection.focusOffset
    };
  } else if (document.selection) {
    var range = document.selection.createRange();
    return {
      parentElement: range.parentElement(),
      text: range.text,
      top: range.boundingTop,
      left: range.boundingLeft
    };
  }
}

/**
 * Poll selection to see whether it's changed.
 *
 * @param {object} nativeEvent
 * @return {?SyntheticEvent}
 */
function constructSelectEvent(nativeEvent) {
  // Ensure we have the right element, and that the user is not dragging a
  // selection (this matches native `select` event behavior). In HTML5, select
  // fires only on input and textarea thus if there's no focused element we
  // won't dispatch.
  if (mouseDown ||
      activeElement == null ||
      activeElement !== getActiveElement()) {
    return null;
  }

  // Only fire when selection has actually changed.
  var currentSelection = getSelection(activeElement);
  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
    lastSelection = currentSelection;

    var syntheticEvent = SyntheticEvent.getPooled(
      eventTypes.select,
      activeElementID,
      nativeEvent
    );

    syntheticEvent.type = 'select';
    syntheticEvent.target = activeElement;

    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);

    return syntheticEvent;
  }
}

/**
 * This plugin creates an `onSelect` event that normalizes select events
 * across form elements.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - contentEditable
 *
 * This differs from native browser implementations in the following ways:
 * - Fires on contentEditable fields as well as inputs.
 * - Fires for collapsed selection.
 * - Fires after user input.
 */
var SelectEventPlugin = {

  eventTypes: eventTypes,

  /**
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {DOMEventTarget} topLevelTarget The listening component root node.
   * @param {string} topLevelTargetID ID of `topLevelTarget`.
   * @param {object} nativeEvent Native browser event.
   * @return {*} An accumulation of synthetic events.
   * @see {EventPluginHub.extractEvents}
   */
  extractEvents: function(
      topLevelType,
      topLevelTarget,
      topLevelTargetID,
      nativeEvent) {

    switch (topLevelType) {
      // Track the input node that has focus.
      case topLevelTypes.topFocus:
        if (isTextInputElement(topLevelTarget) ||
            topLevelTarget.contentEditable === 'true') {
          activeElement = topLevelTarget;
          activeElementID = topLevelTargetID;
          lastSelection = null;
        }
        break;
      case topLevelTypes.topBlur:
        activeElement = null;
        activeElementID = null;
        lastSelection = null;
        break;

      // Don't fire the event while the user is dragging. This matches the
      // semantics of the native select event.
      case topLevelTypes.topMouseDown:
        mouseDown = true;
        break;
      case topLevelTypes.topContextMenu:
      case topLevelTypes.topMouseUp:
        mouseDown = false;
        return constructSelectEvent(nativeEvent);

      // Chrome and IE fire non-standard event when selection is changed (and
      // sometimes when it hasn't).
      // Firefox doesn't support selectionchange, so check selection status
      // after each key entry. The selection changes after keydown and before
      // keyup, but we check on keydown as well in the case of holding down a
      // key, when multiple keydown events are fired but only one keyup is.
      case topLevelTypes.topSelectionChange:
      case topLevelTypes.topKeyDown:
      case topLevelTypes.topKeyUp:
        return constructSelectEvent(nativeEvent);
    }
  }
};

module.exports = SelectEventPlugin;

},{"121":121,"138":138,"141":141,"15":15,"150":150,"20":20,"65":65,"95":95}],90:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ServerReactRootIndex
 * @typechecks
 */

'use strict';

/**
 * Size of the reactRoot ID space. We generate random numbers for React root
 * IDs and if there's a collision the events and DOM update system will
 * get confused. In the future we need a way to generate GUIDs but for
 * now this will work on a smaller scale.
 */
var GLOBAL_MOUNT_POINT_MAX = Math.pow(2, 53);

var ServerReactRootIndex = {
  createReactRootIndex: function() {
    return Math.ceil(Math.random() * GLOBAL_MOUNT_POINT_MAX);
  }
};

module.exports = ServerReactRootIndex;

},{}],91:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SimpleEventPlugin
 */

'use strict';

var EventConstants = _dereq_(15);
var EventPluginUtils = _dereq_(19);
var EventPropagators = _dereq_(20);
var SyntheticClipboardEvent = _dereq_(92);
var SyntheticEvent = _dereq_(95);
var SyntheticFocusEvent = _dereq_(96);
var SyntheticKeyboardEvent = _dereq_(98);
var SyntheticMouseEvent = _dereq_(99);
var SyntheticDragEvent = _dereq_(94);
var SyntheticTouchEvent = _dereq_(100);
var SyntheticUIEvent = _dereq_(101);
var SyntheticWheelEvent = _dereq_(102);

var getEventCharCode = _dereq_(122);

var invariant = _dereq_(135);
var keyOf = _dereq_(141);
var warning = _dereq_(154);

var topLevelTypes = EventConstants.topLevelTypes;

var eventTypes = {
  blur: {
    phasedRegistrationNames: {
      bubbled: keyOf({onBlur: true}),
      captured: keyOf({onBlurCapture: true})
    }
  },
  click: {
    phasedRegistrationNames: {
      bubbled: keyOf({onClick: true}),
      captured: keyOf({onClickCapture: true})
    }
  },
  contextMenu: {
    phasedRegistrationNames: {
      bubbled: keyOf({onContextMenu: true}),
      captured: keyOf({onContextMenuCapture: true})
    }
  },
  copy: {
    phasedRegistrationNames: {
      bubbled: keyOf({onCopy: true}),
      captured: keyOf({onCopyCapture: true})
    }
  },
  cut: {
    phasedRegistrationNames: {
      bubbled: keyOf({onCut: true}),
      captured: keyOf({onCutCapture: true})
    }
  },
  doubleClick: {
    phasedRegistrationNames: {
      bubbled: keyOf({onDoubleClick: true}),
      captured: keyOf({onDoubleClickCapture: true})
    }
  },
  drag: {
    phasedRegistrationNames: {
      bubbled: keyOf({onDrag: true}),
      captured: keyOf({onDragCapture: true})
    }
  },
  dragEnd: {
    phasedRegistrationNames: {
      bubbled: keyOf({onDragEnd: true}),
      captured: keyOf({onDragEndCapture: true})
    }
  },
  dragEnter: {
    phasedRegistrationNames: {
      bubbled: keyOf({onDragEnter: true}),
      captured: keyOf({onDragEnterCapture: true})
    }
  },
  dragExit: {
    phasedRegistrationNames: {
      bubbled: keyOf({onDragExit: true}),
      captured: keyOf({onDragExitCapture: true})
    }
  },
  dragLeave: {
    phasedRegistrationNames: {
      bubbled: keyOf({onDragLeave: true}),
      captured: keyOf({onDragLeaveCapture: true})
    }
  },
  dragOver: {
    phasedRegistrationNames: {
      bubbled: keyOf({onDragOver: true}),
      captured: keyOf({onDragOverCapture: true})
    }
  },
  dragStart: {
    phasedRegistrationNames: {
      bubbled: keyOf({onDragStart: true}),
      captured: keyOf({onDragStartCapture: true})
    }
  },
  drop: {
    phasedRegistrationNames: {
      bubbled: keyOf({onDrop: true}),
      captured: keyOf({onDropCapture: true})
    }
  },
  focus: {
    phasedRegistrationNames: {
      bubbled: keyOf({onFocus: true}),
      captured: keyOf({onFocusCapture: true})
    }
  },
  input: {
    phasedRegistrationNames: {
      bubbled: keyOf({onInput: true}),
      captured: keyOf({onInputCapture: true})
    }
  },
  keyDown: {
    phasedRegistrationNames: {
      bubbled: keyOf({onKeyDown: true}),
      captured: keyOf({onKeyDownCapture: true})
    }
  },
  keyPress: {
    phasedRegistrationNames: {
      bubbled: keyOf({onKeyPress: true}),
      captured: keyOf({onKeyPressCapture: true})
    }
  },
  keyUp: {
    phasedRegistrationNames: {
      bubbled: keyOf({onKeyUp: true}),
      captured: keyOf({onKeyUpCapture: true})
    }
  },
  load: {
    phasedRegistrationNames: {
      bubbled: keyOf({onLoad: true}),
      captured: keyOf({onLoadCapture: true})
    }
  },
  error: {
    phasedRegistrationNames: {
      bubbled: keyOf({onError: true}),
      captured: keyOf({onErrorCapture: true})
    }
  },
  // Note: We do not allow listening to mouseOver events. Instead, use the
  // onMouseEnter/onMouseLeave created by `EnterLeaveEventPlugin`.
  mouseDown: {
    phasedRegistrationNames: {
      bubbled: keyOf({onMouseDown: true}),
      captured: keyOf({onMouseDownCapture: true})
    }
  },
  mouseMove: {
    phasedRegistrationNames: {
      bubbled: keyOf({onMouseMove: true}),
      captured: keyOf({onMouseMoveCapture: true})
    }
  },
  mouseOut: {
    phasedRegistrationNames: {
      bubbled: keyOf({onMouseOut: true}),
      captured: keyOf({onMouseOutCapture: true})
    }
  },
  mouseOver: {
    phasedRegistrationNames: {
      bubbled: keyOf({onMouseOver: true}),
      captured: keyOf({onMouseOverCapture: true})
    }
  },
  mouseUp: {
    phasedRegistrationNames: {
      bubbled: keyOf({onMouseUp: true}),
      captured: keyOf({onMouseUpCapture: true})
    }
  },
  paste: {
    phasedRegistrationNames: {
      bubbled: keyOf({onPaste: true}),
      captured: keyOf({onPasteCapture: true})
    }
  },
  reset: {
    phasedRegistrationNames: {
      bubbled: keyOf({onReset: true}),
      captured: keyOf({onResetCapture: true})
    }
  },
  scroll: {
    phasedRegistrationNames: {
      bubbled: keyOf({onScroll: true}),
      captured: keyOf({onScrollCapture: true})
    }
  },
  submit: {
    phasedRegistrationNames: {
      bubbled: keyOf({onSubmit: true}),
      captured: keyOf({onSubmitCapture: true})
    }
  },
  touchCancel: {
    phasedRegistrationNames: {
      bubbled: keyOf({onTouchCancel: true}),
      captured: keyOf({onTouchCancelCapture: true})
    }
  },
  touchEnd: {
    phasedRegistrationNames: {
      bubbled: keyOf({onTouchEnd: true}),
      captured: keyOf({onTouchEndCapture: true})
    }
  },
  touchMove: {
    phasedRegistrationNames: {
      bubbled: keyOf({onTouchMove: true}),
      captured: keyOf({onTouchMoveCapture: true})
    }
  },
  touchStart: {
    phasedRegistrationNames: {
      bubbled: keyOf({onTouchStart: true}),
      captured: keyOf({onTouchStartCapture: true})
    }
  },
  wheel: {
    phasedRegistrationNames: {
      bubbled: keyOf({onWheel: true}),
      captured: keyOf({onWheelCapture: true})
    }
  }
};

var topLevelEventsToDispatchConfig = {
  topBlur:        eventTypes.blur,
  topClick:       eventTypes.click,
  topContextMenu: eventTypes.contextMenu,
  topCopy:        eventTypes.copy,
  topCut:         eventTypes.cut,
  topDoubleClick: eventTypes.doubleClick,
  topDrag:        eventTypes.drag,
  topDragEnd:     eventTypes.dragEnd,
  topDragEnter:   eventTypes.dragEnter,
  topDragExit:    eventTypes.dragExit,
  topDragLeave:   eventTypes.dragLeave,
  topDragOver:    eventTypes.dragOver,
  topDragStart:   eventTypes.dragStart,
  topDrop:        eventTypes.drop,
  topError:       eventTypes.error,
  topFocus:       eventTypes.focus,
  topInput:       eventTypes.input,
  topKeyDown:     eventTypes.keyDown,
  topKeyPress:    eventTypes.keyPress,
  topKeyUp:       eventTypes.keyUp,
  topLoad:        eventTypes.load,
  topMouseDown:   eventTypes.mouseDown,
  topMouseMove:   eventTypes.mouseMove,
  topMouseOut:    eventTypes.mouseOut,
  topMouseOver:   eventTypes.mouseOver,
  topMouseUp:     eventTypes.mouseUp,
  topPaste:       eventTypes.paste,
  topReset:       eventTypes.reset,
  topScroll:      eventTypes.scroll,
  topSubmit:      eventTypes.submit,
  topTouchCancel: eventTypes.touchCancel,
  topTouchEnd:    eventTypes.touchEnd,
  topTouchMove:   eventTypes.touchMove,
  topTouchStart:  eventTypes.touchStart,
  topWheel:       eventTypes.wheel
};

for (var type in topLevelEventsToDispatchConfig) {
  topLevelEventsToDispatchConfig[type].dependencies = [type];
}

var SimpleEventPlugin = {

  eventTypes: eventTypes,

  /**
   * Same as the default implementation, except cancels the event when return
   * value is false. This behavior will be disabled in a future release.
   *
   * @param {object} Event to be dispatched.
   * @param {function} Application-level callback.
   * @param {string} domID DOM ID to pass to the callback.
   */
  executeDispatch: function(event, listener, domID) {
    var returnValue = EventPluginUtils.executeDispatch(event, listener, domID);

    ("production" !== "development" ? warning(
      typeof returnValue !== 'boolean',
      'Returning `false` from an event handler is deprecated and will be ' +
      'ignored in a future release. Instead, manually call ' +
      'e.stopPropagation() or e.preventDefault(), as appropriate.'
    ) : null);

    if (returnValue === false) {
      event.stopPropagation();
      event.preventDefault();
    }
  },

  /**
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {DOMEventTarget} topLevelTarget The listening component root node.
   * @param {string} topLevelTargetID ID of `topLevelTarget`.
   * @param {object} nativeEvent Native browser event.
   * @return {*} An accumulation of synthetic events.
   * @see {EventPluginHub.extractEvents}
   */
  extractEvents: function(
      topLevelType,
      topLevelTarget,
      topLevelTargetID,
      nativeEvent) {
    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
    if (!dispatchConfig) {
      return null;
    }
    var EventConstructor;
    switch (topLevelType) {
      case topLevelTypes.topInput:
      case topLevelTypes.topLoad:
      case topLevelTypes.topError:
      case topLevelTypes.topReset:
      case topLevelTypes.topSubmit:
        // HTML Events
        // @see http://www.w3.org/TR/html5/index.html#events-0
        EventConstructor = SyntheticEvent;
        break;
      case topLevelTypes.topKeyPress:
        // FireFox creates a keypress event for function keys too. This removes
        // the unwanted keypress events. Enter is however both printable and
        // non-printable. One would expect Tab to be as well (but it isn't).
        if (getEventCharCode(nativeEvent) === 0) {
          return null;
        }
        /* falls through */
      case topLevelTypes.topKeyDown:
      case topLevelTypes.topKeyUp:
        EventConstructor = SyntheticKeyboardEvent;
        break;
      case topLevelTypes.topBlur:
      case topLevelTypes.topFocus:
        EventConstructor = SyntheticFocusEvent;
        break;
      case topLevelTypes.topClick:
        // Firefox creates a click event on right mouse clicks. This removes the
        // unwanted click events.
        if (nativeEvent.button === 2) {
          return null;
        }
        /* falls through */
      case topLevelTypes.topContextMenu:
      case topLevelTypes.topDoubleClick:
      case topLevelTypes.topMouseDown:
      case topLevelTypes.topMouseMove:
      case topLevelTypes.topMouseOut:
      case topLevelTypes.topMouseOver:
      case topLevelTypes.topMouseUp:
        EventConstructor = SyntheticMouseEvent;
        break;
      case topLevelTypes.topDrag:
      case topLevelTypes.topDragEnd:
      case topLevelTypes.topDragEnter:
      case topLevelTypes.topDragExit:
      case topLevelTypes.topDragLeave:
      case topLevelTypes.topDragOver:
      case topLevelTypes.topDragStart:
      case topLevelTypes.topDrop:
        EventConstructor = SyntheticDragEvent;
        break;
      case topLevelTypes.topTouchCancel:
      case topLevelTypes.topTouchEnd:
      case topLevelTypes.topTouchMove:
      case topLevelTypes.topTouchStart:
        EventConstructor = SyntheticTouchEvent;
        break;
      case topLevelTypes.topScroll:
        EventConstructor = SyntheticUIEvent;
        break;
      case topLevelTypes.topWheel:
        EventConstructor = SyntheticWheelEvent;
        break;
      case topLevelTypes.topCopy:
      case topLevelTypes.topCut:
      case topLevelTypes.topPaste:
        EventConstructor = SyntheticClipboardEvent;
        break;
    }
    ("production" !== "development" ? invariant(
      EventConstructor,
      'SimpleEventPlugin: Unhandled event type, `%s`.',
      topLevelType
    ) : invariant(EventConstructor));
    var event = EventConstructor.getPooled(
      dispatchConfig,
      topLevelTargetID,
      nativeEvent
    );
    EventPropagators.accumulateTwoPhaseDispatches(event);
    return event;
  }

};

module.exports = SimpleEventPlugin;

},{"100":100,"101":101,"102":102,"122":122,"135":135,"141":141,"15":15,"154":154,"19":19,"20":20,"92":92,"94":94,"95":95,"96":96,"98":98,"99":99}],92:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticClipboardEvent
 * @typechecks static-only
 */

'use strict';

var SyntheticEvent = _dereq_(95);

/**
 * @interface Event
 * @see http://www.w3.org/TR/clipboard-apis/
 */
var ClipboardEventInterface = {
  clipboardData: function(event) {
    return (
      'clipboardData' in event ?
        event.clipboardData :
        window.clipboardData
    );
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);

module.exports = SyntheticClipboardEvent;

},{"95":95}],93:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticCompositionEvent
 * @typechecks static-only
 */

'use strict';

var SyntheticEvent = _dereq_(95);

/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
 */
var CompositionEventInterface = {
  data: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticCompositionEvent(
  dispatchConfig,
  dispatchMarker,
  nativeEvent) {
  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticEvent.augmentClass(
  SyntheticCompositionEvent,
  CompositionEventInterface
);

module.exports = SyntheticCompositionEvent;

},{"95":95}],94:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticDragEvent
 * @typechecks static-only
 */

'use strict';

var SyntheticMouseEvent = _dereq_(99);

/**
 * @interface DragEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var DragEventInterface = {
  dataTransfer: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);

module.exports = SyntheticDragEvent;

},{"99":99}],95:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticEvent
 * @typechecks static-only
 */

'use strict';

var PooledClass = _dereq_(28);

var assign = _dereq_(27);
var emptyFunction = _dereq_(114);
var getEventTarget = _dereq_(125);

/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var EventInterface = {
  type: null,
  target: getEventTarget,
  // currentTarget is set when dispatching; no use in copying it here
  currentTarget: emptyFunction.thatReturnsNull,
  eventPhase: null,
  bubbles: null,
  cancelable: null,
  timeStamp: function(event) {
    return event.timeStamp || Date.now();
  },
  defaultPrevented: null,
  isTrusted: null
};

/**
 * Synthetic events are dispatched by event plugins, typically in response to a
 * top-level event delegation handler.
 *
 * These systems should generally use pooling to reduce the frequency of garbage
 * collection. The system should check `isPersistent` to determine whether the
 * event should be released into the pool after being dispatched. Users that
 * need a persisted event should invoke `persist`.
 *
 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
 * normalizing browser quirks. Subclasses do not necessarily have to implement a
 * DOM interface; custom application-specific events can also subclass this.
 *
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 */
function SyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  this.dispatchConfig = dispatchConfig;
  this.dispatchMarker = dispatchMarker;
  this.nativeEvent = nativeEvent;

  var Interface = this.constructor.Interface;
  for (var propName in Interface) {
    if (!Interface.hasOwnProperty(propName)) {
      continue;
    }
    var normalize = Interface[propName];
    if (normalize) {
      this[propName] = normalize(nativeEvent);
    } else {
      this[propName] = nativeEvent[propName];
    }
  }

  var defaultPrevented = nativeEvent.defaultPrevented != null ?
    nativeEvent.defaultPrevented :
    nativeEvent.returnValue === false;
  if (defaultPrevented) {
    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
  } else {
    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
  }
  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
}

assign(SyntheticEvent.prototype, {

  preventDefault: function() {
    this.defaultPrevented = true;
    var event = this.nativeEvent;
    if (event.preventDefault) {
      event.preventDefault();
    } else {
      event.returnValue = false;
    }
    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
  },

  stopPropagation: function() {
    var event = this.nativeEvent;
    if (event.stopPropagation) {
      event.stopPropagation();
    } else {
      event.cancelBubble = true;
    }
    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
  },

  /**
   * We release all dispatched `SyntheticEvent`s after each event loop, adding
   * them back into the pool. This allows a way to hold onto a reference that
   * won't be added back into the pool.
   */
  persist: function() {
    this.isPersistent = emptyFunction.thatReturnsTrue;
  },

  /**
   * Checks if this event should be released back into the pool.
   *
   * @return {boolean} True if this should not be released, false otherwise.
   */
  isPersistent: emptyFunction.thatReturnsFalse,

  /**
   * `PooledClass` looks for `destructor` on each instance it releases.
   */
  destructor: function() {
    var Interface = this.constructor.Interface;
    for (var propName in Interface) {
      this[propName] = null;
    }
    this.dispatchConfig = null;
    this.dispatchMarker = null;
    this.nativeEvent = null;
  }

});

SyntheticEvent.Interface = EventInterface;

/**
 * Helper to reduce boilerplate when creating subclasses.
 *
 * @param {function} Class
 * @param {?object} Interface
 */
SyntheticEvent.augmentClass = function(Class, Interface) {
  var Super = this;

  var prototype = Object.create(Super.prototype);
  assign(prototype, Class.prototype);
  Class.prototype = prototype;
  Class.prototype.constructor = Class;

  Class.Interface = assign({}, Super.Interface, Interface);
  Class.augmentClass = Super.augmentClass;

  PooledClass.addPoolingTo(Class, PooledClass.threeArgumentPooler);
};

PooledClass.addPoolingTo(SyntheticEvent, PooledClass.threeArgumentPooler);

module.exports = SyntheticEvent;

},{"114":114,"125":125,"27":27,"28":28}],96:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticFocusEvent
 * @typechecks static-only
 */

'use strict';

var SyntheticUIEvent = _dereq_(101);

/**
 * @interface FocusEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var FocusEventInterface = {
  relatedTarget: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);

module.exports = SyntheticFocusEvent;

},{"101":101}],97:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticInputEvent
 * @typechecks static-only
 */

'use strict';

var SyntheticEvent = _dereq_(95);

/**
 * @interface Event
 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
 *      /#events-inputevents
 */
var InputEventInterface = {
  data: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticInputEvent(
  dispatchConfig,
  dispatchMarker,
  nativeEvent) {
  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticEvent.augmentClass(
  SyntheticInputEvent,
  InputEventInterface
);

module.exports = SyntheticInputEvent;

},{"95":95}],98:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticKeyboardEvent
 * @typechecks static-only
 */

'use strict';

var SyntheticUIEvent = _dereq_(101);

var getEventCharCode = _dereq_(122);
var getEventKey = _dereq_(123);
var getEventModifierState = _dereq_(124);

/**
 * @interface KeyboardEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var KeyboardEventInterface = {
  key: getEventKey,
  location: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  repeat: null,
  locale: null,
  getModifierState: getEventModifierState,
  // Legacy Interface
  charCode: function(event) {
    // `charCode` is the result of a KeyPress event and represents the value of
    // the actual printable character.

    // KeyPress is deprecated, but its replacement is not yet final and not
    // implemented in any major browser. Only KeyPress has charCode.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }
    return 0;
  },
  keyCode: function(event) {
    // `keyCode` is the result of a KeyDown/Up event and represents the value of
    // physical keyboard key.

    // The actual meaning of the value depends on the users' keyboard layout
    // which cannot be detected. Assuming that it is a US keyboard layout
    // provides a surprisingly accurate mapping for US and European users.
    // Due to this, it is left to the user to implement at this time.
    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }
    return 0;
  },
  which: function(event) {
    // `which` is an alias for either `keyCode` or `charCode` depending on the
    // type of the event.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }
    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }
    return 0;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);

module.exports = SyntheticKeyboardEvent;

},{"101":101,"122":122,"123":123,"124":124}],99:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticMouseEvent
 * @typechecks static-only
 */

'use strict';

var SyntheticUIEvent = _dereq_(101);
var ViewportMetrics = _dereq_(104);

var getEventModifierState = _dereq_(124);

/**
 * @interface MouseEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var MouseEventInterface = {
  screenX: null,
  screenY: null,
  clientX: null,
  clientY: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  getModifierState: getEventModifierState,
  button: function(event) {
    // Webkit, Firefox, IE9+
    // which:  1 2 3
    // button: 0 1 2 (standard)
    var button = event.button;
    if ('which' in event) {
      return button;
    }
    // IE<9
    // which:  undefined
    // button: 0 0 0
    // button: 1 4 2 (onmouseup)
    return button === 2 ? 2 : button === 4 ? 1 : 0;
  },
  buttons: null,
  relatedTarget: function(event) {
    return event.relatedTarget || (
      ((event.fromElement === event.srcElement ? event.toElement : event.fromElement))
    );
  },
  // "Proprietary" Interface.
  pageX: function(event) {
    return 'pageX' in event ?
      event.pageX :
      event.clientX + ViewportMetrics.currentScrollLeft;
  },
  pageY: function(event) {
    return 'pageY' in event ?
      event.pageY :
      event.clientY + ViewportMetrics.currentScrollTop;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);

module.exports = SyntheticMouseEvent;

},{"101":101,"104":104,"124":124}],100:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticTouchEvent
 * @typechecks static-only
 */

'use strict';

var SyntheticUIEvent = _dereq_(101);

var getEventModifierState = _dereq_(124);

/**
 * @interface TouchEvent
 * @see http://www.w3.org/TR/touch-events/
 */
var TouchEventInterface = {
  touches: null,
  targetTouches: null,
  changedTouches: null,
  altKey: null,
  metaKey: null,
  ctrlKey: null,
  shiftKey: null,
  getModifierState: getEventModifierState
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);

module.exports = SyntheticTouchEvent;

},{"101":101,"124":124}],101:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticUIEvent
 * @typechecks static-only
 */

'use strict';

var SyntheticEvent = _dereq_(95);

var getEventTarget = _dereq_(125);

/**
 * @interface UIEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var UIEventInterface = {
  view: function(event) {
    if (event.view) {
      return event.view;
    }

    var target = getEventTarget(event);
    if (target != null && target.window === target) {
      // target is a window object
      return target;
    }

    var doc = target.ownerDocument;
    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
    if (doc) {
      return doc.defaultView || doc.parentWindow;
    } else {
      return window;
    }
  },
  detail: function(event) {
    return event.detail || 0;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);

module.exports = SyntheticUIEvent;

},{"125":125,"95":95}],102:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticWheelEvent
 * @typechecks static-only
 */

'use strict';

var SyntheticMouseEvent = _dereq_(99);

/**
 * @interface WheelEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var WheelEventInterface = {
  deltaX: function(event) {
    return (
      'deltaX' in event ? event.deltaX :
      // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
      'wheelDeltaX' in event ? -event.wheelDeltaX : 0
    );
  },
  deltaY: function(event) {
    return (
      'deltaY' in event ? event.deltaY :
      // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
      'wheelDeltaY' in event ? -event.wheelDeltaY :
      // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
      'wheelDelta' in event ? -event.wheelDelta : 0
    );
  },
  deltaZ: null,

  // Browsers without "deltaMode" is reporting in raw wheel delta where one
  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
  deltaMode: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticMouseEvent}
 */
function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);

module.exports = SyntheticWheelEvent;

},{"99":99}],103:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule Transaction
 */

'use strict';

var invariant = _dereq_(135);

/**
 * `Transaction` creates a black box that is able to wrap any method such that
 * certain invariants are maintained before and after the method is invoked
 * (Even if an exception is thrown while invoking the wrapped method). Whoever
 * instantiates a transaction can provide enforcers of the invariants at
 * creation time. The `Transaction` class itself will supply one additional
 * automatic invariant for you - the invariant that any transaction instance
 * should not be run while it is already being run. You would typically create a
 * single instance of a `Transaction` for reuse multiple times, that potentially
 * is used to wrap several different methods. Wrappers are extremely simple -
 * they only require implementing two methods.
 *
 * <pre>
 *                       wrappers (injected at creation time)
 *                                      +        +
 *                                      |        |
 *                    +-----------------|--------|--------------+
 *                    |                 v        |              |
 *                    |      +---------------+   |              |
 *                    |   +--|    wrapper1   |---|----+         |
 *                    |   |  +---------------+   v    |         |
 *                    |   |          +-------------+  |         |
 *                    |   |     +----|   wrapper2  |--------+   |
 *                    |   |     |    +-------------+  |     |   |
 *                    |   |     |                     |     |   |
 *                    |   v     v                     v     v   | wrapper
 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | +---+ +---+   +---------+   +---+ +---+ |
 *                    |  initialize                    close    |
 *                    +-----------------------------------------+
 * </pre>
 *
 * Use cases:
 * - Preserving the input selection ranges before/after reconciliation.
 *   Restoring selection even in the event of an unexpected error.
 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
 *   while guaranteeing that afterwards, the event system is reactivated.
 * - Flushing a queue of collected DOM mutations to the main UI thread after a
 *   reconciliation takes place in a worker thread.
 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
 *   content.
 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
 * - (Future use case): Layout calculations before and after DOM updates.
 *
 * Transactional plugin API:
 * - A module that has an `initialize` method that returns any precomputation.
 * - and a `close` method that accepts the precomputation. `close` is invoked
 *   when the wrapped process is completed, or has failed.
 *
 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
 * that implement `initialize` and `close`.
 * @return {Transaction} Single transaction for reuse in thread.
 *
 * @class Transaction
 */
var Mixin = {
  /**
   * Sets up this instance so that it is prepared for collecting metrics. Does
   * so such that this setup method may be used on an instance that is already
   * initialized, in a way that does not consume additional memory upon reuse.
   * That can be useful if you decide to make your subclass of this mixin a
   * "PooledClass".
   */
  reinitializeTransaction: function() {
    this.transactionWrappers = this.getTransactionWrappers();
    if (!this.wrapperInitData) {
      this.wrapperInitData = [];
    } else {
      this.wrapperInitData.length = 0;
    }
    this._isInTransaction = false;
  },

  _isInTransaction: false,

  /**
   * @abstract
   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
   */
  getTransactionWrappers: null,

  isInTransaction: function() {
    return !!this._isInTransaction;
  },

  /**
   * Executes the function within a safety window. Use this for the top level
   * methods that result in large amounts of computation/mutations that would
   * need to be safety checked.
   *
   * @param {function} method Member of scope to call.
   * @param {Object} scope Scope to invoke from.
   * @param {Object?=} args... Arguments to pass to the method (optional).
   *                           Helps prevent need to bind in many cases.
   * @return Return value from `method`.
   */
  perform: function(method, scope, a, b, c, d, e, f) {
    ("production" !== "development" ? invariant(
      !this.isInTransaction(),
      'Transaction.perform(...): Cannot initialize a transaction when there ' +
      'is already an outstanding transaction.'
    ) : invariant(!this.isInTransaction()));
    var errorThrown;
    var ret;
    try {
      this._isInTransaction = true;
      // Catching errors makes debugging more difficult, so we start with
      // errorThrown set to true before setting it to false after calling
      // close -- if it's still set to true in the finally block, it means
      // one of these calls threw.
      errorThrown = true;
      this.initializeAll(0);
      ret = method.call(scope, a, b, c, d, e, f);
      errorThrown = false;
    } finally {
      try {
        if (errorThrown) {
          // If `method` throws, prefer to show that stack trace over any thrown
          // by invoking `closeAll`.
          try {
            this.closeAll(0);
          } catch (err) {
          }
        } else {
          // Since `method` didn't throw, we don't want to silence the exception
          // here.
          this.closeAll(0);
        }
      } finally {
        this._isInTransaction = false;
      }
    }
    return ret;
  },

  initializeAll: function(startIndex) {
    var transactionWrappers = this.transactionWrappers;
    for (var i = startIndex; i < transactionWrappers.length; i++) {
      var wrapper = transactionWrappers[i];
      try {
        // Catching errors makes debugging more difficult, so we start with the
        // OBSERVED_ERROR state before overwriting it with the real return value
        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
        // block, it means wrapper.initialize threw.
        this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;
        this.wrapperInitData[i] = wrapper.initialize ?
          wrapper.initialize.call(this) :
          null;
      } finally {
        if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {
          // The initializer for wrapper i threw an error; initialize the
          // remaining wrappers but silence any exceptions from them to ensure
          // that the first error is the one to bubble up.
          try {
            this.initializeAll(i + 1);
          } catch (err) {
          }
        }
      }
    }
  },

  /**
   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
   * them the respective return values of `this.transactionWrappers.init[i]`
   * (`close`rs that correspond to initializers that failed will not be
   * invoked).
   */
  closeAll: function(startIndex) {
    ("production" !== "development" ? invariant(
      this.isInTransaction(),
      'Transaction.closeAll(): Cannot close transaction when none are open.'
    ) : invariant(this.isInTransaction()));
    var transactionWrappers = this.transactionWrappers;
    for (var i = startIndex; i < transactionWrappers.length; i++) {
      var wrapper = transactionWrappers[i];
      var initData = this.wrapperInitData[i];
      var errorThrown;
      try {
        // Catching errors makes debugging more difficult, so we start with
        // errorThrown set to true before setting it to false after calling
        // close -- if it's still set to true in the finally block, it means
        // wrapper.close threw.
        errorThrown = true;
        if (initData !== Transaction.OBSERVED_ERROR && wrapper.close) {
          wrapper.close.call(this, initData);
        }
        errorThrown = false;
      } finally {
        if (errorThrown) {
          // The closer for wrapper i threw an error; close the remaining
          // wrappers but silence any exceptions from them to ensure that the
          // first error is the one to bubble up.
          try {
            this.closeAll(i + 1);
          } catch (e) {
          }
        }
      }
    }
    this.wrapperInitData.length = 0;
  }
};

var Transaction = {

  Mixin: Mixin,

  /**
   * Token to look for to determine if an error occured.
   */
  OBSERVED_ERROR: {}

};

module.exports = Transaction;

},{"135":135}],104:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ViewportMetrics
 */

'use strict';

var ViewportMetrics = {

  currentScrollLeft: 0,

  currentScrollTop: 0,

  refreshScrollValues: function(scrollPosition) {
    ViewportMetrics.currentScrollLeft = scrollPosition.x;
    ViewportMetrics.currentScrollTop = scrollPosition.y;
  }

};

module.exports = ViewportMetrics;

},{}],105:[function(_dereq_,module,exports){
/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule accumulateInto
 */

'use strict';

var invariant = _dereq_(135);

/**
 *
 * Accumulates items that must not be null or undefined into the first one. This
 * is used to conserve memory by avoiding array allocations, and thus sacrifices
 * API cleanness. Since `current` can be null before being passed in and not
 * null after this function, make sure to assign it back to `current`:
 *
 * `a = accumulateInto(a, b);`
 *
 * This API should be sparingly used. Try `accumulate` for something cleaner.
 *
 * @return {*|array<*>} An accumulation of items.
 */

function accumulateInto(current, next) {
  ("production" !== "development" ? invariant(
    next != null,
    'accumulateInto(...): Accumulated items must not be null or undefined.'
  ) : invariant(next != null));
  if (current == null) {
    return next;
  }

  // Both are not empty. Warning: Never call x.concat(y) when you are not
  // certain that x is an Array (x could be a string with concat method).
  var currentIsArray = Array.isArray(current);
  var nextIsArray = Array.isArray(next);

  if (currentIsArray && nextIsArray) {
    current.push.apply(current, next);
    return current;
  }

  if (currentIsArray) {
    current.push(next);
    return current;
  }

  if (nextIsArray) {
    // A bit too dangerous to mutate `next`.
    return [current].concat(next);
  }

  return [current, next];
}

module.exports = accumulateInto;

},{"135":135}],106:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule adler32
 */

/* jslint bitwise:true */

'use strict';

var MOD = 65521;

// This is a clean-room implementation of adler32 designed for detecting
// if markup is not what we expect it to be. It does not need to be
// cryptographically strong, only reasonably good at detecting if markup
// generated on the server is different than that on the client.
function adler32(data) {
  var a = 1;
  var b = 0;
  for (var i = 0; i < data.length; i++) {
    a = (a + data.charCodeAt(i)) % MOD;
    b = (b + a) % MOD;
  }
  return a | (b << 16);
}

module.exports = adler32;

},{}],107:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule camelize
 * @typechecks
 */

var _hyphenPattern = /-(.)/g;

/**
 * Camelcases a hyphenated string, for example:
 *
 *   > camelize('background-color')
 *   < "backgroundColor"
 *
 * @param {string} string
 * @return {string}
 */
function camelize(string) {
  return string.replace(_hyphenPattern, function(_, character) {
    return character.toUpperCase();
  });
}

module.exports = camelize;

},{}],108:[function(_dereq_,module,exports){
/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule camelizeStyleName
 * @typechecks
 */

"use strict";

var camelize = _dereq_(107);

var msPattern = /^-ms-/;

/**
 * Camelcases a hyphenated CSS property name, for example:
 *
 *   > camelizeStyleName('background-color')
 *   < "backgroundColor"
 *   > camelizeStyleName('-moz-transition')
 *   < "MozTransition"
 *   > camelizeStyleName('-ms-transition')
 *   < "msTransition"
 *
 * As Andi Smith suggests
 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
 * is converted to lowercase `ms`.
 *
 * @param {string} string
 * @return {string}
 */
function camelizeStyleName(string) {
  return camelize(string.replace(msPattern, 'ms-'));
}

module.exports = camelizeStyleName;

},{"107":107}],109:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule containsNode
 * @typechecks
 */

var isTextNode = _dereq_(139);

/*jslint bitwise:true */

/**
 * Checks if a given DOM node contains or is another DOM node.
 *
 * @param {?DOMNode} outerNode Outer DOM node.
 * @param {?DOMNode} innerNode Inner DOM node.
 * @return {boolean} True if `outerNode` contains or is `innerNode`.
 */
function containsNode(outerNode, innerNode) {
  if (!outerNode || !innerNode) {
    return false;
  } else if (outerNode === innerNode) {
    return true;
  } else if (isTextNode(outerNode)) {
    return false;
  } else if (isTextNode(innerNode)) {
    return containsNode(outerNode, innerNode.parentNode);
  } else if (outerNode.contains) {
    return outerNode.contains(innerNode);
  } else if (outerNode.compareDocumentPosition) {
    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
  } else {
    return false;
  }
}

module.exports = containsNode;

},{"139":139}],110:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule createArrayFromMixed
 * @typechecks
 */

var toArray = _dereq_(152);

/**
 * Perform a heuristic test to determine if an object is "array-like".
 *
 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
 *   Joshu replied: "Mu."
 *
 * This function determines if its argument has "array nature": it returns
 * true if the argument is an actual array, an `arguments' object, or an
 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
 *
 * It will return false for other array-like objects like Filelist.
 *
 * @param {*} obj
 * @return {boolean}
 */
function hasArrayNature(obj) {
  return (
    // not null/false
    !!obj &&
    // arrays are objects, NodeLists are functions in Safari
    (typeof obj == 'object' || typeof obj == 'function') &&
    // quacks like an array
    ('length' in obj) &&
    // not window
    !('setInterval' in obj) &&
    // no DOM node should be considered an array-like
    // a 'select' element has 'length' and 'item' properties on IE8
    (typeof obj.nodeType != 'number') &&
    (
      // a real array
      (// HTMLCollection/NodeList
      (Array.isArray(obj) ||
      // arguments
      ('callee' in obj) || 'item' in obj))
    )
  );
}

/**
 * Ensure that the argument is an array by wrapping it in an array if it is not.
 * Creates a copy of the argument if it is already an array.
 *
 * This is mostly useful idiomatically:
 *
 *   var createArrayFromMixed = require('createArrayFromMixed');
 *
 *   function takesOneOrMoreThings(things) {
 *     things = createArrayFromMixed(things);
 *     ...
 *   }
 *
 * This allows you to treat `things' as an array, but accept scalars in the API.
 *
 * If you need to convert an array-like object, like `arguments`, into an array
 * use toArray instead.
 *
 * @param {*} obj
 * @return {array}
 */
function createArrayFromMixed(obj) {
  if (!hasArrayNature(obj)) {
    return [obj];
  } else if (Array.isArray(obj)) {
    return obj.slice();
  } else {
    return toArray(obj);
  }
}

module.exports = createArrayFromMixed;

},{"152":152}],111:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule createFullPageComponent
 * @typechecks
 */

'use strict';

// Defeat circular references by requiring this directly.
var ReactClass = _dereq_(33);
var ReactElement = _dereq_(57);

var invariant = _dereq_(135);

/**
 * Create a component that will throw an exception when unmounted.
 *
 * Components like <html> <head> and <body> can't be removed or added
 * easily in a cross-browser way, however it's valuable to be able to
 * take advantage of React's reconciliation for styling and <title>
 * management. So we just document it and throw in dangerous cases.
 *
 * @param {string} tag The tag to wrap
 * @return {function} convenience constructor of new component
 */
function createFullPageComponent(tag) {
  var elementFactory = ReactElement.createFactory(tag);

  var FullPageComponent = ReactClass.createClass({
    tagName: tag.toUpperCase(),
    displayName: 'ReactFullPageComponent' + tag,

    componentWillUnmount: function() {
      ("production" !== "development" ? invariant(
        false,
        '%s tried to unmount. Because of cross-browser quirks it is ' +
        'impossible to unmount some top-level components (eg <html>, <head>, ' +
        'and <body>) reliably and efficiently. To fix this, have a single ' +
        'top-level component that never unmounts render these elements.',
        this.constructor.displayName
      ) : invariant(false));
    },

    render: function() {
      return elementFactory(this.props);
    }
  });

  return FullPageComponent;
}

module.exports = createFullPageComponent;

},{"135":135,"33":33,"57":57}],112:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule createNodesFromMarkup
 * @typechecks
 */

/*jslint evil: true, sub: true */

var ExecutionEnvironment = _dereq_(21);

var createArrayFromMixed = _dereq_(110);
var getMarkupWrap = _dereq_(127);
var invariant = _dereq_(135);

/**
 * Dummy container used to render all markup.
 */
var dummyNode =
  ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

/**
 * Pattern used by `getNodeName`.
 */
var nodeNamePattern = /^\s*<(\w+)/;

/**
 * Extracts the `nodeName` of the first element in a string of markup.
 *
 * @param {string} markup String of markup.
 * @return {?string} Node name of the supplied markup.
 */
function getNodeName(markup) {
  var nodeNameMatch = markup.match(nodeNamePattern);
  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
}

/**
 * Creates an array containing the nodes rendered from the supplied markup. The
 * optionally supplied `handleScript` function will be invoked once for each
 * <script> element that is rendered. If no `handleScript` function is supplied,
 * an exception is thrown if any <script> elements are rendered.
 *
 * @param {string} markup A string of valid HTML markup.
 * @param {?function} handleScript Invoked once for each rendered <script>.
 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
 */
function createNodesFromMarkup(markup, handleScript) {
  var node = dummyNode;
  ("production" !== "development" ? invariant(!!dummyNode, 'createNodesFromMarkup dummy not initialized') : invariant(!!dummyNode));
  var nodeName = getNodeName(markup);

  var wrap = nodeName && getMarkupWrap(nodeName);
  if (wrap) {
    node.innerHTML = wrap[1] + markup + wrap[2];

    var wrapDepth = wrap[0];
    while (wrapDepth--) {
      node = node.lastChild;
    }
  } else {
    node.innerHTML = markup;
  }

  var scripts = node.getElementsByTagName('script');
  if (scripts.length) {
    ("production" !== "development" ? invariant(
      handleScript,
      'createNodesFromMarkup(...): Unexpected <script> element rendered.'
    ) : invariant(handleScript));
    createArrayFromMixed(scripts).forEach(handleScript);
  }

  var nodes = createArrayFromMixed(node.childNodes);
  while (node.lastChild) {
    node.removeChild(node.lastChild);
  }
  return nodes;
}

module.exports = createNodesFromMarkup;

},{"110":110,"127":127,"135":135,"21":21}],113:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule dangerousStyleValue
 * @typechecks static-only
 */

'use strict';

var CSSProperty = _dereq_(4);

var isUnitlessNumber = CSSProperty.isUnitlessNumber;

/**
 * Convert a value into the proper css writable value. The style name `name`
 * should be logical (no hyphens), as specified
 * in `CSSProperty.isUnitlessNumber`.
 *
 * @param {string} name CSS property name such as `topMargin`.
 * @param {*} value CSS property value such as `10px`.
 * @return {string} Normalized style value with dimensions applied.
 */
function dangerousStyleValue(name, value) {
  // Note that we've removed escapeTextForBrowser() calls here since the
  // whole string will be escaped when the attribute is injected into
  // the markup. If you provide unsafe user data here they can inject
  // arbitrary CSS which may be problematic (I couldn't repro this):
  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
  // This is not an XSS hole but instead a potential CSS injection issue
  // which has lead to a greater discussion about how we're going to
  // trust URLs moving forward. See #2115901

  var isEmpty = value == null || typeof value === 'boolean' || value === '';
  if (isEmpty) {
    return '';
  }

  var isNonNumeric = isNaN(value);
  if (isNonNumeric || value === 0 ||
      isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
    return '' + value; // cast to string
  }

  if (typeof value === 'string') {
    value = value.trim();
  }
  return value + 'px';
}

module.exports = dangerousStyleValue;

},{"4":4}],114:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule emptyFunction
 */

function makeEmptyFunction(arg) {
  return function() {
    return arg;
  };
}

/**
 * This function accepts and discards inputs; it has no side effects. This is
 * primarily useful idiomatically for overridable function endpoints which
 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
 */
function emptyFunction() {}

emptyFunction.thatReturns = makeEmptyFunction;
emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
emptyFunction.thatReturnsNull = makeEmptyFunction(null);
emptyFunction.thatReturnsThis = function() { return this; };
emptyFunction.thatReturnsArgument = function(arg) { return arg; };

module.exports = emptyFunction;

},{}],115:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule emptyObject
 */

"use strict";

var emptyObject = {};

if ("production" !== "development") {
  Object.freeze(emptyObject);
}

module.exports = emptyObject;

},{}],116:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule escapeTextContentForBrowser
 */

'use strict';

var ESCAPE_LOOKUP = {
  '&': '&amp;',
  '>': '&gt;',
  '<': '&lt;',
  '"': '&quot;',
  '\'': '&#x27;'
};

var ESCAPE_REGEX = /[&><"']/g;

function escaper(match) {
  return ESCAPE_LOOKUP[match];
}

/**
 * Escapes text to prevent scripting attacks.
 *
 * @param {*} text Text value to escape.
 * @return {string} An escaped string.
 */
function escapeTextContentForBrowser(text) {
  return ('' + text).replace(ESCAPE_REGEX, escaper);
}

module.exports = escapeTextContentForBrowser;

},{}],117:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule findDOMNode
 * @typechecks static-only
 */

'use strict';

var ReactCurrentOwner = _dereq_(39);
var ReactInstanceMap = _dereq_(67);
var ReactMount = _dereq_(70);

var invariant = _dereq_(135);
var isNode = _dereq_(137);
var warning = _dereq_(154);

/**
 * Returns the DOM node rendered by this element.
 *
 * @param {ReactComponent|DOMElement} componentOrElement
 * @return {DOMElement} The root node of this element.
 */
function findDOMNode(componentOrElement) {
  if ("production" !== "development") {
    var owner = ReactCurrentOwner.current;
    if (owner !== null) {
      ("production" !== "development" ? warning(
        owner._warnedAboutRefsInRender,
        '%s is accessing getDOMNode or findDOMNode inside its render(). ' +
        'render() should be a pure function of props and state. It should ' +
        'never access something that requires stale data from the previous ' +
        'render, such as refs. Move this logic to componentDidMount and ' +
        'componentDidUpdate instead.',
        owner.getName() || 'A component'
      ) : null);
      owner._warnedAboutRefsInRender = true;
    }
  }
  if (componentOrElement == null) {
    return null;
  }
  if (isNode(componentOrElement)) {
    return componentOrElement;
  }
  if (ReactInstanceMap.has(componentOrElement)) {
    return ReactMount.getNodeFromInstance(componentOrElement);
  }
  ("production" !== "development" ? invariant(
    componentOrElement.render == null ||
    typeof componentOrElement.render !== 'function',
    'Component (with keys: %s) contains `render` method ' +
    'but is not mounted in the DOM',
    Object.keys(componentOrElement)
  ) : invariant(componentOrElement.render == null ||
  typeof componentOrElement.render !== 'function'));
  ("production" !== "development" ? invariant(
    false,
    'Element appears to be neither ReactComponent nor DOMNode (keys: %s)',
    Object.keys(componentOrElement)
  ) : invariant(false));
}

module.exports = findDOMNode;

},{"135":135,"137":137,"154":154,"39":39,"67":67,"70":70}],118:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule flattenChildren
 */

'use strict';

var traverseAllChildren = _dereq_(153);
var warning = _dereq_(154);

/**
 * @param {function} traverseContext Context passed through traversal.
 * @param {?ReactComponent} child React child component.
 * @param {!string} name String name of key path to child.
 */
function flattenSingleChildIntoContext(traverseContext, child, name) {
  // We found a component instance.
  var result = traverseContext;
  var keyUnique = !result.hasOwnProperty(name);
  if ("production" !== "development") {
    ("production" !== "development" ? warning(
      keyUnique,
      'flattenChildren(...): Encountered two children with the same key, ' +
      '`%s`. Child keys must be unique; when two children share a key, only ' +
      'the first child will be used.',
      name
    ) : null);
  }
  if (keyUnique && child != null) {
    result[name] = child;
  }
}

/**
 * Flattens children that are typically specified as `props.children`. Any null
 * children will not be included in the resulting object.
 * @return {!object} flattened children keyed by name.
 */
function flattenChildren(children) {
  if (children == null) {
    return children;
  }
  var result = {};
  traverseAllChildren(children, flattenSingleChildIntoContext, result);
  return result;
}

module.exports = flattenChildren;

},{"153":153,"154":154}],119:[function(_dereq_,module,exports){
/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule focusNode
 */

"use strict";

/**
 * @param {DOMElement} node input/textarea to focus
 */
function focusNode(node) {
  // IE8 can throw "Can't move focus to the control because it is invisible,
  // not enabled, or of a type that does not accept the focus." for all kinds of
  // reasons that are too expensive and fragile to test.
  try {
    node.focus();
  } catch(e) {
  }
}

module.exports = focusNode;

},{}],120:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule forEachAccumulated
 */

'use strict';

/**
 * @param {array} an "accumulation" of items which is either an Array or
 * a single item. Useful when paired with the `accumulate` module. This is a
 * simple utility that allows us to reason about a collection of items, but
 * handling the case when there is exactly one item (and we do not need to
 * allocate an array).
 */
var forEachAccumulated = function(arr, cb, scope) {
  if (Array.isArray(arr)) {
    arr.forEach(cb, scope);
  } else if (arr) {
    cb.call(scope, arr);
  }
};

module.exports = forEachAccumulated;

},{}],121:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getActiveElement
 * @typechecks
 */

/**
 * Same as document.activeElement but wraps in a try-catch block. In IE it is
 * not safe to call document.activeElement if there is nothing focused.
 *
 * The activeElement will be null only if the document body is not yet defined.
 */
function getActiveElement() /*?DOMElement*/ {
  try {
    return document.activeElement || document.body;
  } catch (e) {
    return document.body;
  }
}

module.exports = getActiveElement;

},{}],122:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getEventCharCode
 * @typechecks static-only
 */

'use strict';

/**
 * `charCode` represents the actual "character code" and is safe to use with
 * `String.fromCharCode`. As such, only keys that correspond to printable
 * characters produce a valid `charCode`, the only exception to this is Enter.
 * The Tab-key is considered non-printable and does not have a `charCode`,
 * presumably because it does not produce a tab-character in browsers.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {string} Normalized `charCode` property.
 */
function getEventCharCode(nativeEvent) {
  var charCode;
  var keyCode = nativeEvent.keyCode;

  if ('charCode' in nativeEvent) {
    charCode = nativeEvent.charCode;

    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
    if (charCode === 0 && keyCode === 13) {
      charCode = 13;
    }
  } else {
    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
    charCode = keyCode;
  }

  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
  // Must not discard the (non-)printable Enter-key.
  if (charCode >= 32 || charCode === 13) {
    return charCode;
  }

  return 0;
}

module.exports = getEventCharCode;

},{}],123:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getEventKey
 * @typechecks static-only
 */

'use strict';

var getEventCharCode = _dereq_(122);

/**
 * Normalization of deprecated HTML5 `key` values
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */
var normalizeKey = {
  'Esc': 'Escape',
  'Spacebar': ' ',
  'Left': 'ArrowLeft',
  'Up': 'ArrowUp',
  'Right': 'ArrowRight',
  'Down': 'ArrowDown',
  'Del': 'Delete',
  'Win': 'OS',
  'Menu': 'ContextMenu',
  'Apps': 'ContextMenu',
  'Scroll': 'ScrollLock',
  'MozPrintableKey': 'Unidentified'
};

/**
 * Translation from legacy `keyCode` to HTML5 `key`
 * Only special keys supported, all others depend on keyboard layout or browser
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */
var translateToKey = {
  8: 'Backspace',
  9: 'Tab',
  12: 'Clear',
  13: 'Enter',
  16: 'Shift',
  17: 'Control',
  18: 'Alt',
  19: 'Pause',
  20: 'CapsLock',
  27: 'Escape',
  32: ' ',
  33: 'PageUp',
  34: 'PageDown',
  35: 'End',
  36: 'Home',
  37: 'ArrowLeft',
  38: 'ArrowUp',
  39: 'ArrowRight',
  40: 'ArrowDown',
  45: 'Insert',
  46: 'Delete',
  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',
  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',
  144: 'NumLock',
  145: 'ScrollLock',
  224: 'Meta'
};

/**
 * @param {object} nativeEvent Native browser event.
 * @return {string} Normalized `key` property.
 */
function getEventKey(nativeEvent) {
  if (nativeEvent.key) {
    // Normalize inconsistent values reported by browsers due to
    // implementations of a working draft specification.

    // FireFox implements `key` but returns `MozPrintableKey` for all
    // printable characters (normalized to `Unidentified`), ignore it.
    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
    if (key !== 'Unidentified') {
      return key;
    }
  }

  // Browser does not implement `key`, polyfill as much of it as we can.
  if (nativeEvent.type === 'keypress') {
    var charCode = getEventCharCode(nativeEvent);

    // The enter-key is technically both printable and non-printable and can
    // thus be captured by `keypress`, no other non-printable key should.
    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
  }
  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
    // While user keyboard layout determines the actual meaning of each
    // `keyCode` value, almost all function keys have a universal value.
    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
  }
  return '';
}

module.exports = getEventKey;

},{"122":122}],124:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getEventModifierState
 * @typechecks static-only
 */

'use strict';

/**
 * Translation from modifier key to the associated property in the event.
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
 */

var modifierKeyToProp = {
  'Alt': 'altKey',
  'Control': 'ctrlKey',
  'Meta': 'metaKey',
  'Shift': 'shiftKey'
};

// IE8 does not implement getModifierState so we simply map it to the only
// modifier keys exposed by the event itself, does not support Lock-keys.
// Currently, all major browsers except Chrome seems to support Lock-keys.
function modifierStateGetter(keyArg) {
  /*jshint validthis:true */
  var syntheticEvent = this;
  var nativeEvent = syntheticEvent.nativeEvent;
  if (nativeEvent.getModifierState) {
    return nativeEvent.getModifierState(keyArg);
  }
  var keyProp = modifierKeyToProp[keyArg];
  return keyProp ? !!nativeEvent[keyProp] : false;
}

function getEventModifierState(nativeEvent) {
  return modifierStateGetter;
}

module.exports = getEventModifierState;

},{}],125:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getEventTarget
 * @typechecks static-only
 */

'use strict';

/**
 * Gets the target node from a native browser event by accounting for
 * inconsistencies in browser DOM APIs.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {DOMEventTarget} Target node.
 */
function getEventTarget(nativeEvent) {
  var target = nativeEvent.target || nativeEvent.srcElement || window;
  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
  // @see http://www.quirksmode.org/js/events_properties.html
  return target.nodeType === 3 ? target.parentNode : target;
}

module.exports = getEventTarget;

},{}],126:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getIteratorFn
 * @typechecks static-only
 */

'use strict';

/* global Symbol */
var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

/**
 * Returns the iterator method function contained on the iterable object.
 *
 * Be sure to invoke the function with the iterable as context:
 *
 *     var iteratorFn = getIteratorFn(myIterable);
 *     if (iteratorFn) {
 *       var iterator = iteratorFn.call(myIterable);
 *       ...
 *     }
 *
 * @param {?object} maybeIterable
 * @return {?function}
 */
function getIteratorFn(maybeIterable) {
  var iteratorFn = maybeIterable && (
    (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL])
  );
  if (typeof iteratorFn === 'function') {
    return iteratorFn;
  }
}

module.exports = getIteratorFn;

},{}],127:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getMarkupWrap
 */

var ExecutionEnvironment = _dereq_(21);

var invariant = _dereq_(135);

/**
 * Dummy container used to detect which wraps are necessary.
 */
var dummyNode =
  ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

/**
 * Some browsers cannot use `innerHTML` to render certain elements standalone,
 * so we wrap them, render the wrapped nodes, then extract the desired node.
 *
 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
 */
var shouldWrap = {
  // Force wrapping for SVG elements because if they get created inside a <div>,
  // they will be initialized in the wrong namespace (and will not display).
  'circle': true,
  'clipPath': true,
  'defs': true,
  'ellipse': true,
  'g': true,
  'line': true,
  'linearGradient': true,
  'path': true,
  'polygon': true,
  'polyline': true,
  'radialGradient': true,
  'rect': true,
  'stop': true,
  'text': true
};

var selectWrap = [1, '<select multiple="true">', '</select>'];
var tableWrap = [1, '<table>', '</table>'];
var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];

var svgWrap = [1, '<svg>', '</svg>'];

var markupWrap = {
  '*': [1, '?<div>', '</div>'],

  'area': [1, '<map>', '</map>'],
  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
  'legend': [1, '<fieldset>', '</fieldset>'],
  'param': [1, '<object>', '</object>'],
  'tr': [2, '<table><tbody>', '</tbody></table>'],

  'optgroup': selectWrap,
  'option': selectWrap,

  'caption': tableWrap,
  'colgroup': tableWrap,
  'tbody': tableWrap,
  'tfoot': tableWrap,
  'thead': tableWrap,

  'td': trWrap,
  'th': trWrap,

  'circle': svgWrap,
  'clipPath': svgWrap,
  'defs': svgWrap,
  'ellipse': svgWrap,
  'g': svgWrap,
  'line': svgWrap,
  'linearGradient': svgWrap,
  'path': svgWrap,
  'polygon': svgWrap,
  'polyline': svgWrap,
  'radialGradient': svgWrap,
  'rect': svgWrap,
  'stop': svgWrap,
  'text': svgWrap
};

/**
 * Gets the markup wrap configuration for the supplied `nodeName`.
 *
 * NOTE: This lazily detects which wraps are necessary for the current browser.
 *
 * @param {string} nodeName Lowercase `nodeName`.
 * @return {?array} Markup wrap configuration, if applicable.
 */
function getMarkupWrap(nodeName) {
  ("production" !== "development" ? invariant(!!dummyNode, 'Markup wrapping node not initialized') : invariant(!!dummyNode));
  if (!markupWrap.hasOwnProperty(nodeName)) {
    nodeName = '*';
  }
  if (!shouldWrap.hasOwnProperty(nodeName)) {
    if (nodeName === '*') {
      dummyNode.innerHTML = '<link />';
    } else {
      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
    }
    shouldWrap[nodeName] = !dummyNode.firstChild;
  }
  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
}


module.exports = getMarkupWrap;

},{"135":135,"21":21}],128:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getNodeForCharacterOffset
 */

'use strict';

/**
 * Given any node return the first leaf node without children.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {DOMElement|DOMTextNode}
 */
function getLeafNode(node) {
  while (node && node.firstChild) {
    node = node.firstChild;
  }
  return node;
}

/**
 * Get the next sibling within a container. This will walk up the
 * DOM if a node's siblings have been exhausted.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {?DOMElement|DOMTextNode}
 */
function getSiblingNode(node) {
  while (node) {
    if (node.nextSibling) {
      return node.nextSibling;
    }
    node = node.parentNode;
  }
}

/**
 * Get object describing the nodes which contain characters at offset.
 *
 * @param {DOMElement|DOMTextNode} root
 * @param {number} offset
 * @return {?object}
 */
function getNodeForCharacterOffset(root, offset) {
  var node = getLeafNode(root);
  var nodeStart = 0;
  var nodeEnd = 0;

  while (node) {
    if (node.nodeType === 3) {
      nodeEnd = nodeStart + node.textContent.length;

      if (nodeStart <= offset && nodeEnd >= offset) {
        return {
          node: node,
          offset: offset - nodeStart
        };
      }

      nodeStart = nodeEnd;
    }

    node = getLeafNode(getSiblingNode(node));
  }
}

module.exports = getNodeForCharacterOffset;

},{}],129:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getReactRootElementInContainer
 */

'use strict';

var DOC_NODE_TYPE = 9;

/**
 * @param {DOMElement|DOMDocument} container DOM element that may contain
 *                                           a React component
 * @return {?*} DOM element that may have the reactRoot ID, or null.
 */
function getReactRootElementInContainer(container) {
  if (!container) {
    return null;
  }

  if (container.nodeType === DOC_NODE_TYPE) {
    return container.documentElement;
  } else {
    return container.firstChild;
  }
}

module.exports = getReactRootElementInContainer;

},{}],130:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getTextContentAccessor
 */

'use strict';

var ExecutionEnvironment = _dereq_(21);

var contentKey = null;

/**
 * Gets the key used to access text content on a DOM node.
 *
 * @return {?string} Key used to access text content.
 * @internal
 */
function getTextContentAccessor() {
  if (!contentKey && ExecutionEnvironment.canUseDOM) {
    // Prefer textContent to innerText because many browsers support both but
    // SVG <text> elements don't support innerText even when <div> does.
    contentKey = 'textContent' in document.documentElement ?
      'textContent' :
      'innerText';
  }
  return contentKey;
}

module.exports = getTextContentAccessor;

},{"21":21}],131:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getUnboundedScrollPosition
 * @typechecks
 */

"use strict";

/**
 * Gets the scroll position of the supplied element or window.
 *
 * The return values are unbounded, unlike `getScrollPosition`. This means they
 * may be negative or exceed the element boundaries (which is possible using
 * inertial scrolling).
 *
 * @param {DOMWindow|DOMElement} scrollable
 * @return {object} Map with `x` and `y` keys.
 */
function getUnboundedScrollPosition(scrollable) {
  if (scrollable === window) {
    return {
      x: window.pageXOffset || document.documentElement.scrollLeft,
      y: window.pageYOffset || document.documentElement.scrollTop
    };
  }
  return {
    x: scrollable.scrollLeft,
    y: scrollable.scrollTop
  };
}

module.exports = getUnboundedScrollPosition;

},{}],132:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule hyphenate
 * @typechecks
 */

var _uppercasePattern = /([A-Z])/g;

/**
 * Hyphenates a camelcased string, for example:
 *
 *   > hyphenate('backgroundColor')
 *   < "background-color"
 *
 * For CSS style names, use `hyphenateStyleName` instead which works properly
 * with all vendor prefixes, including `ms`.
 *
 * @param {string} string
 * @return {string}
 */
function hyphenate(string) {
  return string.replace(_uppercasePattern, '-$1').toLowerCase();
}

module.exports = hyphenate;

},{}],133:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule hyphenateStyleName
 * @typechecks
 */

"use strict";

var hyphenate = _dereq_(132);

var msPattern = /^ms-/;

/**
 * Hyphenates a camelcased CSS property name, for example:
 *
 *   > hyphenateStyleName('backgroundColor')
 *   < "background-color"
 *   > hyphenateStyleName('MozTransition')
 *   < "-moz-transition"
 *   > hyphenateStyleName('msTransition')
 *   < "-ms-transition"
 *
 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
 * is converted to `-ms-`.
 *
 * @param {string} string
 * @return {string}
 */
function hyphenateStyleName(string) {
  return hyphenate(string).replace(msPattern, '-ms-');
}

module.exports = hyphenateStyleName;

},{"132":132}],134:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule instantiateReactComponent
 * @typechecks static-only
 */

'use strict';

var ReactCompositeComponent = _dereq_(37);
var ReactEmptyComponent = _dereq_(59);
var ReactNativeComponent = _dereq_(73);

var assign = _dereq_(27);
var invariant = _dereq_(135);
var warning = _dereq_(154);

// To avoid a cyclic dependency, we create the final class in this module
var ReactCompositeComponentWrapper = function() { };
assign(
  ReactCompositeComponentWrapper.prototype,
  ReactCompositeComponent.Mixin,
  {
    _instantiateReactComponent: instantiateReactComponent
  }
);

/**
 * Check if the type reference is a known internal type. I.e. not a user
 * provided composite type.
 *
 * @param {function} type
 * @return {boolean} Returns true if this is a valid internal type.
 */
function isInternalComponentType(type) {
  return (
    typeof type === 'function' &&
    typeof type.prototype !== 'undefined' &&
    typeof type.prototype.mountComponent === 'function' &&
    typeof type.prototype.receiveComponent === 'function'
  );
}

/**
 * Given a ReactNode, create an instance that will actually be mounted.
 *
 * @param {ReactNode} node
 * @param {*} parentCompositeType The composite type that resolved this.
 * @return {object} A new instance of the element's constructor.
 * @protected
 */
function instantiateReactComponent(node, parentCompositeType) {
  var instance;

  if (node === null || node === false) {
    node = ReactEmptyComponent.emptyElement;
  }

  if (typeof node === 'object') {
    var element = node;
    if ("production" !== "development") {
      ("production" !== "development" ? warning(
        element && (typeof element.type === 'function' ||
                    typeof element.type === 'string'),
        'Only functions or strings can be mounted as React components.'
      ) : null);
    }

    // Special case string values
    if (parentCompositeType === element.type &&
        typeof element.type === 'string') {
      // Avoid recursion if the wrapper renders itself.
      instance = ReactNativeComponent.createInternalComponent(element);
      // All native components are currently wrapped in a composite so we're
      // safe to assume that this is what we should instantiate.
    } else if (isInternalComponentType(element.type)) {
      // This is temporarily available for custom components that are not string
      // represenations. I.e. ART. Once those are updated to use the string
      // representation, we can drop this code path.
      instance = new element.type(element);
    } else {
      instance = new ReactCompositeComponentWrapper();
    }
  } else if (typeof node === 'string' || typeof node === 'number') {
    instance = ReactNativeComponent.createInstanceForText(node);
  } else {
    ("production" !== "development" ? invariant(
      false,
      'Encountered invalid React node of type %s',
      typeof node
    ) : invariant(false));
  }

  if ("production" !== "development") {
    ("production" !== "development" ? warning(
      typeof instance.construct === 'function' &&
      typeof instance.mountComponent === 'function' &&
      typeof instance.receiveComponent === 'function' &&
      typeof instance.unmountComponent === 'function',
      'Only React Components can be mounted.'
    ) : null);
  }

  // Sets up the instance. This can probably just move into the constructor now.
  instance.construct(node);

  // These two fields are used by the DOM and ART diffing algorithms
  // respectively. Instead of using expandos on components, we should be
  // storing the state needed by the diffing algorithms elsewhere.
  instance._mountIndex = 0;
  instance._mountImage = null;

  if ("production" !== "development") {
    instance._isOwnerNecessary = false;
    instance._warnedAboutRefsInRender = false;
  }

  // Internal instances should fully constructed at this point, so they should
  // not get any new fields added to them at this point.
  if ("production" !== "development") {
    if (Object.preventExtensions) {
      Object.preventExtensions(instance);
    }
  }

  return instance;
}

module.exports = instantiateReactComponent;

},{"135":135,"154":154,"27":27,"37":37,"59":59,"73":73}],135:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule invariant
 */

"use strict";

/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

var invariant = function(condition, format, a, b, c, d, e, f) {
  if ("production" !== "development") {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  }

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error(
        'Minified exception occurred; use the non-minified dev environment ' +
        'for the full error message and additional helpful warnings.'
      );
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(
        'Invariant Violation: ' +
        format.replace(/%s/g, function() { return args[argIndex++]; })
      );
    }

    error.framesToPop = 1; // we don't care about invariant's own frame
    throw error;
  }
};

module.exports = invariant;

},{}],136:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule isEventSupported
 */

'use strict';

var ExecutionEnvironment = _dereq_(21);

var useHasFeature;
if (ExecutionEnvironment.canUseDOM) {
  useHasFeature =
    document.implementation &&
    document.implementation.hasFeature &&
    // always returns true in newer browsers as per the standard.
    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
    document.implementation.hasFeature('', '') !== true;
}

/**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @param {?boolean} capture Check if the capture phase is supported.
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */
function isEventSupported(eventNameSuffix, capture) {
  if (!ExecutionEnvironment.canUseDOM ||
      capture && !('addEventListener' in document)) {
    return false;
  }

  var eventName = 'on' + eventNameSuffix;
  var isSupported = eventName in document;

  if (!isSupported) {
    var element = document.createElement('div');
    element.setAttribute(eventName, 'return;');
    isSupported = typeof element[eventName] === 'function';
  }

  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
    // This is the only way to test support for the `wheel` event in IE9+.
    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
  }

  return isSupported;
}

module.exports = isEventSupported;

},{"21":21}],137:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule isNode
 * @typechecks
 */

/**
 * @param {*} object The object to check.
 * @return {boolean} Whether or not the object is a DOM node.
 */
function isNode(object) {
  return !!(object && (
    ((typeof Node === 'function' ? object instanceof Node : typeof object === 'object' &&
    typeof object.nodeType === 'number' &&
    typeof object.nodeName === 'string'))
  ));
}

module.exports = isNode;

},{}],138:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule isTextInputElement
 */

'use strict';

/**
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
 */
var supportedInputTypes = {
  'color': true,
  'date': true,
  'datetime': true,
  'datetime-local': true,
  'email': true,
  'month': true,
  'number': true,
  'password': true,
  'range': true,
  'search': true,
  'tel': true,
  'text': true,
  'time': true,
  'url': true,
  'week': true
};

function isTextInputElement(elem) {
  return elem && (
    (elem.nodeName === 'INPUT' && supportedInputTypes[elem.type] || elem.nodeName === 'TEXTAREA')
  );
}

module.exports = isTextInputElement;

},{}],139:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule isTextNode
 * @typechecks
 */

var isNode = _dereq_(137);

/**
 * @param {*} object The object to check.
 * @return {boolean} Whether or not the object is a DOM text node.
 */
function isTextNode(object) {
  return isNode(object) && object.nodeType == 3;
}

module.exports = isTextNode;

},{"137":137}],140:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule keyMirror
 * @typechecks static-only
 */

'use strict';

var invariant = _dereq_(135);

/**
 * Constructs an enumeration with keys equal to their value.
 *
 * For example:
 *
 *   var COLORS = keyMirror({blue: null, red: null});
 *   var myColor = COLORS.blue;
 *   var isColorValid = !!COLORS[myColor];
 *
 * The last line could not be performed if the values of the generated enum were
 * not equal to their keys.
 *
 *   Input:  {key1: val1, key2: val2}
 *   Output: {key1: key1, key2: key2}
 *
 * @param {object} obj
 * @return {object}
 */
var keyMirror = function(obj) {
  var ret = {};
  var key;
  ("production" !== "development" ? invariant(
    obj instanceof Object && !Array.isArray(obj),
    'keyMirror(...): Argument must be an object.'
  ) : invariant(obj instanceof Object && !Array.isArray(obj)));
  for (key in obj) {
    if (!obj.hasOwnProperty(key)) {
      continue;
    }
    ret[key] = key;
  }
  return ret;
};

module.exports = keyMirror;

},{"135":135}],141:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule keyOf
 */

/**
 * Allows extraction of a minified key. Let's the build system minify keys
 * without loosing the ability to dynamically use key strings as values
 * themselves. Pass in an object with a single key/val pair and it will return
 * you the string key of that single record. Suppose you want to grab the
 * value for a key 'className' inside of an object. Key/val minification may
 * have aliased that key to be 'xa12'. keyOf({className: null}) will return
 * 'xa12' in that case. Resolve keys you want to use once at startup time, then
 * reuse those resolutions.
 */
var keyOf = function(oneKeyObj) {
  var key;
  for (key in oneKeyObj) {
    if (!oneKeyObj.hasOwnProperty(key)) {
      continue;
    }
    return key;
  }
  return null;
};


module.exports = keyOf;

},{}],142:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule mapObject
 */

'use strict';

var hasOwnProperty = Object.prototype.hasOwnProperty;

/**
 * Executes the provided `callback` once for each enumerable own property in the
 * object and constructs a new object from the results. The `callback` is
 * invoked with three arguments:
 *
 *  - the property value
 *  - the property name
 *  - the object being traversed
 *
 * Properties that are added after the call to `mapObject` will not be visited
 * by `callback`. If the values of existing properties are changed, the value
 * passed to `callback` will be the value at the time `mapObject` visits them.
 * Properties that are deleted before being visited are not visited.
 *
 * @grep function objectMap()
 * @grep function objMap()
 *
 * @param {?object} object
 * @param {function} callback
 * @param {*} context
 * @return {?object}
 */
function mapObject(object, callback, context) {
  if (!object) {
    return null;
  }
  var result = {};
  for (var name in object) {
    if (hasOwnProperty.call(object, name)) {
      result[name] = callback.call(context, object[name], name, object);
    }
  }
  return result;
}

module.exports = mapObject;

},{}],143:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule memoizeStringOnly
 * @typechecks static-only
 */

'use strict';

/**
 * Memoizes the return value of a function that accepts one string argument.
 *
 * @param {function} callback
 * @return {function}
 */
function memoizeStringOnly(callback) {
  var cache = {};
  return function(string) {
    if (!cache.hasOwnProperty(string)) {
      cache[string] = callback.call(this, string);
    }
    return cache[string];
  };
}

module.exports = memoizeStringOnly;

},{}],144:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule onlyChild
 */
'use strict';

var ReactElement = _dereq_(57);

var invariant = _dereq_(135);

/**
 * Returns the first child in a collection of children and verifies that there
 * is only one child in the collection. The current implementation of this
 * function assumes that a single child gets passed without a wrapper, but the
 * purpose of this helper function is to abstract away the particular structure
 * of children.
 *
 * @param {?object} children Child collection structure.
 * @return {ReactComponent} The first and only `ReactComponent` contained in the
 * structure.
 */
function onlyChild(children) {
  ("production" !== "development" ? invariant(
    ReactElement.isValidElement(children),
    'onlyChild must be passed a children with exactly one child.'
  ) : invariant(ReactElement.isValidElement(children)));
  return children;
}

module.exports = onlyChild;

},{"135":135,"57":57}],145:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule performance
 * @typechecks
 */

"use strict";

var ExecutionEnvironment = _dereq_(21);

var performance;

if (ExecutionEnvironment.canUseDOM) {
  performance =
    window.performance ||
    window.msPerformance ||
    window.webkitPerformance;
}

module.exports = performance || {};

},{"21":21}],146:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule performanceNow
 * @typechecks
 */

var performance = _dereq_(145);

/**
 * Detect if we can use `window.performance.now()` and gracefully fallback to
 * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now
 * because of Facebook's testing infrastructure.
 */
if (!performance || !performance.now) {
  performance = Date;
}

var performanceNow = performance.now.bind(performance);

module.exports = performanceNow;

},{"145":145}],147:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule quoteAttributeValueForBrowser
 */

'use strict';

var escapeTextContentForBrowser = _dereq_(116);

/**
 * Escapes attribute value to prevent scripting attacks.
 *
 * @param {*} value Value to escape.
 * @return {string} An escaped string.
 */
function quoteAttributeValueForBrowser(value) {
  return '"' + escapeTextContentForBrowser(value) + '"';
}

module.exports = quoteAttributeValueForBrowser;

},{"116":116}],148:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule setInnerHTML
 */

/* globals MSApp */

'use strict';

var ExecutionEnvironment = _dereq_(21);

var WHITESPACE_TEST = /^[ \r\n\t\f]/;
var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;

/**
 * Set the innerHTML property of a node, ensuring that whitespace is preserved
 * even in IE8.
 *
 * @param {DOMElement} node
 * @param {string} html
 * @internal
 */
var setInnerHTML = function(node, html) {
  node.innerHTML = html;
};

// Win8 apps: Allow all html to be inserted
if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
  setInnerHTML = function(node, html) {
    MSApp.execUnsafeLocalFunction(function() {
      node.innerHTML = html;
    });
  };
}

if (ExecutionEnvironment.canUseDOM) {
  // IE8: When updating a just created node with innerHTML only leading
  // whitespace is removed. When updating an existing node with innerHTML
  // whitespace in root TextNodes is also collapsed.
  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html

  // Feature detection; only IE8 is known to behave improperly like this.
  var testElement = document.createElement('div');
  testElement.innerHTML = ' ';
  if (testElement.innerHTML === '') {
    setInnerHTML = function(node, html) {
      // Magic theory: IE8 supposedly differentiates between added and updated
      // nodes when processing innerHTML, innerHTML on updated nodes suffers
      // from worse whitespace behavior. Re-adding a node like this triggers
      // the initial and more favorable whitespace behavior.
      // TODO: What to do on a detached node?
      if (node.parentNode) {
        node.parentNode.replaceChild(node, node);
      }

      // We also implement a workaround for non-visible tags disappearing into
      // thin air on IE8, this only happens if there is no visible text
      // in-front of the non-visible tags. Piggyback on the whitespace fix
      // and simply check if any non-visible tags appear in the source.
      if (WHITESPACE_TEST.test(html) ||
          html[0] === '<' && NONVISIBLE_TEST.test(html)) {
        // Recover leading whitespace by temporarily prepending any character.
        // \uFEFF has the potential advantage of being zero-width/invisible.
        node.innerHTML = '\uFEFF' + html;

        // deleteData leaves an empty `TextNode` which offsets the index of all
        // children. Definitely want to avoid this.
        var textNode = node.firstChild;
        if (textNode.data.length === 1) {
          node.removeChild(textNode);
        } else {
          textNode.deleteData(0, 1);
        }
      } else {
        node.innerHTML = html;
      }
    };
  }
}

module.exports = setInnerHTML;

},{"21":21}],149:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule setTextContent
 */

'use strict';

var ExecutionEnvironment = _dereq_(21);
var escapeTextContentForBrowser = _dereq_(116);
var setInnerHTML = _dereq_(148);

/**
 * Set the textContent property of a node, ensuring that whitespace is preserved
 * even in IE8. innerText is a poor substitute for textContent and, among many
 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
 * as it should.
 *
 * @param {DOMElement} node
 * @param {string} text
 * @internal
 */
var setTextContent = function(node, text) {
  node.textContent = text;
};

if (ExecutionEnvironment.canUseDOM) {
  if (!('textContent' in document.documentElement)) {
    setTextContent = function(node, text) {
      setInnerHTML(node, escapeTextContentForBrowser(text));
    };
  }
}

module.exports = setTextContent;

},{"116":116,"148":148,"21":21}],150:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule shallowEqual
 */

'use strict';

/**
 * Performs equality by iterating through keys on an object and returning
 * false when any key has values which are not strictly equal between
 * objA and objB. Returns true when the values of all keys are strictly equal.
 *
 * @return {boolean}
 */
function shallowEqual(objA, objB) {
  if (objA === objB) {
    return true;
  }
  var key;
  // Test for A's keys different from B.
  for (key in objA) {
    if (objA.hasOwnProperty(key) &&
        (!objB.hasOwnProperty(key) || objA[key] !== objB[key])) {
      return false;
    }
  }
  // Test for B's keys missing from A.
  for (key in objB) {
    if (objB.hasOwnProperty(key) && !objA.hasOwnProperty(key)) {
      return false;
    }
  }
  return true;
}

module.exports = shallowEqual;

},{}],151:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule shouldUpdateReactComponent
 * @typechecks static-only
 */

'use strict';

var warning = _dereq_(154);

/**
 * Given a `prevElement` and `nextElement`, determines if the existing
 * instance should be updated as opposed to being destroyed or replaced by a new
 * instance. Both arguments are elements. This ensures that this logic can
 * operate on stateless trees without any backing instance.
 *
 * @param {?object} prevElement
 * @param {?object} nextElement
 * @return {boolean} True if the existing instance should be updated.
 * @protected
 */
function shouldUpdateReactComponent(prevElement, nextElement) {
  if (prevElement != null && nextElement != null) {
    var prevType = typeof prevElement;
    var nextType = typeof nextElement;
    if (prevType === 'string' || prevType === 'number') {
      return (nextType === 'string' || nextType === 'number');
    } else {
      if (nextType === 'object' &&
          prevElement.type === nextElement.type &&
          prevElement.key === nextElement.key) {
        var ownersMatch = prevElement._owner === nextElement._owner;
        var prevName = null;
        var nextName = null;
        var nextDisplayName = null;
        if ("production" !== "development") {
          if (!ownersMatch) {
            if (prevElement._owner != null &&
                prevElement._owner.getPublicInstance() != null &&
                prevElement._owner.getPublicInstance().constructor != null) {
              prevName =
                prevElement._owner.getPublicInstance().constructor.displayName;
            }
            if (nextElement._owner != null &&
                nextElement._owner.getPublicInstance() != null &&
                nextElement._owner.getPublicInstance().constructor != null) {
              nextName =
                nextElement._owner.getPublicInstance().constructor.displayName;
            }
            if (nextElement.type != null &&
                nextElement.type.displayName != null) {
              nextDisplayName = nextElement.type.displayName;
            }
            if (nextElement.type != null && typeof nextElement.type === 'string') {
              nextDisplayName = nextElement.type;
            }
            if (typeof nextElement.type !== 'string' ||
                nextElement.type === 'input' ||
                nextElement.type === 'textarea') {
              if ((prevElement._owner != null &&
                  prevElement._owner._isOwnerNecessary === false) ||
                  (nextElement._owner != null &&
                  nextElement._owner._isOwnerNecessary === false)) {
                if (prevElement._owner != null) {
                  prevElement._owner._isOwnerNecessary = true;
                }
                if (nextElement._owner != null) {
                  nextElement._owner._isOwnerNecessary = true;
                }
                ("production" !== "development" ? warning(
                  false,
                  '<%s /> is being rendered by both %s and %s using the same ' +
                  'key (%s) in the same place. Currently, this means that ' +
                  'they don\'t preserve state. This behavior should be very ' +
                  'rare so we\'re considering deprecating it. Please contact ' +
                  'the React team and explain your use case so that we can ' +
                  'take that into consideration.',
                  nextDisplayName || 'Unknown Component',
                  prevName || '[Unknown]',
                  nextName || '[Unknown]',
                  prevElement.key
                ) : null);
              }
            }
          }
        }
        return ownersMatch;
      }
    }
  }
  return false;
}

module.exports = shouldUpdateReactComponent;

},{"154":154}],152:[function(_dereq_,module,exports){
/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule toArray
 * @typechecks
 */

var invariant = _dereq_(135);

/**
 * Convert array-like objects to arrays.
 *
 * This API assumes the caller knows the contents of the data type. For less
 * well defined inputs use createArrayFromMixed.
 *
 * @param {object|function|filelist} obj
 * @return {array}
 */
function toArray(obj) {
  var length = obj.length;

  // Some browse builtin objects can report typeof 'function' (e.g. NodeList in
  // old versions of Safari).
  ("production" !== "development" ? invariant(
    !Array.isArray(obj) &&
    (typeof obj === 'object' || typeof obj === 'function'),
    'toArray: Array-like object expected'
  ) : invariant(!Array.isArray(obj) &&
  (typeof obj === 'object' || typeof obj === 'function')));

  ("production" !== "development" ? invariant(
    typeof length === 'number',
    'toArray: Object needs a length property'
  ) : invariant(typeof length === 'number'));

  ("production" !== "development" ? invariant(
    length === 0 ||
    (length - 1) in obj,
    'toArray: Object should have keys for indices'
  ) : invariant(length === 0 ||
  (length - 1) in obj));

  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
  // without method will throw during the slice call and skip straight to the
  // fallback.
  if (obj.hasOwnProperty) {
    try {
      return Array.prototype.slice.call(obj);
    } catch (e) {
      // IE < 9 does not support Array#slice on collections objects
    }
  }

  // Fall back to copying key by key. This assumes all keys have a value,
  // so will not preserve sparsely populated inputs.
  var ret = Array(length);
  for (var ii = 0; ii < length; ii++) {
    ret[ii] = obj[ii];
  }
  return ret;
}

module.exports = toArray;

},{"135":135}],153:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule traverseAllChildren
 */

'use strict';

var ReactElement = _dereq_(57);
var ReactFragment = _dereq_(63);
var ReactInstanceHandles = _dereq_(66);

var getIteratorFn = _dereq_(126);
var invariant = _dereq_(135);
var warning = _dereq_(154);

var SEPARATOR = ReactInstanceHandles.SEPARATOR;
var SUBSEPARATOR = ':';

/**
 * TODO: Test that a single child and an array with one item have the same key
 * pattern.
 */

var userProvidedKeyEscaperLookup = {
  '=': '=0',
  '.': '=1',
  ':': '=2'
};

var userProvidedKeyEscapeRegex = /[=.:]/g;

var didWarnAboutMaps = false;

function userProvidedKeyEscaper(match) {
  return userProvidedKeyEscaperLookup[match];
}

/**
 * Generate a key string that identifies a component within a set.
 *
 * @param {*} component A component that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */
function getComponentKey(component, index) {
  if (component && component.key != null) {
    // Explicit key
    return wrapUserProvidedKey(component.key);
  }
  // Implicit key determined by the index in the set
  return index.toString(36);
}

/**
 * Escape a component key so that it is safe to use in a reactid.
 *
 * @param {*} key Component key to be escaped.
 * @return {string} An escaped string.
 */
function escapeUserProvidedKey(text) {
  return ('' + text).replace(
    userProvidedKeyEscapeRegex,
    userProvidedKeyEscaper
  );
}

/**
 * Wrap a `key` value explicitly provided by the user to distinguish it from
 * implicitly-generated keys generated by a component's index in its parent.
 *
 * @param {string} key Value of a user-provided `key` attribute
 * @return {string}
 */
function wrapUserProvidedKey(key) {
  return '$' + escapeUserProvidedKey(key);
}

/**
 * @param {?*} children Children tree container.
 * @param {!string} nameSoFar Name of the key path so far.
 * @param {!number} indexSoFar Number of children encountered until this point.
 * @param {!function} callback Callback to invoke with each child found.
 * @param {?*} traverseContext Used to pass information throughout the traversal
 * process.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildrenImpl(
  children,
  nameSoFar,
  indexSoFar,
  callback,
  traverseContext
) {
  var type = typeof children;

  if (type === 'undefined' || type === 'boolean') {
    // All of the above are perceived as null.
    children = null;
  }

  if (children === null ||
      type === 'string' ||
      type === 'number' ||
      ReactElement.isValidElement(children)) {
    callback(
      traverseContext,
      children,
      // If it's the only child, treat the name as if it was wrapped in an array
      // so that it's consistent if the number of children grows.
      nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar,
      indexSoFar
    );
    return 1;
  }

  var child, nextName, nextIndex;
  var subtreeCount = 0; // Count of children found in the current subtree.

  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      nextName = (
        (nameSoFar !== '' ? nameSoFar + SUBSEPARATOR : SEPARATOR) +
        getComponentKey(child, i)
      );
      nextIndex = indexSoFar + subtreeCount;
      subtreeCount += traverseAllChildrenImpl(
        child,
        nextName,
        nextIndex,
        callback,
        traverseContext
      );
    }
  } else {
    var iteratorFn = getIteratorFn(children);
    if (iteratorFn) {
      var iterator = iteratorFn.call(children);
      var step;
      if (iteratorFn !== children.entries) {
        var ii = 0;
        while (!(step = iterator.next()).done) {
          child = step.value;
          nextName = (
            (nameSoFar !== '' ? nameSoFar + SUBSEPARATOR : SEPARATOR) +
            getComponentKey(child, ii++)
          );
          nextIndex = indexSoFar + subtreeCount;
          subtreeCount += traverseAllChildrenImpl(
            child,
            nextName,
            nextIndex,
            callback,
            traverseContext
          );
        }
      } else {
        if ("production" !== "development") {
          ("production" !== "development" ? warning(
            didWarnAboutMaps,
            'Using Maps as children is not yet fully supported. It is an ' +
            'experimental feature that might be removed. Convert it to a ' +
            'sequence / iterable of keyed ReactElements instead.'
          ) : null);
          didWarnAboutMaps = true;
        }
        // Iterator will provide entry [k,v] tuples rather than values.
        while (!(step = iterator.next()).done) {
          var entry = step.value;
          if (entry) {
            child = entry[1];
            nextName = (
              (nameSoFar !== '' ? nameSoFar + SUBSEPARATOR : SEPARATOR) +
              wrapUserProvidedKey(entry[0]) + SUBSEPARATOR +
              getComponentKey(child, 0)
            );
            nextIndex = indexSoFar + subtreeCount;
            subtreeCount += traverseAllChildrenImpl(
              child,
              nextName,
              nextIndex,
              callback,
              traverseContext
            );
          }
        }
      }
    } else if (type === 'object') {
      ("production" !== "development" ? invariant(
        children.nodeType !== 1,
        'traverseAllChildren(...): Encountered an invalid child; DOM ' +
        'elements are not valid children of React components.'
      ) : invariant(children.nodeType !== 1));
      var fragment = ReactFragment.extract(children);
      for (var key in fragment) {
        if (fragment.hasOwnProperty(key)) {
          child = fragment[key];
          nextName = (
            (nameSoFar !== '' ? nameSoFar + SUBSEPARATOR : SEPARATOR) +
            wrapUserProvidedKey(key) + SUBSEPARATOR +
            getComponentKey(child, 0)
          );
          nextIndex = indexSoFar + subtreeCount;
          subtreeCount += traverseAllChildrenImpl(
            child,
            nextName,
            nextIndex,
            callback,
            traverseContext
          );
        }
      }
    }
  }

  return subtreeCount;
}

/**
 * Traverses children that are typically specified as `props.children`, but
 * might also be specified through attributes:
 *
 * - `traverseAllChildren(this.props.children, ...)`
 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
 *
 * The `traverseContext` is an optional argument that is passed through the
 * entire traversal. It can be used to store accumulations or anything else that
 * the callback might find relevant.
 *
 * @param {?*} children Children tree object.
 * @param {!function} callback To invoke upon traversing each child.
 * @param {?*} traverseContext Context for traversal.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildren(children, callback, traverseContext) {
  if (children == null) {
    return 0;
  }

  return traverseAllChildrenImpl(children, '', 0, callback, traverseContext);
}

module.exports = traverseAllChildren;

},{"126":126,"135":135,"154":154,"57":57,"63":63,"66":66}],154:[function(_dereq_,module,exports){
/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule warning
 */

"use strict";

var emptyFunction = _dereq_(114);

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warning = emptyFunction;

if ("production" !== "development") {
  warning = function(condition, format ) {for (var args=[],$__0=2,$__1=arguments.length;$__0<$__1;$__0++) args.push(arguments[$__0]);
    if (format === undefined) {
      throw new Error(
        '`warning(condition, format, ...args)` requires a warning ' +
        'message argument'
      );
    }

    if (format.length < 10 || /^[s\W]*$/.test(format)) {
      throw new Error(
        'The warning format should be able to uniquely identify this ' +
        'warning. Please, use a more descriptive format than: ' + format
      );
    }

    if (format.indexOf('Failed Composite propType: ') === 0) {
      return; // Ignore CompositeComponent proptype check.
    }

    if (!condition) {
      var argIndex = 0;
      var message = 'Warning: ' + format.replace(/%s/g, function()  {return args[argIndex++];});
      console.warn(message);
      try {
        // --- Welcome to debugging React ---
        // This error was thrown as a convenience so that you can use this stack
        // to find the callsite that caused this warning to fire.
        throw new Error(message);
      } catch(x) {}
    }
  };
}

module.exports = warning;

},{"114":114}]},{},[1])(1)
});
var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.define("goog.DEBUG", true);
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.define("goog.DISALLOW_TEST_ONLY_CODE", COMPILED && !goog.DEBUG);
goog.define("goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING", false);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
  }
  goog.constructNamespace_(name);
};
goog.constructNamespace_ = function(name, opt_obj) {
  if (!COMPILED) {
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name, opt_obj);
};
goog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
goog.module = function(name) {
  if (!goog.isString(name) || !name || name.search(goog.VALID_MODULE_RE_) == -1) {
    throw Error("Invalid module identifier");
  }
  if (!goog.isInModuleLoader_()) {
    throw Error("Module " + name + " has been loaded incorrectly.");
  }
  if (goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module may only be called once per module.");
  }
  goog.moduleLoaderState_.moduleName = name;
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
  }
};
goog.module.get = function(name) {
  return goog.module.getInternal_(name);
};
goog.module.getInternal_ = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return name in goog.loadedModules_ ? goog.loadedModules_[name] : goog.getObjectByName(name);
    } else {
      return null;
    }
  }
};
goog.moduleLoaderState_ = null;
goog.isInModuleLoader_ = function() {
  return goog.moduleLoaderState_ != null;
};
goog.module.declareLegacyNamespace = function() {
  if (!COMPILED && !goog.isInModuleLoader_()) {
    throw new Error("goog.module.declareLegacyNamespace must be called from " + "within a goog.module");
  }
  if (!COMPILED && !goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module must be called prior to " + "goog.module.declareLegacyNamespace.");
  }
  goog.moduleLoaderState_.declareLegacyNamespace = true;
};
goog.setTestOnly = function(opt_message) {
  if (goog.DISALLOW_TEST_ONLY_CODE) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return name in goog.loadedModules_ || !goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {"goog.module":true};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires, opt_isModule) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      deps.pathIsModule[path] = !!opt_isModule;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.logToConsole_ = function(msg) {
  if (goog.global.console) {
    goog.global.console["error"](msg);
  }
};
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.ENABLE_DEBUG_LOADER && goog.IS_OLD_IE_) {
      goog.maybeProcessDeferredDep_(name);
    }
    if (goog.isProvided_(name)) {
      if (goog.isInModuleLoader_()) {
        return goog.module.getInternal_(name);
      } else {
        return null;
      }
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return null;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    goog.logToConsole_(errorMessage);
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.define("goog.LOAD_MODULE_USING_EVAL", true);
goog.define("goog.SEAL_MODULE_EXPORTS", goog.DEBUG);
goog.loadedModules_ = {};
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.included_ = {};
  goog.dependencies_ = {pathIsModule:{}, nameToPath:{}, requires:{}, visited:{}, written:{}, deferred:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.isDef(goog.global.CLOSURE_BASE_PATH)) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("SCRIPT");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var script = (scripts[i]);
      var src = script.src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src, opt_sourceText) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (importScript(src, opt_sourceText)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.IS_OLD_IE_ = !!(!goog.global.atob && goog.global.document && goog.global.document.all);
  goog.importModule_ = function(src) {
    var bootstrap = 'goog.retrieveAndExecModule_("' + src + '");';
    if (goog.importScript_("", bootstrap)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.queuedModules_ = [];
  goog.wrapModule_ = function(srcUrl, scriptText) {
    if (!goog.LOAD_MODULE_USING_EVAL || !goog.isDef(goog.global.JSON)) {
      return "" + "goog.loadModule(function(exports) {" + '"use strict";' + scriptText + "\n" + ";return exports" + "});" + "\n//# sourceURL\x3d" + srcUrl + "\n";
    } else {
      return "" + "goog.loadModule(" + goog.global.JSON.stringify(scriptText + "\n//# sourceURL\x3d" + srcUrl + "\n") + ");";
    }
  };
  goog.loadQueuedModules_ = function() {
    var count = goog.queuedModules_.length;
    if (count > 0) {
      var queue = goog.queuedModules_;
      goog.queuedModules_ = [];
      for (var i = 0;i < count;i++) {
        var path = queue[i];
        goog.maybeProcessDeferredPath_(path);
      }
    }
  };
  goog.maybeProcessDeferredDep_ = function(name) {
    if (goog.isDeferredModule_(name) && goog.allDepsAreAvailable_(name)) {
      var path = goog.getPathFromDeps_(name);
      goog.maybeProcessDeferredPath_(goog.basePath + path);
    }
  };
  goog.isDeferredModule_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    if (path && goog.dependencies_.pathIsModule[path]) {
      var abspath = goog.basePath + path;
      return abspath in goog.dependencies_.deferred;
    }
    return false;
  };
  goog.allDepsAreAvailable_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    if (path && path in goog.dependencies_.requires) {
      for (var requireName in goog.dependencies_.requires[path]) {
        if (!goog.isProvided_(requireName) && !goog.isDeferredModule_(requireName)) {
          return false;
        }
      }
    }
    return true;
  };
  goog.maybeProcessDeferredPath_ = function(abspath) {
    if (abspath in goog.dependencies_.deferred) {
      var src = goog.dependencies_.deferred[abspath];
      delete goog.dependencies_.deferred[abspath];
      goog.globalEval(src);
    }
  };
  goog.loadModule = function(moduleDef) {
    var previousState = goog.moduleLoaderState_;
    try {
      goog.moduleLoaderState_ = {moduleName:undefined};
      var exports;
      if (goog.isFunction(moduleDef)) {
        exports = moduleDef.call(goog.global, {});
      } else {
        if (goog.isString(moduleDef)) {
          exports = goog.loadModuleFromSource_.call(goog.global, moduleDef);
        } else {
          throw Error("Invalid module definition");
        }
      }
      var moduleName = goog.moduleLoaderState_.moduleName;
      if (!goog.isString(moduleName) || !moduleName) {
        throw Error('Invalid module name "' + moduleName + '"');
      }
      if (goog.moduleLoaderState_.declareLegacyNamespace) {
        goog.constructNamespace_(moduleName, exports);
      } else {
        if (goog.SEAL_MODULE_EXPORTS && Object.seal) {
          Object.seal(exports);
        }
      }
      goog.loadedModules_[moduleName] = exports;
    } finally {
      goog.moduleLoaderState_ = previousState;
    }
  };
  goog.loadModuleFromSource_ = function(source) {
    var exports = {};
    eval(arguments[0]);
    return exports;
  };
  goog.writeScriptSrcNode_ = function(src) {
    goog.global.document.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
  };
  goog.appendScriptSrcNode_ = function(src) {
    var doc = goog.global.document;
    var scriptEl = doc.createElement("script");
    scriptEl.type = "text/javascript";
    scriptEl.src = src;
    scriptEl.defer = false;
    scriptEl.async = false;
    doc.head.appendChild(scriptEl);
  };
  goog.writeScriptTag_ = function(src, opt_sourceText) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING && doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      var isOldIE = goog.IS_OLD_IE_;
      if (opt_sourceText === undefined) {
        if (!isOldIE) {
          if (goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING) {
            goog.appendScriptSrcNode_(src);
          } else {
            goog.writeScriptSrcNode_(src);
          }
        } else {
          var state = " onreadystatechange\x3d'goog.onScriptLoad_(this, " + ++goog.lastNonModuleScriptIndex_ + ")' ";
          doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"' + state + "\x3e\x3c/" + "script\x3e");
        }
      } else {
        doc.write('\x3cscript type\x3d"text/javascript"\x3e' + opt_sourceText + "\x3c/" + "script\x3e");
      }
      return true;
    } else {
      return false;
    }
  };
  goog.lastNonModuleScriptIndex_ = 0;
  goog.onScriptLoad_ = function(script, scriptIndex) {
    if (script.readyState == "complete" && goog.lastNonModuleScriptIndex_ == scriptIndex) {
      goog.loadQueuedModules_();
    }
    return true;
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      var path = scripts[i];
      goog.dependencies_.written[path] = true;
    }
    var moduleState = goog.moduleLoaderState_;
    goog.moduleLoaderState_ = null;
    var loadingModule = false;
    for (var i = 0;i < scripts.length;i++) {
      var path = scripts[i];
      if (path) {
        if (!deps.pathIsModule[path]) {
          goog.importScript_(goog.basePath + path);
        } else {
          loadingModule = true;
          goog.importModule_(goog.basePath + path);
        }
      } else {
        goog.moduleLoaderState_ = moduleState;
        throw Error("Undefined script input");
      }
    }
    goog.moduleLoaderState_ = moduleState;
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.normalizePath_ = function(path) {
  var components = path.split("/");
  var i = 0;
  while (i < components.length) {
    if (components[i] == ".") {
      components.splice(i, 1);
    } else {
      if (i && components[i] == ".." && components[i - 1] && components[i - 1] != "..") {
        components.splice(--i, 2);
      } else {
        i++;
      }
    }
  }
  return components.join("/");
};
goog.loadFileSync_ = function(src) {
  if (goog.global.CLOSURE_LOAD_FILE_SYNC) {
    return goog.global.CLOSURE_LOAD_FILE_SYNC(src);
  } else {
    var xhr = new goog.global["XMLHttpRequest"];
    xhr.open("get", src, false);
    xhr.send();
    return xhr.responseText;
  }
};
goog.retrieveAndExecModule_ = function(src) {
  if (!COMPILED) {
    var originalPath = src;
    src = goog.normalizePath_(src);
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    var scriptText = goog.loadFileSync_(src);
    if (scriptText != null) {
      var execModuleScript = goog.wrapModule_(src, scriptText);
      var isOldIE = goog.IS_OLD_IE_;
      if (isOldIE) {
        goog.dependencies_.deferred[originalPath] = execModuleScript;
        goog.queuedModules_.push(originalPath);
      } else {
        importScript(src, execModuleScript);
      }
    } else {
      throw new Error("load of " + src + "failed");
    }
  }
};
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return !!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return (fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return +new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _evalTest_ \x3d 1;");
        if (typeof goog.global["_evalTest_"] != "undefined") {
          try {
            delete goog.global["_evalTest_"];
          } catch (ignore) {
          }
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("SCRIPT");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = new Array(arguments.length - 2);
    for (var i = 2;i < arguments.length;i++) {
      args[i - 2] = arguments[i];
    }
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    var ctorArgs = new Array(arguments.length - 1);
    for (var i = 1;i < arguments.length;i++) {
      ctorArgs[i - 1] = arguments[i];
    }
    return caller.superClass_.constructor.apply(me, ctorArgs);
  }
  var args = new Array(arguments.length - 2);
  for (var i = 2;i < arguments.length;i++) {
    args[i - 2] = arguments[i];
  }
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      instance[goog.UID_PROPERTY_] = instance[goog.UID_PROPERTY_];
      if (this.constructor === wrappedCtr) {
        Object.seal(instance);
      }
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.define("goog.string.FORCE_NON_DOM_HTML_UNESCAPING", false);
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmptyOrWhitespace = function(str) {
  return /^[\s\xa0]*$/.test(str);
};
goog.string.isEmptyString = function(str) {
  return str.length == 0;
};
goog.string.isEmpty = goog.string.isEmptyOrWhitespace;
goog.string.isEmptyOrWhitespaceSafe = function(str) {
  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(str));
};
goog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe;
goog.string.isBreakingWhitespace = function(str) {
  return !/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return !/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return !/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return !/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = goog.TRUSTED_SITE && String.prototype.trim ? function(str) {
  return str.trim();
} : function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return -1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return -1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if (!goog.string.FORCE_NON_DOM_HTML_UNESCAPING && "document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return '"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return (new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return -1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmptyOrWhitespace(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return /^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return /^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.capitalize = function(str) {
  return String(str.charAt(0)).toUpperCase() + String(str.substr(1)).toLowerCase();
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return /^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.string.editDistance = function(a, b) {
  var v0 = [];
  var v1 = [];
  if (a == b) {
    return 0;
  }
  if (!a.length || !b.length) {
    return Math.max(a.length, b.length);
  }
  for (var i = 0;i < b.length + 1;i++) {
    v0[i] = i;
  }
  for (var i = 0;i < a.length;i++) {
    v1[0] = i + 1;
    for (var j = 0;j < b.length;j++) {
      var cost = a[i] != b[j];
      v1[j + 1] = Math.min(v1[j] + 1, v0[j + 1] + 1, v0[j] + cost);
    }
    for (var j = 0;j < v0.length;j++) {
      v0[j] = v1[j];
    }
  }
  return v1[b.length];
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.setWithReturnValueIfNotSet = function(obj, key, f) {
  if (key in obj) {
    return obj[key];
  }
  var val = f();
  obj[key] = val;
  return val;
};
goog.object.equals = function(a, b) {
  for (var k in a) {
    if (!(k in b) || a[k] !== b[k]) {
      return false;
    }
  }
  for (var k in b) {
    if (!(k in a)) {
      return false;
    }
  }
  return true;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return !!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
  this.reportErrorToServer = true;
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.", [goog.asserts.getType_(type), goog.asserts.getType_(value)], opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.asserts.getType_ = function(value) {
  if (value instanceof Function) {
    return value.displayName || value.name || "unknown type name";
  } else {
    if (value instanceof Object) {
      return value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value);
    } else {
      return value === null ? "null" : typeof value;
    }
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.removeAllIf = function(arr, f, opt_obj) {
  var removedCount = 0;
  goog.array.forEachRight(arr, function(val, index) {
    if (f.call(opt_obj, val, index, arr)) {
      if (goog.array.removeAt(arr, index)) {
        removedCount++;
      }
    }
  });
  return removedCount;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return [];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    if (goog.isArrayLike(arr2)) {
      var len1 = arr1.length || 0;
      var len2 = arr2.length || 0;
      arr1.length = len1 + len2;
      for (var j = 0;j < len2;j++) {
        arr1[len1 + j] = arr2[j];
      }
    } else {
      arr1.push(arr2);
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(item) ? "o" + goog.getUid(item) : (typeof item).charAt(0) + item;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortByKey = function(arr, keyFn, opt_compareFn) {
  var keyCompareFn = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return keyCompareFn(keyFn(a), keyFn(b));
  });
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  goog.array.sortByKey(arr, function(obj) {
    return obj[key];
  }, opt_compareFn);
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.inverseDefaultCompare = function(a, b) {
  return -goog.array.defaultCompare(a, b);
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return [];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var CHUNK_SIZE = 8192;
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      for (var c = 0;c < element.length;c += CHUNK_SIZE) {
        var chunk = goog.array.slice(element, c, c + CHUNK_SIZE);
        var recurseResult = goog.array.flatten.apply(null, chunk);
        for (var r = 0;r < recurseResult.length;r++) {
          result.push(recurseResult[r]);
        }
      }
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return [];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.array.copyByIndex = function(arr, index_arr) {
  var result = [];
  goog.array.forEach(index_arr, function(index) {
    result.push(arr[index]);
  });
  return result;
};
goog.provide("cljs.core");
goog.require("goog.string");
goog.require("goog.object");
goog.require("goog.array");
goog.require("goog.string.StringBuffer");
cljs.core._STAR_clojurescript_version_STAR_ = "1.7.48";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_target_STAR_ = "default";
cljs.core._STAR_ns_STAR_ = null;
cljs.core._STAR_out_STAR_ = null;
cljs.core._STAR_assert_STAR_ = true;
if (typeof cljs.core._STAR_print_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_fn_STAR_ = function cljs$core$_STAR_print_fn_STAR_(_) {
    throw new Error("No *print-fn* fn set for evaluation environment");
  };
}
if (typeof cljs.core._STAR_print_err_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_err_fn_STAR_ = function cljs$core$_STAR_print_err_fn_STAR_(_) {
    throw new Error("No *print-err-fn* fn set for evaluation environment");
  };
}
cljs.core.set_print_fn_BANG_ = function cljs$core$set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core.set_print_err_fn_BANG_ = function cljs$core$set_print_err_fn_BANG_(f) {
  return cljs.core._STAR_print_err_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if (typeof cljs.core._STAR_loaded_libs_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = function cljs$core$pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function cljs$core$enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  cljs.core._STAR_print_fn_STAR_ = function() {
    var G__23963__delegate = function(args) {
      return console.log.apply(console, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args) : cljs.core.into_array.call(null, args));
    };
    var G__23963 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__23964__i = 0, G__23964__a = new Array(arguments.length - 0);
        while (G__23964__i < G__23964__a.length) {
          G__23964__a[G__23964__i] = arguments[G__23964__i + 0];
          ++G__23964__i;
        }
        args = new cljs.core.IndexedSeq(G__23964__a, 0);
      }
      return G__23963__delegate.call(this, args);
    };
    G__23963.cljs$lang$maxFixedArity = 0;
    G__23963.cljs$lang$applyTo = function(arglist__23965) {
      var args = cljs.core.seq(arglist__23965);
      return G__23963__delegate(args);
    };
    G__23963.cljs$core$IFn$_invoke$arity$variadic = G__23963__delegate;
    return G__23963;
  }();
  cljs.core._STAR_print_err_fn_STAR_ = function() {
    var G__23966__delegate = function(args) {
      return console.error.apply(console, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args) : cljs.core.into_array.call(null, args));
    };
    var G__23966 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__23967__i = 0, G__23967__a = new Array(arguments.length - 0);
        while (G__23967__i < G__23967__a.length) {
          G__23967__a[G__23967__i] = arguments[G__23967__i + 0];
          ++G__23967__i;
        }
        args = new cljs.core.IndexedSeq(G__23967__a, 0);
      }
      return G__23966__delegate.call(this, args);
    };
    G__23966.cljs$lang$maxFixedArity = 0;
    G__23966.cljs$lang$applyTo = function(arglist__23968) {
      var args = cljs.core.seq(arglist__23968);
      return G__23966__delegate(args);
    };
    G__23966.cljs$core$IFn$_invoke$arity$variadic = G__23966__delegate;
    return G__23966;
  }();
  return null;
};
cljs.core.truth_ = function cljs$core$truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function cljs$core$identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function cljs$core$nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function cljs$core$array_QMARK_(x) {
  if (cljs.core._STAR_target_STAR_ === "nodejs") {
    return Array.isArray(x);
  } else {
    return x instanceof Array;
  }
};
cljs.core.number_QMARK_ = function cljs$core$number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function cljs$core$not(x) {
  if (x == null) {
    return true;
  } else {
    if (x === false) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.some_QMARK_ = function cljs$core$some_QMARK_(x) {
  return !(x == null);
};
cljs.core.object_QMARK_ = function cljs$core$object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function cljs$core$string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.char_QMARK_ = function cljs$core$char_QMARK_(x) {
  return goog.string.isUnicodeChar(x);
};
cljs.core.native_satisfies_QMARK_ = function cljs$core$native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function cljs$core$is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function cljs$core$type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function cljs$core$missing_protocol(proto, obj) {
  var ty = cljs.core.type(obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__4514__auto__ = ty;
    if (cljs.core.truth_(and__4514__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__4514__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function cljs$core$type__GT_str(ty) {
  var temp__4423__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4423__auto__)) {
    var s = temp__4423__auto__;
    return s;
  } else {
    return [cljs.core.str(ty)].join("");
  }
};
cljs.core.load_file = function cljs$core$load_file(file) {
  if (cljs.core.truth_(COMPILED)) {
    return null;
  } else {
    return goog.nodeGlobalRequire(file);
  }
};
if (typeof Symbol !== "undefined" && goog.typeOf(Symbol) === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.CHAR_MAP = {"]":"_RBRACK_", "'":"_SINGLEQUOTE_", "\x3d":"_EQ_", '"':"_DOUBLEQUOTE_", "!":"_BANG_", "*":"_STAR_", "%":"_PERCENT_", "|":"_BAR_", "~":"_TILDE_", "/":"_SLASH_", "\\":"_BSLASH_", "-":"_", "?":"_QMARK_", "\x26":"_AMPERSAND_", ":":"_COLON_", "\x3c":"_LT_", "{":"_LBRACE_", "}":"_RBRACE_", "[":"_LBRACK_", "#":"_SHARP_", "^":"_CARET_", "+":"_PLUS_", "@":"_CIRCA_", "\x3e":"_GT_"};
cljs.core.DEMUNGE_MAP = {"_RBRACE_":"}", "_COLON_":":", "_BANG_":"!", "_QMARK_":"?", "_BSLASH_":"\\\\", "_SLASH_":"/", "_PERCENT_":"%", "_PLUS_":"+", "_SHARP_":"#", "_LBRACE_":"{", "_BAR_":"|", "_LBRACK_":"[", "_EQ_":"\x3d", "_":"-", "_TILDE_":"~", "_RBRACK_":"]", "_GT_":"\x3e", "_SINGLEQUOTE_":"'", "_CIRCA_":"@", "_AMPERSAND_":"\x26", "_DOUBLEQUOTE_":'\\"', "_CARET_":"^", "_LT_":"\x3c", "_STAR_":"*"};
cljs.core.DEMUNGE_PATTERN = null;
cljs.core.make_array = function cljs$core$make_array() {
  var args23969 = [];
  var len__5565__auto___23972 = arguments.length;
  var i__5566__auto___23973 = 0;
  while (true) {
    if (i__5566__auto___23973 < len__5565__auto___23972) {
      args23969.push(arguments[i__5566__auto___23973]);
      var G__23974 = i__5566__auto___23973 + 1;
      i__5566__auto___23973 = G__23974;
      continue;
    } else {
    }
    break;
  }
  var G__23971 = args23969.length;
  switch(G__23971) {
    case 1:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23969.length)].join(""));;
  }
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$1 = function(size) {
  return new Array(size);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$2 = function(type, size) {
  return new Array(size);
};
cljs.core.make_array.cljs$lang$maxFixedArity = 2;
cljs.core.aclone = function cljs$core$aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__5410__auto___23976 = len;
  var i_23977 = 0;
  while (true) {
    if (i_23977 < n__5410__auto___23976) {
      new_arr[i_23977] = arr[i_23977];
      var G__23978 = i_23977 + 1;
      i_23977 = G__23978;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function cljs$core$array(var_args) {
  var a = new Array(arguments.length);
  var i = 0;
  while (true) {
    if (i < a.length) {
      a[i] = arguments[i];
      var G__23979 = i + 1;
      i = G__23979;
      continue;
    } else {
      return a;
    }
    break;
  }
};
cljs.core.aget = function cljs$core$aget() {
  var args23980 = [];
  var len__5565__auto___23989 = arguments.length;
  var i__5566__auto___23990 = 0;
  while (true) {
    if (i__5566__auto___23990 < len__5565__auto___23989) {
      args23980.push(arguments[i__5566__auto___23990]);
      var G__23991 = i__5566__auto___23990 + 1;
      i__5566__auto___23990 = G__23991;
      continue;
    } else {
    }
    break;
  }
  var G__23985 = args23980.length;
  switch(G__23985) {
    case 2:
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args23980.slice(2), 0);
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return array[i];
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic = function(array, i, idxs) {
  var G__23986 = cljs.core.aget;
  var G__23987 = array[i];
  var G__23988 = idxs;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__23986, G__23987, G__23988) : cljs.core.apply.call(null, G__23986, G__23987, G__23988);
};
cljs.core.aget.cljs$lang$applyTo = function(seq23981) {
  var G__23982 = cljs.core.first(seq23981);
  var seq23981__$1 = cljs.core.next(seq23981);
  var G__23983 = cljs.core.first(seq23981__$1);
  var seq23981__$2 = cljs.core.next(seq23981__$1);
  return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(G__23982, G__23983, seq23981__$2);
};
cljs.core.aget.cljs$lang$maxFixedArity = 2;
cljs.core.aset = function cljs$core$aset() {
  var args23993 = [];
  var len__5565__auto___24004 = arguments.length;
  var i__5566__auto___24005 = 0;
  while (true) {
    if (i__5566__auto___24005 < len__5565__auto___24004) {
      args23993.push(arguments[i__5566__auto___24005]);
      var G__24006 = i__5566__auto___24005 + 1;
      i__5566__auto___24005 = G__24006;
      continue;
    } else {
    }
    break;
  }
  var G__23999 = args23993.length;
  switch(G__23999) {
    case 3:
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args23993.slice(3), 0);
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5584__auto__);
  }
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$3 = function(array, i, val) {
  return array[i] = val;
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idx2, idxv) {
  var G__24000 = cljs.core.aset;
  var G__24001 = array[idx];
  var G__24002 = idx2;
  var G__24003 = idxv;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__24000, G__24001, G__24002, G__24003) : cljs.core.apply.call(null, G__24000, G__24001, G__24002, G__24003);
};
cljs.core.aset.cljs$lang$applyTo = function(seq23994) {
  var G__23995 = cljs.core.first(seq23994);
  var seq23994__$1 = cljs.core.next(seq23994);
  var G__23996 = cljs.core.first(seq23994__$1);
  var seq23994__$2 = cljs.core.next(seq23994__$1);
  var G__23997 = cljs.core.first(seq23994__$2);
  var seq23994__$3 = cljs.core.next(seq23994__$2);
  return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(G__23995, G__23996, G__23997, seq23994__$3);
};
cljs.core.aset.cljs$lang$maxFixedArity = 3;
cljs.core.alength = function cljs$core$alength(array) {
  return array.length;
};
cljs.core.into_array = function cljs$core$into_array() {
  var args24008 = [];
  var len__5565__auto___24014 = arguments.length;
  var i__5566__auto___24015 = 0;
  while (true) {
    if (i__5566__auto___24015 < len__5565__auto___24014) {
      args24008.push(arguments[i__5566__auto___24015]);
      var G__24016 = i__5566__auto___24015 + 1;
      i__5566__auto___24015 = G__24016;
      continue;
    } else {
    }
    break;
  }
  var G__24010 = args24008.length;
  switch(G__24010) {
    case 1:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24008.length)].join(""));;
  }
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 = function(aseq) {
  return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(null, aseq);
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$2 = function(type, aseq) {
  var G__24011 = function(a, x) {
    a.push(x);
    return a;
  };
  var G__24012 = [];
  var G__24013 = aseq;
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__24011, G__24012, G__24013) : cljs.core.reduce.call(null, G__24011, G__24012, G__24013);
};
cljs.core.into_array.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke = function cljs$core$js_invoke() {
  var args__5572__auto__ = [];
  var len__5565__auto___24021 = arguments.length;
  var i__5566__auto___24022 = 0;
  while (true) {
    if (i__5566__auto___24022 < len__5565__auto___24021) {
      args__5572__auto__.push(arguments[i__5566__auto___24022]);
      var G__24023 = i__5566__auto___24022 + 1;
      i__5566__auto___24022 = G__24023;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 2 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(2), 0) : null;
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5573__auto__);
};
cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic = function(obj, s, args) {
  return obj[s].apply(obj, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
cljs.core.js_invoke.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke.cljs$lang$applyTo = function(seq24018) {
  var G__24019 = cljs.core.first(seq24018);
  var seq24018__$1 = cljs.core.next(seq24018);
  var G__24020 = cljs.core.first(seq24018__$1);
  var seq24018__$2 = cljs.core.next(seq24018__$1);
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(G__24019, G__24020, seq24018__$2);
};
cljs.core.Fn = {};
cljs.core.IFn = {};
cljs.core._invoke = function cljs$core$_invoke() {
  var args24028 = [];
  var len__5565__auto___24031 = arguments.length;
  var i__5566__auto___24032 = 0;
  while (true) {
    if (i__5566__auto___24032 < len__5565__auto___24031) {
      args24028.push(arguments[i__5566__auto___24032]);
      var G__24033 = i__5566__auto___24032 + 1;
      i__5566__auto___24032 = G__24033;
      continue;
    } else {
    }
    break;
  }
  var G__24030 = args24028.length;
  switch(G__24030) {
    case 1:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    case 8:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$8(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7]);
      break;
    case 9:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$9(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8]);
      break;
    case 10:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$10(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9]);
      break;
    case 11:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$11(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10]);
      break;
    case 12:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$12(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11]);
      break;
    case 13:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$13(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12]);
      break;
    case 14:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$14(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13]);
      break;
    case 15:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$15(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14]);
      break;
    case 16:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$16(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15]);
      break;
    case 17:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$17(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16]);
      break;
    case 18:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$18(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17]);
      break;
    case 19:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$19(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18]);
      break;
    case 20:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$20(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19]);
      break;
    case 21:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$21(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20]);
      break;
    case 22:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$22(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24028.length)].join(""));;
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$1 = function(this$) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$1 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$1(this$);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__5163__auto__.call(null, this$);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(this$) : m__5163__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$2 = function(this$, a) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$2 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(this$, a) : m__5163__auto__.call(null, this$, a);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(this$, a) : m__5163__auto____$1.call(null, this$, a);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$3 = function(this$, a, b) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$3 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$3(this$, a, b) : m__5163__auto__.call(null, this$, a, b);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, a, b) : m__5163__auto____$1.call(null, this$, a, b);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$4 = function(this$, a, b, c) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$4 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$4 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$4(this$, a, b, c) : m__5163__auto__.call(null, this$, a, b, c);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$4 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$4(this$, a, b, c) : m__5163__auto____$1.call(null, this$, a, b, c);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$5 = function(this$, a, b, c, d) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$5 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$5 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d) : m__5163__auto__.call(null, this$, a, b, c, d);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$5 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d) : m__5163__auto____$1.call(null, this$, a, b, c, d);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$6 = function(this$, a, b, c, d, e) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$6 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$6 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e) : m__5163__auto__.call(null, this$, a, b, c, d, e);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$6 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e) : m__5163__auto____$1.call(null, this$, a, b, c, d, e);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$7 = function(this$, a, b, c, d, e, f) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$7 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$7 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f) : m__5163__auto__.call(null, this$, a, b, c, d, e, f);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$7 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f) : m__5163__auto____$1.call(null, this$, a, b, c, d, e, f);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$8 = function(this$, a, b, c, d, e, f, g) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$8 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$8 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g) : m__5163__auto__.call(null, this$, a, b, c, d, e, f, g);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$8 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g) : m__5163__auto____$1.call(null, this$, a, b, c, d, e, f, g);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$9 = function(this$, a, b, c, d, e, f, g, h) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$9 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$9 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h) : m__5163__auto__.call(null, this$, a, b, c, d, e, f, g, h);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$9 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h) : m__5163__auto____$1.call(null, this$, a, b, c, d, e, f, g, h);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$10 = function(this$, a, b, c, d, e, f, g, h, i) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$10 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$10 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i) : m__5163__auto__.call(null, this$, a, b, c, d, e, f, g, h, i);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$10 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i) : m__5163__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$11 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$11 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j) : m__5163__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$11 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j) : m__5163__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$12 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$12 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k) : m__5163__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$12 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k) : m__5163__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$13 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$13 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l) : m__5163__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$13 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l) : m__5163__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$14 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$14 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) : m__5163__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$14 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) : m__5163__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$15 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$15 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) : m__5163__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$15 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) : m__5163__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$16 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$16 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : m__5163__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$16 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : m__5163__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$17 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$17 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : m__5163__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$17 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : m__5163__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$18 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$18 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : m__5163__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$18 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : m__5163__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$19 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$19 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : m__5163__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$19 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : m__5163__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$20 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$20 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : m__5163__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$20 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : m__5163__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$21 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$21 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : m__5163__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$21 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : m__5163__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$22 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$22 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : m__5163__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$22 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : m__5163__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$lang$maxFixedArity = 22;
cljs.core.ICloneable = {};
cljs.core._clone = function cljs$core$_clone(value) {
  if (!(value == null) && !(value.cljs$core$ICloneable$_clone$arity$1 == null)) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__5162__auto__ = value == null ? null : value;
    var m__5163__auto__ = cljs.core._clone[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(value) : m__5163__auto__.call(null, value);
    } else {
      var m__5163__auto____$1 = cljs.core._clone["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(value) : m__5163__auto____$1.call(null, value);
      } else {
        throw cljs.core.missing_protocol("ICloneable.-clone", value);
      }
    }
  }
};
cljs.core.ICounted = {};
cljs.core._count = function cljs$core$_count(coll) {
  if (!(coll == null) && !(coll.cljs$core$ICounted$_count$arity$1 == null)) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._count[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto__.call(null, coll);
    } else {
      var m__5163__auto____$1 = cljs.core._count["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ICounted.-count", coll);
      }
    }
  }
};
cljs.core.IEmptyableCollection = {};
cljs.core._empty = function cljs$core$_empty(coll) {
  if (!(coll == null) && !(coll.cljs$core$IEmptyableCollection$_empty$arity$1 == null)) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._empty[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto__.call(null, coll);
    } else {
      var m__5163__auto____$1 = cljs.core._empty["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IEmptyableCollection.-empty", coll);
      }
    }
  }
};
cljs.core.ICollection = {};
cljs.core._conj = function cljs$core$_conj(coll, o) {
  if (!(coll == null) && !(coll.cljs$core$ICollection$_conj$arity$2 == null)) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._conj[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(coll, o) : m__5163__auto__.call(null, coll, o);
    } else {
      var m__5163__auto____$1 = cljs.core._conj["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, o) : m__5163__auto____$1.call(null, coll, o);
      } else {
        throw cljs.core.missing_protocol("ICollection.-conj", coll);
      }
    }
  }
};
cljs.core.IIndexed = {};
cljs.core._nth = function cljs$core$_nth() {
  var args24045 = [];
  var len__5565__auto___24048 = arguments.length;
  var i__5566__auto___24049 = 0;
  while (true) {
    if (i__5566__auto___24049 < len__5565__auto___24048) {
      args24045.push(arguments[i__5566__auto___24049]);
      var G__24050 = i__5566__auto___24049 + 1;
      i__5566__auto___24049 = G__24050;
      continue;
    } else {
    }
    break;
  }
  var G__24047 = args24045.length;
  switch(G__24047) {
    case 2:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24045.length)].join(""));;
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(coll == null) && !(coll.cljs$core$IIndexed$_nth$arity$2 == null)) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._nth[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(coll, n) : m__5163__auto__.call(null, coll, n);
    } else {
      var m__5163__auto____$1 = cljs.core._nth["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, n) : m__5163__auto____$1.call(null, coll, n);
      } else {
        throw cljs.core.missing_protocol("IIndexed.-nth", coll);
      }
    }
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(coll == null) && !(coll.cljs$core$IIndexed$_nth$arity$3 == null)) {
    return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._nth[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, not_found) : m__5163__auto__.call(null, coll, n, not_found);
    } else {
      var m__5163__auto____$1 = cljs.core._nth["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, n, not_found) : m__5163__auto____$1.call(null, coll, n, not_found);
      } else {
        throw cljs.core.missing_protocol("IIndexed.-nth", coll);
      }
    }
  }
};
cljs.core._nth.cljs$lang$maxFixedArity = 3;
cljs.core.ASeq = {};
cljs.core.ISeq = {};
cljs.core._first = function cljs$core$_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISeq$_first$arity$1 == null)) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._first[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto__.call(null, coll);
    } else {
      var m__5163__auto____$1 = cljs.core._first["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISeq.-first", coll);
      }
    }
  }
};
cljs.core._rest = function cljs$core$_rest(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISeq$_rest$arity$1 == null)) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._rest[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto__.call(null, coll);
    } else {
      var m__5163__auto____$1 = cljs.core._rest["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISeq.-rest", coll);
      }
    }
  }
};
cljs.core.INext = {};
cljs.core._next = function cljs$core$_next(coll) {
  if (!(coll == null) && !(coll.cljs$core$INext$_next$arity$1 == null)) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._next[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto__.call(null, coll);
    } else {
      var m__5163__auto____$1 = cljs.core._next["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("INext.-next", coll);
      }
    }
  }
};
cljs.core.ILookup = {};
cljs.core._lookup = function cljs$core$_lookup() {
  var args24060 = [];
  var len__5565__auto___24063 = arguments.length;
  var i__5566__auto___24064 = 0;
  while (true) {
    if (i__5566__auto___24064 < len__5565__auto___24063) {
      args24060.push(arguments[i__5566__auto___24064]);
      var G__24065 = i__5566__auto___24064 + 1;
      i__5566__auto___24064 = G__24065;
      continue;
    } else {
    }
    break;
  }
  var G__24062 = args24060.length;
  switch(G__24062) {
    case 2:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24060.length)].join(""));;
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (!(o == null) && !(o.cljs$core$ILookup$_lookup$arity$2 == null)) {
    return o.cljs$core$ILookup$_lookup$arity$2(o, k);
  } else {
    var x__5162__auto__ = o == null ? null : o;
    var m__5163__auto__ = cljs.core._lookup[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(o, k) : m__5163__auto__.call(null, o, k);
    } else {
      var m__5163__auto____$1 = cljs.core._lookup["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(o, k) : m__5163__auto____$1.call(null, o, k);
      } else {
        throw cljs.core.missing_protocol("ILookup.-lookup", o);
      }
    }
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null) && !(o.cljs$core$ILookup$_lookup$arity$3 == null)) {
    return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
  } else {
    var x__5162__auto__ = o == null ? null : o;
    var m__5163__auto__ = cljs.core._lookup[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$3(o, k, not_found) : m__5163__auto__.call(null, o, k, not_found);
    } else {
      var m__5163__auto____$1 = cljs.core._lookup["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3(o, k, not_found) : m__5163__auto____$1.call(null, o, k, not_found);
      } else {
        throw cljs.core.missing_protocol("ILookup.-lookup", o);
      }
    }
  }
};
cljs.core._lookup.cljs$lang$maxFixedArity = 3;
cljs.core.IAssociative = {};
cljs.core._contains_key_QMARK_ = function cljs$core$_contains_key_QMARK_(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 == null)) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__5163__auto__.call(null, coll, k);
    } else {
      var m__5163__auto____$1 = cljs.core._contains_key_QMARK_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, k) : m__5163__auto____$1.call(null, coll, k);
      } else {
        throw cljs.core.missing_protocol("IAssociative.-contains-key?", coll);
      }
    }
  }
};
cljs.core._assoc = function cljs$core$_assoc(coll, k, v) {
  if (!(coll == null) && !(coll.cljs$core$IAssociative$_assoc$arity$3 == null)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._assoc[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, v) : m__5163__auto__.call(null, coll, k, v);
    } else {
      var m__5163__auto____$1 = cljs.core._assoc["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, k, v) : m__5163__auto____$1.call(null, coll, k, v);
      } else {
        throw cljs.core.missing_protocol("IAssociative.-assoc", coll);
      }
    }
  }
};
cljs.core.IMap = {};
cljs.core._dissoc = function cljs$core$_dissoc(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IMap$_dissoc$arity$2 == null)) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._dissoc[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__5163__auto__.call(null, coll, k);
    } else {
      var m__5163__auto____$1 = cljs.core._dissoc["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, k) : m__5163__auto____$1.call(null, coll, k);
      } else {
        throw cljs.core.missing_protocol("IMap.-dissoc", coll);
      }
    }
  }
};
cljs.core.IMapEntry = {};
cljs.core._key = function cljs$core$_key(coll) {
  if (!(coll == null) && !(coll.cljs$core$IMapEntry$_key$arity$1 == null)) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._key[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto__.call(null, coll);
    } else {
      var m__5163__auto____$1 = cljs.core._key["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IMapEntry.-key", coll);
      }
    }
  }
};
cljs.core._val = function cljs$core$_val(coll) {
  if (!(coll == null) && !(coll.cljs$core$IMapEntry$_val$arity$1 == null)) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._val[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto__.call(null, coll);
    } else {
      var m__5163__auto____$1 = cljs.core._val["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IMapEntry.-val", coll);
      }
    }
  }
};
cljs.core.ISet = {};
cljs.core._disjoin = function cljs$core$_disjoin(coll, v) {
  if (!(coll == null) && !(coll.cljs$core$ISet$_disjoin$arity$2 == null)) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._disjoin[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(coll, v) : m__5163__auto__.call(null, coll, v);
    } else {
      var m__5163__auto____$1 = cljs.core._disjoin["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, v) : m__5163__auto____$1.call(null, coll, v);
      } else {
        throw cljs.core.missing_protocol("ISet.-disjoin", coll);
      }
    }
  }
};
cljs.core.IStack = {};
cljs.core._peek = function cljs$core$_peek(coll) {
  if (!(coll == null) && !(coll.cljs$core$IStack$_peek$arity$1 == null)) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._peek[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto__.call(null, coll);
    } else {
      var m__5163__auto____$1 = cljs.core._peek["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IStack.-peek", coll);
      }
    }
  }
};
cljs.core._pop = function cljs$core$_pop(coll) {
  if (!(coll == null) && !(coll.cljs$core$IStack$_pop$arity$1 == null)) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._pop[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto__.call(null, coll);
    } else {
      var m__5163__auto____$1 = cljs.core._pop["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IStack.-pop", coll);
      }
    }
  }
};
cljs.core.IVector = {};
cljs.core._assoc_n = function cljs$core$_assoc_n(coll, n, val) {
  if (!(coll == null) && !(coll.cljs$core$IVector$_assoc_n$arity$3 == null)) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._assoc_n[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, val) : m__5163__auto__.call(null, coll, n, val);
    } else {
      var m__5163__auto____$1 = cljs.core._assoc_n["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, n, val) : m__5163__auto____$1.call(null, coll, n, val);
      } else {
        throw cljs.core.missing_protocol("IVector.-assoc-n", coll);
      }
    }
  }
};
cljs.core.IDeref = {};
cljs.core._deref = function cljs$core$_deref(o) {
  if (!(o == null) && !(o.cljs$core$IDeref$_deref$arity$1 == null)) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__5162__auto__ = o == null ? null : o;
    var m__5163__auto__ = cljs.core._deref[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__5163__auto__.call(null, o);
    } else {
      var m__5163__auto____$1 = cljs.core._deref["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__5163__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IDeref.-deref", o);
      }
    }
  }
};
cljs.core.IDerefWithTimeout = {};
cljs.core._deref_with_timeout = function cljs$core$_deref_with_timeout(o, msec, timeout_val) {
  if (!(o == null) && !(o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3 == null)) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__5162__auto__ = o == null ? null : o;
    var m__5163__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$3(o, msec, timeout_val) : m__5163__auto__.call(null, o, msec, timeout_val);
    } else {
      var m__5163__auto____$1 = cljs.core._deref_with_timeout["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3(o, msec, timeout_val) : m__5163__auto____$1.call(null, o, msec, timeout_val);
      } else {
        throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", o);
      }
    }
  }
};
cljs.core.IMeta = {};
cljs.core._meta = function cljs$core$_meta(o) {
  if (!(o == null) && !(o.cljs$core$IMeta$_meta$arity$1 == null)) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__5162__auto__ = o == null ? null : o;
    var m__5163__auto__ = cljs.core._meta[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__5163__auto__.call(null, o);
    } else {
      var m__5163__auto____$1 = cljs.core._meta["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__5163__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IMeta.-meta", o);
      }
    }
  }
};
cljs.core.IWithMeta = {};
cljs.core._with_meta = function cljs$core$_with_meta(o, meta) {
  if (!(o == null) && !(o.cljs$core$IWithMeta$_with_meta$arity$2 == null)) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__5162__auto__ = o == null ? null : o;
    var m__5163__auto__ = cljs.core._with_meta[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(o, meta) : m__5163__auto__.call(null, o, meta);
    } else {
      var m__5163__auto____$1 = cljs.core._with_meta["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(o, meta) : m__5163__auto____$1.call(null, o, meta);
      } else {
        throw cljs.core.missing_protocol("IWithMeta.-with-meta", o);
      }
    }
  }
};
cljs.core.IReduce = {};
cljs.core._reduce = function cljs$core$_reduce() {
  var args24089 = [];
  var len__5565__auto___24092 = arguments.length;
  var i__5566__auto___24093 = 0;
  while (true) {
    if (i__5566__auto___24093 < len__5565__auto___24092) {
      args24089.push(arguments[i__5566__auto___24093]);
      var G__24094 = i__5566__auto___24093 + 1;
      i__5566__auto___24093 = G__24094;
      continue;
    } else {
    }
    break;
  }
  var G__24091 = args24089.length;
  switch(G__24091) {
    case 2:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24089.length)].join(""));;
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$2 = function(coll, f) {
  if (!(coll == null) && !(coll.cljs$core$IReduce$_reduce$arity$2 == null)) {
    return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._reduce[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(coll, f) : m__5163__auto__.call(null, coll, f);
    } else {
      var m__5163__auto____$1 = cljs.core._reduce["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, f) : m__5163__auto____$1.call(null, coll, f);
      } else {
        throw cljs.core.missing_protocol("IReduce.-reduce", coll);
      }
    }
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$3 = function(coll, f, start) {
  if (!(coll == null) && !(coll.cljs$core$IReduce$_reduce$arity$3 == null)) {
    return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._reduce[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, start) : m__5163__auto__.call(null, coll, f, start);
    } else {
      var m__5163__auto____$1 = cljs.core._reduce["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, f, start) : m__5163__auto____$1.call(null, coll, f, start);
      } else {
        throw cljs.core.missing_protocol("IReduce.-reduce", coll);
      }
    }
  }
};
cljs.core._reduce.cljs$lang$maxFixedArity = 3;
cljs.core.IKVReduce = {};
cljs.core._kv_reduce = function cljs$core$_kv_reduce(coll, f, init) {
  if (!(coll == null) && !(coll.cljs$core$IKVReduce$_kv_reduce$arity$3 == null)) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._kv_reduce[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, init) : m__5163__auto__.call(null, coll, f, init);
    } else {
      var m__5163__auto____$1 = cljs.core._kv_reduce["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, f, init) : m__5163__auto____$1.call(null, coll, f, init);
      } else {
        throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", coll);
      }
    }
  }
};
cljs.core.IEquiv = {};
cljs.core._equiv = function cljs$core$_equiv(o, other) {
  if (!(o == null) && !(o.cljs$core$IEquiv$_equiv$arity$2 == null)) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__5162__auto__ = o == null ? null : o;
    var m__5163__auto__ = cljs.core._equiv[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(o, other) : m__5163__auto__.call(null, o, other);
    } else {
      var m__5163__auto____$1 = cljs.core._equiv["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(o, other) : m__5163__auto____$1.call(null, o, other);
      } else {
        throw cljs.core.missing_protocol("IEquiv.-equiv", o);
      }
    }
  }
};
cljs.core.IHash = {};
cljs.core._hash = function cljs$core$_hash(o) {
  if (!(o == null) && !(o.cljs$core$IHash$_hash$arity$1 == null)) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__5162__auto__ = o == null ? null : o;
    var m__5163__auto__ = cljs.core._hash[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__5163__auto__.call(null, o);
    } else {
      var m__5163__auto____$1 = cljs.core._hash["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__5163__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IHash.-hash", o);
      }
    }
  }
};
cljs.core.ISeqable = {};
cljs.core._seq = function cljs$core$_seq(o) {
  if (!(o == null) && !(o.cljs$core$ISeqable$_seq$arity$1 == null)) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__5162__auto__ = o == null ? null : o;
    var m__5163__auto__ = cljs.core._seq[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__5163__auto__.call(null, o);
    } else {
      var m__5163__auto____$1 = cljs.core._seq["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__5163__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("ISeqable.-seq", o);
      }
    }
  }
};
cljs.core.ISequential = {};
cljs.core.IList = {};
cljs.core.IRecord = {};
cljs.core.IReversible = {};
cljs.core._rseq = function cljs$core$_rseq(coll) {
  if (!(coll == null) && !(coll.cljs$core$IReversible$_rseq$arity$1 == null)) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._rseq[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto__.call(null, coll);
    } else {
      var m__5163__auto____$1 = cljs.core._rseq["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IReversible.-rseq", coll);
      }
    }
  }
};
cljs.core.ISorted = {};
cljs.core._sorted_seq = function cljs$core$_sorted_seq(coll, ascending_QMARK_) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_sorted_seq$arity$2 == null)) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._sorted_seq[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(coll, ascending_QMARK_) : m__5163__auto__.call(null, coll, ascending_QMARK_);
    } else {
      var m__5163__auto____$1 = cljs.core._sorted_seq["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, ascending_QMARK_) : m__5163__auto____$1.call(null, coll, ascending_QMARK_);
      } else {
        throw cljs.core.missing_protocol("ISorted.-sorted-seq", coll);
      }
    }
  }
};
cljs.core._sorted_seq_from = function cljs$core$_sorted_seq_from(coll, k, ascending_QMARK_) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_sorted_seq_from$arity$3 == null)) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, ascending_QMARK_) : m__5163__auto__.call(null, coll, k, ascending_QMARK_);
    } else {
      var m__5163__auto____$1 = cljs.core._sorted_seq_from["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, k, ascending_QMARK_) : m__5163__auto____$1.call(null, coll, k, ascending_QMARK_);
      } else {
        throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", coll);
      }
    }
  }
};
cljs.core._entry_key = function cljs$core$_entry_key(coll, entry) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_entry_key$arity$2 == null)) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._entry_key[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(coll, entry) : m__5163__auto__.call(null, coll, entry);
    } else {
      var m__5163__auto____$1 = cljs.core._entry_key["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, entry) : m__5163__auto____$1.call(null, coll, entry);
      } else {
        throw cljs.core.missing_protocol("ISorted.-entry-key", coll);
      }
    }
  }
};
cljs.core._comparator = function cljs$core$_comparator(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_comparator$arity$1 == null)) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._comparator[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto__.call(null, coll);
    } else {
      var m__5163__auto____$1 = cljs.core._comparator["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISorted.-comparator", coll);
      }
    }
  }
};
cljs.core.IWriter = {};
cljs.core._write = function cljs$core$_write(writer, s) {
  if (!(writer == null) && !(writer.cljs$core$IWriter$_write$arity$2 == null)) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__5162__auto__ = writer == null ? null : writer;
    var m__5163__auto__ = cljs.core._write[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(writer, s) : m__5163__auto__.call(null, writer, s);
    } else {
      var m__5163__auto____$1 = cljs.core._write["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(writer, s) : m__5163__auto____$1.call(null, writer, s);
      } else {
        throw cljs.core.missing_protocol("IWriter.-write", writer);
      }
    }
  }
};
cljs.core._flush = function cljs$core$_flush(writer) {
  if (!(writer == null) && !(writer.cljs$core$IWriter$_flush$arity$1 == null)) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__5162__auto__ = writer == null ? null : writer;
    var m__5163__auto__ = cljs.core._flush[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(writer) : m__5163__auto__.call(null, writer);
    } else {
      var m__5163__auto____$1 = cljs.core._flush["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(writer) : m__5163__auto____$1.call(null, writer);
      } else {
        throw cljs.core.missing_protocol("IWriter.-flush", writer);
      }
    }
  }
};
cljs.core.IPrintWithWriter = {};
cljs.core._pr_writer = function cljs$core$_pr_writer(o, writer, opts) {
  if (!(o == null) && !(o.cljs$core$IPrintWithWriter$_pr_writer$arity$3 == null)) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__5162__auto__ = o == null ? null : o;
    var m__5163__auto__ = cljs.core._pr_writer[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$3(o, writer, opts) : m__5163__auto__.call(null, o, writer, opts);
    } else {
      var m__5163__auto____$1 = cljs.core._pr_writer["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3(o, writer, opts) : m__5163__auto____$1.call(null, o, writer, opts);
      } else {
        throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", o);
      }
    }
  }
};
cljs.core.IPending = {};
cljs.core._realized_QMARK_ = function cljs$core$_realized_QMARK_(d) {
  if (!(d == null) && !(d.cljs$core$IPending$_realized_QMARK_$arity$1 == null)) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__5162__auto__ = d == null ? null : d;
    var m__5163__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(d) : m__5163__auto__.call(null, d);
    } else {
      var m__5163__auto____$1 = cljs.core._realized_QMARK_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(d) : m__5163__auto____$1.call(null, d);
      } else {
        throw cljs.core.missing_protocol("IPending.-realized?", d);
      }
    }
  }
};
cljs.core.IWatchable = {};
cljs.core._notify_watches = function cljs$core$_notify_watches(this$, oldval, newval) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_notify_watches$arity$3 == null)) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._notify_watches[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$3(this$, oldval, newval) : m__5163__auto__.call(null, this$, oldval, newval);
    } else {
      var m__5163__auto____$1 = cljs.core._notify_watches["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, oldval, newval) : m__5163__auto____$1.call(null, this$, oldval, newval);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-notify-watches", this$);
      }
    }
  }
};
cljs.core._add_watch = function cljs$core$_add_watch(this$, key, f) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_add_watch$arity$3 == null)) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._add_watch[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$3(this$, key, f) : m__5163__auto__.call(null, this$, key, f);
    } else {
      var m__5163__auto____$1 = cljs.core._add_watch["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, key, f) : m__5163__auto____$1.call(null, this$, key, f);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-add-watch", this$);
      }
    }
  }
};
cljs.core._remove_watch = function cljs$core$_remove_watch(this$, key) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_remove_watch$arity$2 == null)) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._remove_watch[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(this$, key) : m__5163__auto__.call(null, this$, key);
    } else {
      var m__5163__auto____$1 = cljs.core._remove_watch["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(this$, key) : m__5163__auto____$1.call(null, this$, key);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-remove-watch", this$);
      }
    }
  }
};
cljs.core.IEditableCollection = {};
cljs.core._as_transient = function cljs$core$_as_transient(coll) {
  if (!(coll == null) && !(coll.cljs$core$IEditableCollection$_as_transient$arity$1 == null)) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._as_transient[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto__.call(null, coll);
    } else {
      var m__5163__auto____$1 = cljs.core._as_transient["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IEditableCollection.-as-transient", coll);
      }
    }
  }
};
cljs.core.ITransientCollection = {};
cljs.core._conj_BANG_ = function cljs$core$_conj_BANG_(tcoll, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__5162__auto__ = tcoll == null ? null : tcoll;
    var m__5163__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, val) : m__5163__auto__.call(null, tcoll, val);
    } else {
      var m__5163__auto____$1 = cljs.core._conj_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, val) : m__5163__auto____$1.call(null, tcoll, val);
      } else {
        throw cljs.core.missing_protocol("ITransientCollection.-conj!", tcoll);
      }
    }
  }
};
cljs.core._persistent_BANG_ = function cljs$core$_persistent_BANG_(tcoll) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 == null)) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__5162__auto__ = tcoll == null ? null : tcoll;
    var m__5163__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__5163__auto__.call(null, tcoll);
    } else {
      var m__5163__auto____$1 = cljs.core._persistent_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(tcoll) : m__5163__auto____$1.call(null, tcoll);
      } else {
        throw cljs.core.missing_protocol("ITransientCollection.-persistent!", tcoll);
      }
    }
  }
};
cljs.core.ITransientAssociative = {};
cljs.core._assoc_BANG_ = function cljs$core$_assoc_BANG_(tcoll, key, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 == null)) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__5162__auto__ = tcoll == null ? null : tcoll;
    var m__5163__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, key, val) : m__5163__auto__.call(null, tcoll, key, val);
    } else {
      var m__5163__auto____$1 = cljs.core._assoc_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3(tcoll, key, val) : m__5163__auto____$1.call(null, tcoll, key, val);
      } else {
        throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", tcoll);
      }
    }
  }
};
cljs.core.ITransientMap = {};
cljs.core._dissoc_BANG_ = function cljs$core$_dissoc_BANG_(tcoll, key) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__5162__auto__ = tcoll == null ? null : tcoll;
    var m__5163__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, key) : m__5163__auto__.call(null, tcoll, key);
    } else {
      var m__5163__auto____$1 = cljs.core._dissoc_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, key) : m__5163__auto____$1.call(null, tcoll, key);
      } else {
        throw cljs.core.missing_protocol("ITransientMap.-dissoc!", tcoll);
      }
    }
  }
};
cljs.core.ITransientVector = {};
cljs.core._assoc_n_BANG_ = function cljs$core$_assoc_n_BANG_(tcoll, n, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 == null)) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__5162__auto__ = tcoll == null ? null : tcoll;
    var m__5163__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, n, val) : m__5163__auto__.call(null, tcoll, n, val);
    } else {
      var m__5163__auto____$1 = cljs.core._assoc_n_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3(tcoll, n, val) : m__5163__auto____$1.call(null, tcoll, n, val);
      } else {
        throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", tcoll);
      }
    }
  }
};
cljs.core._pop_BANG_ = function cljs$core$_pop_BANG_(tcoll) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1 == null)) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__5162__auto__ = tcoll == null ? null : tcoll;
    var m__5163__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__5163__auto__.call(null, tcoll);
    } else {
      var m__5163__auto____$1 = cljs.core._pop_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(tcoll) : m__5163__auto____$1.call(null, tcoll);
      } else {
        throw cljs.core.missing_protocol("ITransientVector.-pop!", tcoll);
      }
    }
  }
};
cljs.core.ITransientSet = {};
cljs.core._disjoin_BANG_ = function cljs$core$_disjoin_BANG_(tcoll, v) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__5162__auto__ = tcoll == null ? null : tcoll;
    var m__5163__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, v) : m__5163__auto__.call(null, tcoll, v);
    } else {
      var m__5163__auto____$1 = cljs.core._disjoin_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, v) : m__5163__auto____$1.call(null, tcoll, v);
      } else {
        throw cljs.core.missing_protocol("ITransientSet.-disjoin!", tcoll);
      }
    }
  }
};
cljs.core.IComparable = {};
cljs.core._compare = function cljs$core$_compare(x, y) {
  if (!(x == null) && !(x.cljs$core$IComparable$_compare$arity$2 == null)) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__5162__auto__ = x == null ? null : x;
    var m__5163__auto__ = cljs.core._compare[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(x, y) : m__5163__auto__.call(null, x, y);
    } else {
      var m__5163__auto____$1 = cljs.core._compare["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(x, y) : m__5163__auto____$1.call(null, x, y);
      } else {
        throw cljs.core.missing_protocol("IComparable.-compare", x);
      }
    }
  }
};
cljs.core.IChunk = {};
cljs.core._drop_first = function cljs$core$_drop_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunk$_drop_first$arity$1 == null)) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._drop_first[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto__.call(null, coll);
    } else {
      var m__5163__auto____$1 = cljs.core._drop_first["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunk.-drop-first", coll);
      }
    }
  }
};
cljs.core.IChunkedSeq = {};
cljs.core._chunked_first = function cljs$core$_chunked_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedSeq$_chunked_first$arity$1 == null)) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._chunked_first[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto__.call(null, coll);
    } else {
      var m__5163__auto____$1 = cljs.core._chunked_first["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", coll);
      }
    }
  }
};
cljs.core._chunked_rest = function cljs$core$_chunked_rest(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1 == null)) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._chunked_rest[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto__.call(null, coll);
    } else {
      var m__5163__auto____$1 = cljs.core._chunked_rest["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", coll);
      }
    }
  }
};
cljs.core.IChunkedNext = {};
cljs.core._chunked_next = function cljs$core$_chunked_next(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedNext$_chunked_next$arity$1 == null)) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._chunked_next[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto__.call(null, coll);
    } else {
      var m__5163__auto____$1 = cljs.core._chunked_next["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", coll);
      }
    }
  }
};
cljs.core.INamed = {};
cljs.core._name = function cljs$core$_name(x) {
  if (!(x == null) && !(x.cljs$core$INamed$_name$arity$1 == null)) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__5162__auto__ = x == null ? null : x;
    var m__5163__auto__ = cljs.core._name[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__5163__auto__.call(null, x);
    } else {
      var m__5163__auto____$1 = cljs.core._name["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__5163__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("INamed.-name", x);
      }
    }
  }
};
cljs.core._namespace = function cljs$core$_namespace(x) {
  if (!(x == null) && !(x.cljs$core$INamed$_namespace$arity$1 == null)) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__5162__auto__ = x == null ? null : x;
    var m__5163__auto__ = cljs.core._namespace[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__5163__auto__.call(null, x);
    } else {
      var m__5163__auto____$1 = cljs.core._namespace["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__5163__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("INamed.-namespace", x);
      }
    }
  }
};
cljs.core.IAtom = {};
cljs.core.IReset = {};
cljs.core._reset_BANG_ = function cljs$core$_reset_BANG_(o, new_value) {
  if (!(o == null) && !(o.cljs$core$IReset$_reset_BANG_$arity$2 == null)) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__5162__auto__ = o == null ? null : o;
    var m__5163__auto__ = cljs.core._reset_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__5163__auto__.call(null, o, new_value);
    } else {
      var m__5163__auto____$1 = cljs.core._reset_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__5163__auto____$1.call(null, o, new_value);
      } else {
        throw cljs.core.missing_protocol("IReset.-reset!", o);
      }
    }
  }
};
cljs.core.ISwap = {};
cljs.core._swap_BANG_ = function cljs$core$_swap_BANG_() {
  var args24150 = [];
  var len__5565__auto___24153 = arguments.length;
  var i__5566__auto___24154 = 0;
  while (true) {
    if (i__5566__auto___24154 < len__5565__auto___24153) {
      args24150.push(arguments[i__5566__auto___24154]);
      var G__24155 = i__5566__auto___24154 + 1;
      i__5566__auto___24154 = G__24155;
      continue;
    } else {
    }
    break;
  }
  var G__24152 = args24150.length;
  switch(G__24152) {
    case 2:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24150.length)].join(""));;
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(o, f) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$2 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
  } else {
    var x__5162__auto__ = o == null ? null : o;
    var m__5163__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(o, f) : m__5163__auto__.call(null, o, f);
    } else {
      var m__5163__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(o, f) : m__5163__auto____$1.call(null, o, f);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(o, f, a) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$3 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
  } else {
    var x__5162__auto__ = o == null ? null : o;
    var m__5163__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$3(o, f, a) : m__5163__auto__.call(null, o, f, a);
    } else {
      var m__5163__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3(o, f, a) : m__5163__auto____$1.call(null, o, f, a);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(o, f, a, b) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$4 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
  } else {
    var x__5162__auto__ = o == null ? null : o;
    var m__5163__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$4 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$4(o, f, a, b) : m__5163__auto__.call(null, o, f, a, b);
    } else {
      var m__5163__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$4 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$4(o, f, a, b) : m__5163__auto____$1.call(null, o, f, a, b);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5 = function(o, f, a, b, xs) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$5 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
  } else {
    var x__5162__auto__ = o == null ? null : o;
    var m__5163__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$5 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs) : m__5163__auto__.call(null, o, f, a, b, xs);
    } else {
      var m__5163__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$5 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs) : m__5163__auto____$1.call(null, o, f, a, b, xs);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$lang$maxFixedArity = 5;
cljs.core.IVolatile = {};
cljs.core._vreset_BANG_ = function cljs$core$_vreset_BANG_(o, new_value) {
  if (!(o == null) && !(o.cljs$core$IVolatile$_vreset_BANG_$arity$2 == null)) {
    return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o, new_value);
  } else {
    var x__5162__auto__ = o == null ? null : o;
    var m__5163__auto__ = cljs.core._vreset_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__5163__auto__.call(null, o, new_value);
    } else {
      var m__5163__auto____$1 = cljs.core._vreset_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__5163__auto____$1.call(null, o, new_value);
      } else {
        throw cljs.core.missing_protocol("IVolatile.-vreset!", o);
      }
    }
  }
};
cljs.core.IIterable = {};
cljs.core._iterator = function cljs$core$_iterator(coll) {
  if (!(coll == null) && !(coll.cljs$core$IIterable$_iterator$arity$1 == null)) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._iterator[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto__.call(null, coll);
    } else {
      var m__5163__auto____$1 = cljs.core._iterator["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IIterable.-iterator", coll);
      }
    }
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "sb", "sb", -1249746442, null)], null);
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function cljs$core$__GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function cljs$core$pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, cljs.core.pr_opts());
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return [cljs.core.str(sb)].join("");
};
cljs.core.int_rotate_left = function cljs$core$int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(Math.imul(4294967295, 5) === 0)) {
  cljs.core.imul = function cljs$core$imul(a, b) {
    return Math.imul(a, b);
  };
} else {
  cljs.core.imul = function cljs$core$imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353 | 0;
cljs.core.m3_C2 = 461845907 | 0;
cljs.core.m3_mix_K1 = function cljs$core$m3_mix_K1(k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1 | 0, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function cljs$core$m3_mix_H1(h1, k1) {
  return cljs.core.imul(cljs.core.int_rotate_left((h1 | 0) ^ (k1 | 0), 13), 5) + (3864292196 | 0) | 0;
};
cljs.core.m3_fmix = function cljs$core$m3_fmix(h1, len) {
  var h1__$1 = h1 | 0;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul(h1__$3, 2246822507 | 0);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul(h1__$5, 3266489909 | 0);
  var h1__$7 = h1__$6 ^ h1__$6 >>> 16;
  return h1__$7;
};
cljs.core.m3_hash_int = function cljs$core$m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1(in$);
    var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix(h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function cljs$core$m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__24161 = i + 2;
        var G__24162 = cljs.core.m3_mix_H1(h1, cljs.core.m3_mix_K1(in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__24161;
        h1 = G__24162;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix(h1__$1, cljs.core.imul(2, in$.length));
};
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function cljs$core$hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__24165 = i + 1;
          var G__24166 = cljs.core.imul(31, hash) + s.charCodeAt(i);
          i = G__24165;
          hash = G__24166;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function cljs$core$add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function cljs$core$hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache(k);
  }
};
cljs.core.hash = function cljs$core$hash(o) {
  if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 4194304 || o.cljs$core$IHash$ ? true : false : false) {
    return o.cljs$core$IHash$_hash$arity$1(null);
  } else {
    if (typeof o === "number") {
      return Math.floor(o) % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int(cljs.core.hash_string(o));
          } else {
            if (o instanceof Date) {
              return o.valueOf();
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash(o);
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function cljs$core$hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function cljs$core$instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function cljs$core$symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function cljs$core$hash_symbol(sym) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name), cljs.core.hash_string(sym.ns));
};
cljs.core.compare_symbols = function cljs$core$compare_symbols(a, b) {
  if (a.str === b.str) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__4514__auto__ = cljs.core.not(a.ns);
      if (and__4514__auto__) {
        return b.ns;
      } else {
        return and__4514__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__24179 = a.ns;
            var G__24180 = b.ns;
            return goog.array.defaultCompare(G__24179, G__24180);
          }();
          if (0 === nsc) {
            var G__24181 = a.name;
            var G__24182 = b.name;
            return goog.array.defaultCompare(G__24181, G__24182);
          } else {
            return nsc;
          }
        }
      } else {
        var G__24183 = a.name;
        var G__24184 = b.name;
        return goog.array.defaultCompare(G__24183, G__24184);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.call = function() {
  var G__24186 = null;
  var G__24186__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2 ? cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, sym) : cljs.core.get.call(null, coll, sym);
  };
  var G__24186__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3 ? cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found) : cljs.core.get.call(null, coll, sym, not_found);
  };
  G__24186 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__24186__2.call(this, self__, coll);
      case 3:
        return G__24186__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__24186.cljs$core$IFn$_invoke$arity$2 = G__24186__2;
  G__24186.cljs$core$IFn$_invoke$arity$3 = G__24186__3;
  return G__24186;
}();
cljs.core.Symbol.prototype.apply = function(self__, args24185) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args24185)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2 ? cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, sym) : cljs.core.get.call(null, coll, sym);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3 ? cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found) : cljs.core.get.call(null, coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__4942__auto__ = self__._hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_symbol(sym__$1);
    self__._hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, self__.str);
};
cljs.core.Symbol.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, 
  "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function cljs$core$__GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function cljs$core$symbol() {
  var args24187 = [];
  var len__5565__auto___24190 = arguments.length;
  var i__5566__auto___24191 = 0;
  while (true) {
    if (i__5566__auto___24191 < len__5565__auto___24190) {
      args24187.push(arguments[i__5566__auto___24191]);
      var G__24192 = i__5566__auto___24191 + 1;
      i__5566__auto___24191 = G__24192;
      continue;
    } else {
    }
    break;
  }
  var G__24189 = args24187.length;
  switch(G__24189) {
    case 1:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24187.length)].join(""));;
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Symbol) {
    return name;
  } else {
    var idx = name.indexOf("/");
    if (idx === -1) {
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null, name);
    } else {
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(name.substring(0, idx), name.substring(idx + 1, name.length));
    }
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
  return new cljs.core.Symbol(ns, name, sym_str, null, null);
};
cljs.core.symbol.cljs$lang$maxFixedArity = 2;
cljs.core.Var = function(val, sym, _meta) {
  this.val = val;
  this.sym = sym;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2523137;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Var.prototype.isMacro = function() {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).cljs$lang$macro;
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
};
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Var.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Var(self__.val, self__.sym, new_meta);
};
cljs.core.Var.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  if (other instanceof cljs.core.Var) {
    var G__24195 = this$__$1.sym;
    var G__24196 = other.sym;
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 ? cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(G__24195, G__24196) : cljs.core._EQ_.call(null, G__24195, G__24196);
  } else {
    return false;
  }
};
cljs.core.Var.prototype.cljs$core$Fn$ = true;
cljs.core.Var.prototype.call = function() {
  var G__24241 = null;
  var G__24241__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null);
  };
  var G__24241__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a);
  };
  var G__24241__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b);
  };
  var G__24241__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c);
  };
  var G__24241__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d);
  };
  var G__24241__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e);
  };
  var G__24241__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f);
  };
  var G__24241__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g);
  };
  var G__24241__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h);
  };
  var G__24241__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__24241__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__24241__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__24241__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__24241__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__24241__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__24241__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__24241__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__24241__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__24241__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__24241__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__24241__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__24241__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__24197 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    var G__24198 = a;
    var G__24199 = b;
    var G__24200 = c;
    var G__24201 = d;
    var G__24202 = e;
    var G__24203 = f;
    var G__24204 = g;
    var G__24205 = h;
    var G__24206 = i;
    var G__24207 = j;
    var G__24208 = k;
    var G__24209 = l;
    var G__24210 = m;
    var G__24211 = n;
    var G__24212 = o;
    var G__24213 = p;
    var G__24214 = q;
    var G__24215 = r;
    var G__24216 = s;
    var G__24217 = t;
    var G__24218 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__24197, G__24198, G__24199, G__24200, G__24201, G__24202, G__24203, G__24204, G__24205, G__24206, G__24207, G__24208, G__24209, G__24210, G__24211, G__24212, G__24213, G__24214, G__24215, G__24216, G__24217, G__24218) : cljs.core.apply.call(null, G__24197, G__24198, G__24199, G__24200, G__24201, G__24202, G__24203, G__24204, G__24205, G__24206, G__24207, G__24208, G__24209, G__24210, G__24211, 
    G__24212, G__24213, G__24214, G__24215, G__24216, G__24217, G__24218);
  };
  G__24241 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__24241__1.call(this, self__);
      case 2:
        return G__24241__2.call(this, self__, a);
      case 3:
        return G__24241__3.call(this, self__, a, b);
      case 4:
        return G__24241__4.call(this, self__, a, b, c);
      case 5:
        return G__24241__5.call(this, self__, a, b, c, d);
      case 6:
        return G__24241__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__24241__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__24241__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__24241__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__24241__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__24241__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__24241__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__24241__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__24241__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__24241__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__24241__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__24241__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__24241__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__24241__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__24241__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__24241__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__24241__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__24241.cljs$core$IFn$_invoke$arity$1 = G__24241__1;
  G__24241.cljs$core$IFn$_invoke$arity$2 = G__24241__2;
  G__24241.cljs$core$IFn$_invoke$arity$3 = G__24241__3;
  G__24241.cljs$core$IFn$_invoke$arity$4 = G__24241__4;
  G__24241.cljs$core$IFn$_invoke$arity$5 = G__24241__5;
  G__24241.cljs$core$IFn$_invoke$arity$6 = G__24241__6;
  G__24241.cljs$core$IFn$_invoke$arity$7 = G__24241__7;
  G__24241.cljs$core$IFn$_invoke$arity$8 = G__24241__8;
  G__24241.cljs$core$IFn$_invoke$arity$9 = G__24241__9;
  G__24241.cljs$core$IFn$_invoke$arity$10 = G__24241__10;
  G__24241.cljs$core$IFn$_invoke$arity$11 = G__24241__11;
  G__24241.cljs$core$IFn$_invoke$arity$12 = G__24241__12;
  G__24241.cljs$core$IFn$_invoke$arity$13 = G__24241__13;
  G__24241.cljs$core$IFn$_invoke$arity$14 = G__24241__14;
  G__24241.cljs$core$IFn$_invoke$arity$15 = G__24241__15;
  G__24241.cljs$core$IFn$_invoke$arity$16 = G__24241__16;
  G__24241.cljs$core$IFn$_invoke$arity$17 = G__24241__17;
  G__24241.cljs$core$IFn$_invoke$arity$18 = G__24241__18;
  G__24241.cljs$core$IFn$_invoke$arity$19 = G__24241__19;
  G__24241.cljs$core$IFn$_invoke$arity$20 = G__24241__20;
  G__24241.cljs$core$IFn$_invoke$arity$21 = G__24241__21;
  G__24241.cljs$core$IFn$_invoke$arity$22 = G__24241__22;
  return G__24241;
}();
cljs.core.Var.prototype.apply = function(self__, args24194) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args24194)));
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__24219 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  var G__24220 = a;
  var G__24221 = b;
  var G__24222 = c;
  var G__24223 = d;
  var G__24224 = e;
  var G__24225 = f;
  var G__24226 = g;
  var G__24227 = h;
  var G__24228 = i;
  var G__24229 = j;
  var G__24230 = k;
  var G__24231 = l;
  var G__24232 = m;
  var G__24233 = n;
  var G__24234 = o;
  var G__24235 = p;
  var G__24236 = q;
  var G__24237 = r;
  var G__24238 = s;
  var G__24239 = t;
  var G__24240 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__24219, G__24220, G__24221, G__24222, G__24223, G__24224, G__24225, G__24226, G__24227, G__24228, G__24229, G__24230, G__24231, G__24232, G__24233, G__24234, G__24235, G__24236, G__24237, G__24238, G__24239, G__24240) : cljs.core.apply.call(null, G__24219, G__24220, G__24221, G__24222, G__24223, G__24224, G__24225, G__24226, G__24227, G__24228, G__24229, G__24230, G__24231, G__24232, G__24233, 
  G__24234, G__24235, G__24236, G__24237, G__24238, G__24239, G__24240);
};
cljs.core.Var.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "sym", "sym", 195671222, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Var.cljs$lang$type = true;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/Var");
};
cljs.core.__GT_Var = function cljs$core$__GT_Var(val, sym, _meta) {
  return new cljs.core.Var(val, sym, _meta);
};
cljs.core.var_QMARK_ = function cljs$core$var_QMARK_(v) {
  return v instanceof cljs.core.Var;
};
cljs.core.iterable_QMARK_ = function cljs$core$iterable_QMARK_(x) {
  if (!(x == null)) {
    if (false || x.cljs$core$IIterable$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, x);
  }
};
cljs.core.clone = function cljs$core$clone(value) {
  return cljs.core._clone(value);
};
cljs.core.cloneable_QMARK_ = function cljs$core$cloneable_QMARK_(value) {
  if (!(value == null)) {
    if (value.cljs$lang$protocol_mask$partition1$ & 8192 || value.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!value.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, value);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, value);
  }
};
cljs.core.seq = function cljs$core$seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 8388608 || coll.cljs$core$ISeqable$ ? true : false : false) {
      return coll.cljs$core$ISeqable$_seq$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, coll)) {
            return cljs.core._seq(coll);
          } else {
            throw new Error([cljs.core.str(coll), cljs.core.str(" is not ISeqable")].join(""));
          }
        }
      }
    }
  }
};
cljs.core.first = function cljs$core$first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
      return coll.cljs$core$ISeq$_first$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first(s);
      }
    }
  }
};
cljs.core.rest = function cljs$core$rest(coll) {
  if (!(coll == null)) {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
      return coll.cljs$core$ISeq$_rest$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s) {
        return cljs.core._rest(s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function cljs$core$next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 128 || coll.cljs$core$INext$ ? true : false : false) {
      return coll.cljs$core$INext$_next$arity$1(null);
    } else {
      return cljs.core.seq(cljs.core.rest(coll));
    }
  }
};
cljs.core._EQ_ = function cljs$core$_EQ_() {
  var args24254 = [];
  var len__5565__auto___24260 = arguments.length;
  var i__5566__auto___24261 = 0;
  while (true) {
    if (i__5566__auto___24261 < len__5565__auto___24260) {
      args24254.push(arguments[i__5566__auto___24261]);
      var G__24262 = i__5566__auto___24261 + 1;
      i__5566__auto___24261 = G__24262;
      continue;
    } else {
    }
    break;
  }
  var G__24259 = args24254.length;
  switch(G__24259) {
    case 1:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args24254.slice(2), 0);
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  if (x == null) {
    return y == null;
  } else {
    return x === y || cljs.core._equiv(x, y);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
      if (cljs.core.next(more)) {
        var G__24264 = y;
        var G__24265 = cljs.core.first(more);
        var G__24266 = cljs.core.next(more);
        x = G__24264;
        y = G__24265;
        more = G__24266;
        continue;
      } else {
        return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ_.cljs$lang$applyTo = function(seq24255) {
  var G__24256 = cljs.core.first(seq24255);
  var seq24255__$1 = cljs.core.next(seq24255);
  var G__24257 = cljs.core.first(seq24255__$1);
  var seq24255__$2 = cljs.core.next(seq24255__$1);
  return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(G__24256, G__24257, seq24255__$2);
};
cljs.core._EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":x, "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6Iterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function cljs$core$__GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function cljs$core$es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq(coll));
};
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(self__.iter) : cljs.core.es6_iterator_seq.call(null, self__.iter);
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_rest", "_rest", -2100466189, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function cljs$core$__GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function cljs$core$es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return cljs.core.List.EMPTY;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function cljs$core$mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1(hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1(h1, k1);
  return cljs.core.m3_fmix(h1__$1, count);
};
cljs.core.hash_ordered_coll = function cljs$core$hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__24267 = n + 1;
      var G__24268 = cljs.core.imul(31, hash_code) + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__24269 = cljs.core.next(coll__$1);
      n = G__24267;
      hash_code = G__24268;
      coll__$1 = G__24269;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash(1, 0);
cljs.core.hash_unordered_coll = function cljs$core$hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__24270 = n + 1;
      var G__24271 = hash_code + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__24272 = cljs.core.next(coll__$1);
      n = G__24270;
      hash_code = G__24271;
      coll__$1 = G__24272;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash(0, 0);
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.valueOf() === other.valueOf();
};
Date.prototype.cljs$core$IComparable$ = true;
Date.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof Date) {
    var G__24273 = this$__$1.valueOf();
    var G__24274 = other.valueOf();
    return goog.array.defaultCompare(G__24273, G__24274);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(this$__$1), cljs.core.str(" to "), cljs.core.str(other)].join(""));
  }
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.Fn["function"] = true;
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o);
};
cljs.core.inc = function cljs$core$inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function cljs$core$__GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function cljs$core$reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function cljs$core$reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function cljs$core$ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return x;
  } else {
    return cljs.core.reduced(x);
  }
};
cljs.core.unreduced = function cljs$core$unreduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(x) : cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.deref = function cljs$core$deref(o) {
  return cljs.core._deref(o);
};
cljs.core.ci_reduce = function cljs$core$ci_reduce() {
  var args24275 = [];
  var len__5565__auto___24284 = arguments.length;
  var i__5566__auto___24285 = 0;
  while (true) {
    if (i__5566__auto___24285 < len__5565__auto___24284) {
      args24275.push(arguments[i__5566__auto___24285]);
      var G__24286 = i__5566__auto___24285 + 1;
      i__5566__auto___24285 = G__24286;
      continue;
    } else {
    }
    break;
  }
  var G__24277 = args24275.length;
  switch(G__24277) {
    case 2:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24275.length)].join(""));;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2 = function(cicoll, f) {
  var cnt = cljs.core._count(cicoll);
  if (cnt === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, 0);
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__24278 = val;
          var G__24279 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24278, G__24279) : f.call(null, G__24278, G__24279);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__24288 = nval;
          var G__24289 = n + 1;
          val = G__24288;
          n = G__24289;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3 = function(cicoll, f, val) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__24280 = val__$1;
        var G__24281 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24280, G__24281) : f.call(null, G__24280, G__24281);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__24290 = nval;
        var G__24291 = n + 1;
        val__$1 = G__24290;
        n = G__24291;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4 = function(cicoll, f, val, idx) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__24282 = val__$1;
        var G__24283 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24282, G__24283) : f.call(null, G__24282, G__24283);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__24292 = nval;
        var G__24293 = n + 1;
        val__$1 = G__24292;
        n = G__24293;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.array_reduce = function cljs$core$array_reduce() {
  var args24294 = [];
  var len__5565__auto___24303 = arguments.length;
  var i__5566__auto___24304 = 0;
  while (true) {
    if (i__5566__auto___24304 < len__5565__auto___24303) {
      args24294.push(arguments[i__5566__auto___24304]);
      var G__24305 = i__5566__auto___24304 + 1;
      i__5566__auto___24304 = G__24305;
      continue;
    } else {
    }
    break;
  }
  var G__24296 = args24294.length;
  switch(G__24296) {
    case 2:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24294.length)].join(""));;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2 = function(arr, f) {
  var cnt = arr.length;
  if (arr.length === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = arr[0];
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__24297 = val;
          var G__24298 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24297, G__24298) : f.call(null, G__24297, G__24298);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__24307 = nval;
          var G__24308 = n + 1;
          val = G__24307;
          n = G__24308;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3 = function(arr, f, val) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__24299 = val__$1;
        var G__24300 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24299, G__24300) : f.call(null, G__24299, G__24300);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__24309 = nval;
        var G__24310 = n + 1;
        val__$1 = G__24309;
        n = G__24310;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4 = function(arr, f, val, idx) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__24301 = val__$1;
        var G__24302 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24301, G__24302) : f.call(null, G__24301, G__24302);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__24311 = nval;
        var G__24312 = n + 1;
        val__$1 = G__24311;
        n = G__24312;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.counted_QMARK_ = function cljs$core$counted_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 2 || x.cljs$core$ICounted$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, x);
  }
};
cljs.core.indexed_QMARK_ = function cljs$core$indexed_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16 || x.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, x);
  }
};
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function cljs$core$__GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  var x__4838__auto__ = 0;
  var y__4839__auto__ = self__.arr.length - self__.i;
  return x__4838__auto__ > y__4839__auto__ ? x__4838__auto__ : y__4839__auto__;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count(coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(coll__$1, other) : cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.i < self__.arr.length) {
    return this$__$1;
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(o, coll__$1) : cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.IndexedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null)], null);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function cljs$core$__GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.prim_seq = function cljs$core$prim_seq() {
  var args24317 = [];
  var len__5565__auto___24320 = arguments.length;
  var i__5566__auto___24321 = 0;
  while (true) {
    if (i__5566__auto___24321 < len__5565__auto___24320) {
      args24317.push(arguments[i__5566__auto___24321]);
      var G__24322 = i__5566__auto___24321 + 1;
      i__5566__auto___24321 = G__24322;
      continue;
    } else {
    }
    break;
  }
  var G__24319 = args24317.length;
  switch(G__24319) {
    case 1:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24317.length)].join(""));;
  }
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1 = function(prim) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(prim, 0);
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2 = function(prim, i) {
  if (i < prim.length) {
    return new cljs.core.IndexedSeq(prim, i);
  } else {
    return null;
  }
};
cljs.core.prim_seq.cljs$lang$maxFixedArity = 2;
cljs.core.array_seq = function cljs$core$array_seq() {
  var args24324 = [];
  var len__5565__auto___24327 = arguments.length;
  var i__5566__auto___24328 = 0;
  while (true) {
    if (i__5566__auto___24328 < len__5565__auto___24327) {
      args24324.push(arguments[i__5566__auto___24328]);
      var G__24329 = i__5566__auto___24328 + 1;
      i__5566__auto___24328 = G__24329;
      continue;
    } else {
    }
    break;
  }
  var G__24326 = args24324.length;
  switch(G__24326) {
    case 1:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24324.length)].join(""));;
  }
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1 = function(array) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, 0);
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, i);
};
cljs.core.array_seq.cljs$lang$maxFixedArity = 2;
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(coll__$1, other) : cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__24331 = cljs.core.List.EMPTY;
  var G__24332 = self__.meta;
  return cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__24331, G__24332) : cljs.core.with_meta.call(null, G__24331, G__24332);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, col__$1) : cljs.core.seq_reduce.call(null, f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, col__$1) : cljs.core.seq_reduce.call(null, f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(o, coll__$1) : cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.RSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ci", "ci", 2049808339, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function cljs$core$__GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.second = function cljs$core$second(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.ffirst = function cljs$core$ffirst(coll) {
  return cljs.core.first(cljs.core.first(coll));
};
cljs.core.nfirst = function cljs$core$nfirst(coll) {
  return cljs.core.next(cljs.core.first(coll));
};
cljs.core.fnext = function cljs$core$fnext(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.nnext = function cljs$core$nnext(coll) {
  return cljs.core.next(cljs.core.next(coll));
};
cljs.core.last = function cljs$core$last(s) {
  while (true) {
    var sn = cljs.core.next(s);
    if (!(sn == null)) {
      var G__24333 = sn;
      s = G__24333;
      continue;
    } else {
      return cljs.core.first(s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function cljs$core$conj() {
  var args24334 = [];
  var len__5565__auto___24340 = arguments.length;
  var i__5566__auto___24341 = 0;
  while (true) {
    if (i__5566__auto___24341 < len__5565__auto___24340) {
      args24334.push(arguments[i__5566__auto___24341]);
      var G__24342 = i__5566__auto___24341 + 1;
      i__5566__auto___24341 = G__24342;
      continue;
    } else {
    }
    break;
  }
  var G__24339 = args24334.length;
  switch(G__24339) {
    case 0:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args24334.slice(2), 0);
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  if (!(coll == null)) {
    return cljs.core._conj(coll, x);
  } else {
    return cljs.core._conj(cljs.core.List.EMPTY, x);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic = function(coll, x, xs) {
  while (true) {
    if (cljs.core.truth_(xs)) {
      var G__24344 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
      var G__24345 = cljs.core.first(xs);
      var G__24346 = cljs.core.next(xs);
      coll = G__24344;
      x = G__24345;
      xs = G__24346;
      continue;
    } else {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
    }
    break;
  }
};
cljs.core.conj.cljs$lang$applyTo = function(seq24335) {
  var G__24336 = cljs.core.first(seq24335);
  var seq24335__$1 = cljs.core.next(seq24335);
  var G__24337 = cljs.core.first(seq24335__$1);
  var seq24335__$2 = cljs.core.next(seq24335__$1);
  return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(G__24336, G__24337, seq24335__$2);
};
cljs.core.conj.cljs$lang$maxFixedArity = 2;
cljs.core.empty = function cljs$core$empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty(coll);
  }
};
cljs.core.accumulating_seq_count = function cljs$core$accumulating_seq_count(coll) {
  var s = cljs.core.seq(coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_(s)) {
      return acc + cljs.core._count(s);
    } else {
      var G__24347 = cljs.core.next(s);
      var G__24348 = acc + 1;
      s = G__24347;
      acc = G__24348;
      continue;
    }
    break;
  }
};
cljs.core.count = function cljs$core$count(coll) {
  if (!(coll == null)) {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 2 || coll.cljs$core$ICounted$ ? true : false : false) {
      return coll.cljs$core$ICounted$_count$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 8388608 || coll.cljs$core$ISeqable$ ? true : false : false) {
            return cljs.core.accumulating_seq_count(coll);
          } else {
            return cljs.core._count(coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function cljs$core$linear_traversal_nth() {
  var args24353 = [];
  var len__5565__auto___24356 = arguments.length;
  var i__5566__auto___24357 = 0;
  while (true) {
    if (i__5566__auto___24357 < len__5565__auto___24356) {
      args24353.push(arguments[i__5566__auto___24357]);
      var G__24358 = i__5566__auto___24357 + 1;
      i__5566__auto___24357 = G__24358;
      continue;
    } else {
    }
    break;
  }
  var G__24355 = args24353.length;
  switch(G__24355) {
    case 2:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24353.length)].join(""));;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  while (true) {
    if (coll == null) {
      throw new Error("Index out of bounds");
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          throw new Error("Index out of bounds");
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
        } else {
          if (cljs.core.seq(coll)) {
            var G__24360 = cljs.core.next(coll);
            var G__24361 = n - 1;
            coll = G__24360;
            n = G__24361;
            continue;
          } else {
            throw new Error("Index out of bounds");
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  while (true) {
    if (coll == null) {
      return not_found;
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          return not_found;
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
        } else {
          if (cljs.core.seq(coll)) {
            var G__24362 = cljs.core.next(coll);
            var G__24363 = n - 1;
            var G__24364 = not_found;
            coll = G__24362;
            n = G__24363;
            not_found = G__24364;
            continue;
          } else {
            return not_found;
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$lang$maxFixedArity = 3;
cljs.core.nth = function cljs$core$nth() {
  var args24365 = [];
  var len__5565__auto___24372 = arguments.length;
  var i__5566__auto___24373 = 0;
  while (true) {
    if (i__5566__auto___24373 < len__5565__auto___24372) {
      args24365.push(arguments[i__5566__auto___24373]);
      var G__24374 = i__5566__auto___24373 + 1;
      i__5566__auto___24373 = G__24374;
      continue;
    } else {
    }
    break;
  }
  var G__24367 = args24365.length;
  switch(G__24367) {
    case 2:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24365.length)].join(""));;
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(typeof n === "number")) {
    throw new Error("index argument to nth must be a number");
  } else {
    if (coll == null) {
      return coll;
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 16 || coll.cljs$core$IIndexed$ ? true : false : false) {
        return coll.cljs$core$IIndexed$_nth$arity$2(null, n);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return null;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll.charAt(n);
            } else {
              return null;
            }
          } else {
            if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
              return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll, n);
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(typeof n === "number")) {
    throw new Error("index argument to nth must be a number.");
  } else {
    if (coll == null) {
      return not_found;
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 16 || coll.cljs$core$IIndexed$ ? true : false : false) {
        return coll.cljs$core$IIndexed$_nth$arity$3(null, n, not_found);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return not_found;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll.charAt(n);
            } else {
              return not_found;
            }
          } else {
            if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
              return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$lang$maxFixedArity = 3;
cljs.core.nthrest = function cljs$core$nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    if (n__$1 > 0 && cljs.core.seq(xs)) {
      var G__24376 = n__$1 - 1;
      var G__24377 = cljs.core.rest(xs);
      n__$1 = G__24376;
      xs = G__24377;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function cljs$core$get() {
  var args24378 = [];
  var len__5565__auto___24383 = arguments.length;
  var i__5566__auto___24384 = 0;
  while (true) {
    if (i__5566__auto___24384 < len__5565__auto___24383) {
      args24378.push(arguments[i__5566__auto___24384]);
      var G__24385 = i__5566__auto___24384 + 1;
      i__5566__auto___24384 = G__24385;
      continue;
    } else {
    }
    break;
  }
  var G__24380 = args24378.length;
  switch(G__24380) {
    case 2:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24378.length)].join(""));;
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (o == null) {
    return null;
  } else {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 256 || o.cljs$core$ILookup$ ? true : false : false) {
      return o.cljs$core$ILookup$_lookup$arity$2(null, k);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (k < o.length) {
          return o[k | 0];
        } else {
          return null;
        }
      } else {
        if (typeof o === "string") {
          if (k < o.length) {
            return o[k | 0];
          } else {
            return null;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o, k);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null)) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 256 || o.cljs$core$ILookup$ ? true : false : false) {
      return o.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (k < o.length) {
          return o[k];
        } else {
          return not_found;
        }
      } else {
        if (typeof o === "string") {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
          } else {
            return not_found;
          }
        }
      }
    }
  } else {
    return not_found;
  }
};
cljs.core.get.cljs$lang$maxFixedArity = 3;
cljs.core.assoc = function cljs$core$assoc() {
  var args24387 = [];
  var len__5565__auto___24394 = arguments.length;
  var i__5566__auto___24395 = 0;
  while (true) {
    if (i__5566__auto___24395 < len__5565__auto___24394) {
      args24387.push(arguments[i__5566__auto___24395]);
      var G__24396 = i__5566__auto___24395 + 1;
      i__5566__auto___24395 = G__24396;
      continue;
    } else {
    }
    break;
  }
  var G__24393 = args24387.length;
  switch(G__24393) {
    case 3:
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args24387.slice(3), 0);
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5584__auto__);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$3 = function(coll, k, v) {
  if (!(coll == null)) {
    return cljs.core._assoc(coll, k, v);
  } else {
    return cljs.core.PersistentHashMap.fromArrays([k], [v]);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, v, kvs) {
  while (true) {
    var ret = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(coll, k, v);
    if (cljs.core.truth_(kvs)) {
      var G__24398 = ret;
      var G__24399 = cljs.core.first(kvs);
      var G__24400 = cljs.core.second(kvs);
      var G__24401 = cljs.core.nnext(kvs);
      coll = G__24398;
      k = G__24399;
      v = G__24400;
      kvs = G__24401;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.assoc.cljs$lang$applyTo = function(seq24388) {
  var G__24389 = cljs.core.first(seq24388);
  var seq24388__$1 = cljs.core.next(seq24388);
  var G__24390 = cljs.core.first(seq24388__$1);
  var seq24388__$2 = cljs.core.next(seq24388__$1);
  var G__24391 = cljs.core.first(seq24388__$2);
  var seq24388__$3 = cljs.core.next(seq24388__$2);
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(G__24389, G__24390, G__24391, seq24388__$3);
};
cljs.core.assoc.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc = function cljs$core$dissoc() {
  var args24402 = [];
  var len__5565__auto___24408 = arguments.length;
  var i__5566__auto___24409 = 0;
  while (true) {
    if (i__5566__auto___24409 < len__5565__auto___24408) {
      args24402.push(arguments[i__5566__auto___24409]);
      var G__24410 = i__5566__auto___24409 + 1;
      i__5566__auto___24409 = G__24410;
      continue;
    } else {
    }
    break;
  }
  var G__24407 = args24402.length;
  switch(G__24407) {
    case 1:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args24402.slice(2), 0);
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._dissoc(coll, k);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__24412 = ret;
        var G__24413 = cljs.core.first(ks);
        var G__24414 = cljs.core.next(ks);
        coll = G__24412;
        k = G__24413;
        ks = G__24414;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.dissoc.cljs$lang$applyTo = function(seq24403) {
  var G__24404 = cljs.core.first(seq24403);
  var seq24403__$1 = cljs.core.next(seq24403);
  var G__24405 = cljs.core.first(seq24403__$1);
  var seq24403__$2 = cljs.core.next(seq24403__$1);
  return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__24404, G__24405, seq24403__$2);
};
cljs.core.dissoc.cljs$lang$maxFixedArity = 2;
cljs.core.fn_QMARK_ = function cljs$core$fn_QMARK_(f) {
  var or__4526__auto__ = goog.isFunction(f);
  if (or__4526__auto__) {
    return or__4526__auto__;
  } else {
    if (!(f == null)) {
      if (false || f.cljs$core$Fn$) {
        return true;
      } else {
        if (!f.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, f);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, f);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.call = function() {
  var G__24420 = null;
  var G__24420__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
  };
  var G__24420__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null, a);
  };
  var G__24420__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.afn.call(null, a, b);
  };
  var G__24420__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.afn.call(null, a, b, c);
  };
  var G__24420__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.afn.call(null, a, b, c, d);
  };
  var G__24420__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.afn.call(null, a, b, c, d, e);
  };
  var G__24420__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.afn.call(null, a, b, c, d, e, f);
  };
  var G__24420__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.afn.call(null, a, b, c, d, e, f, g);
  };
  var G__24420__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.afn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__24420__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.afn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__24420__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__24420__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__24420__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__24420__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__24420__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__24420__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__24420__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__24420__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__24420__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__24420__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__24420__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__24420__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  };
  G__24420 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__24420__1.call(this, self__);
      case 2:
        return G__24420__2.call(this, self__, a);
      case 3:
        return G__24420__3.call(this, self__, a, b);
      case 4:
        return G__24420__4.call(this, self__, a, b, c);
      case 5:
        return G__24420__5.call(this, self__, a, b, c, d);
      case 6:
        return G__24420__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__24420__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__24420__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__24420__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__24420__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__24420__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__24420__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__24420__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__24420__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__24420__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__24420__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__24420__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__24420__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__24420__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__24420__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__24420__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__24420__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__24420.cljs$core$IFn$_invoke$arity$1 = G__24420__1;
  G__24420.cljs$core$IFn$_invoke$arity$2 = G__24420__2;
  G__24420.cljs$core$IFn$_invoke$arity$3 = G__24420__3;
  G__24420.cljs$core$IFn$_invoke$arity$4 = G__24420__4;
  G__24420.cljs$core$IFn$_invoke$arity$5 = G__24420__5;
  G__24420.cljs$core$IFn$_invoke$arity$6 = G__24420__6;
  G__24420.cljs$core$IFn$_invoke$arity$7 = G__24420__7;
  G__24420.cljs$core$IFn$_invoke$arity$8 = G__24420__8;
  G__24420.cljs$core$IFn$_invoke$arity$9 = G__24420__9;
  G__24420.cljs$core$IFn$_invoke$arity$10 = G__24420__10;
  G__24420.cljs$core$IFn$_invoke$arity$11 = G__24420__11;
  G__24420.cljs$core$IFn$_invoke$arity$12 = G__24420__12;
  G__24420.cljs$core$IFn$_invoke$arity$13 = G__24420__13;
  G__24420.cljs$core$IFn$_invoke$arity$14 = G__24420__14;
  G__24420.cljs$core$IFn$_invoke$arity$15 = G__24420__15;
  G__24420.cljs$core$IFn$_invoke$arity$16 = G__24420__16;
  G__24420.cljs$core$IFn$_invoke$arity$17 = G__24420__17;
  G__24420.cljs$core$IFn$_invoke$arity$18 = G__24420__18;
  G__24420.cljs$core$IFn$_invoke$arity$19 = G__24420__19;
  G__24420.cljs$core$IFn$_invoke$arity$20 = G__24420__20;
  G__24420.cljs$core$IFn$_invoke$arity$21 = G__24420__21;
  G__24420.cljs$core$IFn$_invoke$arity$22 = G__24420__22;
  return G__24420;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args24419) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args24419)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null, a);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.afn.call(null, a, b);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.afn.call(null, a, b, c);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.afn.call(null, a, b, c, d);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.afn.call(null, a, b, c, d, e);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.afn.call(null, a, b, c, d, e, f);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.afn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.afn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.afn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
cljs.core.MetaFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "afn", "afn", 216963467, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function cljs$core$__GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function cljs$core$with_meta(o, meta) {
  if (goog.isFunction(o)) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta(o, meta);
    }
  }
};
cljs.core.meta = function cljs$core$meta(o) {
  if (function() {
    var and__4514__auto__ = !(o == null);
    if (and__4514__auto__) {
      if (!(o == null)) {
        if (o.cljs$lang$protocol_mask$partition0$ & 131072 || o.cljs$core$IMeta$) {
          return true;
        } else {
          if (!o.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, o);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, o);
      }
    } else {
      return and__4514__auto__;
    }
  }()) {
    return cljs.core._meta(o);
  } else {
    return null;
  }
};
cljs.core.peek = function cljs$core$peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek(coll);
  }
};
cljs.core.pop = function cljs$core$pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop(coll);
  }
};
cljs.core.disj = function cljs$core$disj() {
  var args24425 = [];
  var len__5565__auto___24431 = arguments.length;
  var i__5566__auto___24432 = 0;
  while (true) {
    if (i__5566__auto___24432 < len__5565__auto___24431) {
      args24425.push(arguments[i__5566__auto___24432]);
      var G__24433 = i__5566__auto___24432 + 1;
      i__5566__auto___24432 = G__24433;
      continue;
    } else {
    }
    break;
  }
  var G__24430 = args24425.length;
  switch(G__24430) {
    case 1:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args24425.slice(2), 0);
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._disjoin(coll, k);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.disj.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__24435 = ret;
        var G__24436 = cljs.core.first(ks);
        var G__24437 = cljs.core.next(ks);
        coll = G__24435;
        k = G__24436;
        ks = G__24437;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.disj.cljs$lang$applyTo = function(seq24426) {
  var G__24427 = cljs.core.first(seq24426);
  var seq24426__$1 = cljs.core.next(seq24426);
  var G__24428 = cljs.core.first(seq24426__$1);
  var seq24426__$2 = cljs.core.next(seq24426__$1);
  return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(G__24427, G__24428, seq24426__$2);
};
cljs.core.disj.cljs$lang$maxFixedArity = 2;
cljs.core.empty_QMARK_ = function cljs$core$empty_QMARK_(coll) {
  return coll == null || cljs.core.not(cljs.core.seq(coll));
};
cljs.core.coll_QMARK_ = function cljs$core$coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 8 || x.cljs$core$ICollection$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, x);
    }
  }
};
cljs.core.set_QMARK_ = function cljs$core$set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 4096 || x.cljs$core$ISet$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, x);
    }
  }
};
cljs.core.associative_QMARK_ = function cljs$core$associative_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 512 || x.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, x);
  }
};
cljs.core.sequential_QMARK_ = function cljs$core$sequential_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16777216 || x.cljs$core$ISequential$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, x);
  }
};
cljs.core.sorted_QMARK_ = function cljs$core$sorted_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 268435456 || x.cljs$core$ISorted$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, x);
  }
};
cljs.core.reduceable_QMARK_ = function cljs$core$reduceable_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 524288 || x.cljs$core$IReduce$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, x);
  }
};
cljs.core.map_QMARK_ = function cljs$core$map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 1024 || x.cljs$core$IMap$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, x);
    }
  }
};
cljs.core.record_QMARK_ = function cljs$core$record_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 67108864 || x.cljs$core$IRecord$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, x);
  }
};
cljs.core.vector_QMARK_ = function cljs$core$vector_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16384 || x.cljs$core$IVector$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, x);
  }
};
cljs.core.chunked_seq_QMARK_ = function cljs$core$chunked_seq_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition1$ & 512 || x.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function cljs$core$js_obj() {
  var args24458 = [];
  var len__5565__auto___24464 = arguments.length;
  var i__5566__auto___24465 = 0;
  while (true) {
    if (i__5566__auto___24465 < len__5565__auto___24464) {
      args24458.push(arguments[i__5566__auto___24465]);
      var G__24466 = i__5566__auto___24465 + 1;
      i__5566__auto___24465 = G__24466;
      continue;
    } else {
    }
    break;
  }
  var G__24461 = args24458.length;
  switch(G__24461) {
    case 0:
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args24458.slice(0), 0);
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(argseq__5584__auto__);
  }
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0 = function() {
  return {};
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(goog.object.create, keyvals) : cljs.core.apply.call(null, goog.object.create, keyvals);
};
cljs.core.js_obj.cljs$lang$applyTo = function(seq24459) {
  return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq24459));
};
cljs.core.js_obj.cljs$lang$maxFixedArity = 0;
cljs.core.js_keys = function cljs$core$js_keys(obj) {
  var keys = [];
  var G__24470_24472 = obj;
  var G__24471_24473 = function(G__24470_24472, keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(G__24470_24472, keys);
  goog.object.forEach(G__24470_24472, G__24471_24473);
  return keys;
};
cljs.core.js_delete = function cljs$core$js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function cljs$core$array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__24474 = i__$1 + 1;
      var G__24475 = j__$1 + 1;
      var G__24476 = len__$1 - 1;
      i__$1 = G__24474;
      j__$1 = G__24475;
      len__$1 = G__24476;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function cljs$core$array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__24477 = i__$1 - 1;
      var G__24478 = j__$1 - 1;
      var G__24479 = len__$1 - 1;
      i__$1 = G__24477;
      j__$1 = G__24478;
      len__$1 = G__24479;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function cljs$core$false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function cljs$core$true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function cljs$core$undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function cljs$core$seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    if (!(s == null)) {
      if (s.cljs$lang$protocol_mask$partition0$ & 64 || s.cljs$core$ISeq$) {
        return true;
      } else {
        if (!s.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, s);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, s);
    }
  }
};
cljs.core.seqable_QMARK_ = function cljs$core$seqable_QMARK_(s) {
  if (!(s == null)) {
    if (s.cljs$lang$protocol_mask$partition0$ & 8388608 || s.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!s.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, s);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, s);
  }
};
cljs.core.boolean$ = function cljs$core$boolean(x) {
  if (x == null) {
    return false;
  } else {
    if (x === false) {
      return false;
    } else {
      return true;
    }
  }
};
cljs.core.ifn_QMARK_ = function cljs$core$ifn_QMARK_(f) {
  var or__4526__auto__ = cljs.core.fn_QMARK_(f);
  if (or__4526__auto__) {
    return or__4526__auto__;
  } else {
    if (!(f == null)) {
      if (f.cljs$lang$protocol_mask$partition0$ & 1 || f.cljs$core$IFn$) {
        return true;
      } else {
        if (!f.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, f);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, f);
    }
  }
};
cljs.core.integer_QMARK_ = function cljs$core$integer_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && parseFloat(n) === parseInt(n, 10);
};
cljs.core.contains_QMARK_ = function cljs$core$contains_QMARK_(coll, v) {
  if (cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function cljs$core$find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_(coll) && cljs.core.contains_QMARK_(coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function cljs$core$distinct_QMARK_() {
  var args24490 = [];
  var len__5565__auto___24496 = arguments.length;
  var i__5566__auto___24497 = 0;
  while (true) {
    if (i__5566__auto___24497 < len__5565__auto___24496) {
      args24490.push(arguments[i__5566__auto___24497]);
      var G__24498 = i__5566__auto___24497 + 1;
      i__5566__auto___24497 = G__24498;
      continue;
    } else {
    }
    break;
  }
  var G__24495 = args24490.length;
  switch(G__24495) {
    case 1:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args24490.slice(2), 0);
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
    var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
    var xs = more;
    while (true) {
      var x__$1 = cljs.core.first(xs);
      var etc = cljs.core.next(xs);
      if (cljs.core.truth_(xs)) {
        if (cljs.core.contains_QMARK_(s, x__$1)) {
          return false;
        } else {
          var G__24500 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s, x__$1);
          var G__24501 = etc;
          s = G__24500;
          xs = G__24501;
          continue;
        }
      } else {
        return true;
      }
      break;
    }
  } else {
    return false;
  }
};
cljs.core.distinct_QMARK_.cljs$lang$applyTo = function(seq24491) {
  var G__24492 = cljs.core.first(seq24491);
  var seq24491__$1 = cljs.core.next(seq24491);
  var G__24493 = cljs.core.first(seq24491__$1);
  var seq24491__$2 = cljs.core.next(seq24491__$1);
  return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(G__24492, G__24493, seq24491__$2);
};
cljs.core.distinct_QMARK_.cljs$lang$maxFixedArity = 2;
cljs.core.compare = function cljs$core$compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return -1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (typeof x === "number") {
          if (typeof y === "number") {
            return goog.array.defaultCompare(x, y);
          } else {
            throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x), cljs.core.str(" to "), cljs.core.str(y)].join(""));
          }
        } else {
          if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 2048 || x.cljs$core$IComparable$ ? true : !x.cljs$lang$protocol_mask$partition1$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, x)) {
            return cljs.core._compare(x, y);
          } else {
            if ((typeof x === "string" || cljs.core.array_QMARK_(x) || x === true || x === false) && cljs.core.type(x) === cljs.core.type(y)) {
              return goog.array.defaultCompare(x, y);
            } else {
              throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x), cljs.core.str(" to "), cljs.core.str(y)].join(""));
            }
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function cljs$core$compare_indexed() {
  var args24504 = [];
  var len__5565__auto___24507 = arguments.length;
  var i__5566__auto___24508 = 0;
  while (true) {
    if (i__5566__auto___24508 < len__5565__auto___24507) {
      args24504.push(arguments[i__5566__auto___24508]);
      var G__24509 = i__5566__auto___24508 + 1;
      i__5566__auto___24508 = G__24509;
      continue;
    } else {
    }
    break;
  }
  var G__24506 = args24504.length;
  switch(G__24506) {
    case 2:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24504.length)].join(""));;
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2 = function(xs, ys) {
  var xl = cljs.core.count(xs);
  var yl = cljs.core.count(ys);
  if (xl < yl) {
    return -1;
  } else {
    if (xl > yl) {
      return 1;
    } else {
      if (xl === 0) {
        return 0;
      } else {
        return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(xs, ys, xl, 0);
      }
    }
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4 = function(xs, ys, len, n) {
  while (true) {
    var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs, n), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys, n));
    if (d === 0 && n + 1 < len) {
      var G__24511 = xs;
      var G__24512 = ys;
      var G__24513 = len;
      var G__24514 = n + 1;
      xs = G__24511;
      ys = G__24512;
      len = G__24513;
      n = G__24514;
      continue;
    } else {
      return d;
    }
    break;
  }
};
cljs.core.compare_indexed.cljs$lang$maxFixedArity = 4;
cljs.core.fn__GT_comparator = function cljs$core$fn__GT_comparator(f) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return -1;
        } else {
          if (cljs.core.truth_(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(y, x) : f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function cljs$core$sort() {
  var args24515 = [];
  var len__5565__auto___24520 = arguments.length;
  var i__5566__auto___24521 = 0;
  while (true) {
    if (i__5566__auto___24521 < len__5565__auto___24520) {
      args24515.push(arguments[i__5566__auto___24521]);
      var G__24522 = i__5566__auto___24521 + 1;
      i__5566__auto___24521 = G__24522;
      continue;
    } else {
    }
    break;
  }
  var G__24517 = args24515.length;
  switch(G__24517) {
    case 1:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24515.length)].join(""));;
  }
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, coll);
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$2 = function(comp, coll) {
  if (cljs.core.seq(coll)) {
    var a = cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.to_array.call(null, coll);
    var G__24518_24524 = a;
    var G__24519_24525 = cljs.core.fn__GT_comparator(comp);
    goog.array.stableSort(G__24518_24524, G__24519_24525);
    return cljs.core.seq(a);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.sort.cljs$lang$maxFixedArity = 2;
cljs.core.sort_by = function cljs$core$sort_by() {
  var args24526 = [];
  var len__5565__auto___24529 = arguments.length;
  var i__5566__auto___24530 = 0;
  while (true) {
    if (i__5566__auto___24530 < len__5565__auto___24529) {
      args24526.push(arguments[i__5566__auto___24530]);
      var G__24531 = i__5566__auto___24530 + 1;
      i__5566__auto___24530 = G__24531;
      continue;
    } else {
    }
    break;
  }
  var G__24528 = args24526.length;
  switch(G__24528) {
    case 2:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24526.length)].join(""));;
  }
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2 = function(keyfn, coll) {
  return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(keyfn, cljs.core.compare, coll);
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3 = function(keyfn, comp, coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(x, y) {
    return cljs.core.fn__GT_comparator(comp).call(null, keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(x) : keyfn.call(null, x), keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(y) : keyfn.call(null, y));
  }, coll);
};
cljs.core.sort_by.cljs$lang$maxFixedArity = 3;
cljs.core.seq_reduce = function cljs$core$seq_reduce() {
  var args24533 = [];
  var len__5565__auto___24541 = arguments.length;
  var i__5566__auto___24542 = 0;
  while (true) {
    if (i__5566__auto___24542 < len__5565__auto___24541) {
      args24533.push(arguments[i__5566__auto___24542]);
      var G__24543 = i__5566__auto___24542 + 1;
      i__5566__auto___24542 = G__24543;
      continue;
    } else {
    }
    break;
  }
  var G__24535 = args24533.length;
  switch(G__24535) {
    case 2:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24533.length)].join(""));;
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var temp__4423__auto__ = cljs.core.seq(coll);
  if (temp__4423__auto__) {
    var s = temp__4423__auto__;
    var G__24536 = f;
    var G__24537 = cljs.core.first(s);
    var G__24538 = cljs.core.next(s);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__24536, G__24537, G__24538) : cljs.core.reduce.call(null, G__24536, G__24537, G__24538);
  } else {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  var val__$1 = val;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (coll__$1) {
      var nval = function() {
        var G__24539 = val__$1;
        var G__24540 = cljs.core.first(coll__$1);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24539, G__24540) : f.call(null, G__24539, G__24540);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__24545 = nval;
        var G__24546 = cljs.core.next(coll__$1);
        val__$1 = G__24545;
        coll__$1 = G__24546;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.seq_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.shuffle = function cljs$core$shuffle(coll) {
  var a = cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(a) : cljs.core.vec.call(null, a);
};
cljs.core.reduce = function cljs$core$reduce() {
  var args24547 = [];
  var len__5565__auto___24552 = arguments.length;
  var i__5566__auto___24553 = 0;
  while (true) {
    if (i__5566__auto___24553 < len__5565__auto___24552) {
      args24547.push(arguments[i__5566__auto___24553]);
      var G__24554 = i__5566__auto___24553 + 1;
      i__5566__auto___24553 = G__24554;
      continue;
    } else {
    }
    break;
  }
  var G__24549 = args24547.length;
  switch(G__24549) {
    case 2:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24547.length)].join(""));;
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 524288 || coll.cljs$core$IReduce$ ? true : false : false) {
    return coll.cljs$core$IReduce$_reduce$arity$2(null, f);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
        } else {
          return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll);
        }
      }
    }
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 524288 || coll.cljs$core$IReduce$ ? true : false : false) {
    return coll.cljs$core$IReduce$_reduce$arity$3(null, f, val);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
        } else {
          return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, val, coll);
        }
      }
    }
  }
};
cljs.core.reduce.cljs$lang$maxFixedArity = 3;
cljs.core.reduce_kv = function cljs$core$reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce(coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function cljs$core$identity(x) {
  return x;
};
cljs.core.completing = function cljs$core$completing() {
  var args24556 = [];
  var len__5565__auto___24559 = arguments.length;
  var i__5566__auto___24560 = 0;
  while (true) {
    if (i__5566__auto___24560 < len__5565__auto___24559) {
      args24556.push(arguments[i__5566__auto___24560]);
      var G__24561 = i__5566__auto___24560 + 1;
      i__5566__auto___24560 = G__24561;
      continue;
    } else {
    }
    break;
  }
  var G__24558 = args24556.length;
  switch(G__24558) {
    case 1:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24556.length)].join(""));;
  }
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(f, cljs.core.identity);
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$2 = function(f, cf) {
  return function() {
    var G__24563 = null;
    var G__24563__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    };
    var G__24563__1 = function(x) {
      return cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(x) : cf.call(null, x);
    };
    var G__24563__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
    };
    G__24563 = function(x, y) {
      switch(arguments.length) {
        case 0:
          return G__24563__0.call(this);
        case 1:
          return G__24563__1.call(this, x);
        case 2:
          return G__24563__2.call(this, x, y);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__24563.cljs$core$IFn$_invoke$arity$0 = G__24563__0;
    G__24563.cljs$core$IFn$_invoke$arity$1 = G__24563__1;
    G__24563.cljs$core$IFn$_invoke$arity$2 = G__24563__2;
    return G__24563;
  }();
};
cljs.core.completing.cljs$lang$maxFixedArity = 2;
cljs.core.transduce = function cljs$core$transduce() {
  var args24564 = [];
  var len__5565__auto___24567 = arguments.length;
  var i__5566__auto___24568 = 0;
  while (true) {
    if (i__5566__auto___24568 < len__5565__auto___24567) {
      args24564.push(arguments[i__5566__auto___24568]);
      var G__24569 = i__5566__auto___24568 + 1;
      i__5566__auto___24568 = G__24569;
      continue;
    } else {
    }
    break;
  }
  var G__24566 = args24564.length;
  switch(G__24566) {
    case 3:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24564.length)].join(""));;
  }
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$3 = function(xform, f, coll) {
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, f, f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), coll);
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$4 = function(xform, f, init, coll) {
  var f__$1 = xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(f) : xform.call(null, f);
  var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1, init, coll);
  return f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(ret) : f__$1.call(null, ret);
};
cljs.core.transduce.cljs$lang$maxFixedArity = 4;
cljs.core._PLUS_ = function cljs$core$_PLUS_() {
  var args24571 = [];
  var len__5565__auto___24577 = arguments.length;
  var i__5566__auto___24578 = 0;
  while (true) {
    if (i__5566__auto___24578 < len__5565__auto___24577) {
      args24571.push(arguments[i__5566__auto___24578]);
      var G__24579 = i__5566__auto___24578 + 1;
      i__5566__auto___24578 = G__24579;
      continue;
    } else {
    }
    break;
  }
  var G__24576 = args24571.length;
  switch(G__24576) {
    case 0:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args24571.slice(2), 0);
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._PLUS_, x + y, more);
};
cljs.core._PLUS_.cljs$lang$applyTo = function(seq24572) {
  var G__24573 = cljs.core.first(seq24572);
  var seq24572__$1 = cljs.core.next(seq24572);
  var G__24574 = cljs.core.first(seq24572__$1);
  var seq24572__$2 = cljs.core.next(seq24572__$1);
  return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(G__24573, G__24574, seq24572__$2);
};
cljs.core._PLUS_.cljs$lang$maxFixedArity = 2;
cljs.core._ = function cljs$core$_() {
  var args24581 = [];
  var len__5565__auto___24587 = arguments.length;
  var i__5566__auto___24588 = 0;
  while (true) {
    if (i__5566__auto___24588 < len__5565__auto___24587) {
      args24581.push(arguments[i__5566__auto___24588]);
      var G__24589 = i__5566__auto___24588 + 1;
      i__5566__auto___24588 = G__24589;
      continue;
    } else {
    }
    break;
  }
  var G__24586 = args24581.length;
  switch(G__24586) {
    case 1:
      return cljs.core._.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args24581.slice(2), 0);
      return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core._.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core._.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core._.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._, x - y, more);
};
cljs.core._.cljs$lang$applyTo = function(seq24582) {
  var G__24583 = cljs.core.first(seq24582);
  var seq24582__$1 = cljs.core.next(seq24582);
  var G__24584 = cljs.core.first(seq24582__$1);
  var seq24582__$2 = cljs.core.next(seq24582__$1);
  return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(G__24583, G__24584, seq24582__$2);
};
cljs.core._.cljs$lang$maxFixedArity = 2;
cljs.core._STAR_ = function cljs$core$_STAR_() {
  var args24591 = [];
  var len__5565__auto___24597 = arguments.length;
  var i__5566__auto___24598 = 0;
  while (true) {
    if (i__5566__auto___24598 < len__5565__auto___24597) {
      args24591.push(arguments[i__5566__auto___24598]);
      var G__24599 = i__5566__auto___24598 + 1;
      i__5566__auto___24598 = G__24599;
      continue;
    } else {
    }
    break;
  }
  var G__24596 = args24591.length;
  switch(G__24596) {
    case 0:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args24591.slice(2), 0);
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._STAR_, x * y, more);
};
cljs.core._STAR_.cljs$lang$applyTo = function(seq24592) {
  var G__24593 = cljs.core.first(seq24592);
  var seq24592__$1 = cljs.core.next(seq24592);
  var G__24594 = cljs.core.first(seq24592__$1);
  var seq24592__$2 = cljs.core.next(seq24592__$1);
  return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(G__24593, G__24594, seq24592__$2);
};
cljs.core._STAR_.cljs$lang$maxFixedArity = 2;
cljs.core._SLASH_ = function cljs$core$_SLASH_() {
  var args24601 = [];
  var len__5565__auto___24607 = arguments.length;
  var i__5566__auto___24608 = 0;
  while (true) {
    if (i__5566__auto___24608 < len__5565__auto___24607) {
      args24601.push(arguments[i__5566__auto___24608]);
      var G__24609 = i__5566__auto___24608 + 1;
      i__5566__auto___24608 = G__24609;
      continue;
    } else {
    }
    break;
  }
  var G__24606 = args24601.length;
  switch(G__24606) {
    case 1:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args24601.slice(2), 0);
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._SLASH_, x / y, more);
};
cljs.core._SLASH_.cljs$lang$applyTo = function(seq24602) {
  var G__24603 = cljs.core.first(seq24602);
  var seq24602__$1 = cljs.core.next(seq24602);
  var G__24604 = cljs.core.first(seq24602__$1);
  var seq24602__$2 = cljs.core.next(seq24602__$1);
  return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(G__24603, G__24604, seq24602__$2);
};
cljs.core._SLASH_.cljs$lang$maxFixedArity = 2;
cljs.core._LT_ = function cljs$core$_LT_() {
  var args24611 = [];
  var len__5565__auto___24617 = arguments.length;
  var i__5566__auto___24618 = 0;
  while (true) {
    if (i__5566__auto___24618 < len__5565__auto___24617) {
      args24611.push(arguments[i__5566__auto___24618]);
      var G__24619 = i__5566__auto___24618 + 1;
      i__5566__auto___24618 = G__24619;
      continue;
    } else {
    }
    break;
  }
  var G__24616 = args24611.length;
  switch(G__24616) {
    case 1:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args24611.slice(2), 0);
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x < y;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x < y) {
      if (cljs.core.next(more)) {
        var G__24621 = y;
        var G__24622 = cljs.core.first(more);
        var G__24623 = cljs.core.next(more);
        x = G__24621;
        y = G__24622;
        more = G__24623;
        continue;
      } else {
        return y < cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT_.cljs$lang$applyTo = function(seq24612) {
  var G__24613 = cljs.core.first(seq24612);
  var seq24612__$1 = cljs.core.next(seq24612);
  var G__24614 = cljs.core.first(seq24612__$1);
  var seq24612__$2 = cljs.core.next(seq24612__$1);
  return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(G__24613, G__24614, seq24612__$2);
};
cljs.core._LT_.cljs$lang$maxFixedArity = 2;
cljs.core._LT__EQ_ = function cljs$core$_LT__EQ_() {
  var args24624 = [];
  var len__5565__auto___24630 = arguments.length;
  var i__5566__auto___24631 = 0;
  while (true) {
    if (i__5566__auto___24631 < len__5565__auto___24630) {
      args24624.push(arguments[i__5566__auto___24631]);
      var G__24632 = i__5566__auto___24631 + 1;
      i__5566__auto___24631 = G__24632;
      continue;
    } else {
    }
    break;
  }
  var G__24629 = args24624.length;
  switch(G__24629) {
    case 1:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args24624.slice(2), 0);
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x <= y;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x <= y) {
      if (cljs.core.next(more)) {
        var G__24634 = y;
        var G__24635 = cljs.core.first(more);
        var G__24636 = cljs.core.next(more);
        x = G__24634;
        y = G__24635;
        more = G__24636;
        continue;
      } else {
        return y <= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT__EQ_.cljs$lang$applyTo = function(seq24625) {
  var G__24626 = cljs.core.first(seq24625);
  var seq24625__$1 = cljs.core.next(seq24625);
  var G__24627 = cljs.core.first(seq24625__$1);
  var seq24625__$2 = cljs.core.next(seq24625__$1);
  return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__24626, G__24627, seq24625__$2);
};
cljs.core._LT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core._GT_ = function cljs$core$_GT_() {
  var args24637 = [];
  var len__5565__auto___24643 = arguments.length;
  var i__5566__auto___24644 = 0;
  while (true) {
    if (i__5566__auto___24644 < len__5565__auto___24643) {
      args24637.push(arguments[i__5566__auto___24644]);
      var G__24645 = i__5566__auto___24644 + 1;
      i__5566__auto___24644 = G__24645;
      continue;
    } else {
    }
    break;
  }
  var G__24642 = args24637.length;
  switch(G__24642) {
    case 1:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args24637.slice(2), 0);
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x > y;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x > y) {
      if (cljs.core.next(more)) {
        var G__24647 = y;
        var G__24648 = cljs.core.first(more);
        var G__24649 = cljs.core.next(more);
        x = G__24647;
        y = G__24648;
        more = G__24649;
        continue;
      } else {
        return y > cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT_.cljs$lang$applyTo = function(seq24638) {
  var G__24639 = cljs.core.first(seq24638);
  var seq24638__$1 = cljs.core.next(seq24638);
  var G__24640 = cljs.core.first(seq24638__$1);
  var seq24638__$2 = cljs.core.next(seq24638__$1);
  return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(G__24639, G__24640, seq24638__$2);
};
cljs.core._GT_.cljs$lang$maxFixedArity = 2;
cljs.core._GT__EQ_ = function cljs$core$_GT__EQ_() {
  var args24650 = [];
  var len__5565__auto___24656 = arguments.length;
  var i__5566__auto___24657 = 0;
  while (true) {
    if (i__5566__auto___24657 < len__5565__auto___24656) {
      args24650.push(arguments[i__5566__auto___24657]);
      var G__24658 = i__5566__auto___24657 + 1;
      i__5566__auto___24657 = G__24658;
      continue;
    } else {
    }
    break;
  }
  var G__24655 = args24650.length;
  switch(G__24655) {
    case 1:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args24650.slice(2), 0);
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x >= y;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x >= y) {
      if (cljs.core.next(more)) {
        var G__24660 = y;
        var G__24661 = cljs.core.first(more);
        var G__24662 = cljs.core.next(more);
        x = G__24660;
        y = G__24661;
        more = G__24662;
        continue;
      } else {
        return y >= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT__EQ_.cljs$lang$applyTo = function(seq24651) {
  var G__24652 = cljs.core.first(seq24651);
  var seq24651__$1 = cljs.core.next(seq24651);
  var G__24653 = cljs.core.first(seq24651__$1);
  var seq24651__$2 = cljs.core.next(seq24651__$1);
  return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__24652, G__24653, seq24651__$2);
};
cljs.core._GT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.dec = function cljs$core$dec(x) {
  return x - 1;
};
cljs.core.max = function cljs$core$max() {
  var args24663 = [];
  var len__5565__auto___24669 = arguments.length;
  var i__5566__auto___24670 = 0;
  while (true) {
    if (i__5566__auto___24670 < len__5565__auto___24669) {
      args24663.push(arguments[i__5566__auto___24670]);
      var G__24671 = i__5566__auto___24670 + 1;
      i__5566__auto___24670 = G__24671;
      continue;
    } else {
    }
    break;
  }
  var G__24668 = args24663.length;
  switch(G__24668) {
    case 1:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args24663.slice(2), 0);
      return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.max.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__4838__auto__ = x;
  var y__4839__auto__ = y;
  return x__4838__auto__ > y__4839__auto__ ? x__4838__auto__ : y__4839__auto__;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.max, function() {
    var x__4838__auto__ = x;
    var y__4839__auto__ = y;
    return x__4838__auto__ > y__4839__auto__ ? x__4838__auto__ : y__4839__auto__;
  }(), more);
};
cljs.core.max.cljs$lang$applyTo = function(seq24664) {
  var G__24665 = cljs.core.first(seq24664);
  var seq24664__$1 = cljs.core.next(seq24664);
  var G__24666 = cljs.core.first(seq24664__$1);
  var seq24664__$2 = cljs.core.next(seq24664__$1);
  return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(G__24665, G__24666, seq24664__$2);
};
cljs.core.max.cljs$lang$maxFixedArity = 2;
cljs.core.min = function cljs$core$min() {
  var args24673 = [];
  var len__5565__auto___24679 = arguments.length;
  var i__5566__auto___24680 = 0;
  while (true) {
    if (i__5566__auto___24680 < len__5565__auto___24679) {
      args24673.push(arguments[i__5566__auto___24680]);
      var G__24681 = i__5566__auto___24680 + 1;
      i__5566__auto___24680 = G__24681;
      continue;
    } else {
    }
    break;
  }
  var G__24678 = args24673.length;
  switch(G__24678) {
    case 1:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args24673.slice(2), 0);
      return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.min.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__4845__auto__ = x;
  var y__4846__auto__ = y;
  return x__4845__auto__ < y__4846__auto__ ? x__4845__auto__ : y__4846__auto__;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.min, function() {
    var x__4845__auto__ = x;
    var y__4846__auto__ = y;
    return x__4845__auto__ < y__4846__auto__ ? x__4845__auto__ : y__4846__auto__;
  }(), more);
};
cljs.core.min.cljs$lang$applyTo = function(seq24674) {
  var G__24675 = cljs.core.first(seq24674);
  var seq24674__$1 = cljs.core.next(seq24674);
  var G__24676 = cljs.core.first(seq24674__$1);
  var seq24674__$2 = cljs.core.next(seq24674__$1);
  return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(G__24675, G__24676, seq24674__$2);
};
cljs.core.min.cljs$lang$maxFixedArity = 2;
cljs.core.byte$ = function cljs$core$byte(x) {
  return x;
};
cljs.core.char$ = function cljs$core$char(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function cljs$core$short(x) {
  return x;
};
cljs.core.float$ = function cljs$core$float(x) {
  return x;
};
cljs.core.double$ = function cljs$core$double(x) {
  return x;
};
cljs.core.unchecked_byte = function cljs$core$unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function cljs$core$unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function cljs$core$unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function cljs$core$unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function cljs$core$unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function cljs$core$unchecked_add() {
  var args24683 = [];
  var len__5565__auto___24689 = arguments.length;
  var i__5566__auto___24690 = 0;
  while (true) {
    if (i__5566__auto___24690 < len__5565__auto___24689) {
      args24683.push(arguments[i__5566__auto___24690]);
      var G__24691 = i__5566__auto___24690 + 1;
      i__5566__auto___24690 = G__24691;
      continue;
    } else {
    }
    break;
  }
  var G__24688 = args24683.length;
  switch(G__24688) {
    case 0:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args24683.slice(2), 0);
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add, x + y, more);
};
cljs.core.unchecked_add.cljs$lang$applyTo = function(seq24684) {
  var G__24685 = cljs.core.first(seq24684);
  var seq24684__$1 = cljs.core.next(seq24684);
  var G__24686 = cljs.core.first(seq24684__$1);
  var seq24684__$2 = cljs.core.next(seq24684__$1);
  return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(G__24685, G__24686, seq24684__$2);
};
cljs.core.unchecked_add.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_add_int = function cljs$core$unchecked_add_int() {
  var args24693 = [];
  var len__5565__auto___24699 = arguments.length;
  var i__5566__auto___24700 = 0;
  while (true) {
    if (i__5566__auto___24700 < len__5565__auto___24699) {
      args24693.push(arguments[i__5566__auto___24700]);
      var G__24701 = i__5566__auto___24700 + 1;
      i__5566__auto___24700 = G__24701;
      continue;
    } else {
    }
    break;
  }
  var G__24698 = args24693.length;
  switch(G__24698) {
    case 0:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args24693.slice(2), 0);
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add_int, x + y, more);
};
cljs.core.unchecked_add_int.cljs$lang$applyTo = function(seq24694) {
  var G__24695 = cljs.core.first(seq24694);
  var seq24694__$1 = cljs.core.next(seq24694);
  var G__24696 = cljs.core.first(seq24694__$1);
  var seq24694__$2 = cljs.core.next(seq24694__$1);
  return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(G__24695, G__24696, seq24694__$2);
};
cljs.core.unchecked_add_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_dec = function cljs$core$unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function cljs$core$unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function cljs$core$unchecked_divide_int() {
  var args24703 = [];
  var len__5565__auto___24709 = arguments.length;
  var i__5566__auto___24710 = 0;
  while (true) {
    if (i__5566__auto___24710 < len__5565__auto___24709) {
      args24703.push(arguments[i__5566__auto___24710]);
      var G__24711 = i__5566__auto___24710 + 1;
      i__5566__auto___24710 = G__24711;
      continue;
    } else {
    }
    break;
  }
  var G__24708 = args24703.length;
  switch(G__24708) {
    case 1:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args24703.slice(2), 0);
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_divide_int, x / y, more);
};
cljs.core.unchecked_divide_int.cljs$lang$applyTo = function(seq24704) {
  var G__24705 = cljs.core.first(seq24704);
  var seq24704__$1 = cljs.core.next(seq24704);
  var G__24706 = cljs.core.first(seq24704__$1);
  var seq24704__$2 = cljs.core.next(seq24704__$1);
  return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(G__24705, G__24706, seq24704__$2);
};
cljs.core.unchecked_divide_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_inc = function cljs$core$unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function cljs$core$unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function cljs$core$unchecked_multiply() {
  var args24713 = [];
  var len__5565__auto___24719 = arguments.length;
  var i__5566__auto___24720 = 0;
  while (true) {
    if (i__5566__auto___24720 < len__5565__auto___24719) {
      args24713.push(arguments[i__5566__auto___24720]);
      var G__24721 = i__5566__auto___24720 + 1;
      i__5566__auto___24720 = G__24721;
      continue;
    } else {
    }
    break;
  }
  var G__24718 = args24713.length;
  switch(G__24718) {
    case 0:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args24713.slice(2), 0);
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply, x * y, more);
};
cljs.core.unchecked_multiply.cljs$lang$applyTo = function(seq24714) {
  var G__24715 = cljs.core.first(seq24714);
  var seq24714__$1 = cljs.core.next(seq24714);
  var G__24716 = cljs.core.first(seq24714__$1);
  var seq24714__$2 = cljs.core.next(seq24714__$1);
  return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(G__24715, G__24716, seq24714__$2);
};
cljs.core.unchecked_multiply.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_multiply_int = function cljs$core$unchecked_multiply_int() {
  var args24723 = [];
  var len__5565__auto___24729 = arguments.length;
  var i__5566__auto___24730 = 0;
  while (true) {
    if (i__5566__auto___24730 < len__5565__auto___24729) {
      args24723.push(arguments[i__5566__auto___24730]);
      var G__24731 = i__5566__auto___24730 + 1;
      i__5566__auto___24730 = G__24731;
      continue;
    } else {
    }
    break;
  }
  var G__24728 = args24723.length;
  switch(G__24728) {
    case 0:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args24723.slice(2), 0);
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply_int, x * y, more);
};
cljs.core.unchecked_multiply_int.cljs$lang$applyTo = function(seq24724) {
  var G__24725 = cljs.core.first(seq24724);
  var seq24724__$1 = cljs.core.next(seq24724);
  var G__24726 = cljs.core.first(seq24724__$1);
  var seq24724__$2 = cljs.core.next(seq24724__$1);
  return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(G__24725, G__24726, seq24724__$2);
};
cljs.core.unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_negate = function cljs$core$unchecked_negate(x) {
  return -x;
};
cljs.core.unchecked_negate_int = function cljs$core$unchecked_negate_int(x) {
  return -x;
};
cljs.core.unchecked_remainder_int = function cljs$core$unchecked_remainder_int(x, n) {
  return cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(x, n) : cljs.core.mod.call(null, x, n);
};
cljs.core.unchecked_subtract = function cljs$core$unchecked_subtract() {
  var args24733 = [];
  var len__5565__auto___24739 = arguments.length;
  var i__5566__auto___24740 = 0;
  while (true) {
    if (i__5566__auto___24740 < len__5565__auto___24739) {
      args24733.push(arguments[i__5566__auto___24740]);
      var G__24741 = i__5566__auto___24740 + 1;
      i__5566__auto___24740 = G__24741;
      continue;
    } else {
    }
    break;
  }
  var G__24738 = args24733.length;
  switch(G__24738) {
    case 1:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args24733.slice(2), 0);
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract, x - y, more);
};
cljs.core.unchecked_subtract.cljs$lang$applyTo = function(seq24734) {
  var G__24735 = cljs.core.first(seq24734);
  var seq24734__$1 = cljs.core.next(seq24734);
  var G__24736 = cljs.core.first(seq24734__$1);
  var seq24734__$2 = cljs.core.next(seq24734__$1);
  return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(G__24735, G__24736, seq24734__$2);
};
cljs.core.unchecked_subtract.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_subtract_int = function cljs$core$unchecked_subtract_int() {
  var args24743 = [];
  var len__5565__auto___24749 = arguments.length;
  var i__5566__auto___24750 = 0;
  while (true) {
    if (i__5566__auto___24750 < len__5565__auto___24749) {
      args24743.push(arguments[i__5566__auto___24750]);
      var G__24751 = i__5566__auto___24750 + 1;
      i__5566__auto___24750 = G__24751;
      continue;
    } else {
    }
    break;
  }
  var G__24748 = args24743.length;
  switch(G__24748) {
    case 1:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args24743.slice(2), 0);
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract_int, x - y, more);
};
cljs.core.unchecked_subtract_int.cljs$lang$applyTo = function(seq24744) {
  var G__24745 = cljs.core.first(seq24744);
  var seq24744__$1 = cljs.core.next(seq24744);
  var G__24746 = cljs.core.first(seq24744__$1);
  var seq24744__$2 = cljs.core.next(seq24744__$1);
  return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(G__24745, G__24746, seq24744__$2);
};
cljs.core.unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
cljs.core.fix = function cljs$core$fix(q) {
  if (q >= 0) {
    return Math.floor(q);
  } else {
    return Math.ceil(q);
  }
};
cljs.core.int$ = function cljs$core$int(x) {
  return x | 0;
};
cljs.core.unchecked_int = function cljs$core$unchecked_int(x) {
  return cljs.core.fix(x);
};
cljs.core.long$ = function cljs$core$long(x) {
  return cljs.core.fix(x);
};
cljs.core.unchecked_long = function cljs$core$unchecked_long(x) {
  return cljs.core.fix(x);
};
cljs.core.booleans = function cljs$core$booleans(x) {
  return x;
};
cljs.core.bytes = function cljs$core$bytes(x) {
  return x;
};
cljs.core.chars = function cljs$core$chars(x) {
  return x;
};
cljs.core.shorts = function cljs$core$shorts(x) {
  return x;
};
cljs.core.ints = function cljs$core$ints(x) {
  return x;
};
cljs.core.floats = function cljs$core$floats(x) {
  return x;
};
cljs.core.doubles = function cljs$core$doubles(x) {
  return x;
};
cljs.core.longs = function cljs$core$longs(x) {
  return x;
};
cljs.core.js_mod = function cljs$core$js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function cljs$core$mod(n, d) {
  return (n % d + d) % d;
};
cljs.core.quot = function cljs$core$quot(n, d) {
  var rem = n % d;
  return cljs.core.fix((n - rem) / d);
};
cljs.core.rem = function cljs$core$rem(n, d) {
  var q = cljs.core.quot(n, d);
  return n - d * q;
};
cljs.core.bit_xor = function cljs$core$bit_xor() {
  var args24753 = [];
  var len__5565__auto___24759 = arguments.length;
  var i__5566__auto___24760 = 0;
  while (true) {
    if (i__5566__auto___24760 < len__5565__auto___24759) {
      args24753.push(arguments[i__5566__auto___24760]);
      var G__24761 = i__5566__auto___24760 + 1;
      i__5566__auto___24760 = G__24761;
      continue;
    } else {
    }
    break;
  }
  var G__24758 = args24753.length;
  switch(G__24758) {
    case 2:
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args24753.slice(2), 0);
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x ^ y;
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_xor, x ^ y, more);
};
cljs.core.bit_xor.cljs$lang$applyTo = function(seq24754) {
  var G__24755 = cljs.core.first(seq24754);
  var seq24754__$1 = cljs.core.next(seq24754);
  var G__24756 = cljs.core.first(seq24754__$1);
  var seq24754__$2 = cljs.core.next(seq24754__$1);
  return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(G__24755, G__24756, seq24754__$2);
};
cljs.core.bit_xor.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and = function cljs$core$bit_and() {
  var args24763 = [];
  var len__5565__auto___24769 = arguments.length;
  var i__5566__auto___24770 = 0;
  while (true) {
    if (i__5566__auto___24770 < len__5565__auto___24769) {
      args24763.push(arguments[i__5566__auto___24770]);
      var G__24771 = i__5566__auto___24770 + 1;
      i__5566__auto___24770 = G__24771;
      continue;
    } else {
    }
    break;
  }
  var G__24768 = args24763.length;
  switch(G__24768) {
    case 2:
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args24763.slice(2), 0);
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & y;
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and, x & y, more);
};
cljs.core.bit_and.cljs$lang$applyTo = function(seq24764) {
  var G__24765 = cljs.core.first(seq24764);
  var seq24764__$1 = cljs.core.next(seq24764);
  var G__24766 = cljs.core.first(seq24764__$1);
  var seq24764__$2 = cljs.core.next(seq24764__$1);
  return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(G__24765, G__24766, seq24764__$2);
};
cljs.core.bit_and.cljs$lang$maxFixedArity = 2;
cljs.core.bit_or = function cljs$core$bit_or() {
  var args24773 = [];
  var len__5565__auto___24779 = arguments.length;
  var i__5566__auto___24780 = 0;
  while (true) {
    if (i__5566__auto___24780 < len__5565__auto___24779) {
      args24773.push(arguments[i__5566__auto___24780]);
      var G__24781 = i__5566__auto___24780 + 1;
      i__5566__auto___24780 = G__24781;
      continue;
    } else {
    }
    break;
  }
  var G__24778 = args24773.length;
  switch(G__24778) {
    case 2:
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args24773.slice(2), 0);
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x | y;
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_or, x | y, more);
};
cljs.core.bit_or.cljs$lang$applyTo = function(seq24774) {
  var G__24775 = cljs.core.first(seq24774);
  var seq24774__$1 = cljs.core.next(seq24774);
  var G__24776 = cljs.core.first(seq24774__$1);
  var seq24774__$2 = cljs.core.next(seq24774__$1);
  return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(G__24775, G__24776, seq24774__$2);
};
cljs.core.bit_or.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and_not = function cljs$core$bit_and_not() {
  var args24783 = [];
  var len__5565__auto___24789 = arguments.length;
  var i__5566__auto___24790 = 0;
  while (true) {
    if (i__5566__auto___24790 < len__5565__auto___24789) {
      args24783.push(arguments[i__5566__auto___24790]);
      var G__24791 = i__5566__auto___24790 + 1;
      i__5566__auto___24790 = G__24791;
      continue;
    } else {
    }
    break;
  }
  var G__24788 = args24783.length;
  switch(G__24788) {
    case 2:
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args24783.slice(2), 0);
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & ~y;
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and_not, x & ~y, more);
};
cljs.core.bit_and_not.cljs$lang$applyTo = function(seq24784) {
  var G__24785 = cljs.core.first(seq24784);
  var seq24784__$1 = cljs.core.next(seq24784);
  var G__24786 = cljs.core.first(seq24784__$1);
  var seq24784__$2 = cljs.core.next(seq24784__$1);
  return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(G__24785, G__24786, seq24784__$2);
};
cljs.core.bit_and_not.cljs$lang$maxFixedArity = 2;
cljs.core.bit_clear = function cljs$core$bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function cljs$core$bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function cljs$core$bit_not(x) {
  return ~x;
};
cljs.core.bit_set = function cljs$core$bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function cljs$core$bit_test(x, n) {
  return (x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function cljs$core$bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function cljs$core$bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function cljs$core$bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function cljs$core$unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function cljs$core$bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return (v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function cljs$core$_EQ__EQ_() {
  var args24793 = [];
  var len__5565__auto___24799 = arguments.length;
  var i__5566__auto___24800 = 0;
  while (true) {
    if (i__5566__auto___24800 < len__5565__auto___24799) {
      args24793.push(arguments[i__5566__auto___24800]);
      var G__24801 = i__5566__auto___24800 + 1;
      i__5566__auto___24800 = G__24801;
      continue;
    } else {
    }
    break;
  }
  var G__24798 = args24793.length;
  switch(G__24798) {
    case 1:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args24793.slice(2), 0);
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return cljs.core._equiv(x, y);
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x === y) {
      if (cljs.core.next(more)) {
        var G__24803 = y;
        var G__24804 = cljs.core.first(more);
        var G__24805 = cljs.core.next(more);
        x = G__24803;
        y = G__24804;
        more = G__24805;
        continue;
      } else {
        return y === cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ__EQ_.cljs$lang$applyTo = function(seq24794) {
  var G__24795 = cljs.core.first(seq24794);
  var seq24794__$1 = cljs.core.next(seq24794);
  var G__24796 = cljs.core.first(seq24794__$1);
  var seq24794__$2 = cljs.core.next(seq24794__$1);
  return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__24795, G__24796, seq24794__$2);
};
cljs.core._EQ__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.pos_QMARK_ = function cljs$core$pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function cljs$core$zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function cljs$core$neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function cljs$core$nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq(coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__24806 = n__$1 - 1;
      var G__24807 = cljs.core.next(xs);
      n__$1 = G__24806;
      xs = G__24807;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function cljs$core$str() {
  var args24808 = [];
  var len__5565__auto___24813 = arguments.length;
  var i__5566__auto___24814 = 0;
  while (true) {
    if (i__5566__auto___24814 < len__5565__auto___24813) {
      args24808.push(arguments[i__5566__auto___24814]);
      var G__24815 = i__5566__auto___24814 + 1;
      i__5566__auto___24814 = G__24815;
      continue;
    } else {
    }
    break;
  }
  var G__24812 = args24808.length;
  switch(G__24812) {
    case 0:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args24808.slice(1), 0);
      return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$0 = function() {
  return "";
};
cljs.core.str.cljs$core$IFn$_invoke$arity$1 = function(x) {
  if (x == null) {
    return "";
  } else {
    return [x].join("");
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$variadic = function(x, ys) {
  var sb = new goog.string.StringBuffer([cljs.core.str(x)].join(""));
  var more = ys;
  while (true) {
    if (cljs.core.truth_(more)) {
      var G__24817 = sb.append([cljs.core.str(cljs.core.first(more))].join(""));
      var G__24818 = cljs.core.next(more);
      sb = G__24817;
      more = G__24818;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
cljs.core.str.cljs$lang$applyTo = function(seq24809) {
  var G__24810 = cljs.core.first(seq24809);
  var seq24809__$1 = cljs.core.next(seq24809);
  return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(G__24810, seq24809__$1);
};
cljs.core.str.cljs$lang$maxFixedArity = 1;
cljs.core.subs = function cljs$core$subs() {
  var args24819 = [];
  var len__5565__auto___24822 = arguments.length;
  var i__5566__auto___24823 = 0;
  while (true) {
    if (i__5566__auto___24823 < len__5565__auto___24822) {
      args24819.push(arguments[i__5566__auto___24823]);
      var G__24824 = i__5566__auto___24823 + 1;
      i__5566__auto___24823 = G__24824;
      continue;
    } else {
    }
    break;
  }
  var G__24821 = args24819.length;
  switch(G__24821) {
    case 2:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24819.length)].join(""));;
  }
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$2 = function(s, start) {
  return s.substring(start);
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$3 = function(s, start, end) {
  return s.substring(start, end);
};
cljs.core.subs.cljs$lang$maxFixedArity = 3;
cljs.core.equiv_sequential = function cljs$core$equiv_sequential(x, y) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(y) ? cljs.core.counted_QMARK_(x) && cljs.core.counted_QMARK_(y) && !(cljs.core.count(x) === cljs.core.count(y)) ? false : function() {
    var xs = cljs.core.seq(x);
    var ys = cljs.core.seq(y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs), cljs.core.first(ys))) {
            var G__24826 = cljs.core.next(xs);
            var G__24827 = cljs.core.next(ys);
            xs = G__24826;
            ys = G__24827;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function cljs$core$hash_coll(coll) {
  if (cljs.core.seq(coll)) {
    var res = cljs.core.hash(cljs.core.first(coll));
    var s = cljs.core.next(coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__24828 = cljs.core.hash_combine(res, cljs.core.hash(cljs.core.first(s)));
        var G__24829 = cljs.core.next(s);
        res = G__24828;
        s = G__24829;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function cljs$core$hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq(m);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__24830 = (h + (cljs.core.hash(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e)) ^ cljs.core.hash(cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__24831 = cljs.core.next(s);
      h = G__24830;
      s = G__24831;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function cljs$core$hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq(s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first(s__$1);
      var G__24832 = (h + cljs.core.hash(e)) % 4503599627370496;
      var G__24833 = cljs.core.next(s__$1);
      h = G__24832;
      s__$1 = G__24833;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function cljs$core$extend_object_BANG_(obj, fn_map) {
  var seq__24840_24846 = cljs.core.seq(fn_map);
  var chunk__24841_24847 = null;
  var count__24842_24848 = 0;
  var i__24843_24849 = 0;
  while (true) {
    if (i__24843_24849 < count__24842_24848) {
      var vec__24844_24850 = chunk__24841_24847.cljs$core$IIndexed$_nth$arity$2(null, i__24843_24849);
      var key_name_24851 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24844_24850, 0, null);
      var f_24852 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24844_24850, 1, null);
      var str_name_24853 = cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(key_name_24851) : cljs.core.name.call(null, key_name_24851);
      obj[str_name_24853] = f_24852;
      var G__24854 = seq__24840_24846;
      var G__24855 = chunk__24841_24847;
      var G__24856 = count__24842_24848;
      var G__24857 = i__24843_24849 + 1;
      seq__24840_24846 = G__24854;
      chunk__24841_24847 = G__24855;
      count__24842_24848 = G__24856;
      i__24843_24849 = G__24857;
      continue;
    } else {
      var temp__4425__auto___24858 = cljs.core.seq(seq__24840_24846);
      if (temp__4425__auto___24858) {
        var seq__24840_24859__$1 = temp__4425__auto___24858;
        if (cljs.core.chunked_seq_QMARK_(seq__24840_24859__$1)) {
          var c__5310__auto___24860 = cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(seq__24840_24859__$1) : cljs.core.chunk_first.call(null, seq__24840_24859__$1);
          var G__24861 = cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(seq__24840_24859__$1) : cljs.core.chunk_rest.call(null, seq__24840_24859__$1);
          var G__24862 = c__5310__auto___24860;
          var G__24863 = cljs.core.count(c__5310__auto___24860);
          var G__24864 = 0;
          seq__24840_24846 = G__24861;
          chunk__24841_24847 = G__24862;
          count__24842_24848 = G__24863;
          i__24843_24849 = G__24864;
          continue;
        } else {
          var vec__24845_24865 = cljs.core.first(seq__24840_24859__$1);
          var key_name_24866 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24845_24865, 0, null);
          var f_24867 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24845_24865, 1, null);
          var str_name_24868 = cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(key_name_24866) : cljs.core.name.call(null, key_name_24866);
          obj[str_name_24868] = f_24867;
          var G__24869 = cljs.core.next(seq__24840_24859__$1);
          var G__24870 = null;
          var G__24871 = 0;
          var G__24872 = 0;
          seq__24840_24846 = G__24869;
          chunk__24841_24847 = G__24870;
          count__24842_24848 = G__24871;
          i__24843_24849 = G__24872;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest(coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function cljs$core$__GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.list_QMARK_ = function cljs$core$list_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 33554432 || x.cljs$core$IList$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IList, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IList, x);
  }
};
cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.empty_ordered_hash;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.list_QMARK_(other) || cljs.core.sequential_QMARK_(other)) {
    return cljs.core.seq(other) == null;
  } else {
    return false;
  }
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function cljs$core$__GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.reversible_QMARK_ = function cljs$core$reversible_QMARK_(coll) {
  if (!(coll == null)) {
    if (coll.cljs$lang$protocol_mask$partition0$ & 134217728 || coll.cljs$core$IReversible$) {
      return true;
    } else {
      if (!coll.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, coll);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, coll);
  }
};
cljs.core.rseq = function cljs$core$rseq(coll) {
  return cljs.core._rseq(coll);
};
cljs.core.reverse = function cljs$core$reverse(coll) {
  if (cljs.core.reversible_QMARK_(coll)) {
    return cljs.core.rseq(coll);
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function cljs$core$list() {
  var args__5572__auto__ = [];
  var len__5565__auto___24878 = arguments.length;
  var i__5566__auto___24879 = 0;
  while (true) {
    if (i__5566__auto___24879 < len__5565__auto___24878) {
      args__5572__auto__.push(arguments[i__5566__auto___24879]);
      var G__24880 = i__5566__auto___24879 + 1;
      i__5566__auto___24879 = G__24880;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
cljs.core.list.cljs$core$IFn$_invoke$arity$variadic = function(xs) {
  var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
    var arr = [];
    var xs__$1 = xs;
    while (true) {
      if (!(xs__$1 == null)) {
        arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));
        var G__24881 = xs__$1.cljs$core$INext$_next$arity$1(null);
        xs__$1 = G__24881;
        continue;
      } else {
        return arr;
      }
      break;
    }
  }();
  var i = arr.length;
  var r = cljs.core.List.EMPTY;
  while (true) {
    if (i > 0) {
      var G__24882 = i - 1;
      var G__24883 = r.cljs$core$ICollection$_conj$arity$2(null, arr[i - 1]);
      i = G__24882;
      r = G__24883;
      continue;
    } else {
      return r;
    }
    break;
  }
};
cljs.core.list.cljs$lang$maxFixedArity = 0;
cljs.core.list.cljs$lang$applyTo = function(seq24877) {
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq24877));
};
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq(self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.Cons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function cljs$core$__GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.cons = function cljs$core$cons(x, coll) {
  if (function() {
    var or__4526__auto__ = coll == null;
    if (or__4526__auto__) {
      return or__4526__auto__;
    } else {
      if (!(coll == null)) {
        if (coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq(coll), null);
  }
};
cljs.core.hash_keyword = function cljs$core$hash_keyword(k) {
  return cljs.core.hash_symbol(k) + 2654435769 | 0;
};
cljs.core.compare_keywords = function cljs$core$compare_keywords(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__4514__auto__ = cljs.core.not(a.ns);
      if (and__4514__auto__) {
        return b.ns;
      } else {
        return and__4514__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__24894 = a.ns;
            var G__24895 = b.ns;
            return goog.array.defaultCompare(G__24894, G__24895);
          }();
          if (0 === nsc) {
            var G__24896 = a.name;
            var G__24897 = b.name;
            return goog.array.defaultCompare(G__24896, G__24897);
          } else {
            return nsc;
          }
        }
      } else {
        var G__24898 = a.name;
        var G__24899 = b.name;
        return goog.array.defaultCompare(G__24898, G__24899);
      }
    }
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__24901 = null;
  var G__24901__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
  };
  var G__24901__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
  };
  G__24901 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__24901__2.call(this, self__, coll);
      case 3:
        return G__24901__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__24901.cljs$core$IFn$_invoke$arity$2 = G__24901__2;
  G__24901.cljs$core$IFn$_invoke$arity$3 = G__24901__3;
  return G__24901;
}();
cljs.core.Keyword.prototype.apply = function(self__, args24900) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args24900)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__4942__auto__ = self__._hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_keyword(this$__$1);
    self__._hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "fqn", "fqn", -1749334463, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function cljs$core$__GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function cljs$core$keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function cljs$core$keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.symbol_identical_QMARK_ = function cljs$core$symbol_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Symbol && y instanceof cljs.core.Symbol) {
      return x.str === y.str;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function cljs$core$namespace(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 4096 || x.cljs$core$INamed$ ? true : false : false) {
    return x.cljs$core$INamed$_namespace$arity$1(null);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function cljs$core$keyword() {
  var args24904 = [];
  var len__5565__auto___24907 = arguments.length;
  var i__5566__auto___24908 = 0;
  while (true) {
    if (i__5566__auto___24908 < len__5565__auto___24907) {
      args24904.push(arguments[i__5566__auto___24908]);
      var G__24909 = i__5566__auto___24908 + 1;
      i__5566__auto___24908 = G__24909;
      continue;
    } else {
    }
    break;
  }
  var G__24906 = args24904.length;
  switch(G__24906) {
    case 1:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24904.length)].join(""));;
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Keyword) {
    return name;
  } else {
    if (name instanceof cljs.core.Symbol) {
      return new cljs.core.Keyword(cljs.core.namespace(name), cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(name) : cljs.core.name.call(null, name), name.str, null);
    } else {
      if (typeof name === "string") {
        var parts = name.split("/");
        if (parts.length === 2) {
          return new cljs.core.Keyword(parts[0], parts[1], name, null);
        } else {
          return new cljs.core.Keyword(null, parts[0], name, null);
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
};
cljs.core.keyword.cljs$lang$maxFixedArity = 2;
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest(self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__24911 = ls.sval();
        ls = G__24911;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq(self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.LazySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function cljs$core$__GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function cljs$core$__GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function cljs$core$chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function cljs$core$__GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function cljs$core$array_chunk() {
  var args24912 = [];
  var len__5565__auto___24915 = arguments.length;
  var i__5566__auto___24916 = 0;
  while (true) {
    if (i__5566__auto___24916 < len__5565__auto___24915) {
      args24912.push(arguments[i__5566__auto___24916]);
      var G__24917 = i__5566__auto___24916 + 1;
      i__5566__auto___24916 = G__24917;
      continue;
    } else {
    }
    break;
  }
  var G__24914 = args24912.length;
  switch(G__24914) {
    case 1:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24912.length)].join(""));;
  }
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1 = function(arr) {
  return new cljs.core.ArrayChunk(arr, 0, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2 = function(arr, off) {
  return new cljs.core.ArrayChunk(arr, off, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3 = function(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk.cljs$lang$maxFixedArity = 3;
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq(self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "chunk", "chunk", 449371907, null), new cljs.core.Symbol(null, "more", "more", -418290273, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function cljs$core$__GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.chunk_cons = function cljs$core$chunk_cons(chunk, rest) {
  if (cljs.core._count(chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function cljs$core$chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function cljs$core$chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function cljs$core$chunk_first(s) {
  return cljs.core._chunked_first(s);
};
cljs.core.chunk_rest = function cljs$core$chunk_rest(s) {
  return cljs.core._chunked_rest(s);
};
cljs.core.chunk_next = function cljs$core$chunk_next(s) {
  if (!(s == null) ? s.cljs$lang$protocol_mask$partition1$ & 1024 || s.cljs$core$IChunkedNext$ ? true : false : false) {
    return cljs.core._chunked_next(s);
  } else {
    return cljs.core.seq(cljs.core._chunked_rest(s));
  }
};
cljs.core.to_array = function cljs$core$to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq(s__$1)) {
      ary.push(cljs.core.first(s__$1));
      var G__24921 = cljs.core.next(s__$1);
      s__$1 = G__24921;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function cljs$core$to_array_2d(coll) {
  var ret = new Array(cljs.core.count(coll));
  var i_24922 = 0;
  var xs_24923 = cljs.core.seq(coll);
  while (true) {
    if (xs_24923) {
      ret[i_24922] = cljs.core.to_array(cljs.core.first(xs_24923));
      var G__24924 = i_24922 + 1;
      var G__24925 = cljs.core.next(xs_24923);
      i_24922 = G__24924;
      xs_24923 = G__24925;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function cljs$core$int_array() {
  var args24926 = [];
  var len__5565__auto___24929 = arguments.length;
  var i__5566__auto___24930 = 0;
  while (true) {
    if (i__5566__auto___24930 < len__5565__auto___24929) {
      args24926.push(arguments[i__5566__auto___24930]);
      var G__24931 = i__5566__auto___24930 + 1;
      i__5566__auto___24930 = G__24931;
      continue;
    } else {
    }
    break;
  }
  var G__24928 = args24926.length;
  switch(G__24928) {
    case 1:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24926.length)].join(""));;
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__24933 = i + 1;
        var G__24934 = cljs.core.next(s__$1);
        i = G__24933;
        s__$1 = G__24934;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5410__auto___24935 = size;
    var i_24936 = 0;
    while (true) {
      if (i_24936 < n__5410__auto___24935) {
        a[i_24936] = init_val_or_seq;
        var G__24937 = i_24936 + 1;
        i_24936 = G__24937;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.int_array.cljs$lang$maxFixedArity = 2;
cljs.core.long_array = function cljs$core$long_array() {
  var args24938 = [];
  var len__5565__auto___24941 = arguments.length;
  var i__5566__auto___24942 = 0;
  while (true) {
    if (i__5566__auto___24942 < len__5565__auto___24941) {
      args24938.push(arguments[i__5566__auto___24942]);
      var G__24943 = i__5566__auto___24942 + 1;
      i__5566__auto___24942 = G__24943;
      continue;
    } else {
    }
    break;
  }
  var G__24940 = args24938.length;
  switch(G__24940) {
    case 1:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24938.length)].join(""));;
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__24945 = i + 1;
        var G__24946 = cljs.core.next(s__$1);
        i = G__24945;
        s__$1 = G__24946;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5410__auto___24947 = size;
    var i_24948 = 0;
    while (true) {
      if (i_24948 < n__5410__auto___24947) {
        a[i_24948] = init_val_or_seq;
        var G__24949 = i_24948 + 1;
        i_24948 = G__24949;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.long_array.cljs$lang$maxFixedArity = 2;
cljs.core.double_array = function cljs$core$double_array() {
  var args24950 = [];
  var len__5565__auto___24953 = arguments.length;
  var i__5566__auto___24954 = 0;
  while (true) {
    if (i__5566__auto___24954 < len__5565__auto___24953) {
      args24950.push(arguments[i__5566__auto___24954]);
      var G__24955 = i__5566__auto___24954 + 1;
      i__5566__auto___24954 = G__24955;
      continue;
    } else {
    }
    break;
  }
  var G__24952 = args24950.length;
  switch(G__24952) {
    case 1:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24950.length)].join(""));;
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__24957 = i + 1;
        var G__24958 = cljs.core.next(s__$1);
        i = G__24957;
        s__$1 = G__24958;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5410__auto___24959 = size;
    var i_24960 = 0;
    while (true) {
      if (i_24960 < n__5410__auto___24959) {
        a[i_24960] = init_val_or_seq;
        var G__24961 = i_24960 + 1;
        i_24960 = G__24961;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.double_array.cljs$lang$maxFixedArity = 2;
cljs.core.object_array = function cljs$core$object_array() {
  var args24962 = [];
  var len__5565__auto___24965 = arguments.length;
  var i__5566__auto___24966 = 0;
  while (true) {
    if (i__5566__auto___24966 < len__5565__auto___24965) {
      args24962.push(arguments[i__5566__auto___24966]);
      var G__24967 = i__5566__auto___24966 + 1;
      i__5566__auto___24966 = G__24967;
      continue;
    } else {
    }
    break;
  }
  var G__24964 = args24962.length;
  switch(G__24964) {
    case 1:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24962.length)].join(""));;
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__24969 = i + 1;
        var G__24970 = cljs.core.next(s__$1);
        i = G__24969;
        s__$1 = G__24970;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5410__auto___24971 = size;
    var i_24972 = 0;
    while (true) {
      if (i_24972 < n__5410__auto___24971) {
        a[i_24972] = init_val_or_seq;
        var G__24973 = i_24972 + 1;
        i_24972 = G__24973;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.object_array.cljs$lang$maxFixedArity = 2;
cljs.core.bounded_count = function cljs$core$bounded_count(s, n) {
  if (cljs.core.counted_QMARK_(s)) {
    return cljs.core.count(s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq(s__$1)) {
        var G__24974 = cljs.core.next(s__$1);
        var G__24975 = i - 1;
        var G__24976 = sum + 1;
        s__$1 = G__24974;
        i = G__24975;
        sum = G__24976;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function cljs$core$spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next(arglist) == null) {
      return cljs.core.seq(cljs.core.first(arglist));
    } else {
      return cljs.core.cons(cljs.core.first(arglist), cljs$core$spread(cljs.core.next(arglist)));
    }
  }
};
cljs.core.concat = function cljs$core$concat() {
  var args24978 = [];
  var len__5565__auto___24990 = arguments.length;
  var i__5566__auto___24991 = 0;
  while (true) {
    if (i__5566__auto___24991 < len__5565__auto___24990) {
      args24978.push(arguments[i__5566__auto___24991]);
      var G__24992 = i__5566__auto___24991 + 1;
      i__5566__auto___24991 = G__24992;
      continue;
    } else {
    }
    break;
  }
  var G__24983 = args24978.length;
  switch(G__24983) {
    case 0:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args24978.slice(2), 0);
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$0 = function() {
  return new cljs.core.LazySeq(null, function() {
    return null;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return x;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return new cljs.core.LazySeq(null, function() {
    var s = cljs.core.seq(x);
    if (s) {
      if (cljs.core.chunked_seq_QMARK_(s)) {
        return cljs.core.chunk_cons(cljs.core.chunk_first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s), y));
      } else {
        return cljs.core.cons(cljs.core.first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s), y));
      }
    } else {
      return y;
    }
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic = function(x, y, zs) {
  var cat = function cljs$core$cat(xys, zs__$1) {
    return new cljs.core.LazySeq(null, function() {
      var xys__$1 = cljs.core.seq(xys);
      if (xys__$1) {
        if (cljs.core.chunked_seq_QMARK_(xys__$1)) {
          return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1), cljs$core$cat(cljs.core.chunk_rest(xys__$1), zs__$1));
        } else {
          return cljs.core.cons(cljs.core.first(xys__$1), cljs$core$cat(cljs.core.rest(xys__$1), zs__$1));
        }
      } else {
        if (cljs.core.truth_(zs__$1)) {
          return cljs$core$cat(cljs.core.first(zs__$1), cljs.core.next(zs__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(x, y), zs);
};
cljs.core.concat.cljs$lang$applyTo = function(seq24979) {
  var G__24980 = cljs.core.first(seq24979);
  var seq24979__$1 = cljs.core.next(seq24979);
  var G__24981 = cljs.core.first(seq24979__$1);
  var seq24979__$2 = cljs.core.next(seq24979__$1);
  return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(G__24980, G__24981, seq24979__$2);
};
cljs.core.concat.cljs$lang$maxFixedArity = 2;
cljs.core.list_STAR_ = function cljs$core$list_STAR_() {
  var args24994 = [];
  var len__5565__auto___25002 = arguments.length;
  var i__5566__auto___25003 = 0;
  while (true) {
    if (i__5566__auto___25003 < len__5565__auto___25002) {
      args24994.push(arguments[i__5566__auto___25003]);
      var G__25004 = i__5566__auto___25003 + 1;
      i__5566__auto___25003 = G__25004;
      continue;
    } else {
    }
    break;
  }
  var G__25001 = args24994.length;
  switch(G__25001) {
    case 1:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args24994.slice(4), 0);
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5584__auto__);
  }
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1 = function(args) {
  return cljs.core.seq(args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2 = function(a, args) {
  return cljs.core.cons(a, args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3 = function(a, b, args) {
  return cljs.core.cons(a, cljs.core.cons(b, args));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, args) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, args)));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, more) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(more)))));
};
cljs.core.list_STAR_.cljs$lang$applyTo = function(seq24995) {
  var G__24996 = cljs.core.first(seq24995);
  var seq24995__$1 = cljs.core.next(seq24995);
  var G__24997 = cljs.core.first(seq24995__$1);
  var seq24995__$2 = cljs.core.next(seq24995__$1);
  var G__24998 = cljs.core.first(seq24995__$2);
  var seq24995__$3 = cljs.core.next(seq24995__$2);
  var G__24999 = cljs.core.first(seq24995__$3);
  var seq24995__$4 = cljs.core.next(seq24995__$3);
  return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(G__24996, G__24997, G__24998, G__24999, seq24995__$4);
};
cljs.core.list_STAR_.cljs$lang$maxFixedArity = 4;
cljs.core.transient$ = function cljs$core$transient(coll) {
  return cljs.core._as_transient(coll);
};
cljs.core.persistent_BANG_ = function cljs$core$persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_(tcoll);
};
cljs.core.conj_BANG_ = function cljs$core$conj_BANG_() {
  var args25006 = [];
  var len__5565__auto___25012 = arguments.length;
  var i__5566__auto___25013 = 0;
  while (true) {
    if (i__5566__auto___25013 < len__5565__auto___25012) {
      args25006.push(arguments[i__5566__auto___25013]);
      var G__25014 = i__5566__auto___25013 + 1;
      i__5566__auto___25013 = G__25014;
      continue;
    } else {
    }
    break;
  }
  var G__25011 = args25006.length;
  switch(G__25011) {
    case 0:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args25006.slice(2), 0);
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._conj_BANG_(tcoll, val);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._conj_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__25016 = ntcoll;
      var G__25017 = cljs.core.first(vals);
      var G__25018 = cljs.core.next(vals);
      tcoll = G__25016;
      val = G__25017;
      vals = G__25018;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.conj_BANG_.cljs$lang$applyTo = function(seq25007) {
  var G__25008 = cljs.core.first(seq25007);
  var seq25007__$1 = cljs.core.next(seq25007);
  var G__25009 = cljs.core.first(seq25007__$1);
  var seq25007__$2 = cljs.core.next(seq25007__$1);
  return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__25008, G__25009, seq25007__$2);
};
cljs.core.conj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.assoc_BANG_ = function cljs$core$assoc_BANG_() {
  var args25019 = [];
  var len__5565__auto___25026 = arguments.length;
  var i__5566__auto___25027 = 0;
  while (true) {
    if (i__5566__auto___25027 < len__5565__auto___25026) {
      args25019.push(arguments[i__5566__auto___25027]);
      var G__25028 = i__5566__auto___25027 + 1;
      i__5566__auto___25027 = G__25028;
      continue;
    } else {
    }
    break;
  }
  var G__25025 = args25019.length;
  switch(G__25025) {
    case 3:
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args25019.slice(3), 0);
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5584__auto__);
  }
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = function(tcoll, key, val) {
  return cljs.core._assoc_BANG_(tcoll, key, val);
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, val, kvs) {
  while (true) {
    var ntcoll = cljs.core._assoc_BANG_(tcoll, key, val);
    if (cljs.core.truth_(kvs)) {
      var G__25030 = ntcoll;
      var G__25031 = cljs.core.first(kvs);
      var G__25032 = cljs.core.second(kvs);
      var G__25033 = cljs.core.nnext(kvs);
      tcoll = G__25030;
      key = G__25031;
      val = G__25032;
      kvs = G__25033;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.assoc_BANG_.cljs$lang$applyTo = function(seq25020) {
  var G__25021 = cljs.core.first(seq25020);
  var seq25020__$1 = cljs.core.next(seq25020);
  var G__25022 = cljs.core.first(seq25020__$1);
  var seq25020__$2 = cljs.core.next(seq25020__$1);
  var G__25023 = cljs.core.first(seq25020__$2);
  var seq25020__$3 = cljs.core.next(seq25020__$2);
  return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__25021, G__25022, G__25023, seq25020__$3);
};
cljs.core.assoc_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc_BANG_ = function cljs$core$dissoc_BANG_() {
  var args25034 = [];
  var len__5565__auto___25040 = arguments.length;
  var i__5566__auto___25041 = 0;
  while (true) {
    if (i__5566__auto___25041 < len__5565__auto___25040) {
      args25034.push(arguments[i__5566__auto___25041]);
      var G__25042 = i__5566__auto___25041 + 1;
      i__5566__auto___25041 = G__25042;
      continue;
    } else {
    }
    break;
  }
  var G__25039 = args25034.length;
  switch(G__25039) {
    case 2:
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args25034.slice(2), 0);
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, key) {
  return cljs.core._dissoc_BANG_(tcoll, key);
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, ks) {
  while (true) {
    var ntcoll = cljs.core._dissoc_BANG_(tcoll, key);
    if (cljs.core.truth_(ks)) {
      var G__25044 = ntcoll;
      var G__25045 = cljs.core.first(ks);
      var G__25046 = cljs.core.next(ks);
      tcoll = G__25044;
      key = G__25045;
      ks = G__25046;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.dissoc_BANG_.cljs$lang$applyTo = function(seq25035) {
  var G__25036 = cljs.core.first(seq25035);
  var seq25035__$1 = cljs.core.next(seq25035);
  var G__25037 = cljs.core.first(seq25035__$1);
  var seq25035__$2 = cljs.core.next(seq25035__$1);
  return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__25036, G__25037, seq25035__$2);
};
cljs.core.dissoc_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.pop_BANG_ = function cljs$core$pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_(tcoll);
};
cljs.core.disj_BANG_ = function cljs$core$disj_BANG_() {
  var args25047 = [];
  var len__5565__auto___25053 = arguments.length;
  var i__5566__auto___25054 = 0;
  while (true) {
    if (i__5566__auto___25054 < len__5565__auto___25053) {
      args25047.push(arguments[i__5566__auto___25054]);
      var G__25055 = i__5566__auto___25054 + 1;
      i__5566__auto___25054 = G__25055;
      continue;
    } else {
    }
    break;
  }
  var G__25052 = args25047.length;
  switch(G__25052) {
    case 2:
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args25047.slice(2), 0);
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._disjoin_BANG_(tcoll, val);
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._disjoin_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__25057 = ntcoll;
      var G__25058 = cljs.core.first(vals);
      var G__25059 = cljs.core.next(vals);
      tcoll = G__25057;
      val = G__25058;
      vals = G__25059;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.disj_BANG_.cljs$lang$applyTo = function(seq25048) {
  var G__25049 = cljs.core.first(seq25048);
  var seq25048__$1 = cljs.core.next(seq25048);
  var G__25050 = cljs.core.first(seq25048__$1);
  var seq25048__$2 = cljs.core.next(seq25048__$1);
  return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__25049, G__25050, seq25048__$2);
};
cljs.core.disj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.apply_to = function cljs$core$apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq(args);
  if (argc === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var a5454 = cljs.core._first(args__$1);
    var args__$2 = cljs.core._rest(args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a5454);
      } else {
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(a5454) : f.call(null, a5454);
      }
    } else {
      var b5455 = cljs.core._first(args__$2);
      var args__$3 = cljs.core._rest(args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a5454, b5455);
        } else {
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(a5454, b5455) : f.call(null, a5454, b5455);
        }
      } else {
        var c5456 = cljs.core._first(args__$3);
        var args__$4 = cljs.core._rest(args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a5454, b5455, c5456);
          } else {
            return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(a5454, b5455, c5456) : f.call(null, a5454, b5455, c5456);
          }
        } else {
          var d5457 = cljs.core._first(args__$4);
          var args__$5 = cljs.core._rest(args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a5454, b5455, c5456, d5457);
            } else {
              return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(a5454, b5455, c5456, d5457) : f.call(null, a5454, b5455, c5456, d5457);
            }
          } else {
            var e5458 = cljs.core._first(args__$5);
            var args__$6 = cljs.core._rest(args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a5454, b5455, c5456, d5457, e5458);
              } else {
                return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(a5454, b5455, c5456, d5457, e5458) : f.call(null, a5454, b5455, c5456, d5457, e5458);
              }
            } else {
              var f5459 = cljs.core._first(args__$6);
              var args__$7 = cljs.core._rest(args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a5454, b5455, c5456, d5457, e5458, f5459);
                } else {
                  return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(a5454, b5455, c5456, d5457, e5458, f5459) : f.call(null, a5454, b5455, c5456, d5457, e5458, f5459);
                }
              } else {
                var g5460 = cljs.core._first(args__$7);
                var args__$8 = cljs.core._rest(args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a5454, b5455, c5456, d5457, e5458, f5459, g5460);
                  } else {
                    return f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(a5454, b5455, c5456, d5457, e5458, f5459, g5460) : f.call(null, a5454, b5455, c5456, d5457, e5458, f5459, g5460);
                  }
                } else {
                  var h5461 = cljs.core._first(args__$8);
                  var args__$9 = cljs.core._rest(args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461);
                    } else {
                      return f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461) : f.call(null, a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461);
                    }
                  } else {
                    var i5462 = cljs.core._first(args__$9);
                    var args__$10 = cljs.core._rest(args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462);
                      } else {
                        return f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462) : f.call(null, a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462);
                      }
                    } else {
                      var j5463 = cljs.core._first(args__$10);
                      var args__$11 = cljs.core._rest(args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463);
                        } else {
                          return f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463) : f.call(null, a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463);
                        }
                      } else {
                        var k5464 = cljs.core._first(args__$11);
                        var args__$12 = cljs.core._rest(args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464);
                          } else {
                            return f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464) : f.call(null, a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464);
                          }
                        } else {
                          var l5465 = cljs.core._first(args__$12);
                          var args__$13 = cljs.core._rest(args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465);
                            } else {
                              return f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465) : f.call(null, a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465);
                            }
                          } else {
                            var m5466 = cljs.core._first(args__$13);
                            var args__$14 = cljs.core._rest(args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466);
                              } else {
                                return f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466) : f.call(null, a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466);
                              }
                            } else {
                              var n5467 = cljs.core._first(args__$14);
                              var args__$15 = cljs.core._rest(args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467);
                                } else {
                                  return f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467) : f.call(null, a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467);
                                }
                              } else {
                                var o5468 = cljs.core._first(args__$15);
                                var args__$16 = cljs.core._rest(args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467, o5468);
                                  } else {
                                    return f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467, o5468) : f.call(null, a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467, o5468);
                                  }
                                } else {
                                  var p5469 = cljs.core._first(args__$16);
                                  var args__$17 = cljs.core._rest(args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467, o5468, p5469);
                                    } else {
                                      return f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467, o5468, p5469) : f.call(null, a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467, o5468, p5469);
                                    }
                                  } else {
                                    var q5470 = cljs.core._first(args__$17);
                                    var args__$18 = cljs.core._rest(args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467, o5468, p5469, q5470);
                                      } else {
                                        return f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467, o5468, p5469, q5470) : f.call(null, a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467, o5468, p5469, q5470);
                                      }
                                    } else {
                                      var r5471 = cljs.core._first(args__$18);
                                      var args__$19 = cljs.core._rest(args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467, o5468, p5469, q5470, r5471);
                                        } else {
                                          return f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467, o5468, p5469, q5470, r5471) : f.call(null, a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467, o5468, p5469, q5470, r5471);
                                        }
                                      } else {
                                        var s5472 = cljs.core._first(args__$19);
                                        var args__$20 = cljs.core._rest(args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467, o5468, p5469, q5470, r5471, s5472);
                                          } else {
                                            return f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467, o5468, p5469, q5470, r5471, s5472) : f.call(null, a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467, o5468, p5469, q5470, r5471, s5472);
                                          }
                                        } else {
                                          var t5473 = cljs.core._first(args__$20);
                                          var args__$21 = cljs.core._rest(args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467, o5468, p5469, q5470, r5471, s5472, t5473);
                                            } else {
                                              return f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467, o5468, p5469, q5470, r5471, s5472, t5473) : f.call(null, a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467, o5468, p5469, q5470, r5471, s5472, t5473);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function cljs$core$apply() {
  var args25060 = [];
  var len__5565__auto___25069 = arguments.length;
  var i__5566__auto___25070 = 0;
  while (true) {
    if (i__5566__auto___25070 < len__5565__auto___25069) {
      args25060.push(arguments[i__5566__auto___25070]);
      var G__25071 = i__5566__auto___25070 + 1;
      i__5566__auto___25070 = G__25071;
      continue;
    } else {
    }
    break;
  }
  var G__25068 = args25060.length;
  switch(G__25068) {
    case 2:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args25060.slice(5), 0);
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], argseq__5584__auto__);
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$2 = function(f, args) {
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(args, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, args);
    } else {
      return f.cljs$lang$applyTo(args);
    }
  } else {
    return f.apply(f, cljs.core.to_array(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$3 = function(f, x, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x, y, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$5 = function(f, x, y, z, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x, y, z, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic = function(f, a, b, c, d, args) {
  var arglist = cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(args)))));
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$lang$applyTo = function(seq25061) {
  var G__25062 = cljs.core.first(seq25061);
  var seq25061__$1 = cljs.core.next(seq25061);
  var G__25063 = cljs.core.first(seq25061__$1);
  var seq25061__$2 = cljs.core.next(seq25061__$1);
  var G__25064 = cljs.core.first(seq25061__$2);
  var seq25061__$3 = cljs.core.next(seq25061__$2);
  var G__25065 = cljs.core.first(seq25061__$3);
  var seq25061__$4 = cljs.core.next(seq25061__$3);
  var G__25066 = cljs.core.first(seq25061__$4);
  var seq25061__$5 = cljs.core.next(seq25061__$4);
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(G__25062, G__25063, G__25064, G__25065, G__25066, seq25061__$5);
};
cljs.core.apply.cljs$lang$maxFixedArity = 5;
cljs.core.vary_meta = function cljs$core$vary_meta() {
  var args25073 = [];
  var len__5565__auto___25098 = arguments.length;
  var i__5566__auto___25099 = 0;
  while (true) {
    if (i__5566__auto___25099 < len__5565__auto___25098) {
      args25073.push(arguments[i__5566__auto___25099]);
      var G__25100 = i__5566__auto___25099 + 1;
      i__5566__auto___25099 = G__25100;
      continue;
    } else {
    }
    break;
  }
  var G__25082 = args25073.length;
  switch(G__25082) {
    case 2:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args25073.slice(6), 0);
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__5584__auto__);
  }
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2 = function(obj, f) {
  return cljs.core.with_meta(obj, function() {
    var G__25083 = cljs.core.meta(obj);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25083) : f.call(null, G__25083);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3 = function(obj, f, a) {
  return cljs.core.with_meta(obj, function() {
    var G__25084 = cljs.core.meta(obj);
    var G__25085 = a;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25084, G__25085) : f.call(null, G__25084, G__25085);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4 = function(obj, f, a, b) {
  return cljs.core.with_meta(obj, function() {
    var G__25086 = cljs.core.meta(obj);
    var G__25087 = a;
    var G__25088 = b;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25086, G__25087, G__25088) : f.call(null, G__25086, G__25087, G__25088);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5 = function(obj, f, a, b, c) {
  return cljs.core.with_meta(obj, function() {
    var G__25089 = cljs.core.meta(obj);
    var G__25090 = a;
    var G__25091 = b;
    var G__25092 = c;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__25089, G__25090, G__25091, G__25092) : f.call(null, G__25089, G__25090, G__25091, G__25092);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6 = function(obj, f, a, b, c, d) {
  return cljs.core.with_meta(obj, function() {
    var G__25093 = cljs.core.meta(obj);
    var G__25094 = a;
    var G__25095 = b;
    var G__25096 = c;
    var G__25097 = d;
    return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__25093, G__25094, G__25095, G__25096, G__25097) : f.call(null, G__25093, G__25094, G__25095, G__25096, G__25097);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic = function(obj, f, a, b, c, d, args) {
  return cljs.core.with_meta(obj, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.meta(obj), a, b, c, cljs.core.array_seq([d, args], 0)));
};
cljs.core.vary_meta.cljs$lang$applyTo = function(seq25074) {
  var G__25075 = cljs.core.first(seq25074);
  var seq25074__$1 = cljs.core.next(seq25074);
  var G__25076 = cljs.core.first(seq25074__$1);
  var seq25074__$2 = cljs.core.next(seq25074__$1);
  var G__25077 = cljs.core.first(seq25074__$2);
  var seq25074__$3 = cljs.core.next(seq25074__$2);
  var G__25078 = cljs.core.first(seq25074__$3);
  var seq25074__$4 = cljs.core.next(seq25074__$3);
  var G__25079 = cljs.core.first(seq25074__$4);
  var seq25074__$5 = cljs.core.next(seq25074__$4);
  var G__25080 = cljs.core.first(seq25074__$5);
  var seq25074__$6 = cljs.core.next(seq25074__$5);
  return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(G__25075, G__25076, G__25077, G__25078, G__25079, G__25080, seq25074__$6);
};
cljs.core.vary_meta.cljs$lang$maxFixedArity = 6;
cljs.core.not_EQ_ = function cljs$core$not_EQ_() {
  var args25102 = [];
  var len__5565__auto___25108 = arguments.length;
  var i__5566__auto___25109 = 0;
  while (true) {
    if (i__5566__auto___25109 < len__5565__auto___25108) {
      args25102.push(arguments[i__5566__auto___25109]);
      var G__25110 = i__5566__auto___25109 + 1;
      i__5566__auto___25109 = G__25110;
      continue;
    } else {
    }
    break;
  }
  var G__25107 = args25102.length;
  switch(G__25107) {
    case 1:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args25102.slice(2), 0);
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return false;
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, x, y, more));
};
cljs.core.not_EQ_.cljs$lang$applyTo = function(seq25103) {
  var G__25104 = cljs.core.first(seq25103);
  var seq25103__$1 = cljs.core.next(seq25103);
  var G__25105 = cljs.core.first(seq25103__$1);
  var seq25103__$2 = cljs.core.next(seq25103__$1);
  return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(G__25104, G__25105, seq25103__$2);
};
cljs.core.not_EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.not_empty = function cljs$core$not_empty(coll) {
  if (cljs.core.seq(coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function cljs$core$nil_iter() {
  if (typeof cljs.core.t25115 !== "undefined") {
  } else {
    cljs.core.t25115 = function(nil_iter, meta25116) {
      this.nil_iter = nil_iter;
      this.meta25116 = meta25116;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.t25115.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_25117, meta25116__$1) {
      var self__ = this;
      var _25117__$1 = this;
      return new cljs.core.t25115(self__.nil_iter, meta25116__$1);
    };
    cljs.core.t25115.prototype.cljs$core$IMeta$_meta$arity$1 = function(_25117) {
      var self__ = this;
      var _25117__$1 = this;
      return self__.meta25116;
    };
    cljs.core.t25115.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t25115.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t25115.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t25115.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "nil-iter", "nil-iter", 1101030523, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(cljs.core.PersistentVector.EMPTY))], null)), new cljs.core.Symbol(null, "meta25116", "meta25116", -1790818748, null)], 
      null);
    };
    cljs.core.t25115.cljs$lang$type = true;
    cljs.core.t25115.cljs$lang$ctorStr = "cljs.core/t25115";
    cljs.core.t25115.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
      return cljs.core._write(writer__5106__auto__, "cljs.core/t25115");
    };
    cljs.core.__GT_t25115 = function cljs$core$nil_iter_$___GT_t25115(nil_iter__$1, meta25116) {
      return new cljs.core.t25115(nil_iter__$1, meta25116);
    };
  }
  return new cljs.core.t25115(cljs$core$nil_iter, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function cljs$core$__GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function cljs$core$string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function cljs$core$__GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function cljs$core$array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq(self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next(self__._seq);
    } else {
    }
  }
  return !(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not(this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first(self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "_seq", "_seq", -449557847, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "_next", "_next", 101877036, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function cljs$core$__GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function cljs$core$seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function cljs$core$iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter();
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter(coll);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return cljs.core.array_iter(coll);
      } else {
        if (cljs.core.truth_(cljs.core.iterable_QMARK_(coll))) {
          return cljs.core._iterator(coll);
        } else {
          if (cljs.core.seqable_QMARK_(coll)) {
            return cljs.core.seq_iter(coll);
          } else {
            throw new Error([cljs.core.str("Cannot create iterator from "), cljs.core.str(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.lazy_transformer = function cljs$core$lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__4514__auto__ = !(lt.stepper == null);
      if (and__4514__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__4514__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(function() {
        var G__25118 = lt;
        var G__25119 = self__.iter.next();
        return self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__25118, G__25119) : self__.xform.call(null, G__25118, G__25119);
      }())) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(lt) : self__.xform.call(null, lt);
  }
};
cljs.core.Stepper.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null)], null);
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/Stepper");
};
cljs.core.__GT_Stepper = function cljs$core$__GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function cljs$core$stepper(xform, iter) {
  var stepfn = function() {
    var cljs$core$stepper_$_stepfn = null;
    var cljs$core$stepper_$_stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return result;
    };
    var cljs$core$stepper_$_stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    cljs$core$stepper_$_stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return cljs$core$stepper_$_stepfn__1.call(this, result);
        case 2:
          return cljs$core$stepper_$_stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepper_$_stepfn__1;
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepper_$_stepfn__2;
    return cljs$core$stepper_$_stepfn;
  }();
  return new cljs.core.Stepper(xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(stepfn) : xform.call(null, stepfn), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq(self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first(iters__$1);
      if (cljs.core.not(iter.hasNext())) {
        return false;
      } else {
        var G__25120 = cljs.core.next(iters__$1);
        iters__$1 = G__25120;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__5410__auto___25121 = self__.iters.length;
  var i_25122 = 0;
  while (true) {
    if (i_25122 < n__5410__auto___25121) {
      self__.nexts[i_25122] = self__.iters[i_25122].next();
      var G__25123 = i_25122 + 1;
      i_25122 = G__25123;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__4514__auto__ = !(lt.stepper == null);
      if (and__4514__auto__) {
        return this$.hasNext();
      } else {
        return and__4514__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform, cljs.core.cons(lt, this$.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(lt) : self__.xform.call(null, lt);
  }
};
cljs.core.MultiStepper.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "iters", "iters", 719353031, null), new cljs.core.Symbol(null, "nexts", "nexts", -1683579407, null)], null);
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/MultiStepper");
};
cljs.core.__GT_MultiStepper = function cljs$core$__GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function cljs$core$multi_stepper() {
  var args25124 = [];
  var len__5565__auto___25127 = arguments.length;
  var i__5566__auto___25128 = 0;
  while (true) {
    if (i__5566__auto___25128 < len__5565__auto___25127) {
      args25124.push(arguments[i__5566__auto___25128]);
      var G__25129 = i__5566__auto___25128 + 1;
      i__5566__auto___25128 = G__25129;
      continue;
    } else {
    }
    break;
  }
  var G__25126 = args25124.length;
  switch(G__25126) {
    case 2:
      return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args25124.length)].join(""));;
  }
};
cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$2 = function(xform, iters) {
  return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length));
};
cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3 = function(xform, iters, nexts) {
  var stepfn = function() {
    var cljs$core$stepfn = null;
    var cljs$core$stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return lt;
    };
    var cljs$core$stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    cljs$core$stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return cljs$core$stepfn__1.call(this, result);
        case 2:
          return cljs$core$stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepfn__1;
    cljs$core$stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepfn__2;
    return cljs$core$stepfn;
  }();
  return new cljs.core.MultiStepper(xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(stepfn) : xform.call(null, stepfn), iters, nexts);
};
cljs.core.multi_stepper.cljs$lang$maxFixedArity = 3;
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 31719628;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, cljs.core._seq(this$__$1));
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq(this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential(this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_(other) && cljs.core.seq(other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll(this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq(self__.rest);
  }
};
cljs.core.LazyTransformer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "stepper", "stepper", 1159163296, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), 
  cljs.core.with_meta(new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/LazyTransformer");
};
cljs.core.__GT_LazyTransformer = function cljs$core$__GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper(xform, cljs.core.iter(coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__25131_25135 = cljs.core.seq(colls);
  var chunk__25132_25136 = null;
  var count__25133_25137 = 0;
  var i__25134_25138 = 0;
  while (true) {
    if (i__25134_25138 < count__25133_25137) {
      var coll_25139 = chunk__25132_25136.cljs$core$IIndexed$_nth$arity$2(null, i__25134_25138);
      iters.push(cljs.core.iter(coll_25139));
      var G__25140 = seq__25131_25135;
      var G__25141 = chunk__25132_25136;
      var G__25142 = count__25133_25137;
      var G__25143 = i__25134_25138 + 1;
      seq__25131_25135 = G__25140;
      chunk__25132_25136 = G__25141;
      count__25133_25137 = G__25142;
      i__25134_25138 = G__25143;
      continue;
    } else {
      var temp__4425__auto___25144 = cljs.core.seq(seq__25131_25135);
      if (temp__4425__auto___25144) {
        var seq__25131_25145__$1 = temp__4425__auto___25144;
        if (cljs.core.chunked_seq_QMARK_(seq__25131_25145__$1)) {
          var c__5310__auto___25146 = cljs.core.chunk_first(seq__25131_25145__$1);
          var G__25147 = cljs.core.chunk_rest(seq__25131_25145__$1);
          var G__25148 = c__5310__auto___25146;
          var G__25149 = cljs.core.count(c__5310__auto___25146);
          var G__25150 = 0;
          seq__25131_25135 = G__25147;
          chunk__25132_25136 = G__25148;
          count__25133_25137 = G__25149;
          i__25134_25138 = G__25150;
          continue;
        } else {
          var coll_25151 = cljs.core.first(seq__25131_25145__$1);
          iters.push(cljs.core.iter(coll_25151));
          var G__25152 = cljs.core.next(seq__25131_25145__$1);
          var G__25153 = null;
          var G__25154 = 0;
          var G__25155 = 0;
          seq__25131_25135 = G__25152;
          chunk__25132_25136 = G__25153;
          count__25133_25137 = G__25154;
          i__25134_25138 = G__25155;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function cljs$core$sequence() {
  var args25156 = [];
  var len__5565__auto___25162 = arguments.length;
  var i__5566__auto___25163 = 0;
  while (true) {
    if (i__5566__auto___25163 < len__5565__auto___25162) {
      args25156.push(arguments[i__5566__auto___25163]);
      var G__25164 = i__5566__auto___25163 + 1;
      i__5566__auto___25163 = G__25164;
      continue;
    } else {
    }
    break;
  }
  var G__25161 = args25156.length;
  switch(G__25161) {
    case 1:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args25156.slice(2), 0);
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  if (cljs.core.seq_QMARK_(coll)) {
    return coll;
  } else {
    var or__4526__auto__ = cljs.core.seq(coll);
    if (or__4526__auto__) {
      return or__4526__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$2 = function(xform, coll) {
  return cljs.core.LazyTransformer.create(xform, coll);
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic = function(xform, coll, colls) {
  return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array(cljs.core.cons(coll, colls)));
};
cljs.core.sequence.cljs$lang$applyTo = function(seq25157) {
  var G__25158 = cljs.core.first(seq25157);
  var seq25157__$1 = cljs.core.next(seq25157);
  var G__25159 = cljs.core.first(seq25157__$1);
  var seq25157__$2 = cljs.core.next(seq25157__$1);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(G__25158, G__25159, seq25157__$2);
};
cljs.core.sequence.cljs$lang$maxFixedArity = 2;
cljs.core.every_QMARK_ = function cljs$core$every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(function() {
        var G__25167 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__25167) : pred.call(null, G__25167);
      }())) {
        var G__25168 = pred;
        var G__25169 = cljs.core.next(coll);
        pred = G__25168;
        coll = G__25169;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function cljs$core$not_every_QMARK_(pred, coll) {
  return !cljs.core.every_QMARK_(pred, coll);
};
cljs.core.some = function cljs$core$some(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var or__4526__auto__ = function() {
        var G__25173 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__25173) : pred.call(null, G__25173);
      }();
      if (cljs.core.truth_(or__4526__auto__)) {
        return or__4526__auto__;
      } else {
        var G__25174 = pred;
        var G__25175 = cljs.core.next(coll);
        pred = G__25174;
        coll = G__25175;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function cljs$core$not_any_QMARK_(pred, coll) {
  return cljs.core.not(cljs.core.some(pred, coll));
};
cljs.core.even_QMARK_ = function cljs$core$even_QMARK_(n) {
  if (cljs.core.integer_QMARK_(n)) {
    return (n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function cljs$core$odd_QMARK_(n) {
  return !cljs.core.even_QMARK_(n);
};
cljs.core.complement = function cljs$core$complement(f) {
  return function() {
    var G__25176 = null;
    var G__25176__0 = function() {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
    };
    var G__25176__1 = function(x) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x));
    };
    var G__25176__2 = function(x, y) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y));
    };
    var G__25176__3 = function() {
      var G__25177__delegate = function(x, y, zs) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, x, y, zs));
      };
      var G__25177 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          var G__25178__i = 0, G__25178__a = new Array(arguments.length - 2);
          while (G__25178__i < G__25178__a.length) {
            G__25178__a[G__25178__i] = arguments[G__25178__i + 2];
            ++G__25178__i;
          }
          zs = new cljs.core.IndexedSeq(G__25178__a, 0);
        }
        return G__25177__delegate.call(this, x, y, zs);
      };
      G__25177.cljs$lang$maxFixedArity = 2;
      G__25177.cljs$lang$applyTo = function(arglist__25179) {
        var x = cljs.core.first(arglist__25179);
        arglist__25179 = cljs.core.next(arglist__25179);
        var y = cljs.core.first(arglist__25179);
        var zs = cljs.core.rest(arglist__25179);
        return G__25177__delegate(x, y, zs);
      };
      G__25177.cljs$core$IFn$_invoke$arity$variadic = G__25177__delegate;
      return G__25177;
    }();
    G__25176 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__25176__0.call(this);
        case 1:
          return G__25176__1.call(this, x);
        case 2:
          return G__25176__2.call(this, x, y);
        default:
          var G__25180 = null;
          if (arguments.length > 2) {
            var G__25181__i = 0, G__25181__a = new Array(arguments.length - 2);
            while (G__25181__i < G__25181__a.length) {
              G__25181__a[G__25181__i] = arguments[G__25181__i + 2];
              ++G__25181__i;
            }
            G__25180 = new cljs.core.IndexedSeq(G__25181__a, 0);
          }
          return G__25176__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__25180);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__25176.cljs$lang$maxFixedArity = 2;
    G__25176.cljs$lang$applyTo = G__25176__3.cljs$lang$applyTo;
    G__25176.cljs$core$IFn$_invoke$arity$0 = G__25176__0;
    G__25176.cljs$core$IFn$_invoke$arity$1 = G__25176__1;
    G__25176.cljs$core$IFn$_invoke$arity$2 = G__25176__2;
    G__25176.cljs$core$IFn$_invoke$arity$variadic = G__25176__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__25176;
  }();
};
cljs.core.constantly = function cljs$core$constantly(x) {
  return function() {
    var G__25182__delegate = function(args) {
      return x;
    };
    var G__25182 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__25183__i = 0, G__25183__a = new Array(arguments.length - 0);
        while (G__25183__i < G__25183__a.length) {
          G__25183__a[G__25183__i] = arguments[G__25183__i + 0];
          ++G__25183__i;
        }
        args = new cljs.core.IndexedSeq(G__25183__a, 0);
      }
      return G__25182__delegate.call(this, args);
    };
    G__25182.cljs$lang$maxFixedArity = 0;
    G__25182.cljs$lang$applyTo = function(arglist__25184) {
      var args = cljs.core.seq(arglist__25184);
      return G__25182__delegate(args);
    };
    G__25182.cljs$core$IFn$_invoke$arity$variadic = G__25182__delegate;
    return G__25182;
  }();
};
cljs.core.comp = function cljs$core$comp() {
  var args25185 = [];
  var len__5565__auto___25212 = arguments.length;
  var i__5566__auto___25213 = 0;
  while (true) {
    if (i__5566__auto___25213 < len__5565__auto___25212) {
      args25185.push(arguments[i__5566__auto___25213]);
      var G__25214 = i__5566__auto___25213 + 1;
      i__5566__auto___25213 = G__25214;
      continue;
    } else {
    }
    break;
  }
  var G__25191 = args25185.length;
  switch(G__25191) {
    case 0:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args25185.slice(3), 0);
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5584__auto__);
  }
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.identity;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__25216 = null;
    var G__25216__0 = function() {
      var G__25192 = g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25192) : f.call(null, G__25192);
    };
    var G__25216__1 = function(x) {
      var G__25193 = g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25193) : f.call(null, G__25193);
    };
    var G__25216__2 = function(x, y) {
      var G__25194 = g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25194) : f.call(null, G__25194);
    };
    var G__25216__3 = function(x, y, z) {
      var G__25195 = g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25195) : f.call(null, G__25195);
    };
    var G__25216__4 = function() {
      var G__25217__delegate = function(x, y, z, args) {
        var G__25196 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25196) : f.call(null, G__25196);
      };
      var G__25217 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__25218__i = 0, G__25218__a = new Array(arguments.length - 3);
          while (G__25218__i < G__25218__a.length) {
            G__25218__a[G__25218__i] = arguments[G__25218__i + 3];
            ++G__25218__i;
          }
          args = new cljs.core.IndexedSeq(G__25218__a, 0);
        }
        return G__25217__delegate.call(this, x, y, z, args);
      };
      G__25217.cljs$lang$maxFixedArity = 3;
      G__25217.cljs$lang$applyTo = function(arglist__25219) {
        var x = cljs.core.first(arglist__25219);
        arglist__25219 = cljs.core.next(arglist__25219);
        var y = cljs.core.first(arglist__25219);
        arglist__25219 = cljs.core.next(arglist__25219);
        var z = cljs.core.first(arglist__25219);
        var args = cljs.core.rest(arglist__25219);
        return G__25217__delegate(x, y, z, args);
      };
      G__25217.cljs$core$IFn$_invoke$arity$variadic = G__25217__delegate;
      return G__25217;
    }();
    G__25216 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__25216__0.call(this);
        case 1:
          return G__25216__1.call(this, x);
        case 2:
          return G__25216__2.call(this, x, y);
        case 3:
          return G__25216__3.call(this, x, y, z);
        default:
          var G__25220 = null;
          if (arguments.length > 3) {
            var G__25221__i = 0, G__25221__a = new Array(arguments.length - 3);
            while (G__25221__i < G__25221__a.length) {
              G__25221__a[G__25221__i] = arguments[G__25221__i + 3];
              ++G__25221__i;
            }
            G__25220 = new cljs.core.IndexedSeq(G__25221__a, 0);
          }
          return G__25216__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__25220);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__25216.cljs$lang$maxFixedArity = 3;
    G__25216.cljs$lang$applyTo = G__25216__4.cljs$lang$applyTo;
    G__25216.cljs$core$IFn$_invoke$arity$0 = G__25216__0;
    G__25216.cljs$core$IFn$_invoke$arity$1 = G__25216__1;
    G__25216.cljs$core$IFn$_invoke$arity$2 = G__25216__2;
    G__25216.cljs$core$IFn$_invoke$arity$3 = G__25216__3;
    G__25216.cljs$core$IFn$_invoke$arity$variadic = G__25216__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__25216;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__25222 = null;
    var G__25222__0 = function() {
      var G__25198 = function() {
        var G__25199 = h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25199) : g.call(null, G__25199);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25198) : f.call(null, G__25198);
    };
    var G__25222__1 = function(x) {
      var G__25201 = function() {
        var G__25202 = h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25202) : g.call(null, G__25202);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25201) : f.call(null, G__25201);
    };
    var G__25222__2 = function(x, y) {
      var G__25204 = function() {
        var G__25205 = h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25205) : g.call(null, G__25205);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25204) : f.call(null, G__25204);
    };
    var G__25222__3 = function(x, y, z) {
      var G__25207 = function() {
        var G__25208 = h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25208) : g.call(null, G__25208);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25207) : f.call(null, G__25207);
    };
    var G__25222__4 = function() {
      var G__25223__delegate = function(x, y, z, args) {
        var G__25210 = function() {
          var G__25211 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args);
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25211) : g.call(null, G__25211);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25210) : f.call(null, G__25210);
      };
      var G__25223 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__25224__i = 0, G__25224__a = new Array(arguments.length - 3);
          while (G__25224__i < G__25224__a.length) {
            G__25224__a[G__25224__i] = arguments[G__25224__i + 3];
            ++G__25224__i;
          }
          args = new cljs.core.IndexedSeq(G__25224__a, 0);
        }
        return G__25223__delegate.call(this, x, y, z, args);
      };
      G__25223.cljs$lang$maxFixedArity = 3;
      G__25223.cljs$lang$applyTo = function(arglist__25225) {
        var x = cljs.core.first(arglist__25225);
        arglist__25225 = cljs.core.next(arglist__25225);
        var y = cljs.core.first(arglist__25225);
        arglist__25225 = cljs.core.next(arglist__25225);
        var z = cljs.core.first(arglist__25225);
        var args = cljs.core.rest(arglist__25225);
        return G__25223__delegate(x, y, z, args);
      };
      G__25223.cljs$core$IFn$_invoke$arity$variadic = G__25223__delegate;
      return G__25223;
    }();
    G__25222 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__25222__0.call(this);
        case 1:
          return G__25222__1.call(this, x);
        case 2:
          return G__25222__2.call(this, x, y);
        case 3:
          return G__25222__3.call(this, x, y, z);
        default:
          var G__25226 = null;
          if (arguments.length > 3) {
            var G__25227__i = 0, G__25227__a = new Array(arguments.length - 3);
            while (G__25227__i < G__25227__a.length) {
              G__25227__a[G__25227__i] = arguments[G__25227__i + 3];
              ++G__25227__i;
            }
            G__25226 = new cljs.core.IndexedSeq(G__25227__a, 0);
          }
          return G__25222__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__25226);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__25222.cljs$lang$maxFixedArity = 3;
    G__25222.cljs$lang$applyTo = G__25222__4.cljs$lang$applyTo;
    G__25222.cljs$core$IFn$_invoke$arity$0 = G__25222__0;
    G__25222.cljs$core$IFn$_invoke$arity$1 = G__25222__1;
    G__25222.cljs$core$IFn$_invoke$arity$2 = G__25222__2;
    G__25222.cljs$core$IFn$_invoke$arity$3 = G__25222__3;
    G__25222.cljs$core$IFn$_invoke$arity$variadic = G__25222__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__25222;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic = function(f1, f2, f3, fs) {
  var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1, f2, f3, fs));
  return function(fs__$1) {
    return function() {
      var G__25228__delegate = function(args) {
        var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1), args);
        var fs__$2 = cljs.core.next(fs__$1);
        while (true) {
          if (fs__$2) {
            var G__25229 = cljs.core.first(fs__$2).call(null, ret);
            var G__25230 = cljs.core.next(fs__$2);
            ret = G__25229;
            fs__$2 = G__25230;
            continue;
          } else {
            return ret;
          }
          break;
        }
      };
      var G__25228 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__25231__i = 0, G__25231__a = new Array(arguments.length - 0);
          while (G__25231__i < G__25231__a.length) {
            G__25231__a[G__25231__i] = arguments[G__25231__i + 0];
            ++G__25231__i;
          }
          args = new cljs.core.IndexedSeq(G__25231__a, 0);
        }
        return G__25228__delegate.call(this, args);
      };
      G__25228.cljs$lang$maxFixedArity = 0;
      G__25228.cljs$lang$applyTo = function(arglist__25232) {
        var args = cljs.core.seq(arglist__25232);
        return G__25228__delegate(args);
      };
      G__25228.cljs$core$IFn$_invoke$arity$variadic = G__25228__delegate;
      return G__25228;
    }();
  }(fs__$1);
};
cljs.core.comp.cljs$lang$applyTo = function(seq25186) {
  var G__25187 = cljs.core.first(seq25186);
  var seq25186__$1 = cljs.core.next(seq25186);
  var G__25188 = cljs.core.first(seq25186__$1);
  var seq25186__$2 = cljs.core.next(seq25186__$1);
  var G__25189 = cljs.core.first(seq25186__$2);
  var seq25186__$3 = cljs.core.next(seq25186__$2);
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(G__25187, G__25188, G__25189, seq25186__$3);
};
cljs.core.comp.cljs$lang$maxFixedArity = 3;
cljs.core.partial = function cljs$core$partial() {
  var args25233 = [];
  var len__5565__auto___25241 = arguments.length;
  var i__5566__auto___25242 = 0;
  while (true) {
    if (i__5566__auto___25242 < len__5565__auto___25241) {
      args25233.push(arguments[i__5566__auto___25242]);
      var G__25243 = i__5566__auto___25242 + 1;
      i__5566__auto___25242 = G__25243;
      continue;
    } else {
    }
    break;
  }
  var G__25240 = args25233.length;
  switch(G__25240) {
    case 1:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args25233.slice(4), 0);
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5584__auto__);
  }
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$2 = function(f, arg1) {
  return function() {
    var G__25245 = null;
    var G__25245__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(arg1) : f.call(null, arg1);
    };
    var G__25245__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1, x) : f.call(null, arg1, x);
    };
    var G__25245__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, x, y) : f.call(null, arg1, x, y);
    };
    var G__25245__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, x, y, z) : f.call(null, arg1, x, y, z);
    };
    var G__25245__4 = function() {
      var G__25246__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, x, y, z, cljs.core.array_seq([args], 0));
      };
      var G__25246 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__25247__i = 0, G__25247__a = new Array(arguments.length - 3);
          while (G__25247__i < G__25247__a.length) {
            G__25247__a[G__25247__i] = arguments[G__25247__i + 3];
            ++G__25247__i;
          }
          args = new cljs.core.IndexedSeq(G__25247__a, 0);
        }
        return G__25246__delegate.call(this, x, y, z, args);
      };
      G__25246.cljs$lang$maxFixedArity = 3;
      G__25246.cljs$lang$applyTo = function(arglist__25248) {
        var x = cljs.core.first(arglist__25248);
        arglist__25248 = cljs.core.next(arglist__25248);
        var y = cljs.core.first(arglist__25248);
        arglist__25248 = cljs.core.next(arglist__25248);
        var z = cljs.core.first(arglist__25248);
        var args = cljs.core.rest(arglist__25248);
        return G__25246__delegate(x, y, z, args);
      };
      G__25246.cljs$core$IFn$_invoke$arity$variadic = G__25246__delegate;
      return G__25246;
    }();
    G__25245 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__25245__0.call(this);
        case 1:
          return G__25245__1.call(this, x);
        case 2:
          return G__25245__2.call(this, x, y);
        case 3:
          return G__25245__3.call(this, x, y, z);
        default:
          var G__25249 = null;
          if (arguments.length > 3) {
            var G__25250__i = 0, G__25250__a = new Array(arguments.length - 3);
            while (G__25250__i < G__25250__a.length) {
              G__25250__a[G__25250__i] = arguments[G__25250__i + 3];
              ++G__25250__i;
            }
            G__25249 = new cljs.core.IndexedSeq(G__25250__a, 0);
          }
          return G__25245__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__25249);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__25245.cljs$lang$maxFixedArity = 3;
    G__25245.cljs$lang$applyTo = G__25245__4.cljs$lang$applyTo;
    G__25245.cljs$core$IFn$_invoke$arity$0 = G__25245__0;
    G__25245.cljs$core$IFn$_invoke$arity$1 = G__25245__1;
    G__25245.cljs$core$IFn$_invoke$arity$2 = G__25245__2;
    G__25245.cljs$core$IFn$_invoke$arity$3 = G__25245__3;
    G__25245.cljs$core$IFn$_invoke$arity$variadic = G__25245__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__25245;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$3 = function(f, arg1, arg2) {
  return function() {
    var G__25251 = null;
    var G__25251__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1, arg2) : f.call(null, arg1, arg2);
    };
    var G__25251__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, arg2, x) : f.call(null, arg1, arg2, x);
    };
    var G__25251__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, arg2, x, y) : f.call(null, arg1, arg2, x, y);
    };
    var G__25251__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1, arg2, x, y, z) : f.call(null, arg1, arg2, x, y, z);
    };
    var G__25251__4 = function() {
      var G__25252__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, x, y, cljs.core.array_seq([z, args], 0));
      };
      var G__25252 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__25253__i = 0, G__25253__a = new Array(arguments.length - 3);
          while (G__25253__i < G__25253__a.length) {
            G__25253__a[G__25253__i] = arguments[G__25253__i + 3];
            ++G__25253__i;
          }
          args = new cljs.core.IndexedSeq(G__25253__a, 0);
        }
        return G__25252__delegate.call(this, x, y, z, args);
      };
      G__25252.cljs$lang$maxFixedArity = 3;
      G__25252.cljs$lang$applyTo = function(arglist__25254) {
        var x = cljs.core.first(arglist__25254);
        arglist__25254 = cljs.core.next(arglist__25254);
        var y = cljs.core.first(arglist__25254);
        arglist__25254 = cljs.core.next(arglist__25254);
        var z = cljs.core.first(arglist__25254);
        var args = cljs.core.rest(arglist__25254);
        return G__25252__delegate(x, y, z, args);
      };
      G__25252.cljs$core$IFn$_invoke$arity$variadic = G__25252__delegate;
      return G__25252;
    }();
    G__25251 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__25251__0.call(this);
        case 1:
          return G__25251__1.call(this, x);
        case 2:
          return G__25251__2.call(this, x, y);
        case 3:
          return G__25251__3.call(this, x, y, z);
        default:
          var G__25255 = null;
          if (arguments.length > 3) {
            var G__25256__i = 0, G__25256__a = new Array(arguments.length - 3);
            while (G__25256__i < G__25256__a.length) {
              G__25256__a[G__25256__i] = arguments[G__25256__i + 3];
              ++G__25256__i;
            }
            G__25255 = new cljs.core.IndexedSeq(G__25256__a, 0);
          }
          return G__25251__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__25255);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__25251.cljs$lang$maxFixedArity = 3;
    G__25251.cljs$lang$applyTo = G__25251__4.cljs$lang$applyTo;
    G__25251.cljs$core$IFn$_invoke$arity$0 = G__25251__0;
    G__25251.cljs$core$IFn$_invoke$arity$1 = G__25251__1;
    G__25251.cljs$core$IFn$_invoke$arity$2 = G__25251__2;
    G__25251.cljs$core$IFn$_invoke$arity$3 = G__25251__3;
    G__25251.cljs$core$IFn$_invoke$arity$variadic = G__25251__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__25251;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$4 = function(f, arg1, arg2, arg3) {
  return function() {
    var G__25257 = null;
    var G__25257__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, arg2, arg3) : f.call(null, arg1, arg2, arg3);
    };
    var G__25257__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, arg2, arg3, x) : f.call(null, arg1, arg2, arg3, x);
    };
    var G__25257__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1, arg2, arg3, x, y) : f.call(null, arg1, arg2, arg3, x, y);
    };
    var G__25257__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(arg1, arg2, arg3, x, y, z) : f.call(null, arg1, arg2, arg3, x, y, z);
    };
    var G__25257__4 = function() {
      var G__25258__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, x, cljs.core.array_seq([y, z, args], 0));
      };
      var G__25258 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__25259__i = 0, G__25259__a = new Array(arguments.length - 3);
          while (G__25259__i < G__25259__a.length) {
            G__25259__a[G__25259__i] = arguments[G__25259__i + 3];
            ++G__25259__i;
          }
          args = new cljs.core.IndexedSeq(G__25259__a, 0);
        }
        return G__25258__delegate.call(this, x, y, z, args);
      };
      G__25258.cljs$lang$maxFixedArity = 3;
      G__25258.cljs$lang$applyTo = function(arglist__25260) {
        var x = cljs.core.first(arglist__25260);
        arglist__25260 = cljs.core.next(arglist__25260);
        var y = cljs.core.first(arglist__25260);
        arglist__25260 = cljs.core.next(arglist__25260);
        var z = cljs.core.first(arglist__25260);
        var args = cljs.core.rest(arglist__25260);
        return G__25258__delegate(x, y, z, args);
      };
      G__25258.cljs$core$IFn$_invoke$arity$variadic = G__25258__delegate;
      return G__25258;
    }();
    G__25257 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__25257__0.call(this);
        case 1:
          return G__25257__1.call(this, x);
        case 2:
          return G__25257__2.call(this, x, y);
        case 3:
          return G__25257__3.call(this, x, y, z);
        default:
          var G__25261 = null;
          if (arguments.length > 3) {
            var G__25262__i = 0, G__25262__a = new Array(arguments.length - 3);
            while (G__25262__i < G__25262__a.length) {
              G__25262__a[G__25262__i] = arguments[G__25262__i + 3];
              ++G__25262__i;
            }
            G__25261 = new cljs.core.IndexedSeq(G__25262__a, 0);
          }
          return G__25257__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__25261);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__25257.cljs$lang$maxFixedArity = 3;
    G__25257.cljs$lang$applyTo = G__25257__4.cljs$lang$applyTo;
    G__25257.cljs$core$IFn$_invoke$arity$0 = G__25257__0;
    G__25257.cljs$core$IFn$_invoke$arity$1 = G__25257__1;
    G__25257.cljs$core$IFn$_invoke$arity$2 = G__25257__2;
    G__25257.cljs$core$IFn$_invoke$arity$3 = G__25257__3;
    G__25257.cljs$core$IFn$_invoke$arity$variadic = G__25257__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__25257;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic = function(f, arg1, arg2, arg3, more) {
  return function() {
    var G__25263__delegate = function(args) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more, args));
    };
    var G__25263 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__25264__i = 0, G__25264__a = new Array(arguments.length - 0);
        while (G__25264__i < G__25264__a.length) {
          G__25264__a[G__25264__i] = arguments[G__25264__i + 0];
          ++G__25264__i;
        }
        args = new cljs.core.IndexedSeq(G__25264__a, 0);
      }
      return G__25263__delegate.call(this, args);
    };
    G__25263.cljs$lang$maxFixedArity = 0;
    G__25263.cljs$lang$applyTo = function(arglist__25265) {
      var args = cljs.core.seq(arglist__25265);
      return G__25263__delegate(args);
    };
    G__25263.cljs$core$IFn$_invoke$arity$variadic = G__25263__delegate;
    return G__25263;
  }();
};
cljs.core.partial.cljs$lang$applyTo = function(seq25234) {
  var G__25235 = cljs.core.first(seq25234);
  var seq25234__$1 = cljs.core.next(seq25234);
  var G__25236 = cljs.core.first(seq25234__$1);
  var seq25234__$2 = cljs.core.next(seq25234__$1);
  var G__25237 = cljs.core.first(seq25234__$2);
  var seq25234__$3 = cljs.core.next(seq25234__$2);
  var G__25238 = cljs.core.first(seq25234__$3);
  var seq25234__$4 = cljs.core.next(seq25234__$3);
  return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(G__25235, G__25236, G__25237, G__25238, seq25234__$4);
};
cljs.core.partial.cljs$lang$maxFixedArity = 4;
cljs.core.fnil = function cljs$core$fnil() {
  var args25266 = [];
  var len__5565__auto___25285 = arguments.length;
  var i__5566__auto___25286 = 0;
  while (true) {
    if (i__5566__auto___25286 < len__5565__auto___25285) {
      args25266.push(arguments[i__5566__auto___25286]);
      var G__25287 = i__5566__auto___25286 + 1;
      i__5566__auto___25286 = G__25287;
      continue;
    } else {
    }
    break;
  }
  var G__25268 = args25266.length;
  switch(G__25268) {
    case 2:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args25266.length)].join(""));;
  }
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$2 = function(f, x) {
  return function() {
    var G__25289 = null;
    var G__25289__1 = function(a) {
      var G__25269 = a == null ? x : a;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25269) : f.call(null, G__25269);
    };
    var G__25289__2 = function(a, b) {
      var G__25270 = a == null ? x : a;
      var G__25271 = b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25270, G__25271) : f.call(null, G__25270, G__25271);
    };
    var G__25289__3 = function(a, b, c) {
      var G__25272 = a == null ? x : a;
      var G__25273 = b;
      var G__25274 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25272, G__25273, G__25274) : f.call(null, G__25272, G__25273, G__25274);
    };
    var G__25289__4 = function() {
      var G__25290__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b, c, ds);
      };
      var G__25290 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__25291__i = 0, G__25291__a = new Array(arguments.length - 3);
          while (G__25291__i < G__25291__a.length) {
            G__25291__a[G__25291__i] = arguments[G__25291__i + 3];
            ++G__25291__i;
          }
          ds = new cljs.core.IndexedSeq(G__25291__a, 0);
        }
        return G__25290__delegate.call(this, a, b, c, ds);
      };
      G__25290.cljs$lang$maxFixedArity = 3;
      G__25290.cljs$lang$applyTo = function(arglist__25292) {
        var a = cljs.core.first(arglist__25292);
        arglist__25292 = cljs.core.next(arglist__25292);
        var b = cljs.core.first(arglist__25292);
        arglist__25292 = cljs.core.next(arglist__25292);
        var c = cljs.core.first(arglist__25292);
        var ds = cljs.core.rest(arglist__25292);
        return G__25290__delegate(a, b, c, ds);
      };
      G__25290.cljs$core$IFn$_invoke$arity$variadic = G__25290__delegate;
      return G__25290;
    }();
    G__25289 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 1:
          return G__25289__1.call(this, a);
        case 2:
          return G__25289__2.call(this, a, b);
        case 3:
          return G__25289__3.call(this, a, b, c);
        default:
          var G__25293 = null;
          if (arguments.length > 3) {
            var G__25294__i = 0, G__25294__a = new Array(arguments.length - 3);
            while (G__25294__i < G__25294__a.length) {
              G__25294__a[G__25294__i] = arguments[G__25294__i + 3];
              ++G__25294__i;
            }
            G__25293 = new cljs.core.IndexedSeq(G__25294__a, 0);
          }
          return G__25289__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__25293);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__25289.cljs$lang$maxFixedArity = 3;
    G__25289.cljs$lang$applyTo = G__25289__4.cljs$lang$applyTo;
    G__25289.cljs$core$IFn$_invoke$arity$1 = G__25289__1;
    G__25289.cljs$core$IFn$_invoke$arity$2 = G__25289__2;
    G__25289.cljs$core$IFn$_invoke$arity$3 = G__25289__3;
    G__25289.cljs$core$IFn$_invoke$arity$variadic = G__25289__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__25289;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$3 = function(f, x, y) {
  return function() {
    var G__25295 = null;
    var G__25295__2 = function(a, b) {
      var G__25275 = a == null ? x : a;
      var G__25276 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25275, G__25276) : f.call(null, G__25275, G__25276);
    };
    var G__25295__3 = function(a, b, c) {
      var G__25277 = a == null ? x : a;
      var G__25278 = b == null ? y : b;
      var G__25279 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25277, G__25278, G__25279) : f.call(null, G__25277, G__25278, G__25279);
    };
    var G__25295__4 = function() {
      var G__25296__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c, ds);
      };
      var G__25296 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__25297__i = 0, G__25297__a = new Array(arguments.length - 3);
          while (G__25297__i < G__25297__a.length) {
            G__25297__a[G__25297__i] = arguments[G__25297__i + 3];
            ++G__25297__i;
          }
          ds = new cljs.core.IndexedSeq(G__25297__a, 0);
        }
        return G__25296__delegate.call(this, a, b, c, ds);
      };
      G__25296.cljs$lang$maxFixedArity = 3;
      G__25296.cljs$lang$applyTo = function(arglist__25298) {
        var a = cljs.core.first(arglist__25298);
        arglist__25298 = cljs.core.next(arglist__25298);
        var b = cljs.core.first(arglist__25298);
        arglist__25298 = cljs.core.next(arglist__25298);
        var c = cljs.core.first(arglist__25298);
        var ds = cljs.core.rest(arglist__25298);
        return G__25296__delegate(a, b, c, ds);
      };
      G__25296.cljs$core$IFn$_invoke$arity$variadic = G__25296__delegate;
      return G__25296;
    }();
    G__25295 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__25295__2.call(this, a, b);
        case 3:
          return G__25295__3.call(this, a, b, c);
        default:
          var G__25299 = null;
          if (arguments.length > 3) {
            var G__25300__i = 0, G__25300__a = new Array(arguments.length - 3);
            while (G__25300__i < G__25300__a.length) {
              G__25300__a[G__25300__i] = arguments[G__25300__i + 3];
              ++G__25300__i;
            }
            G__25299 = new cljs.core.IndexedSeq(G__25300__a, 0);
          }
          return G__25295__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__25299);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__25295.cljs$lang$maxFixedArity = 3;
    G__25295.cljs$lang$applyTo = G__25295__4.cljs$lang$applyTo;
    G__25295.cljs$core$IFn$_invoke$arity$2 = G__25295__2;
    G__25295.cljs$core$IFn$_invoke$arity$3 = G__25295__3;
    G__25295.cljs$core$IFn$_invoke$arity$variadic = G__25295__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__25295;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, z) {
  return function() {
    var G__25301 = null;
    var G__25301__2 = function(a, b) {
      var G__25280 = a == null ? x : a;
      var G__25281 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25280, G__25281) : f.call(null, G__25280, G__25281);
    };
    var G__25301__3 = function(a, b, c) {
      var G__25282 = a == null ? x : a;
      var G__25283 = b == null ? y : b;
      var G__25284 = c == null ? z : c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25282, G__25283, G__25284) : f.call(null, G__25282, G__25283, G__25284);
    };
    var G__25301__4 = function() {
      var G__25302__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
      };
      var G__25302 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__25303__i = 0, G__25303__a = new Array(arguments.length - 3);
          while (G__25303__i < G__25303__a.length) {
            G__25303__a[G__25303__i] = arguments[G__25303__i + 3];
            ++G__25303__i;
          }
          ds = new cljs.core.IndexedSeq(G__25303__a, 0);
        }
        return G__25302__delegate.call(this, a, b, c, ds);
      };
      G__25302.cljs$lang$maxFixedArity = 3;
      G__25302.cljs$lang$applyTo = function(arglist__25304) {
        var a = cljs.core.first(arglist__25304);
        arglist__25304 = cljs.core.next(arglist__25304);
        var b = cljs.core.first(arglist__25304);
        arglist__25304 = cljs.core.next(arglist__25304);
        var c = cljs.core.first(arglist__25304);
        var ds = cljs.core.rest(arglist__25304);
        return G__25302__delegate(a, b, c, ds);
      };
      G__25302.cljs$core$IFn$_invoke$arity$variadic = G__25302__delegate;
      return G__25302;
    }();
    G__25301 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__25301__2.call(this, a, b);
        case 3:
          return G__25301__3.call(this, a, b, c);
        default:
          var G__25305 = null;
          if (arguments.length > 3) {
            var G__25306__i = 0, G__25306__a = new Array(arguments.length - 3);
            while (G__25306__i < G__25306__a.length) {
              G__25306__a[G__25306__i] = arguments[G__25306__i + 3];
              ++G__25306__i;
            }
            G__25305 = new cljs.core.IndexedSeq(G__25306__a, 0);
          }
          return G__25301__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__25305);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__25301.cljs$lang$maxFixedArity = 3;
    G__25301.cljs$lang$applyTo = G__25301__4.cljs$lang$applyTo;
    G__25301.cljs$core$IFn$_invoke$arity$2 = G__25301__2;
    G__25301.cljs$core$IFn$_invoke$arity$3 = G__25301__3;
    G__25301.cljs$core$IFn$_invoke$arity$variadic = G__25301__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__25301;
  }();
};
cljs.core.fnil.cljs$lang$maxFixedArity = 4;
cljs.core.map_indexed = function cljs$core$map_indexed() {
  var args25307 = [];
  var len__5565__auto___25340 = arguments.length;
  var i__5566__auto___25341 = 0;
  while (true) {
    if (i__5566__auto___25341 < len__5565__auto___25340) {
      args25307.push(arguments[i__5566__auto___25341]);
      var G__25342 = i__5566__auto___25341 + 1;
      i__5566__auto___25341 = G__25342;
      continue;
    } else {
    }
    break;
  }
  var G__25309 = args25307.length;
  switch(G__25309) {
    case 1:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args25307.length)].join(""));;
  }
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var i = cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(-1) : cljs.core.volatile_BANG_.call(null, -1);
    return function(i) {
      return function() {
        var G__25344 = null;
        var G__25344__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__25344__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__25344__2 = function(result, input) {
          var G__25312 = result;
          var G__25313 = function() {
            var G__25314 = cljs.core._vreset_BANG_(i, cljs.core._deref(i) + 1);
            var G__25315 = input;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25314, G__25315) : f.call(null, G__25314, G__25315);
          }();
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25312, G__25313) : rf.call(null, G__25312, G__25313);
        };
        G__25344 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__25344__0.call(this);
            case 1:
              return G__25344__1.call(this, result);
            case 2:
              return G__25344__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__25344.cljs$core$IFn$_invoke$arity$0 = G__25344__0;
        G__25344.cljs$core$IFn$_invoke$arity$1 = G__25344__1;
        G__25344.cljs$core$IFn$_invoke$arity$2 = G__25344__2;
        return G__25344;
      }();
    }(i);
  };
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var mapi = function cljs$core$mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4425__auto__ = cljs.core.seq(coll__$1);
      if (temp__4425__auto__) {
        var s = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__5410__auto___25345 = size;
          var i_25346 = 0;
          while (true) {
            if (i_25346 < n__5410__auto___25345) {
              cljs.core.chunk_append(b, function() {
                var G__25336 = idx + i_25346;
                var G__25337 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_25346);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25336, G__25337) : f.call(null, G__25336, G__25337);
              }());
              var G__25347 = i_25346 + 1;
              i_25346 = G__25347;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$mapi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(function() {
            var G__25338 = idx;
            var G__25339 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25338, G__25339) : f.call(null, G__25338, G__25339);
          }(), cljs$core$mapi(idx + 1, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi(0, coll);
};
cljs.core.map_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.keep = function cljs$core$keep() {
  var args25348 = [];
  var len__5565__auto___25353 = arguments.length;
  var i__5566__auto___25354 = 0;
  while (true) {
    if (i__5566__auto___25354 < len__5565__auto___25353) {
      args25348.push(arguments[i__5566__auto___25354]);
      var G__25355 = i__5566__auto___25354 + 1;
      i__5566__auto___25354 = G__25355;
      continue;
    } else {
    }
    break;
  }
  var G__25350 = args25348.length;
  switch(G__25350) {
    case 1:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args25348.length)].join(""));;
  }
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__25357 = null;
      var G__25357__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__25357__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__25357__2 = function(result, input) {
        var v = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        if (v == null) {
          return result;
        } else {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
        }
      };
      G__25357 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__25357__0.call(this);
          case 1:
            return G__25357__1.call(this, result);
          case 2:
            return G__25357__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__25357.cljs$core$IFn$_invoke$arity$0 = G__25357__0;
      G__25357.cljs$core$IFn$_invoke$arity$1 = G__25357__1;
      G__25357.cljs$core$IFn$_invoke$arity$2 = G__25357__2;
      return G__25357;
    }();
  };
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__5410__auto___25358 = size;
        var i_25359 = 0;
        while (true) {
          if (i_25359 < n__5410__auto___25358) {
            var x_25360 = function() {
              var G__25351 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_25359);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25351) : f.call(null, G__25351);
            }();
            if (x_25360 == null) {
            } else {
              cljs.core.chunk_append(b, x_25360);
            }
            var G__25361 = i_25359 + 1;
            i_25359 = G__25361;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        var x = function() {
          var G__25352 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25352) : f.call(null, G__25352);
        }();
        if (x == null) {
          return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s));
        } else {
          return cljs.core.cons(x, cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.keep.cljs$lang$maxFixedArity = 2;
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__25362 = cljs.core.seq(self__.watches);
  var chunk__25363 = null;
  var count__25364 = 0;
  var i__25365 = 0;
  while (true) {
    if (i__25365 < count__25364) {
      var vec__25366 = chunk__25363.cljs$core$IIndexed$_nth$arity$2(null, i__25365);
      var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25366, 0, null);
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25366, 1, null);
      f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
      var G__25368 = seq__25362;
      var G__25369 = chunk__25363;
      var G__25370 = count__25364;
      var G__25371 = i__25365 + 1;
      seq__25362 = G__25368;
      chunk__25363 = G__25369;
      count__25364 = G__25370;
      i__25365 = G__25371;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__25362);
      if (temp__4425__auto__) {
        var seq__25362__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__25362__$1)) {
          var c__5310__auto__ = cljs.core.chunk_first(seq__25362__$1);
          var G__25372 = cljs.core.chunk_rest(seq__25362__$1);
          var G__25373 = c__5310__auto__;
          var G__25374 = cljs.core.count(c__5310__auto__);
          var G__25375 = 0;
          seq__25362 = G__25372;
          chunk__25363 = G__25373;
          count__25364 = G__25374;
          i__25365 = G__25375;
          continue;
        } else {
          var vec__25367 = cljs.core.first(seq__25362__$1);
          var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25367, 0, null);
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25367, 1, null);
          f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
          var G__25376 = cljs.core.next(seq__25362__$1);
          var G__25377 = null;
          var G__25378 = 0;
          var G__25379 = 0;
          seq__25362 = G__25376;
          chunk__25363 = G__25377;
          count__25364 = G__25378;
          i__25365 = G__25379;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "validator", "validator", -325659154, null), new cljs.core.Symbol(null, "watches", "watches", 1367433992, null)], null);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function cljs$core$__GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function cljs$core$atom() {
  var args25380 = [];
  var len__5565__auto___25388 = arguments.length;
  var i__5566__auto___25389 = 0;
  while (true) {
    if (i__5566__auto___25389 < len__5565__auto___25388) {
      args25380.push(arguments[i__5566__auto___25389]);
      var G__25390 = i__5566__auto___25389 + 1;
      i__5566__auto___25389 = G__25390;
      continue;
    } else {
    }
    break;
  }
  var G__25384 = args25380.length;
  switch(G__25384) {
    case 1:
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args25380.slice(1), 0);
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.Atom(x, null, null, null);
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic = function(x, p__25385) {
  var map__25386 = p__25385;
  var map__25386__$1 = (!(map__25386 == null) ? map__25386.cljs$lang$protocol_mask$partition0$ & 64 || map__25386.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__25386) : map__25386;
  var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__25386__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
  var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__25386__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
  return new cljs.core.Atom(x, meta, validator, null);
};
cljs.core.atom.cljs$lang$applyTo = function(seq25381) {
  var G__25382 = cljs.core.first(seq25381);
  var seq25381__$1 = cljs.core.next(seq25381);
  return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(G__25382, seq25381__$1);
};
cljs.core.atom.cljs$lang$maxFixedArity = 1;
cljs.core.reset_BANG_ = function cljs$core$reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(new_value) : validate.call(null, new_value))) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(function() {
          var G__25393 = cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1439230700, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null));
          return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__25393) : cljs.core.pr_str.call(null, G__25393);
        }())].join(""));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches(a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_(a, new_value);
  }
};
cljs.core.swap_BANG_ = function cljs$core$swap_BANG_() {
  var args25394 = [];
  var len__5565__auto___25408 = arguments.length;
  var i__5566__auto___25409 = 0;
  while (true) {
    if (i__5566__auto___25409 < len__5565__auto___25408) {
      args25394.push(arguments[i__5566__auto___25409]);
      var G__25410 = i__5566__auto___25409 + 1;
      i__5566__auto___25409 = G__25410;
      continue;
    } else {
    }
    break;
  }
  var G__25401 = args25394.length;
  switch(G__25401) {
    case 2:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args25394.slice(4), 0);
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5584__auto__);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, f) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__25402 = a.state;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25402) : f.call(null, G__25402);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, f);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, f, x) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__25403 = a.state;
      var G__25404 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25403, G__25404) : f.call(null, G__25403, G__25404);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a, f, x);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, f, x, y) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__25405 = a.state;
      var G__25406 = x;
      var G__25407 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25405, G__25406, G__25407) : f.call(null, G__25405, G__25406, G__25407);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a, f, x, y);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, f, x, y, more) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a, f, x, y, more);
  }
};
cljs.core.swap_BANG_.cljs$lang$applyTo = function(seq25395) {
  var G__25396 = cljs.core.first(seq25395);
  var seq25395__$1 = cljs.core.next(seq25395);
  var G__25397 = cljs.core.first(seq25395__$1);
  var seq25395__$2 = cljs.core.next(seq25395__$1);
  var G__25398 = cljs.core.first(seq25395__$2);
  var seq25395__$3 = cljs.core.next(seq25395__$2);
  var G__25399 = cljs.core.first(seq25395__$3);
  var seq25395__$4 = cljs.core.next(seq25395__$3);
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__25396, G__25397, G__25398, G__25399, seq25395__$4);
};
cljs.core.swap_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.compare_and_set_BANG_ = function cljs$core$compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), oldval)) {
    cljs.core.reset_BANG_(a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function cljs$core$set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function cljs$core$get_validator(iref) {
  return iref.validator;
};
cljs.core.Volatile = function(state) {
  this.state = state;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(_, new_state) {
  var self__ = this;
  var ___$1 = this;
  return self__.state = new_state;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Volatile.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Volatile.cljs$lang$type = true;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function cljs$core$__GT_Volatile(state) {
  return new cljs.core.Volatile(state);
};
cljs.core.volatile_BANG_ = function cljs$core$volatile_BANG_(val) {
  return new cljs.core.Volatile(val);
};
cljs.core.volatile_QMARK_ = function cljs$core$volatile_QMARK_(x) {
  return x instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function cljs$core$vreset_BANG_(vol, newval) {
  return cljs.core._vreset_BANG_(vol, newval);
};
cljs.core.keep_indexed = function cljs$core$keep_indexed() {
  var args25412 = [];
  var len__5565__auto___25443 = arguments.length;
  var i__5566__auto___25444 = 0;
  while (true) {
    if (i__5566__auto___25444 < len__5565__auto___25443) {
      args25412.push(arguments[i__5566__auto___25444]);
      var G__25445 = i__5566__auto___25444 + 1;
      i__5566__auto___25444 = G__25445;
      continue;
    } else {
    }
    break;
  }
  var G__25414 = args25412.length;
  switch(G__25414) {
    case 1:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args25412.length)].join(""));;
  }
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__25447 = null;
        var G__25447__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__25447__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__25447__2 = function(result, input) {
          var i = cljs.core._vreset_BANG_(ia, cljs.core._deref(ia) + 1);
          var v = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(i, input) : f.call(null, i, input);
          if (v == null) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
          }
        };
        G__25447 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__25447__0.call(this);
            case 1:
              return G__25447__1.call(this, result);
            case 2:
              return G__25447__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__25447.cljs$core$IFn$_invoke$arity$0 = G__25447__0;
        G__25447.cljs$core$IFn$_invoke$arity$1 = G__25447__1;
        G__25447.cljs$core$IFn$_invoke$arity$2 = G__25447__2;
        return G__25447;
      }();
    }(ia);
  };
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var keepi = function cljs$core$keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4425__auto__ = cljs.core.seq(coll__$1);
      if (temp__4425__auto__) {
        var s = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__5410__auto___25448 = size;
          var i_25449 = 0;
          while (true) {
            if (i_25449 < n__5410__auto___25448) {
              var x_25450 = function() {
                var G__25439 = idx + i_25449;
                var G__25440 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_25449);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25439, G__25440) : f.call(null, G__25439, G__25440);
              }();
              if (x_25450 == null) {
              } else {
                cljs.core.chunk_append(b, x_25450);
              }
              var G__25451 = i_25449 + 1;
              i_25449 = G__25451;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$keepi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          var x = function() {
            var G__25441 = idx;
            var G__25442 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25441, G__25442) : f.call(null, G__25441, G__25442);
          }();
          if (x == null) {
            return cljs$core$keepi(idx + 1, cljs.core.rest(s));
          } else {
            return cljs.core.cons(x, cljs$core$keepi(idx + 1, cljs.core.rest(s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return keepi(0, coll);
};
cljs.core.keep_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.every_pred = function cljs$core$every_pred() {
  var args25458 = [];
  var len__5565__auto___25465 = arguments.length;
  var i__5566__auto___25466 = 0;
  while (true) {
    if (i__5566__auto___25466 < len__5565__auto___25465) {
      args25458.push(arguments[i__5566__auto___25466]);
      var G__25467 = i__5566__auto___25466 + 1;
      i__5566__auto___25466 = G__25467;
      continue;
    } else {
    }
    break;
  }
  var G__25464 = args25458.length;
  switch(G__25464) {
    case 1:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args25458.slice(3), 0);
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5584__auto__);
  }
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$ep1 = null;
    var cljs$core$ep1__0 = function() {
      return true;
    };
    var cljs$core$ep1__1 = function(x) {
      return cljs.core.boolean$(p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x));
    };
    var cljs$core$ep1__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4514__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(and__4514__auto__)) {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        } else {
          return and__4514__auto__;
        }
      }());
    };
    var cljs$core$ep1__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4514__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(and__4514__auto__)) {
          var and__4514__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
          if (cljs.core.truth_(and__4514__auto____$1)) {
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
          } else {
            return and__4514__auto____$1;
          }
        } else {
          return and__4514__auto__;
        }
      }());
    };
    var cljs$core$ep1__4 = function() {
      var G__25469__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4514__auto__ = cljs$core$ep1.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4514__auto__)) {
            return cljs.core.every_QMARK_(p, args);
          } else {
            return and__4514__auto__;
          }
        }());
      };
      var G__25469 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__25470__i = 0, G__25470__a = new Array(arguments.length - 3);
          while (G__25470__i < G__25470__a.length) {
            G__25470__a[G__25470__i] = arguments[G__25470__i + 3];
            ++G__25470__i;
          }
          args = new cljs.core.IndexedSeq(G__25470__a, 0);
        }
        return G__25469__delegate.call(this, x, y, z, args);
      };
      G__25469.cljs$lang$maxFixedArity = 3;
      G__25469.cljs$lang$applyTo = function(arglist__25471) {
        var x = cljs.core.first(arglist__25471);
        arglist__25471 = cljs.core.next(arglist__25471);
        var y = cljs.core.first(arglist__25471);
        arglist__25471 = cljs.core.next(arglist__25471);
        var z = cljs.core.first(arglist__25471);
        var args = cljs.core.rest(arglist__25471);
        return G__25469__delegate(x, y, z, args);
      };
      G__25469.cljs$core$IFn$_invoke$arity$variadic = G__25469__delegate;
      return G__25469;
    }();
    cljs$core$ep1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep1__0.call(this);
        case 1:
          return cljs$core$ep1__1.call(this, x);
        case 2:
          return cljs$core$ep1__2.call(this, x, y);
        case 3:
          return cljs$core$ep1__3.call(this, x, y, z);
        default:
          var G__25472 = null;
          if (arguments.length > 3) {
            var G__25473__i = 0, G__25473__a = new Array(arguments.length - 3);
            while (G__25473__i < G__25473__a.length) {
              G__25473__a[G__25473__i] = arguments[G__25473__i + 3];
              ++G__25473__i;
            }
            G__25472 = new cljs.core.IndexedSeq(G__25473__a, 0);
          }
          return cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__25472);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep1.cljs$lang$maxFixedArity = 3;
    cljs$core$ep1.cljs$lang$applyTo = cljs$core$ep1__4.cljs$lang$applyTo;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep1__0;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep1__1;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep1__2;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep1__3;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep1;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$ep2 = null;
    var cljs$core$ep2__0 = function() {
      return true;
    };
    var cljs$core$ep2__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__4514__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4514__auto__)) {
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        } else {
          return and__4514__auto__;
        }
      }());
    };
    var cljs$core$ep2__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4514__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4514__auto__)) {
          var and__4514__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(and__4514__auto____$1)) {
            var and__4514__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(and__4514__auto____$2)) {
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
            } else {
              return and__4514__auto____$2;
            }
          } else {
            return and__4514__auto____$1;
          }
        } else {
          return and__4514__auto__;
        }
      }());
    };
    var cljs$core$ep2__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4514__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4514__auto__)) {
          var and__4514__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(and__4514__auto____$1)) {
            var and__4514__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
            if (cljs.core.truth_(and__4514__auto____$2)) {
              var and__4514__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
              if (cljs.core.truth_(and__4514__auto____$3)) {
                var and__4514__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__4514__auto____$4)) {
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                } else {
                  return and__4514__auto____$4;
                }
              } else {
                return and__4514__auto____$3;
              }
            } else {
              return and__4514__auto____$2;
            }
          } else {
            return and__4514__auto____$1;
          }
        } else {
          return and__4514__auto__;
        }
      }());
    };
    var cljs$core$ep2__4 = function() {
      var G__25474__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4514__auto__ = cljs$core$ep2.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4514__auto__)) {
            return cljs.core.every_QMARK_(function(and__4514__auto__) {
              return function(p1__25452_SHARP_) {
                var and__4514__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__25452_SHARP_) : p1.call(null, p1__25452_SHARP_);
                if (cljs.core.truth_(and__4514__auto____$1)) {
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__25452_SHARP_) : p2.call(null, p1__25452_SHARP_);
                } else {
                  return and__4514__auto____$1;
                }
              };
            }(and__4514__auto__), args);
          } else {
            return and__4514__auto__;
          }
        }());
      };
      var G__25474 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__25475__i = 0, G__25475__a = new Array(arguments.length - 3);
          while (G__25475__i < G__25475__a.length) {
            G__25475__a[G__25475__i] = arguments[G__25475__i + 3];
            ++G__25475__i;
          }
          args = new cljs.core.IndexedSeq(G__25475__a, 0);
        }
        return G__25474__delegate.call(this, x, y, z, args);
      };
      G__25474.cljs$lang$maxFixedArity = 3;
      G__25474.cljs$lang$applyTo = function(arglist__25476) {
        var x = cljs.core.first(arglist__25476);
        arglist__25476 = cljs.core.next(arglist__25476);
        var y = cljs.core.first(arglist__25476);
        arglist__25476 = cljs.core.next(arglist__25476);
        var z = cljs.core.first(arglist__25476);
        var args = cljs.core.rest(arglist__25476);
        return G__25474__delegate(x, y, z, args);
      };
      G__25474.cljs$core$IFn$_invoke$arity$variadic = G__25474__delegate;
      return G__25474;
    }();
    cljs$core$ep2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep2__0.call(this);
        case 1:
          return cljs$core$ep2__1.call(this, x);
        case 2:
          return cljs$core$ep2__2.call(this, x, y);
        case 3:
          return cljs$core$ep2__3.call(this, x, y, z);
        default:
          var G__25477 = null;
          if (arguments.length > 3) {
            var G__25478__i = 0, G__25478__a = new Array(arguments.length - 3);
            while (G__25478__i < G__25478__a.length) {
              G__25478__a[G__25478__i] = arguments[G__25478__i + 3];
              ++G__25478__i;
            }
            G__25477 = new cljs.core.IndexedSeq(G__25478__a, 0);
          }
          return cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__25477);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep2.cljs$lang$maxFixedArity = 3;
    cljs$core$ep2.cljs$lang$applyTo = cljs$core$ep2__4.cljs$lang$applyTo;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep2__0;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep2__1;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep2__2;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep2__3;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep2;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$ep3 = null;
    var cljs$core$ep3__0 = function() {
      return true;
    };
    var cljs$core$ep3__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__4514__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4514__auto__)) {
          var and__4514__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__4514__auto____$1)) {
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          } else {
            return and__4514__auto____$1;
          }
        } else {
          return and__4514__auto__;
        }
      }());
    };
    var cljs$core$ep3__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4514__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4514__auto__)) {
          var and__4514__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__4514__auto____$1)) {
            var and__4514__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(and__4514__auto____$2)) {
              var and__4514__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(and__4514__auto____$3)) {
                var and__4514__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__4514__auto____$4)) {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                } else {
                  return and__4514__auto____$4;
                }
              } else {
                return and__4514__auto____$3;
              }
            } else {
              return and__4514__auto____$2;
            }
          } else {
            return and__4514__auto____$1;
          }
        } else {
          return and__4514__auto__;
        }
      }());
    };
    var cljs$core$ep3__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4514__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4514__auto__)) {
          var and__4514__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__4514__auto____$1)) {
            var and__4514__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(and__4514__auto____$2)) {
              var and__4514__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(and__4514__auto____$3)) {
                var and__4514__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__4514__auto____$4)) {
                  var and__4514__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                  if (cljs.core.truth_(and__4514__auto____$5)) {
                    var and__4514__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                    if (cljs.core.truth_(and__4514__auto____$6)) {
                      var and__4514__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                      if (cljs.core.truth_(and__4514__auto____$7)) {
                        return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                      } else {
                        return and__4514__auto____$7;
                      }
                    } else {
                      return and__4514__auto____$6;
                    }
                  } else {
                    return and__4514__auto____$5;
                  }
                } else {
                  return and__4514__auto____$4;
                }
              } else {
                return and__4514__auto____$3;
              }
            } else {
              return and__4514__auto____$2;
            }
          } else {
            return and__4514__auto____$1;
          }
        } else {
          return and__4514__auto__;
        }
      }());
    };
    var cljs$core$ep3__4 = function() {
      var G__25479__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4514__auto__ = cljs$core$ep3.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4514__auto__)) {
            return cljs.core.every_QMARK_(function(and__4514__auto__) {
              return function(p1__25453_SHARP_) {
                var and__4514__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__25453_SHARP_) : p1.call(null, p1__25453_SHARP_);
                if (cljs.core.truth_(and__4514__auto____$1)) {
                  var and__4514__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__25453_SHARP_) : p2.call(null, p1__25453_SHARP_);
                  if (cljs.core.truth_(and__4514__auto____$2)) {
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__25453_SHARP_) : p3.call(null, p1__25453_SHARP_);
                  } else {
                    return and__4514__auto____$2;
                  }
                } else {
                  return and__4514__auto____$1;
                }
              };
            }(and__4514__auto__), args);
          } else {
            return and__4514__auto__;
          }
        }());
      };
      var G__25479 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__25480__i = 0, G__25480__a = new Array(arguments.length - 3);
          while (G__25480__i < G__25480__a.length) {
            G__25480__a[G__25480__i] = arguments[G__25480__i + 3];
            ++G__25480__i;
          }
          args = new cljs.core.IndexedSeq(G__25480__a, 0);
        }
        return G__25479__delegate.call(this, x, y, z, args);
      };
      G__25479.cljs$lang$maxFixedArity = 3;
      G__25479.cljs$lang$applyTo = function(arglist__25481) {
        var x = cljs.core.first(arglist__25481);
        arglist__25481 = cljs.core.next(arglist__25481);
        var y = cljs.core.first(arglist__25481);
        arglist__25481 = cljs.core.next(arglist__25481);
        var z = cljs.core.first(arglist__25481);
        var args = cljs.core.rest(arglist__25481);
        return G__25479__delegate(x, y, z, args);
      };
      G__25479.cljs$core$IFn$_invoke$arity$variadic = G__25479__delegate;
      return G__25479;
    }();
    cljs$core$ep3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep3__0.call(this);
        case 1:
          return cljs$core$ep3__1.call(this, x);
        case 2:
          return cljs$core$ep3__2.call(this, x, y);
        case 3:
          return cljs$core$ep3__3.call(this, x, y, z);
        default:
          var G__25482 = null;
          if (arguments.length > 3) {
            var G__25483__i = 0, G__25483__a = new Array(arguments.length - 3);
            while (G__25483__i < G__25483__a.length) {
              G__25483__a[G__25483__i] = arguments[G__25483__i + 3];
              ++G__25483__i;
            }
            G__25482 = new cljs.core.IndexedSeq(G__25483__a, 0);
          }
          return cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__25482);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep3.cljs$lang$maxFixedArity = 3;
    cljs$core$ep3.cljs$lang$applyTo = cljs$core$ep3__4.cljs$lang$applyTo;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep3__0;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep3__1;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep3__2;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep3__3;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep3;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$epn = null;
      var cljs$core$epn__0 = function() {
        return true;
      };
      var cljs$core$epn__1 = function(x) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__25454_SHARP_) {
            return p1__25454_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25454_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__25454_SHARP_.call(null, x);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__2 = function(x, y) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__25455_SHARP_) {
            var and__4514__auto__ = p1__25455_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25455_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__25455_SHARP_.call(null, x);
            if (cljs.core.truth_(and__4514__auto__)) {
              return p1__25455_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25455_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__25455_SHARP_.call(null, y);
            } else {
              return and__4514__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__3 = function(x, y, z) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__25456_SHARP_) {
            var and__4514__auto__ = p1__25456_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25456_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__25456_SHARP_.call(null, x);
            if (cljs.core.truth_(and__4514__auto__)) {
              var and__4514__auto____$1 = p1__25456_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25456_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__25456_SHARP_.call(null, y);
              if (cljs.core.truth_(and__4514__auto____$1)) {
                return p1__25456_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25456_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__25456_SHARP_.call(null, z);
              } else {
                return and__4514__auto____$1;
              }
            } else {
              return and__4514__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__4 = function() {
        var G__25484__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(function() {
            var and__4514__auto__ = cljs$core$epn.cljs$core$IFn$_invoke$arity$3(x, y, z);
            if (cljs.core.truth_(and__4514__auto__)) {
              return cljs.core.every_QMARK_(function(and__4514__auto__, ps__$1) {
                return function(p1__25457_SHARP_) {
                  return cljs.core.every_QMARK_(p1__25457_SHARP_, args);
                };
              }(and__4514__auto__, ps__$1), ps__$1);
            } else {
              return and__4514__auto__;
            }
          }());
        };
        var G__25484 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__25485__i = 0, G__25485__a = new Array(arguments.length - 3);
            while (G__25485__i < G__25485__a.length) {
              G__25485__a[G__25485__i] = arguments[G__25485__i + 3];
              ++G__25485__i;
            }
            args = new cljs.core.IndexedSeq(G__25485__a, 0);
          }
          return G__25484__delegate.call(this, x, y, z, args);
        };
        G__25484.cljs$lang$maxFixedArity = 3;
        G__25484.cljs$lang$applyTo = function(arglist__25486) {
          var x = cljs.core.first(arglist__25486);
          arglist__25486 = cljs.core.next(arglist__25486);
          var y = cljs.core.first(arglist__25486);
          arglist__25486 = cljs.core.next(arglist__25486);
          var z = cljs.core.first(arglist__25486);
          var args = cljs.core.rest(arglist__25486);
          return G__25484__delegate(x, y, z, args);
        };
        G__25484.cljs$core$IFn$_invoke$arity$variadic = G__25484__delegate;
        return G__25484;
      }();
      cljs$core$epn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$epn__0.call(this);
          case 1:
            return cljs$core$epn__1.call(this, x);
          case 2:
            return cljs$core$epn__2.call(this, x, y);
          case 3:
            return cljs$core$epn__3.call(this, x, y, z);
          default:
            var G__25487 = null;
            if (arguments.length > 3) {
              var G__25488__i = 0, G__25488__a = new Array(arguments.length - 3);
              while (G__25488__i < G__25488__a.length) {
                G__25488__a[G__25488__i] = arguments[G__25488__i + 3];
                ++G__25488__i;
              }
              G__25487 = new cljs.core.IndexedSeq(G__25488__a, 0);
            }
            return cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__25487);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$epn.cljs$lang$maxFixedArity = 3;
      cljs$core$epn.cljs$lang$applyTo = cljs$core$epn__4.cljs$lang$applyTo;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$0 = cljs$core$epn__0;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$1 = cljs$core$epn__1;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$2 = cljs$core$epn__2;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$3 = cljs$core$epn__3;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$epn;
    }();
  }(ps__$1);
};
cljs.core.every_pred.cljs$lang$applyTo = function(seq25459) {
  var G__25460 = cljs.core.first(seq25459);
  var seq25459__$1 = cljs.core.next(seq25459);
  var G__25461 = cljs.core.first(seq25459__$1);
  var seq25459__$2 = cljs.core.next(seq25459__$1);
  var G__25462 = cljs.core.first(seq25459__$2);
  var seq25459__$3 = cljs.core.next(seq25459__$2);
  return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(G__25460, G__25461, G__25462, seq25459__$3);
};
cljs.core.every_pred.cljs$lang$maxFixedArity = 3;
cljs.core.some_fn = function cljs$core$some_fn() {
  var args25495 = [];
  var len__5565__auto___25502 = arguments.length;
  var i__5566__auto___25503 = 0;
  while (true) {
    if (i__5566__auto___25503 < len__5565__auto___25502) {
      args25495.push(arguments[i__5566__auto___25503]);
      var G__25504 = i__5566__auto___25503 + 1;
      i__5566__auto___25503 = G__25504;
      continue;
    } else {
    }
    break;
  }
  var G__25501 = args25495.length;
  switch(G__25501) {
    case 1:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args25495.slice(3), 0);
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5584__auto__);
  }
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$sp1 = null;
    var cljs$core$sp1__0 = function() {
      return null;
    };
    var cljs$core$sp1__1 = function(x) {
      return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
    };
    var cljs$core$sp1__2 = function(x, y) {
      var or__4526__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      if (cljs.core.truth_(or__4526__auto__)) {
        return or__4526__auto__;
      } else {
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
      }
    };
    var cljs$core$sp1__3 = function(x, y, z) {
      var or__4526__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      if (cljs.core.truth_(or__4526__auto__)) {
        return or__4526__auto__;
      } else {
        var or__4526__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        if (cljs.core.truth_(or__4526__auto____$1)) {
          return or__4526__auto____$1;
        } else {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
        }
      }
    };
    var cljs$core$sp1__4 = function() {
      var G__25506__delegate = function(x, y, z, args) {
        var or__4526__auto__ = cljs$core$sp1.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4526__auto__)) {
          return or__4526__auto__;
        } else {
          return cljs.core.some(p, args);
        }
      };
      var G__25506 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__25507__i = 0, G__25507__a = new Array(arguments.length - 3);
          while (G__25507__i < G__25507__a.length) {
            G__25507__a[G__25507__i] = arguments[G__25507__i + 3];
            ++G__25507__i;
          }
          args = new cljs.core.IndexedSeq(G__25507__a, 0);
        }
        return G__25506__delegate.call(this, x, y, z, args);
      };
      G__25506.cljs$lang$maxFixedArity = 3;
      G__25506.cljs$lang$applyTo = function(arglist__25508) {
        var x = cljs.core.first(arglist__25508);
        arglist__25508 = cljs.core.next(arglist__25508);
        var y = cljs.core.first(arglist__25508);
        arglist__25508 = cljs.core.next(arglist__25508);
        var z = cljs.core.first(arglist__25508);
        var args = cljs.core.rest(arglist__25508);
        return G__25506__delegate(x, y, z, args);
      };
      G__25506.cljs$core$IFn$_invoke$arity$variadic = G__25506__delegate;
      return G__25506;
    }();
    cljs$core$sp1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp1__0.call(this);
        case 1:
          return cljs$core$sp1__1.call(this, x);
        case 2:
          return cljs$core$sp1__2.call(this, x, y);
        case 3:
          return cljs$core$sp1__3.call(this, x, y, z);
        default:
          var G__25509 = null;
          if (arguments.length > 3) {
            var G__25510__i = 0, G__25510__a = new Array(arguments.length - 3);
            while (G__25510__i < G__25510__a.length) {
              G__25510__a[G__25510__i] = arguments[G__25510__i + 3];
              ++G__25510__i;
            }
            G__25509 = new cljs.core.IndexedSeq(G__25510__a, 0);
          }
          return cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__25509);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp1.cljs$lang$maxFixedArity = 3;
    cljs$core$sp1.cljs$lang$applyTo = cljs$core$sp1__4.cljs$lang$applyTo;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp1__0;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp1__1;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp1__2;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp1__3;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp1;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$sp2 = null;
    var cljs$core$sp2__0 = function() {
      return null;
    };
    var cljs$core$sp2__1 = function(x) {
      var or__4526__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4526__auto__)) {
        return or__4526__auto__;
      } else {
        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
      }
    };
    var cljs$core$sp2__2 = function(x, y) {
      var or__4526__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4526__auto__)) {
        return or__4526__auto__;
      } else {
        var or__4526__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
        if (cljs.core.truth_(or__4526__auto____$1)) {
          return or__4526__auto____$1;
        } else {
          var or__4526__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(or__4526__auto____$2)) {
            return or__4526__auto____$2;
          } else {
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
          }
        }
      }
    };
    var cljs$core$sp2__3 = function(x, y, z) {
      var or__4526__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4526__auto__)) {
        return or__4526__auto__;
      } else {
        var or__4526__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
        if (cljs.core.truth_(or__4526__auto____$1)) {
          return or__4526__auto____$1;
        } else {
          var or__4526__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
          if (cljs.core.truth_(or__4526__auto____$2)) {
            return or__4526__auto____$2;
          } else {
            var or__4526__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(or__4526__auto____$3)) {
              return or__4526__auto____$3;
            } else {
              var or__4526__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__4526__auto____$4)) {
                return or__4526__auto____$4;
              } else {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp2__4 = function() {
      var G__25511__delegate = function(x, y, z, args) {
        var or__4526__auto__ = cljs$core$sp2.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4526__auto__)) {
          return or__4526__auto__;
        } else {
          return cljs.core.some(function(or__4526__auto__) {
            return function(p1__25489_SHARP_) {
              var or__4526__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__25489_SHARP_) : p1.call(null, p1__25489_SHARP_);
              if (cljs.core.truth_(or__4526__auto____$1)) {
                return or__4526__auto____$1;
              } else {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__25489_SHARP_) : p2.call(null, p1__25489_SHARP_);
              }
            };
          }(or__4526__auto__), args);
        }
      };
      var G__25511 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__25512__i = 0, G__25512__a = new Array(arguments.length - 3);
          while (G__25512__i < G__25512__a.length) {
            G__25512__a[G__25512__i] = arguments[G__25512__i + 3];
            ++G__25512__i;
          }
          args = new cljs.core.IndexedSeq(G__25512__a, 0);
        }
        return G__25511__delegate.call(this, x, y, z, args);
      };
      G__25511.cljs$lang$maxFixedArity = 3;
      G__25511.cljs$lang$applyTo = function(arglist__25513) {
        var x = cljs.core.first(arglist__25513);
        arglist__25513 = cljs.core.next(arglist__25513);
        var y = cljs.core.first(arglist__25513);
        arglist__25513 = cljs.core.next(arglist__25513);
        var z = cljs.core.first(arglist__25513);
        var args = cljs.core.rest(arglist__25513);
        return G__25511__delegate(x, y, z, args);
      };
      G__25511.cljs$core$IFn$_invoke$arity$variadic = G__25511__delegate;
      return G__25511;
    }();
    cljs$core$sp2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp2__0.call(this);
        case 1:
          return cljs$core$sp2__1.call(this, x);
        case 2:
          return cljs$core$sp2__2.call(this, x, y);
        case 3:
          return cljs$core$sp2__3.call(this, x, y, z);
        default:
          var G__25514 = null;
          if (arguments.length > 3) {
            var G__25515__i = 0, G__25515__a = new Array(arguments.length - 3);
            while (G__25515__i < G__25515__a.length) {
              G__25515__a[G__25515__i] = arguments[G__25515__i + 3];
              ++G__25515__i;
            }
            G__25514 = new cljs.core.IndexedSeq(G__25515__a, 0);
          }
          return cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__25514);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp2.cljs$lang$maxFixedArity = 3;
    cljs$core$sp2.cljs$lang$applyTo = cljs$core$sp2__4.cljs$lang$applyTo;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp2__0;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp2__1;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp2__2;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp2__3;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp2;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$sp3 = null;
    var cljs$core$sp3__0 = function() {
      return null;
    };
    var cljs$core$sp3__1 = function(x) {
      var or__4526__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4526__auto__)) {
        return or__4526__auto__;
      } else {
        var or__4526__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__4526__auto____$1)) {
          return or__4526__auto____$1;
        } else {
          return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
        }
      }
    };
    var cljs$core$sp3__2 = function(x, y) {
      var or__4526__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4526__auto__)) {
        return or__4526__auto__;
      } else {
        var or__4526__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__4526__auto____$1)) {
          return or__4526__auto____$1;
        } else {
          var or__4526__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          if (cljs.core.truth_(or__4526__auto____$2)) {
            return or__4526__auto____$2;
          } else {
            var or__4526__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(or__4526__auto____$3)) {
              return or__4526__auto____$3;
            } else {
              var or__4526__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__4526__auto____$4)) {
                return or__4526__auto____$4;
              } else {
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__3 = function(x, y, z) {
      var or__4526__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4526__auto__)) {
        return or__4526__auto__;
      } else {
        var or__4526__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__4526__auto____$1)) {
          return or__4526__auto____$1;
        } else {
          var or__4526__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          if (cljs.core.truth_(or__4526__auto____$2)) {
            return or__4526__auto____$2;
          } else {
            var or__4526__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(or__4526__auto____$3)) {
              return or__4526__auto____$3;
            } else {
              var or__4526__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__4526__auto____$4)) {
                return or__4526__auto____$4;
              } else {
                var or__4526__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                if (cljs.core.truth_(or__4526__auto____$5)) {
                  return or__4526__auto____$5;
                } else {
                  var or__4526__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                  if (cljs.core.truth_(or__4526__auto____$6)) {
                    return or__4526__auto____$6;
                  } else {
                    var or__4526__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                    if (cljs.core.truth_(or__4526__auto____$7)) {
                      return or__4526__auto____$7;
                    } else {
                      return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                    }
                  }
                }
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__4 = function() {
      var G__25516__delegate = function(x, y, z, args) {
        var or__4526__auto__ = cljs$core$sp3.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4526__auto__)) {
          return or__4526__auto__;
        } else {
          return cljs.core.some(function(or__4526__auto__) {
            return function(p1__25490_SHARP_) {
              var or__4526__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__25490_SHARP_) : p1.call(null, p1__25490_SHARP_);
              if (cljs.core.truth_(or__4526__auto____$1)) {
                return or__4526__auto____$1;
              } else {
                var or__4526__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__25490_SHARP_) : p2.call(null, p1__25490_SHARP_);
                if (cljs.core.truth_(or__4526__auto____$2)) {
                  return or__4526__auto____$2;
                } else {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__25490_SHARP_) : p3.call(null, p1__25490_SHARP_);
                }
              }
            };
          }(or__4526__auto__), args);
        }
      };
      var G__25516 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__25517__i = 0, G__25517__a = new Array(arguments.length - 3);
          while (G__25517__i < G__25517__a.length) {
            G__25517__a[G__25517__i] = arguments[G__25517__i + 3];
            ++G__25517__i;
          }
          args = new cljs.core.IndexedSeq(G__25517__a, 0);
        }
        return G__25516__delegate.call(this, x, y, z, args);
      };
      G__25516.cljs$lang$maxFixedArity = 3;
      G__25516.cljs$lang$applyTo = function(arglist__25518) {
        var x = cljs.core.first(arglist__25518);
        arglist__25518 = cljs.core.next(arglist__25518);
        var y = cljs.core.first(arglist__25518);
        arglist__25518 = cljs.core.next(arglist__25518);
        var z = cljs.core.first(arglist__25518);
        var args = cljs.core.rest(arglist__25518);
        return G__25516__delegate(x, y, z, args);
      };
      G__25516.cljs$core$IFn$_invoke$arity$variadic = G__25516__delegate;
      return G__25516;
    }();
    cljs$core$sp3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp3__0.call(this);
        case 1:
          return cljs$core$sp3__1.call(this, x);
        case 2:
          return cljs$core$sp3__2.call(this, x, y);
        case 3:
          return cljs$core$sp3__3.call(this, x, y, z);
        default:
          var G__25519 = null;
          if (arguments.length > 3) {
            var G__25520__i = 0, G__25520__a = new Array(arguments.length - 3);
            while (G__25520__i < G__25520__a.length) {
              G__25520__a[G__25520__i] = arguments[G__25520__i + 3];
              ++G__25520__i;
            }
            G__25519 = new cljs.core.IndexedSeq(G__25520__a, 0);
          }
          return cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__25519);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp3.cljs$lang$maxFixedArity = 3;
    cljs$core$sp3.cljs$lang$applyTo = cljs$core$sp3__4.cljs$lang$applyTo;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp3__0;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp3__1;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp3__2;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp3__3;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp3;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$spn = null;
      var cljs$core$spn__0 = function() {
        return null;
      };
      var cljs$core$spn__1 = function(x) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__25491_SHARP_) {
            return p1__25491_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25491_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__25491_SHARP_.call(null, x);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__2 = function(x, y) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__25492_SHARP_) {
            var or__4526__auto__ = p1__25492_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25492_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__25492_SHARP_.call(null, x);
            if (cljs.core.truth_(or__4526__auto__)) {
              return or__4526__auto__;
            } else {
              return p1__25492_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25492_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__25492_SHARP_.call(null, y);
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__3 = function(x, y, z) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__25493_SHARP_) {
            var or__4526__auto__ = p1__25493_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25493_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__25493_SHARP_.call(null, x);
            if (cljs.core.truth_(or__4526__auto__)) {
              return or__4526__auto__;
            } else {
              var or__4526__auto____$1 = p1__25493_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25493_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__25493_SHARP_.call(null, y);
              if (cljs.core.truth_(or__4526__auto____$1)) {
                return or__4526__auto____$1;
              } else {
                return p1__25493_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25493_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__25493_SHARP_.call(null, z);
              }
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__4 = function() {
        var G__25521__delegate = function(x, y, z, args) {
          var or__4526__auto__ = cljs$core$spn.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__4526__auto__)) {
            return or__4526__auto__;
          } else {
            return cljs.core.some(function(or__4526__auto__, ps__$1) {
              return function(p1__25494_SHARP_) {
                return cljs.core.some(p1__25494_SHARP_, args);
              };
            }(or__4526__auto__, ps__$1), ps__$1);
          }
        };
        var G__25521 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__25522__i = 0, G__25522__a = new Array(arguments.length - 3);
            while (G__25522__i < G__25522__a.length) {
              G__25522__a[G__25522__i] = arguments[G__25522__i + 3];
              ++G__25522__i;
            }
            args = new cljs.core.IndexedSeq(G__25522__a, 0);
          }
          return G__25521__delegate.call(this, x, y, z, args);
        };
        G__25521.cljs$lang$maxFixedArity = 3;
        G__25521.cljs$lang$applyTo = function(arglist__25523) {
          var x = cljs.core.first(arglist__25523);
          arglist__25523 = cljs.core.next(arglist__25523);
          var y = cljs.core.first(arglist__25523);
          arglist__25523 = cljs.core.next(arglist__25523);
          var z = cljs.core.first(arglist__25523);
          var args = cljs.core.rest(arglist__25523);
          return G__25521__delegate(x, y, z, args);
        };
        G__25521.cljs$core$IFn$_invoke$arity$variadic = G__25521__delegate;
        return G__25521;
      }();
      cljs$core$spn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$spn__0.call(this);
          case 1:
            return cljs$core$spn__1.call(this, x);
          case 2:
            return cljs$core$spn__2.call(this, x, y);
          case 3:
            return cljs$core$spn__3.call(this, x, y, z);
          default:
            var G__25524 = null;
            if (arguments.length > 3) {
              var G__25525__i = 0, G__25525__a = new Array(arguments.length - 3);
              while (G__25525__i < G__25525__a.length) {
                G__25525__a[G__25525__i] = arguments[G__25525__i + 3];
                ++G__25525__i;
              }
              G__25524 = new cljs.core.IndexedSeq(G__25525__a, 0);
            }
            return cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__25524);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$spn.cljs$lang$maxFixedArity = 3;
      cljs$core$spn.cljs$lang$applyTo = cljs$core$spn__4.cljs$lang$applyTo;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$0 = cljs$core$spn__0;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$1 = cljs$core$spn__1;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$2 = cljs$core$spn__2;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$3 = cljs$core$spn__3;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$spn;
    }();
  }(ps__$1);
};
cljs.core.some_fn.cljs$lang$applyTo = function(seq25496) {
  var G__25497 = cljs.core.first(seq25496);
  var seq25496__$1 = cljs.core.next(seq25496);
  var G__25498 = cljs.core.first(seq25496__$1);
  var seq25496__$2 = cljs.core.next(seq25496__$1);
  var G__25499 = cljs.core.first(seq25496__$2);
  var seq25496__$3 = cljs.core.next(seq25496__$2);
  return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(G__25497, G__25498, G__25499, seq25496__$3);
};
cljs.core.some_fn.cljs$lang$maxFixedArity = 3;
cljs.core.map = function cljs$core$map() {
  var args25527 = [];
  var len__5565__auto___25547 = arguments.length;
  var i__5566__auto___25548 = 0;
  while (true) {
    if (i__5566__auto___25548 < len__5565__auto___25547) {
      args25527.push(arguments[i__5566__auto___25548]);
      var G__25549 = i__5566__auto___25548 + 1;
      i__5566__auto___25548 = G__25549;
      continue;
    } else {
    }
    break;
  }
  var G__25534 = args25527.length;
  switch(G__25534) {
    case 1:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args25527.slice(4), 0);
      return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5584__auto__);
  }
};
cljs.core.map.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__25551 = null;
      var G__25551__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__25551__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__25551__2 = function(result, input) {
        var G__25535 = result;
        var G__25536 = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25535, G__25536) : rf.call(null, G__25535, G__25536);
      };
      var G__25551__3 = function() {
        var G__25552__delegate = function(result, input, inputs) {
          var G__25537 = result;
          var G__25538 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, input, inputs);
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25537, G__25538) : rf.call(null, G__25537, G__25538);
        };
        var G__25552 = function(result, input, var_args) {
          var inputs = null;
          if (arguments.length > 2) {
            var G__25553__i = 0, G__25553__a = new Array(arguments.length - 2);
            while (G__25553__i < G__25553__a.length) {
              G__25553__a[G__25553__i] = arguments[G__25553__i + 2];
              ++G__25553__i;
            }
            inputs = new cljs.core.IndexedSeq(G__25553__a, 0);
          }
          return G__25552__delegate.call(this, result, input, inputs);
        };
        G__25552.cljs$lang$maxFixedArity = 2;
        G__25552.cljs$lang$applyTo = function(arglist__25554) {
          var result = cljs.core.first(arglist__25554);
          arglist__25554 = cljs.core.next(arglist__25554);
          var input = cljs.core.first(arglist__25554);
          var inputs = cljs.core.rest(arglist__25554);
          return G__25552__delegate(result, input, inputs);
        };
        G__25552.cljs$core$IFn$_invoke$arity$variadic = G__25552__delegate;
        return G__25552;
      }();
      G__25551 = function(result, input, var_args) {
        var inputs = var_args;
        switch(arguments.length) {
          case 0:
            return G__25551__0.call(this);
          case 1:
            return G__25551__1.call(this, result);
          case 2:
            return G__25551__2.call(this, result, input);
          default:
            var G__25555 = null;
            if (arguments.length > 2) {
              var G__25556__i = 0, G__25556__a = new Array(arguments.length - 2);
              while (G__25556__i < G__25556__a.length) {
                G__25556__a[G__25556__i] = arguments[G__25556__i + 2];
                ++G__25556__i;
              }
              G__25555 = new cljs.core.IndexedSeq(G__25556__a, 0);
            }
            return G__25551__3.cljs$core$IFn$_invoke$arity$variadic(result, input, G__25555);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__25551.cljs$lang$maxFixedArity = 2;
      G__25551.cljs$lang$applyTo = G__25551__3.cljs$lang$applyTo;
      G__25551.cljs$core$IFn$_invoke$arity$0 = G__25551__0;
      G__25551.cljs$core$IFn$_invoke$arity$1 = G__25551__1;
      G__25551.cljs$core$IFn$_invoke$arity$2 = G__25551__2;
      G__25551.cljs$core$IFn$_invoke$arity$variadic = G__25551__3.cljs$core$IFn$_invoke$arity$variadic;
      return G__25551;
    }();
  };
};
cljs.core.map.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__5410__auto___25557 = size;
        var i_25558 = 0;
        while (true) {
          if (i_25558 < n__5410__auto___25557) {
            cljs.core.chunk_append(b, function() {
              var G__25539 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_25558);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25539) : f.call(null, G__25539);
            }());
            var G__25559 = i_25558 + 1;
            i_25558 = G__25559;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        return cljs.core.cons(function() {
          var G__25540 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25540) : f.call(null, G__25540);
        }(), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(function() {
        var G__25541 = cljs.core.first(s1);
        var G__25542 = cljs.core.first(s2);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25541, G__25542) : f.call(null, G__25541, G__25542);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, cljs.core.rest(s1), cljs.core.rest(s2)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    var s3 = cljs.core.seq(c3);
    if (s1 && s2 && s3) {
      return cljs.core.cons(function() {
        var G__25543 = cljs.core.first(s1);
        var G__25544 = cljs.core.first(s2);
        var G__25545 = cljs.core.first(s3);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25543, G__25544, G__25545) : f.call(null, G__25543, G__25544, G__25545);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, cljs.core.rest(s1), cljs.core.rest(s2), cljs.core.rest(s3)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  var step = function cljs$core$step(cs) {
    return new cljs.core.LazySeq(null, function() {
      var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cs);
      if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
        return cljs.core.cons(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs$core$step(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
      } else {
        return null;
      }
    }, null, null);
  };
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(step) {
    return function(p1__25526_SHARP_) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, p1__25526_SHARP_);
    };
  }(step), step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c3, cljs.core.array_seq([c2, c1], 0))));
};
cljs.core.map.cljs$lang$applyTo = function(seq25528) {
  var G__25529 = cljs.core.first(seq25528);
  var seq25528__$1 = cljs.core.next(seq25528);
  var G__25530 = cljs.core.first(seq25528__$1);
  var seq25528__$2 = cljs.core.next(seq25528__$1);
  var G__25531 = cljs.core.first(seq25528__$2);
  var seq25528__$3 = cljs.core.next(seq25528__$2);
  var G__25532 = cljs.core.first(seq25528__$3);
  var seq25528__$4 = cljs.core.next(seq25528__$3);
  return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(G__25529, G__25530, G__25531, G__25532, seq25528__$4);
};
cljs.core.map.cljs$lang$maxFixedArity = 4;
cljs.core.take = function cljs$core$take() {
  var args25560 = [];
  var len__5565__auto___25565 = arguments.length;
  var i__5566__auto___25566 = 0;
  while (true) {
    if (i__5566__auto___25566 < len__5565__auto___25565) {
      args25560.push(arguments[i__5566__auto___25566]);
      var G__25567 = i__5566__auto___25566 + 1;
      i__5566__auto___25566 = G__25567;
      continue;
    } else {
    }
    break;
  }
  var G__25562 = args25560.length;
  switch(G__25562) {
    case 1:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args25560.length)].join(""));;
  }
};
cljs.core.take.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__25563 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__25563) : cljs.core.pr_str.call(null, G__25563);
    }())].join(""));
  }
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__25569 = null;
        var G__25569__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__25569__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__25569__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          var nn = cljs.core._vreset_BANG_(na, cljs.core._deref(na) - 1);
          var result__$1 = n__$1 > 0 ? rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input) : result;
          if (!(nn > 0)) {
            return cljs.core.ensure_reduced(result__$1);
          } else {
            return result__$1;
          }
        };
        G__25569 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__25569__0.call(this);
            case 1:
              return G__25569__1.call(this, result);
            case 2:
              return G__25569__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__25569.cljs$core$IFn$_invoke$arity$0 = G__25569__0;
        G__25569.cljs$core$IFn$_invoke$arity$1 = G__25569__1;
        G__25569.cljs$core$IFn$_invoke$arity$2 = G__25569__2;
        return G__25569;
      }();
    }(na);
  };
};
cljs.core.take.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__25564 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__25564) : cljs.core.pr_str.call(null, G__25564);
    }())].join(""));
  }
  return new cljs.core.LazySeq(null, function() {
    if (n > 0) {
      var temp__4425__auto__ = cljs.core.seq(coll);
      if (temp__4425__auto__) {
        var s = temp__4425__auto__;
        return cljs.core.cons(cljs.core.first(s), cljs.core.take.cljs$core$IFn$_invoke$arity$2(n - 1, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take.cljs$lang$maxFixedArity = 2;
cljs.core.drop = function cljs$core$drop() {
  var args25570 = [];
  var len__5565__auto___25575 = arguments.length;
  var i__5566__auto___25576 = 0;
  while (true) {
    if (i__5566__auto___25576 < len__5565__auto___25575) {
      args25570.push(arguments[i__5566__auto___25576]);
      var G__25577 = i__5566__auto___25576 + 1;
      i__5566__auto___25576 = G__25577;
      continue;
    } else {
    }
    break;
  }
  var G__25572 = args25570.length;
  switch(G__25572) {
    case 1:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args25570.length)].join(""));;
  }
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__25573 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__25573) : cljs.core.pr_str.call(null, G__25573);
    }())].join(""));
  }
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__25579 = null;
        var G__25579__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__25579__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__25579__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          cljs.core._vreset_BANG_(na, cljs.core._deref(na) - 1);
          if (n__$1 > 0) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__25579 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__25579__0.call(this);
            case 1:
              return G__25579__1.call(this, result);
            case 2:
              return G__25579__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__25579.cljs$core$IFn$_invoke$arity$0 = G__25579__0;
        G__25579.cljs$core$IFn$_invoke$arity$1 = G__25579__1;
        G__25579.cljs$core$IFn$_invoke$arity$2 = G__25579__2;
        return G__25579;
      }();
    }(na);
  };
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__25574 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__25574) : cljs.core.pr_str.call(null, G__25574);
    }())].join(""));
  }
  var step = function(n__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (n__$1 > 0 && s) {
        var G__25580 = n__$1 - 1;
        var G__25581 = cljs.core.rest(s);
        n__$1 = G__25580;
        coll__$1 = G__25581;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(n, coll);
    };
  }(step), null, null);
};
cljs.core.drop.cljs$lang$maxFixedArity = 2;
cljs.core.drop_last = function cljs$core$drop_last() {
  var args25582 = [];
  var len__5565__auto___25585 = arguments.length;
  var i__5566__auto___25586 = 0;
  while (true) {
    if (i__5566__auto___25586 < len__5565__auto___25585) {
      args25582.push(arguments[i__5566__auto___25586]);
      var G__25587 = i__5566__auto___25586 + 1;
      i__5566__auto___25586 = G__25587;
      continue;
    } else {
    }
    break;
  }
  var G__25584 = args25582.length;
  switch(G__25584) {
    case 1:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args25582.length)].join(""));;
  }
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(1, s);
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2 = function(n, s) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(x, _) {
    return x;
  }, s, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s));
};
cljs.core.drop_last.cljs$lang$maxFixedArity = 2;
cljs.core.take_last = function cljs$core$take_last(n, coll) {
  var s = cljs.core.seq(coll);
  var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll));
  while (true) {
    if (lead) {
      var G__25589 = cljs.core.next(s);
      var G__25590 = cljs.core.next(lead);
      s = G__25589;
      lead = G__25590;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function cljs$core$drop_while() {
  var args25591 = [];
  var len__5565__auto___25596 = arguments.length;
  var i__5566__auto___25597 = 0;
  while (true) {
    if (i__5566__auto___25597 < len__5565__auto___25596) {
      args25591.push(arguments[i__5566__auto___25597]);
      var G__25598 = i__5566__auto___25597 + 1;
      i__5566__auto___25597 = G__25598;
      continue;
    } else {
    }
    break;
  }
  var G__25593 = args25591.length;
  switch(G__25593) {
    case 1:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args25591.length)].join(""));;
  }
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    var da = cljs.core.volatile_BANG_(true);
    return function(da) {
      return function() {
        var G__25600 = null;
        var G__25600__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__25600__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__25600__2 = function(result, input) {
          var drop_QMARK_ = cljs.core.deref(da);
          if (cljs.core.truth_(function() {
            var and__4514__auto__ = drop_QMARK_;
            if (cljs.core.truth_(and__4514__auto__)) {
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input);
            } else {
              return and__4514__auto__;
            }
          }())) {
            return result;
          } else {
            cljs.core.vreset_BANG_(da, null);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__25600 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__25600__0.call(this);
            case 1:
              return G__25600__1.call(this, result);
            case 2:
              return G__25600__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__25600.cljs$core$IFn$_invoke$arity$0 = G__25600__0;
        G__25600.cljs$core$IFn$_invoke$arity$1 = G__25600__1;
        G__25600.cljs$core$IFn$_invoke$arity$2 = G__25600__2;
        return G__25600;
      }();
    }(da);
  };
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (cljs.core.truth_(function() {
        var and__4514__auto__ = s;
        if (and__4514__auto__) {
          var G__25595 = cljs.core.first(s);
          return pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__25595) : pred__$1.call(null, G__25595);
        } else {
          return and__4514__auto__;
        }
      }())) {
        var G__25601 = pred__$1;
        var G__25602 = cljs.core.rest(s);
        pred__$1 = G__25601;
        coll__$1 = G__25602;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(pred, coll);
    };
  }(step), null, null);
};
cljs.core.drop_while.cljs$lang$maxFixedArity = 2;
cljs.core.cycle = function cljs$core$cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s, cljs$core$cycle(s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function cljs$core$split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, coll), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll)], null);
};
cljs.core.repeat = function cljs$core$repeat() {
  var args25603 = [];
  var len__5565__auto___25606 = arguments.length;
  var i__5566__auto___25607 = 0;
  while (true) {
    if (i__5566__auto___25607 < len__5565__auto___25606) {
      args25603.push(arguments[i__5566__auto___25607]);
      var G__25608 = i__5566__auto___25607 + 1;
      i__5566__auto___25607 = G__25608;
      continue;
    } else {
    }
    break;
  }
  var G__25605 = args25603.length;
  switch(G__25605) {
    case 1:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args25603.length)].join(""));;
  }
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(x, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
  }, null, null);
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$2 = function(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeat.cljs$lang$maxFixedArity = 2;
cljs.core.replicate = function cljs$core$replicate(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeatedly = function cljs$core$repeatedly() {
  var args25610 = [];
  var len__5565__auto___25613 = arguments.length;
  var i__5566__auto___25614 = 0;
  while (true) {
    if (i__5566__auto___25614 < len__5565__auto___25613) {
      args25610.push(arguments[i__5566__auto___25614]);
      var G__25615 = i__5566__auto___25614 + 1;
      i__5566__auto___25614 = G__25615;
      continue;
    } else {
    }
    break;
  }
  var G__25612 = args25610.length;
  switch(G__25612) {
    case 1:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args25610.length)].join(""));;
  }
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
  }, null, null);
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2 = function(n, f) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
};
cljs.core.repeatedly.cljs$lang$maxFixedArity = 2;
cljs.core.iterate = function cljs$core$iterate(f, x) {
  return cljs.core.cons(x, new cljs.core.LazySeq(null, function() {
    return cljs$core$iterate(f, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x));
  }, null, null));
};
cljs.core.interleave = function cljs$core$interleave() {
  var args25619 = [];
  var len__5565__auto___25625 = arguments.length;
  var i__5566__auto___25626 = 0;
  while (true) {
    if (i__5566__auto___25626 < len__5565__auto___25625) {
      args25619.push(arguments[i__5566__auto___25626]);
      var G__25627 = i__5566__auto___25626 + 1;
      i__5566__auto___25626 = G__25627;
      continue;
    } else {
    }
    break;
  }
  var G__25624 = args25619.length;
  switch(G__25624) {
    case 2:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args25619.slice(2), 0);
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$2 = function(c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(cljs.core.first(s1), cljs.core.cons(cljs.core.first(s2), cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1), cljs.core.rest(s2))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic = function(c1, c2, colls) {
  return new cljs.core.LazySeq(null, function() {
    var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c2, cljs.core.array_seq([c1], 0)));
    if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$lang$applyTo = function(seq25620) {
  var G__25621 = cljs.core.first(seq25620);
  var seq25620__$1 = cljs.core.next(seq25620);
  var G__25622 = cljs.core.first(seq25620__$1);
  var seq25620__$2 = cljs.core.next(seq25620__$1);
  return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(G__25621, G__25622, seq25620__$2);
};
cljs.core.interleave.cljs$lang$maxFixedArity = 2;
cljs.core.interpose = function cljs$core$interpose() {
  var args25629 = [];
  var len__5565__auto___25632 = arguments.length;
  var i__5566__auto___25633 = 0;
  while (true) {
    if (i__5566__auto___25633 < len__5565__auto___25632) {
      args25629.push(arguments[i__5566__auto___25633]);
      var G__25634 = i__5566__auto___25633 + 1;
      i__5566__auto___25633 = G__25634;
      continue;
    } else {
    }
    break;
  }
  var G__25631 = args25629.length;
  switch(G__25631) {
    case 1:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args25629.length)].join(""));;
  }
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$1 = function(sep) {
  return function(rf) {
    var started = cljs.core.volatile_BANG_(false);
    return function(started) {
      return function() {
        var G__25636 = null;
        var G__25636__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__25636__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__25636__2 = function(result, input) {
          if (cljs.core.truth_(cljs.core.deref(started))) {
            var sepr = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, sep) : rf.call(null, result, sep);
            if (cljs.core.reduced_QMARK_(sepr)) {
              return sepr;
            } else {
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(sepr, input) : rf.call(null, sepr, input);
            }
          } else {
            cljs.core.vreset_BANG_(started, true);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__25636 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__25636__0.call(this);
            case 1:
              return G__25636__1.call(this, result);
            case 2:
              return G__25636__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__25636.cljs$core$IFn$_invoke$arity$0 = G__25636__0;
        G__25636.cljs$core$IFn$_invoke$arity$1 = G__25636__1;
        G__25636.cljs$core$IFn$_invoke$arity$2 = G__25636__2;
        return G__25636;
      }();
    }(started);
  };
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$2 = function(sep, coll) {
  return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep), coll));
};
cljs.core.interpose.cljs$lang$maxFixedArity = 2;
cljs.core.flatten1 = function cljs$core$flatten1(colls) {
  var cat = function cljs$core$flatten1_$_cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4423__auto__ = cljs.core.seq(coll);
      if (temp__4423__auto__) {
        var coll__$1 = temp__4423__auto__;
        return cljs.core.cons(cljs.core.first(coll__$1), cljs$core$flatten1_$_cat(cljs.core.rest(coll__$1), colls__$1));
      } else {
        if (cljs.core.seq(colls__$1)) {
          return cljs$core$flatten1_$_cat(cljs.core.first(colls__$1), cljs.core.rest(colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(null, colls);
};
cljs.core.mapcat = function cljs$core$mapcat() {
  var args25645 = [];
  var len__5565__auto___25650 = arguments.length;
  var i__5566__auto___25651 = 0;
  while (true) {
    if (i__5566__auto___25651 < len__5565__auto___25650) {
      args25645.push(arguments[i__5566__auto___25651]);
      var G__25652 = i__5566__auto___25651 + 1;
      i__5566__auto___25651 = G__25652;
      continue;
    } else {
    }
    break;
  }
  var G__25649 = args25645.length;
  switch(G__25649) {
    case 1:
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args25645.slice(1), 0);
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f), cljs.core.cat);
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic = function(f, colls) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, f, colls));
};
cljs.core.mapcat.cljs$lang$applyTo = function(seq25646) {
  var G__25647 = cljs.core.first(seq25646);
  var seq25646__$1 = cljs.core.next(seq25646);
  return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(G__25647, seq25646__$1);
};
cljs.core.mapcat.cljs$lang$maxFixedArity = 1;
cljs.core.filter = function cljs$core$filter() {
  var args25654 = [];
  var len__5565__auto___25658 = arguments.length;
  var i__5566__auto___25659 = 0;
  while (true) {
    if (i__5566__auto___25659 < len__5565__auto___25658) {
      args25654.push(arguments[i__5566__auto___25659]);
      var G__25660 = i__5566__auto___25659 + 1;
      i__5566__auto___25659 = G__25660;
      continue;
    } else {
    }
    break;
  }
  var G__25656 = args25654.length;
  switch(G__25656) {
    case 1:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args25654.length)].join(""));;
  }
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__25662 = null;
      var G__25662__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__25662__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__25662__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return result;
        }
      };
      G__25662 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__25662__0.call(this);
          case 1:
            return G__25662__1.call(this, result);
          case 2:
            return G__25662__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__25662.cljs$core$IFn$_invoke$arity$0 = G__25662__0;
      G__25662.cljs$core$IFn$_invoke$arity$1 = G__25662__1;
      G__25662.cljs$core$IFn$_invoke$arity$2 = G__25662__2;
      return G__25662;
    }();
  };
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__5410__auto___25663 = size;
        var i_25664 = 0;
        while (true) {
          if (i_25664 < n__5410__auto___25663) {
            if (cljs.core.truth_(function() {
              var G__25657 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_25664);
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__25657) : pred.call(null, G__25657);
            }())) {
              cljs.core.chunk_append(b, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_25664));
            } else {
            }
            var G__25665 = i_25664 + 1;
            i_25664 = G__25665;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.chunk_rest(s)));
      } else {
        var f = cljs.core.first(s);
        var r = cljs.core.rest(s);
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(f) : pred.call(null, f))) {
          return cljs.core.cons(f, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r));
        } else {
          return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r);
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.filter.cljs$lang$maxFixedArity = 2;
cljs.core.remove = function cljs$core$remove() {
  var args25666 = [];
  var len__5565__auto___25669 = arguments.length;
  var i__5566__auto___25670 = 0;
  while (true) {
    if (i__5566__auto___25670 < len__5565__auto___25669) {
      args25666.push(arguments[i__5566__auto___25670]);
      var G__25671 = i__5566__auto___25670 + 1;
      i__5566__auto___25670 = G__25671;
      continue;
    } else {
    }
    break;
  }
  var G__25668 = args25666.length;
  switch(G__25668) {
    case 1:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args25666.length)].join(""));;
  }
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred), coll);
};
cljs.core.remove.cljs$lang$maxFixedArity = 2;
cljs.core.tree_seq = function cljs$core$tree_seq(branch_QMARK_, children, root) {
  var walk = function cljs$core$tree_seq_$_walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(node, cljs.core.truth_(branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(node) : branch_QMARK_.call(null, node)) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs$core$tree_seq_$_walk, cljs.core.array_seq([children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(node) : children.call(null, node)], 0)) : null);
    }, null, null);
  };
  return walk(root);
};
cljs.core.flatten = function cljs$core$flatten(x) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__25673_SHARP_) {
    return !cljs.core.sequential_QMARK_(p1__25673_SHARP_);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function cljs$core$into() {
  var args25674 = [];
  var len__5565__auto___25679 = arguments.length;
  var i__5566__auto___25680 = 0;
  while (true) {
    if (i__5566__auto___25680 < len__5565__auto___25679) {
      args25674.push(arguments[i__5566__auto___25680]);
      var G__25681 = i__5566__auto___25680 + 1;
      i__5566__auto___25680 = G__25681;
      continue;
    } else {
    }
    break;
  }
  var G__25676 = args25674.length;
  switch(G__25676) {
    case 2:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args25674.length)].join(""));;
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$2 = function(to, from) {
  if (!(to == null)) {
    if (!(to == null) ? to.cljs$lang$protocol_mask$partition1$ & 4 || to.cljs$core$IEditableCollection$ ? true : false : false) {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, to, from);
    }
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, from);
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$3 = function(to, xform, from) {
  if (!(to == null) ? to.cljs$lang$protocol_mask$partition1$ & 4 || to.cljs$core$IEditableCollection$ ? true : false : false) {
    return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
  } else {
    return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj, to, from);
  }
};
cljs.core.into.cljs$lang$maxFixedArity = 3;
cljs.core.mapv = function cljs$core$mapv() {
  var args25683 = [];
  var len__5565__auto___25691 = arguments.length;
  var i__5566__auto___25692 = 0;
  while (true) {
    if (i__5566__auto___25692 < len__5565__auto___25691) {
      args25683.push(arguments[i__5566__auto___25692]);
      var G__25693 = i__5566__auto___25692 + 1;
      i__5566__auto___25692 = G__25693;
      continue;
    } else {
    }
    break;
  }
  var G__25690 = args25683.length;
  switch(G__25690) {
    case 2:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args25683.slice(4), 0);
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5584__auto__);
  }
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(o) : f.call(null, o));
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, c1, c2));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, c1, c2, c3));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, f, c1, c2, c3, cljs.core.array_seq([colls], 0)));
};
cljs.core.mapv.cljs$lang$applyTo = function(seq25684) {
  var G__25685 = cljs.core.first(seq25684);
  var seq25684__$1 = cljs.core.next(seq25684);
  var G__25686 = cljs.core.first(seq25684__$1);
  var seq25684__$2 = cljs.core.next(seq25684__$1);
  var G__25687 = cljs.core.first(seq25684__$2);
  var seq25684__$3 = cljs.core.next(seq25684__$2);
  var G__25688 = cljs.core.first(seq25684__$3);
  var seq25684__$4 = cljs.core.next(seq25684__$3);
  return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(G__25685, G__25686, G__25687, G__25688, seq25684__$4);
};
cljs.core.mapv.cljs$lang$maxFixedArity = 4;
cljs.core.filterv = function cljs$core$filterv(pred, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(o) : pred.call(null, o))) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function cljs$core$partition() {
  var args25695 = [];
  var len__5565__auto___25698 = arguments.length;
  var i__5566__auto___25699 = 0;
  while (true) {
    if (i__5566__auto___25699 < len__5565__auto___25698) {
      args25695.push(arguments[i__5566__auto___25699]);
      var G__25700 = i__5566__auto___25699 + 1;
      i__5566__auto___25699 = G__25700;
      continue;
    } else {
    }
    break;
  }
  var G__25697 = args25695.length;
  switch(G__25697) {
    case 2:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args25695.length)].join(""));;
  }
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$4 = function(n, step, pad, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$4(n, step, pad, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return cljs.core._conj(cljs.core.List.EMPTY, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p, pad)));
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$lang$maxFixedArity = 4;
cljs.core.get_in = function cljs$core$get_in() {
  var args25702 = [];
  var len__5565__auto___25706 = arguments.length;
  var i__5566__auto___25707 = 0;
  while (true) {
    if (i__5566__auto___25707 < len__5565__auto___25706) {
      args25702.push(arguments[i__5566__auto___25707]);
      var G__25708 = i__5566__auto___25707 + 1;
      i__5566__auto___25707 = G__25708;
      continue;
    } else {
    }
    break;
  }
  var G__25704 = args25702.length;
  switch(G__25704) {
    case 2:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args25702.length)].join(""));;
  }
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$2 = function(m, ks) {
  return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(m, ks, null);
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$3 = function(m, ks, not_found) {
  var sentinel = cljs.core.lookup_sentinel;
  var m__$1 = m;
  var ks__$1 = cljs.core.seq(ks);
  while (true) {
    if (ks__$1) {
      if (!(!(m__$1 == null) ? m__$1.cljs$lang$protocol_mask$partition0$ & 256 || m__$1.cljs$core$ILookup$ ? true : !m__$1.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, m__$1) : false : cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, m__$1))) {
        return not_found;
      } else {
        var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, cljs.core.first(ks__$1), sentinel);
        if (sentinel === m__$2) {
          return not_found;
        } else {
          var G__25710 = sentinel;
          var G__25711 = m__$2;
          var G__25712 = cljs.core.next(ks__$1);
          sentinel = G__25710;
          m__$1 = G__25711;
          ks__$1 = G__25712;
          continue;
        }
      }
    } else {
      return m__$1;
    }
    break;
  }
};
cljs.core.get_in.cljs$lang$maxFixedArity = 3;
cljs.core.assoc_in = function cljs$core$assoc_in(m, p__25713, v) {
  var vec__25718 = p__25713;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25718, 0, null);
  var ks = cljs.core.nthnext(vec__25718, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs$core$assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, v));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
  }
};
cljs.core.update_in = function cljs$core$update_in() {
  var args25719 = [];
  var len__5565__auto___25749 = arguments.length;
  var i__5566__auto___25750 = 0;
  while (true) {
    if (i__5566__auto___25750 < len__5565__auto___25749) {
      args25719.push(arguments[i__5566__auto___25750]);
      var G__25751 = i__5566__auto___25750 + 1;
      i__5566__auto___25750 = G__25751;
      continue;
    } else {
    }
    break;
  }
  var G__25728 = args25719.length;
  switch(G__25728) {
    case 3:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args25719.slice(6), 0);
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__5584__auto__);
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$3 = function(m, p__25729, f) {
  var vec__25730 = p__25729;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25730, 0, null);
  var ks = cljs.core.nthnext(vec__25730, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__25731 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25731) : f.call(null, G__25731);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$4 = function(m, p__25732, f, a) {
  var vec__25733 = p__25732;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25733, 0, null);
  var ks = cljs.core.nthnext(vec__25733, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__25734 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__25735 = a;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25734, G__25735) : f.call(null, G__25734, G__25735);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$5 = function(m, p__25736, f, a, b) {
  var vec__25737 = p__25736;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25737, 0, null);
  var ks = cljs.core.nthnext(vec__25737, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__25738 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__25739 = a;
      var G__25740 = b;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25738, G__25739, G__25740) : f.call(null, G__25738, G__25739, G__25740);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$6 = function(m, p__25741, f, a, b, c) {
  var vec__25742 = p__25741;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25742, 0, null);
  var ks = cljs.core.nthnext(vec__25742, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b, c));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__25743 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__25744 = a;
      var G__25745 = b;
      var G__25746 = c;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__25743, G__25744, G__25745, G__25746) : f.call(null, G__25743, G__25744, G__25745, G__25746);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic = function(m, p__25747, f, a, b, c, args) {
  var vec__25748 = p__25747;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25748, 0, null);
  var ks = cljs.core.nthnext(vec__25748, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, cljs.core.array_seq([b, c, args], 0)));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c, cljs.core.array_seq([args], 0)));
  }
};
cljs.core.update_in.cljs$lang$applyTo = function(seq25720) {
  var G__25721 = cljs.core.first(seq25720);
  var seq25720__$1 = cljs.core.next(seq25720);
  var G__25722 = cljs.core.first(seq25720__$1);
  var seq25720__$2 = cljs.core.next(seq25720__$1);
  var G__25723 = cljs.core.first(seq25720__$2);
  var seq25720__$3 = cljs.core.next(seq25720__$2);
  var G__25724 = cljs.core.first(seq25720__$3);
  var seq25720__$4 = cljs.core.next(seq25720__$3);
  var G__25725 = cljs.core.first(seq25720__$4);
  var seq25720__$5 = cljs.core.next(seq25720__$4);
  var G__25726 = cljs.core.first(seq25720__$5);
  var seq25720__$6 = cljs.core.next(seq25720__$5);
  return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(G__25721, G__25722, G__25723, G__25724, G__25725, G__25726, seq25720__$6);
};
cljs.core.update_in.cljs$lang$maxFixedArity = 6;
cljs.core.update = function cljs$core$update() {
  var args25753 = [];
  var len__5565__auto___25773 = arguments.length;
  var i__5566__auto___25774 = 0;
  while (true) {
    if (i__5566__auto___25774 < len__5565__auto___25773) {
      args25753.push(arguments[i__5566__auto___25774]);
      var G__25775 = i__5566__auto___25774 + 1;
      i__5566__auto___25774 = G__25775;
      continue;
    } else {
    }
    break;
  }
  var G__25762 = args25753.length;
  switch(G__25762) {
    case 3:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args25753.slice(6), 0);
      return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__5584__auto__);
  }
};
cljs.core.update.cljs$core$IFn$_invoke$arity$3 = function(m, k, f) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__25763 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25763) : f.call(null, G__25763);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$4 = function(m, k, f, x) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__25764 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__25765 = x;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25764, G__25765) : f.call(null, G__25764, G__25765);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$5 = function(m, k, f, x, y) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__25766 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__25767 = x;
    var G__25768 = y;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25766, G__25767, G__25768) : f.call(null, G__25766, G__25767, G__25768);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$6 = function(m, k, f, x, y, z) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__25769 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__25770 = x;
    var G__25771 = y;
    var G__25772 = z;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__25769, G__25770, G__25771, G__25772) : f.call(null, G__25769, G__25770, G__25771, G__25772);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$variadic = function(m, k, f, x, y, z, more) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), x, y, z, cljs.core.array_seq([more], 0)));
};
cljs.core.update.cljs$lang$applyTo = function(seq25754) {
  var G__25755 = cljs.core.first(seq25754);
  var seq25754__$1 = cljs.core.next(seq25754);
  var G__25756 = cljs.core.first(seq25754__$1);
  var seq25754__$2 = cljs.core.next(seq25754__$1);
  var G__25757 = cljs.core.first(seq25754__$2);
  var seq25754__$3 = cljs.core.next(seq25754__$2);
  var G__25758 = cljs.core.first(seq25754__$3);
  var seq25754__$4 = cljs.core.next(seq25754__$3);
  var G__25759 = cljs.core.first(seq25754__$4);
  var seq25754__$5 = cljs.core.next(seq25754__$4);
  var G__25760 = cljs.core.first(seq25754__$5);
  var seq25754__$6 = cljs.core.next(seq25754__$5);
  return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(G__25755, G__25756, G__25757, G__25758, G__25759, G__25760, seq25754__$6);
};
cljs.core.update.cljs$lang$maxFixedArity = 6;
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function cljs$core$__GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function cljs$core$pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function cljs$core$pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function cljs$core$pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function cljs$core$pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone(node.arr));
};
cljs.core.tail_off = function cljs$core$tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function cljs$core$new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node(edit);
      var _ = cljs.core.pv_aset(r, 0, embed);
      var G__25777 = ll - 5;
      var G__25778 = r;
      ll = G__25777;
      ret = G__25778;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function cljs$core$push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node(parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset(ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget(parent, subidx);
    if (!(child == null)) {
      var node_to_insert = cljs$core$push_tail(pv, level - 5, child, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path(null, level - 5, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function cljs$core$vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function cljs$core$first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__25783 = cljs.core.pv_aget(node, 0);
      var G__25784 = level - 5;
      node = G__25783;
      level = G__25784;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function cljs$core$unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off(pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__25785 = cljs.core.pv_aget(node, i >>> level & 31);
        var G__25786 = level - 5;
        node = G__25785;
        level = G__25786;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function cljs$core$array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for(pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds(i, pv.cnt);
  }
};
cljs.core.do_assoc = function cljs$core$do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node(node);
  if (level === 0) {
    cljs.core.pv_aset(ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset(ret, subidx, cljs$core$do_assoc(pv, level - 5, cljs.core.pv_aget(node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function cljs$core$pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = cljs$core$pop_tail(pv, level - 5, cljs.core.pv_aget(node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for(self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "base", "base", 1825810849, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function cljs$core$__GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function cljs$core$ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count(v) ? cljs.core.unchecked_array_for(v, i) : null, v, start, end);
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__25796 = init__$2;
              var G__25797 = j + i;
              var G__25798 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25796, G__25797, G__25798) : f.call(null, G__25796, G__25797, G__25798);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__25805 = j + 1;
              var G__25806 = init__$3;
              j = G__25805;
              init__$2 = G__25806;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__25807 = i + len;
        var G__25808 = init__$2;
        i = G__25807;
        init__$1 = G__25808;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for(coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for(coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off(coll__$1) <= n) {
      var new_tail = cljs.core.aclone(self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc(coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj(coll__$1, val);
    } else {
      throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator(this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off(coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for(coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail(coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget(new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count(other)) {
      var me_iter = cljs.core._iterator(coll__$1);
      var you_iter = cljs.core._iterator(other);
      while (true) {
        if (cljs.core.truth_(me_iter.hasNext())) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential(coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(self__.root) : cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(self__.tail) : cljs.core.tv_editable_tail.call(null, self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__25799 = init__$2;
              var G__25800 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25799, G__25800) : f.call(null, G__25799, G__25800);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__25809 = j + 1;
              var G__25810 = init__$3;
              j = G__25809;
              init__$2 = G__25810;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__25811 = i + len;
        var G__25812 = init__$2;
        i = G__25811;
        init__$1 = G__25812;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n(coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      var G__25801 = coll__$1;
      var G__25802 = cljs.core.first_array_for_longvec(coll__$1);
      var G__25803 = 0;
      var G__25804 = 0;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__25801, G__25802, G__25803, G__25804) : cljs.core.chunked_seq.call(null, G__25801, G__25802, G__25803, G__25804);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off(coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__5410__auto___25813 = len;
    var i_25814 = 0;
    while (true) {
      if (i_25814 < n__5410__auto___25813) {
        new_tail[i_25814] = self__.tail[i_25814];
        var G__25815 = i_25814 + 1;
        i_25814 = G__25815;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node(null);
      cljs.core.pv_aset(n_r, 0, self__.root);
      cljs.core.pv_aset(n_r, 1, cljs.core.new_path(null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail(coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__25816 = null;
  var G__25816__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__25816__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__25816 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__25816__2.call(this, self__, k);
      case 3:
        return G__25816__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__25816.cljs$core$IFn$_invoke$arity$2 = G__25816__2;
  G__25816.cljs$core$IFn$_invoke$arity$3 = G__25816__3;
  return G__25816;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args25795) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args25795)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.Symbol(null, "tail", "tail", 494507963, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function cljs$core$__GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], cljs.core.empty_ordered_hash);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone(xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
    while (true) {
      if (i < l) {
        var G__25817 = i + 1;
        var G__25818 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out, xs__$1[i]);
        i = G__25817;
        out = G__25818;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.vec = function cljs$core$vec(coll) {
  if (cljs.core.array_QMARK_(coll)) {
    return cljs.core.PersistentVector.fromArray(coll, true);
  } else {
    return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), coll));
  }
};
cljs.core.vector = function cljs$core$vector() {
  var args__5572__auto__ = [];
  var len__5565__auto___25820 = arguments.length;
  var i__5566__auto___25821 = 0;
  while (true) {
    if (i__5566__auto___25821 < len__5565__auto___25820) {
      args__5572__auto__.push(arguments[i__5566__auto___25821]);
      var G__25822 = i__5566__auto___25821 + 1;
      i__5566__auto___25821 = G__25822;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
    return cljs.core.PersistentVector.fromArray(args.arr, true);
  } else {
    return cljs.core.vec(args);
  }
};
cljs.core.vector.cljs$lang$maxFixedArity = 0;
cljs.core.vector.cljs$lang$applyTo = function(seq25819) {
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq25819));
};
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__25823 = self__.vec;
      var G__25824 = self__.node;
      var G__25825 = self__.i;
      var G__25826 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__25823, G__25824, G__25825, G__25826) : cljs.core.chunked_seq.call(null, G__25823, G__25824, G__25825, G__25826);
    }();
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(function() {
    var G__25827 = self__.vec;
    var G__25828 = self__.i + self__.off;
    var G__25829 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__25827, G__25828, G__25829) : cljs.core.subvec.call(null, G__25827, G__25828, G__25829);
  }(), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(function() {
    var G__25830 = self__.vec;
    var G__25831 = self__.i + self__.off;
    var G__25832 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__25830, G__25831, G__25832) : cljs.core.subvec.call(null, G__25830, G__25831, G__25832);
  }(), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__25833 = self__.vec;
      var G__25834 = self__.node;
      var G__25835 = self__.i;
      var G__25836 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__25833, G__25834, G__25835, G__25836) : cljs.core.chunked_seq.call(null, G__25833, G__25834, G__25835, G__25836);
    }();
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__25837 = self__.vec;
    var G__25838 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__25839 = end;
    var G__25840 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__25837, G__25838, G__25839, G__25840) : cljs.core.chunked_seq.call(null, G__25837, G__25838, G__25839, G__25840);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(self__.vec, self__.node, self__.i, self__.off, m) : cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__25841 = self__.vec;
    var G__25842 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__25843 = end;
    var G__25844 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__25841, G__25842, G__25843, G__25844) : cljs.core.chunked_seq.call(null, G__25841, G__25842, G__25843, G__25844);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "vec", "vec", 982683596, null), new cljs.core.Symbol(null, "node", "node", -2073234571, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function cljs$core$__GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.chunked_seq = function cljs$core$chunked_seq() {
  var args25845 = [];
  var len__5565__auto___25848 = arguments.length;
  var i__5566__auto___25849 = 0;
  while (true) {
    if (i__5566__auto___25849 < len__5565__auto___25848) {
      args25845.push(arguments[i__5566__auto___25849]);
      var G__25850 = i__5566__auto___25849 + 1;
      i__5566__auto___25849 = G__25850;
      continue;
    } else {
    }
    break;
  }
  var G__25847 = args25845.length;
  switch(G__25847) {
    case 3:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args25845.length)].join(""));;
  }
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3 = function(vec, i, off) {
  return new cljs.core.ChunkedSeq(vec, cljs.core.array_for(vec, i), i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 = function(vec, node, i, off) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 = function(vec, node, i, off, meta) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
};
cljs.core.chunked_seq.cljs$lang$maxFixedArity = 5;
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167666463;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var i = self__.start;
  var j = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.end) {
      var init__$2 = function() {
        var G__25853 = init__$1;
        var G__25854 = j;
        var G__25855 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25853, G__25854, G__25855) : f.call(null, G__25853, G__25854, G__25855);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__25872 = i + 1;
        var G__25873 = j + 1;
        var G__25874 = init__$2;
        i = G__25872;
        j = G__25873;
        init__$1 = G__25874;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds(n, self__.end - self__.start);
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  var G__25856 = self__.meta;
  var G__25857 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val);
  var G__25858 = self__.start;
  var G__25859 = function() {
    var x__4838__auto__ = self__.end;
    var y__4839__auto__ = v_pos + 1;
    return x__4838__auto__ > y__4839__auto__ ? x__4838__auto__ : y__4839__auto__;
  }();
  var G__25860 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__25856, G__25857, G__25858, G__25859, G__25860) : cljs.core.build_subvec.call(null, G__25856, G__25857, G__25858, G__25859, G__25860);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    var G__25861 = self__.meta;
    var G__25862 = self__.v;
    var G__25863 = self__.start;
    var G__25864 = self__.end - 1;
    var G__25865 = null;
    return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__25861, G__25862, G__25863, G__25864, G__25865) : cljs.core.build_subvec.call(null, G__25861, G__25862, G__25863, G__25864, G__25865);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n(coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function cljs$core$subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return cljs$core$subvec_seq(i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq(self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(meta__$1, self__.v, self__.start, self__.end, self__.__hash) : cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__25867 = self__.meta;
  var G__25868 = cljs.core._assoc_n(self__.v, self__.end, o);
  var G__25869 = self__.start;
  var G__25870 = self__.end + 1;
  var G__25871 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__25867, G__25868, G__25869, G__25870, G__25871) : cljs.core.build_subvec.call(null, G__25867, G__25868, G__25869, G__25870, G__25871);
};
cljs.core.Subvec.prototype.call = function() {
  var G__25875 = null;
  var G__25875__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__25875__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__25875 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__25875__2.call(this, self__, k);
      case 3:
        return G__25875__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__25875.cljs$core$IFn$_invoke$arity$2 = G__25875__2;
  G__25875.cljs$core$IFn$_invoke$arity$3 = G__25875__3;
  return G__25875;
}();
cljs.core.Subvec.prototype.apply = function(self__, args25852) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args25852)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function cljs$core$__GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.build_subvec = function cljs$core$build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__25876 = meta;
      var G__25877 = v.v;
      var G__25878 = v.start + start;
      var G__25879 = v.start + end;
      var G__25880 = __hash;
      meta = G__25876;
      v = G__25877;
      start = G__25878;
      end = G__25879;
      __hash = G__25880;
      continue;
    } else {
      var c = cljs.core.count(v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function cljs$core$subvec() {
  var args25881 = [];
  var len__5565__auto___25884 = arguments.length;
  var i__5566__auto___25885 = 0;
  while (true) {
    if (i__5566__auto___25885 < len__5565__auto___25884) {
      args25881.push(arguments[i__5566__auto___25885]);
      var G__25886 = i__5566__auto___25885 + 1;
      i__5566__auto___25885 = G__25886;
      continue;
    } else {
    }
    break;
  }
  var G__25883 = args25881.length;
  switch(G__25883) {
    case 2:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args25881.length)].join(""));;
  }
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$2 = function(v, start) {
  return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(v, start, cljs.core.count(v));
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 = function(v, start, end) {
  return cljs.core.build_subvec(null, v, start, end, null);
};
cljs.core.subvec.cljs$lang$maxFixedArity = 3;
cljs.core.tv_ensure_editable = function cljs$core$tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone(node.arr));
  }
};
cljs.core.tv_editable_root = function cljs$core$tv_editable_root(node) {
  return new cljs.core.VectorNode({}, cljs.core.aclone(node.arr));
};
cljs.core.tv_editable_tail = function cljs$core$tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function cljs$core$tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable(tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset(ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget(ret, subidx);
    if (!(child == null)) {
      return cljs$core$tv_push_tail(tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path(tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function cljs$core$tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = cljs$core$tv_pop_tail(tv, level - 5, cljs.core.pv_aget(node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function cljs$core$unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off(tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__25899 = cljs.core.tv_ensure_editable(root.edit, cljs.core.pv_aget(node, i >>> level & 31));
        var G__25900 = level - 5;
        node = G__25899;
        level = G__25900;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition1$ = 88;
  this.cljs$lang$protocol_mask$partition0$ = 275;
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off(tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path(self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail(tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off(tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy(self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_(tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off(tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function cljs$core$go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset(node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset(node__$1, subidx, cljs$core$go(level - 5, cljs.core.pv_aget(node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_(tcoll__$1, val);
      } else {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail(tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit, cljs.core.pv_aget(new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for(coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.call = function() {
  var G__25904 = null;
  var G__25904__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__25904__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__25904 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__25904__2.call(this, self__, k);
      case 3:
        return G__25904__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__25904.cljs$core$IFn$_invoke$arity$2 = G__25904__2;
  G__25904.cljs$core$IFn$_invoke$arity$3 = G__25904__3;
  return G__25904;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args25901) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args25901)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "tail", "tail", 494507963, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function cljs$core$__GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueIter = function(fseq, riter) {
  this.fseq = fseq;
  this.riter = riter;
};
cljs.core.PersistentQueueIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var or__4526__auto__ = cljs.core.some_QMARK_(self__.fseq) && cljs.core.seq(self__.fseq);
  if (or__4526__auto__) {
    return or__4526__auto__;
  } else {
    var and__4514__auto__ = cljs.core.some_QMARK_(self__.riter);
    if (and__4514__auto__) {
      return self__.riter.hasNext();
    } else {
      return and__4514__auto__;
    }
  }
};
cljs.core.PersistentQueueIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (cljs.core.some_QMARK_(self__.fseq)) {
    var ret = cljs.core.first(self__.fseq);
    self__.fseq = cljs.core.next(self__.fseq);
    return ret;
  } else {
    if (cljs.core.some_QMARK_(self__.riter) && self__.riter.hasNext()) {
      return self__.riter.next();
    } else {
      throw new Error("No such element");
    }
  }
};
cljs.core.PersistentQueueIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.PersistentQueueIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "fseq", "fseq", -1466412450, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "riter", "riter", -237834262, null)], null);
};
cljs.core.PersistentQueueIter.cljs$lang$type = true;
cljs.core.PersistentQueueIter.cljs$lang$ctorStr = "cljs.core/PersistentQueueIter";
cljs.core.PersistentQueueIter.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/PersistentQueueIter");
};
cljs.core.__GT_PersistentQueueIter = function cljs$core$__GT_PersistentQueueIter(fseq, riter) {
  return new cljs.core.PersistentQueueIter(fseq, riter);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4423__auto__ = cljs.core.next(self__.front);
  if (temp__4423__auto__) {
    var f1 = temp__4423__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty(coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentQueueSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function cljs$core$__GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueIter(self__.front, cljs.core._iterator(self__.rear));
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4423__auto__ = cljs.core.next(self__.front);
    if (temp__4423__auto__) {
      var f1 = temp__4423__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq(self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY, self__.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest(cljs.core.seq(coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq(self__.rear);
  if (cljs.core.truth_(function() {
    var or__4526__auto__ = self__.front;
    if (cljs.core.truth_(or__4526__auto__)) {
      return or__4526__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq(rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
      var or__4526__auto__ = self__.rear;
      if (cljs.core.truth_(or__4526__auto__)) {
        return or__4526__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function cljs$core$__GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, cljs.core.empty_ordered_hash);
cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function cljs$core$__GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function cljs$core$equiv_map(x, y) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(y) ? cljs.core.count(x) === cljs.core.count(y) ? cljs.core.every_QMARK_(cljs.core.identity, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(xkv) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, cljs.core.first(xkv), cljs.core.never_equiv), cljs.core.second(xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function cljs$core$scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__25905 = i + incr;
        i = G__25905;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function cljs$core$obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash(a);
  var b__$1 = cljs.core.hash(b);
  if (a__$1 < b__$1) {
    return -1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function cljs$core$obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta(m);
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__25906 = i + 1;
      var G__25907 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k__$1, so[k__$1]);
      i = G__25906;
      out = G__25907;
      continue;
    } else {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function cljs$core$obj_clone(obj, ks) {
  var new_obj = {};
  var l = ks.length;
  var i_25912 = 0;
  while (true) {
    if (i_25912 < l) {
      var k_25913 = ks[i_25912];
      new_obj[k_25913] = obj[k_25913];
      var G__25914 = i_25912 + 1;
      i_25912 = G__25914;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq(keys__$1)) {
      var k = cljs.core.first(keys__$1);
      var init__$2 = function() {
        var G__25917 = init__$1;
        var G__25918 = k;
        var G__25919 = self__.strobj[k];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25917, G__25918, G__25919) : f.call(null, G__25917, G__25918, G__25919);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__25920 = cljs.core.rest(keys__$1);
        var G__25921 = init__$2;
        keys__$1 = G__25920;
        init__$1 = G__25921;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone(self__.keys);
    var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array(1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array(1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone(self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(coll__$1) {
      return function(p1__25915_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__25915_SHARP_, self__.strobj[p1__25915_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__25922 = null;
  var G__25922__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__25922__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__25922 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__25922__2.call(this, self__, k);
      case 3:
        return G__25922__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__25922.cljs$core$IFn$_invoke$arity$2 = G__25922__2;
  G__25922.cljs$core$IFn$_invoke$arity$3 = G__25922__3;
  return G__25922;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args25916) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args25916)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), new cljs.core.Symbol(null, "strobj", "strobj", 1088091283, null), new cljs.core.Symbol(null, "update-count", "update-count", -411982269, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function cljs$core$__GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, cljs.core.empty_unordered_hash);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.RecordIter = function(i, record, base_count, fields, ext_map_iter) {
  this.i = i;
  this.record = record;
  this.base_count = base_count;
  this.fields = fields;
  this.ext_map_iter = ext_map_iter;
};
cljs.core.RecordIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var or__4526__auto__ = self__.i < self__.base_count;
  if (or__4526__auto__) {
    return or__4526__auto__;
  } else {
    return self__.ext_map_iter.hasNext();
  }
};
cljs.core.RecordIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (self__.i < self__.base_count) {
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(self__.fields, self__.i);
    self__.i = self__.i + 1;
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(self__.record, k)], null);
  } else {
    return self__.ext_map_iter.next();
  }
};
cljs.core.RecordIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.RecordIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "record", "record", 861424668, null), new cljs.core.Symbol(null, "base-count", "base-count", -1180647182, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, 
  "ext-map-iter", "ext-map-iter", -1215982757, null)], null);
};
cljs.core.RecordIter.cljs$lang$type = true;
cljs.core.RecordIter.cljs$lang$ctorStr = "cljs.core/RecordIter";
cljs.core.RecordIter.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/RecordIter");
};
cljs.core.__GT_RecordIter = function cljs$core$__GT_RecordIter(i, record, base_count, fields, ext_map_iter) {
  return new cljs.core.RecordIter(i, record, base_count, fields, ext_map_iter);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__25925 = cljs.core.first(self__.s);
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25925, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25925, 1, null);
    self__.s = cljs.core.next(self__.s);
    return {"value":[k, v], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6EntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function cljs$core$__GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function cljs$core$es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":[x, x], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6SetEntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function cljs$core$__GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function cljs$core$es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll));
};
cljs.core.array_index_of_nil_QMARK_ = function cljs$core$array_index_of_nil_QMARK_(arr) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__25926 = i + 2;
        i = G__25926;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_keyword_QMARK_ = function cljs$core$array_index_of_keyword_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] instanceof cljs.core.Keyword && kstr === arr[i].fqn) {
        return i;
      } else {
        var G__25927 = i + 2;
        i = G__25927;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_symbol_QMARK_ = function cljs$core$array_index_of_symbol_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] instanceof cljs.core.Symbol && kstr === arr[i].str) {
        return i;
      } else {
        var G__25928 = i + 2;
        i = G__25928;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_identical_QMARK_ = function cljs$core$array_index_of_identical_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__25929 = i + 2;
        i = G__25929;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_equiv_QMARK_ = function cljs$core$array_index_of_equiv_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, arr[i])) {
        return i;
      } else {
        var G__25930 = i + 2;
        i = G__25930;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of = function cljs$core$array_index_of(arr, k) {
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_index_of_keyword_QMARK_(arr, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_index_of_identical_QMARK_(arr, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_index_of_symbol_QMARK_(arr, k);
      } else {
        if (k == null) {
          return cljs.core.array_index_of_nil_QMARK_(arr);
        } else {
          return cljs.core.array_index_of_equiv_QMARK_(arr, k);
        }
      }
    }
  }
};
cljs.core.array_map_index_of = function cljs$core$array_map_index_of(m, k) {
  return cljs.core.array_index_of(m.arr, k);
};
cljs.core.array_extend_kv = function cljs$core$array_extend_kv(arr, k, v) {
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_25931 = 0;
  while (true) {
    if (i_25931 < l) {
      narr[i_25931] = arr[i_25931];
      var G__25932 = i_25931 + 1;
      i_25931 = G__25932;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.array_map_extend_kv = function cljs$core$array_map_extend_kv(m, k, v) {
  return cljs.core.array_extend_kv(m.arr, k, v);
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return (self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function cljs$core$__GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.persistent_array_map_seq = function cljs$core$persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null)], null);
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function cljs$core$__GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__25934 = cljs.core.seq(coll);
  var chunk__25935 = null;
  var count__25936 = 0;
  var i__25937 = 0;
  while (true) {
    if (i__25937 < count__25936) {
      var vec__25938 = chunk__25935.cljs$core$IIndexed$_nth$arity$2(null, i__25937);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25938, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25938, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__25947 = seq__25934;
      var G__25948 = chunk__25935;
      var G__25949 = count__25936;
      var G__25950 = i__25937 + 1;
      seq__25934 = G__25947;
      chunk__25935 = G__25948;
      count__25936 = G__25949;
      i__25937 = G__25950;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__25934);
      if (temp__4425__auto__) {
        var seq__25934__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__25934__$1)) {
          var c__5310__auto__ = cljs.core.chunk_first(seq__25934__$1);
          var G__25951 = cljs.core.chunk_rest(seq__25934__$1);
          var G__25952 = c__5310__auto__;
          var G__25953 = cljs.core.count(c__5310__auto__);
          var G__25954 = 0;
          seq__25934 = G__25951;
          chunk__25935 = G__25952;
          count__25936 = G__25953;
          i__25937 = G__25954;
          continue;
        } else {
          var vec__25939 = cljs.core.first(seq__25934__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25939, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25939, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__25955 = cljs.core.next(seq__25934__$1);
          var G__25956 = null;
          var G__25957 = 0;
          var G__25958 = 0;
          seq__25934 = G__25955;
          chunk__25935 = G__25956;
          count__25936 = G__25957;
          i__25937 = G__25958;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var G__25940 = init__$1;
        var G__25941 = self__.arr[i];
        var G__25942 = self__.arr[i + 1];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25940, G__25941, G__25942) : f.call(null, G__25940, G__25941, G__25942);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__25959 = i + 2;
        var G__25960 = init__$2;
        i = G__25959;
        init__$1 = G__25960;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (!(other == null) ? other.cljs$lang$protocol_mask$partition0$ & 1024 || other.cljs$core$IMap$ ? true : false : false) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[i + 1], v)) {
              var G__25961 = i + 2;
              i = G__25961;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_map(coll__$1, other);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap({}, self__.arr.length, cljs.core.aclone(self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty(coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, self__.arr[s])) {
            var G__25962 = s + 2;
            var G__25963 = d;
            s = G__25962;
            d = G__25963;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__25964 = s + 2;
            var G__25965 = d + 2;
            s = G__25964;
            d = G__25965;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv(coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__25946 = cljs.core.aclone(self__.arr);
        G__25946[idx + 1] = v;
        return G__25946;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(cljs.core.array_map_index_of(coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq(self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__25966 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__25967 = cljs.core.next(es);
          ret = G__25966;
          es = G__25967;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__25968 = null;
  var G__25968__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__25968__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__25968 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__25968__2.call(this, self__, k);
      case 3:
        return G__25968__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__25968.cljs$core$IFn$_invoke$arity$2 = G__25968__2;
  G__25968.cljs$core$IFn$_invoke$arity$3 = G__25968__3;
  return G__25968;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args25933) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args25933)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function cljs$core$__GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], cljs.core.empty_unordered_hash);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var arr__$2 = no_check ? arr__$1 : function() {
    var ret = [];
    var i_25969 = 0;
    while (true) {
      if (i_25969 < arr__$1.length) {
        var k_25970 = arr__$1[i_25969];
        var v_25971 = arr__$1[i_25969 + 1];
        var idx_25972 = cljs.core.array_index_of(ret, k_25970);
        if (idx_25972 === -1) {
          ret.push(k_25970);
          ret.push(v_25971);
        } else {
        }
        var G__25973 = i_25969 + 2;
        i_25969 = G__25973;
        continue;
      } else {
      }
      break;
    }
    return ret;
  }();
  var arr__$3 = function() {
    var cnt = arr__$2.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$2, null);
  }();
  return arr__$3;
};
cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition0$ = 258;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot(self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 2048 || o.cljs$core$IMapEntry$ ? true : !o.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o)) {
      return cljs.core._assoc_BANG_(tcoll__$1, cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.key.call(null, o), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4423__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4423__auto__)) {
          var e = temp__4423__auto__;
          var G__25976 = cljs.core.next(es);
          var G__25977 = cljs.core._assoc_BANG_(tcoll__$2, cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e));
          es = G__25976;
          tcoll__$2 = G__25977;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(self__.len, self__.arr) : cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__25975_25978 = self__.arr;
      G__25975_25978.pop();
      G__25975_25978.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "editable?", "editable?", -164945806, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "len", "len", -1230778691, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), 
  new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function cljs$core$__GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function cljs$core$array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__25979 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, arr[i], arr[i + 1]);
      var G__25980 = i + 2;
      out = G__25979;
      i = G__25980;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function cljs$core$__GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function cljs$core$key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_(key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, other);
    }
  }
};
cljs.core.mask = function cljs$core$mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function cljs$core$clone_and_set() {
  var args25981 = [];
  var len__5565__auto___25986 = arguments.length;
  var i__5566__auto___25987 = 0;
  while (true) {
    if (i__5566__auto___25987 < len__5565__auto___25986) {
      args25981.push(arguments[i__5566__auto___25987]);
      var G__25988 = i__5566__auto___25987 + 1;
      i__5566__auto___25987 = G__25988;
      continue;
    } else {
    }
    break;
  }
  var G__25983 = args25981.length;
  switch(G__25983) {
    case 3:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args25981.length)].join(""));;
  }
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3 = function(arr, i, a) {
  var G__25984 = cljs.core.aclone(arr);
  G__25984[i] = a;
  return G__25984;
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5 = function(arr, i, a, j, b) {
  var G__25985 = cljs.core.aclone(arr);
  G__25985[i] = a;
  G__25985[j] = b;
  return G__25985;
};
cljs.core.clone_and_set.cljs$lang$maxFixedArity = 5;
cljs.core.remove_pair = function cljs$core$remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy(arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy(arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function cljs$core$bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count(bitmap & bit - 1);
};
cljs.core.bitpos = function cljs$core$bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function cljs$core$edit_and_set() {
  var args25990 = [];
  var len__5565__auto___25993 = arguments.length;
  var i__5566__auto___25994 = 0;
  while (true) {
    if (i__5566__auto___25994 < len__5565__auto___25993) {
      args25990.push(arguments[i__5566__auto___25994]);
      var G__25995 = i__5566__auto___25994 + 1;
      i__5566__auto___25994 = G__25995;
      continue;
    } else {
    }
    break;
  }
  var G__25992 = args25990.length;
  switch(G__25992) {
    case 4:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 6:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args25990.length)].join(""));;
  }
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4 = function(inode, edit, i, a) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  return editable;
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6 = function(inode, edit, i, a, j, b) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  editable.arr[j] = b;
  return editable;
};
cljs.core.edit_and_set.cljs$lang$maxFixedArity = 6;
cljs.core.inode_kv_reduce = function cljs$core$inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          var G__26000 = init__$1;
          var G__26001 = k;
          var G__26002 = arr[i + 1];
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26000, G__26001, G__26002) : f.call(null, G__26000, G__26001, G__26002);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__26003 = i + 2;
        var G__26004 = init__$2;
        i = G__26003;
        init__$1 = G__26004;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.NodeIterator = function(arr, i, next_entry, next_iter) {
  this.arr = arr;
  this.i = i;
  this.next_entry = next_entry;
  this.next_iter = next_iter;
};
cljs.core.NodeIterator.prototype.advance = function() {
  var self__ = this;
  var this$ = this;
  var len = self__.arr.length;
  while (true) {
    if (self__.i < len) {
      var key = self__.arr[self__.i];
      var node_or_val = self__.arr[self__.i + 1];
      var found = cljs.core.some_QMARK_(key) ? self__.next_entry = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key, node_or_val], null) : cljs.core.some_QMARK_(node_or_val) ? function() {
        var new_iter = cljs.core._iterator(node_or_val);
        if (new_iter.hasNext()) {
          return self__.next_iter = new_iter;
        } else {
          return false;
        }
      }() : false;
      self__.i = self__.i + 2;
      if (found) {
        return true;
      } else {
        continue;
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core.NodeIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  var or__4526__auto__ = cljs.core.some_QMARK_(self__.next_entry);
  if (or__4526__auto__) {
    return or__4526__auto__;
  } else {
    var or__4526__auto____$1 = cljs.core.some_QMARK_(self__.next_iter);
    if (or__4526__auto____$1) {
      return or__4526__auto____$1;
    } else {
      return this$.advance();
    }
  }
};
cljs.core.NodeIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.some_QMARK_(self__.next_entry)) {
    var ret = self__.next_entry;
    self__.next_entry = null;
    return ret;
  } else {
    if (cljs.core.some_QMARK_(self__.next_iter)) {
      var ret = self__.next_iter.next();
      if (self__.next_iter.hasNext()) {
      } else {
        self__.next_iter = null;
      }
      return ret;
    } else {
      if (this$.advance()) {
        return this$.next();
      } else {
        throw new Error("No such element");
      }
    }
  }
};
cljs.core.NodeIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.NodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-entry", "next-entry", 1091342476, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.NodeIterator.cljs$lang$type = true;
cljs.core.NodeIterator.cljs$lang$ctorStr = "cljs.core/NodeIterator";
cljs.core.NodeIterator.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/NodeIterator");
};
cljs.core.__GT_NodeIterator = function cljs$core$__GT_NodeIterator(arr, i, next_entry, next_iter) {
  return new cljs.core.NodeIterator(arr, i, next_entry, next_iter);
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count(self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy(earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward(earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_26018 = 0;
        var j_26019 = 0;
        while (true) {
          if (i_26018 < 32) {
            if ((self__.bitmap >>> i_26018 & 1) === 0) {
              var G__26020 = i_26018 + 1;
              var G__26021 = j_26019;
              i_26018 = G__26020;
              j_26019 = G__26021;
              continue;
            } else {
              nodes[i_26018] = !(self__.arr[j_26019] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash(self__.arr[j_26019]), self__.arr[j_26019], self__.arr[j_26019 + 1], added_leaf_QMARK_) : self__.arr[j_26019 + 1];
              var G__26022 = i_26018 + 1;
              var G__26023 = j_26019 + 2;
              i_26018 = G__26022;
              j_26019 = G__26023;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * idx, null, 2 * idx + 1, function() {
          var G__26005 = edit__$1;
          var G__26006 = shift + 5;
          var G__26007 = key_or_nil;
          var G__26008 = val_or_node;
          var G__26009 = hash;
          var G__26010 = key;
          var G__26011 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__26005, G__26006, G__26007, G__26008, G__26009, G__26010, G__26011) : cljs.core.create_node.call(null, G__26005, G__26006, G__26007, G__26008, G__26009, G__26010, G__26011);
        }());
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_26024 = 0;
      var j_26025 = 0;
      while (true) {
        if (i_26024 < 32) {
          if ((self__.bitmap >>> i_26024 & 1) === 0) {
            var G__26026 = i_26024 + 1;
            var G__26027 = j_26025;
            i_26024 = G__26026;
            j_26025 = G__26027;
            continue;
          } else {
            nodes[i_26024] = !(self__.arr[j_26025] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash(self__.arr[j_26025]), self__.arr[j_26025], self__.arr[j_26025 + 1], added_leaf_QMARK_) : self__.arr[j_26025 + 1];
            var G__26028 = i_26024 + 1;
            var G__26029 = j_26025 + 2;
            i_26024 = G__26028;
            j_26025 = G__26029;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr, 2 * idx, null, 2 * idx + 1, function() {
          var G__26012 = shift + 5;
          var G__26013 = key_or_nil;
          var G__26014 = val_or_node;
          var G__26015 = hash;
          var G__26016 = key;
          var G__26017 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__26012, G__26013, G__26014, G__26015, G__26016, G__26017) : cljs.core.create_node.call(null, G__26012, G__26013, G__26014, G__26015, G__26016, G__26017);
        }()));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.cljs$core$IIterable$ = true;
cljs.core.BitmapIndexedNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeIterator(self__.arr, 0, null, null);
};
cljs.core.BitmapIndexedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "bitmap", "bitmap", 501334601, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function cljs$core$__GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function cljs$core$pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__26030 = i + 1;
        var G__26031 = j + 2;
        var G__26032 = bitmap | 1 << i;
        i = G__26030;
        j = G__26031;
        bitmap = G__26032;
        continue;
      } else {
        var G__26033 = i + 1;
        var G__26034 = j;
        var G__26035 = bitmap;
        i = G__26033;
        j = G__26034;
        bitmap = G__26035;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNodeIterator = function(arr, i, next_iter) {
  this.arr = arr;
  this.i = i;
  this.next_iter = next_iter;
};
cljs.core.ArrayNodeIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  var len = self__.arr.length;
  while (true) {
    if (!(cljs.core.some_QMARK_(self__.next_iter) && self__.next_iter.hasNext())) {
      if (self__.i < len) {
        var node = self__.arr[self__.i];
        self__.i = self__.i + 1;
        if (cljs.core.some_QMARK_(node)) {
          self__.next_iter = cljs.core._iterator(node);
        } else {
        }
        continue;
      } else {
        return false;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.ArrayNodeIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (this$.hasNext()) {
    return self__.next_iter.next();
  } else {
    throw new Error("No such element");
  }
};
cljs.core.ArrayNodeIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayNodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayNodeIterator.cljs$lang$type = true;
cljs.core.ArrayNodeIterator.cljs$lang$ctorStr = "cljs.core/ArrayNodeIterator";
cljs.core.ArrayNodeIterator.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/ArrayNodeIterator");
};
cljs.core.__GT_ArrayNodeIterator = function cljs$core$__GT_ArrayNodeIterator(arr, i, next_iter) {
  return new cljs.core.ArrayNodeIterator(arr, i, next_iter);
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone(self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_array_node_seq.call(null, self__.arr);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_(init__$2)) {
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
        } else {
          var G__26036 = i + 1;
          var G__26037 = init__$2;
          i = G__26036;
          init__$1 = G__26037;
          continue;
        }
      } else {
        var G__26038 = i + 1;
        var G__26039 = init__$1;
        i = G__26038;
        init__$1 = G__26039;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.prototype.cljs$core$IIterable$ = true;
cljs.core.ArrayNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeIterator(self__.arr, 0, null);
};
cljs.core.ArrayNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function cljs$core$__GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function cljs$core$hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test(key, arr[i])) {
        return i;
      } else {
        var G__26040 = i + 2;
        i = G__26040;
        continue;
      }
    } else {
      return -1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx + 1, val));
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair(self__.arr, cljs.core.quot(idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.prototype.cljs$core$IIterable$ = true;
cljs.core.HashCollisionNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeIterator(self__.arr, 0, null, null);
};
cljs.core.HashCollisionNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "collision-hash", "collision-hash", -35831342, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function cljs$core$__GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function cljs$core$create_node() {
  var args26041 = [];
  var len__5565__auto___26044 = arguments.length;
  var i__5566__auto___26045 = 0;
  while (true) {
    if (i__5566__auto___26045 < len__5565__auto___26044) {
      args26041.push(arguments[i__5566__auto___26045]);
      var G__26046 = i__5566__auto___26045 + 1;
      i__5566__auto___26045 = G__26046;
      continue;
    } else {
    }
    break;
  }
  var G__26043 = args26041.length;
  switch(G__26043) {
    case 6:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26041.length)].join(""));;
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 = function(shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$lang$maxFixedArity = 7;
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    var G__26048 = self__.nodes;
    var G__26049 = self__.i + 2;
    var G__26050 = null;
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__26048, G__26049, G__26050) : cljs.core.create_inode_seq.call(null, G__26048, G__26049, G__26050);
  } else {
    var G__26051 = self__.nodes;
    var G__26052 = self__.i;
    var G__26053 = cljs.core.next(self__.s);
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__26051, G__26052, G__26053) : cljs.core.create_inode_seq.call(null, G__26051, G__26052, G__26053);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.NodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), true], null))], null);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function cljs$core$__GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.create_inode_seq = function cljs$core$create_inode_seq() {
  var args26054 = [];
  var len__5565__auto___26057 = arguments.length;
  var i__5566__auto___26058 = 0;
  while (true) {
    if (i__5566__auto___26058 < len__5565__auto___26057) {
      args26054.push(arguments[i__5566__auto___26058]);
      var G__26059 = i__5566__auto___26058 + 1;
      i__5566__auto___26058 = G__26059;
      continue;
    } else {
    }
    break;
  }
  var G__26056 = args26054.length;
  switch(G__26056) {
    case 1:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 3:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26054.length)].join(""));;
  }
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 = function(nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        if (!(nodes[j] == null)) {
          return new cljs.core.NodeSeq(null, nodes, j, null, null);
        } else {
          var temp__4423__auto__ = nodes[j + 1];
          if (cljs.core.truth_(temp__4423__auto__)) {
            var node = temp__4423__auto__;
            var temp__4423__auto____$1 = node.inode_seq();
            if (cljs.core.truth_(temp__4423__auto____$1)) {
              var node_seq = temp__4423__auto____$1;
              return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
            } else {
              var G__26061 = j + 2;
              j = G__26061;
              continue;
            }
          } else {
            var G__26062 = j + 2;
            j = G__26062;
            continue;
          }
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.NodeSeq(null, nodes, i, s, null);
  }
};
cljs.core.create_inode_seq.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__26063 = null;
  var G__26064 = self__.nodes;
  var G__26065 = self__.i;
  var G__26066 = cljs.core.next(self__.s);
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__26063, G__26064, G__26065, G__26066) : cljs.core.create_array_node_seq.call(null, G__26063, G__26064, G__26065, G__26066);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ArrayNodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), true], null))], null);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function cljs$core$__GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.create_array_node_seq = function cljs$core$create_array_node_seq() {
  var args26067 = [];
  var len__5565__auto___26070 = arguments.length;
  var i__5566__auto___26071 = 0;
  while (true) {
    if (i__5566__auto___26071 < len__5565__auto___26070) {
      args26067.push(arguments[i__5566__auto___26071]);
      var G__26072 = i__5566__auto___26071 + 1;
      i__5566__auto___26071 = G__26072;
      continue;
    } else {
    }
    break;
  }
  var G__26069 = args26067.length;
  switch(G__26069) {
    case 1:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 4:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26067.length)].join(""));;
  }
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, nodes, 0, null);
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = function(meta, nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        var temp__4423__auto__ = nodes[j];
        if (cljs.core.truth_(temp__4423__auto__)) {
          var nj = temp__4423__auto__;
          var temp__4423__auto____$1 = nj.inode_seq();
          if (cljs.core.truth_(temp__4423__auto____$1)) {
            var ns = temp__4423__auto____$1;
            return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
          } else {
            var G__26074 = j + 1;
            j = G__26074;
            continue;
          }
        } else {
          var G__26075 = j + 1;
          j = G__26075;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
  }
};
cljs.core.create_array_node_seq.cljs$lang$maxFixedArity = 4;
cljs.core.HashMapIter = function(nil_val, root_iter, seen) {
  this.nil_val = nil_val;
  this.root_iter = root_iter;
  this.seen = seen;
};
cljs.core.HashMapIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.seen && self__.root_iter.hasNext();
};
cljs.core.HashMapIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!self__.seen) {
    self__.seen = true;
    return self__.nil_val;
  } else {
    return self__.root_iter.next();
  }
};
cljs.core.HashMapIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.HashMapIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.Symbol(null, "root-iter", "root-iter", 1974672108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "seen", "seen", 1121531738, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.HashMapIter.cljs$lang$type = true;
cljs.core.HashMapIter.cljs$lang$ctorStr = "cljs.core/HashMapIter";
cljs.core.HashMapIter.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/HashMapIter");
};
cljs.core.__GT_HashMapIter = function cljs$core$__GT_HashMapIter(nil_val, root_iter, seen) {
  return new cljs.core.HashMapIter(nil_val, root_iter, seen);
};
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__26077 = cljs.core.seq(coll);
  var chunk__26078 = null;
  var count__26079 = 0;
  var i__26080 = 0;
  while (true) {
    if (i__26080 < count__26079) {
      var vec__26081 = chunk__26078.cljs$core$IIndexed$_nth$arity$2(null, i__26080);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26081, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26081, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__26085 = seq__26077;
      var G__26086 = chunk__26078;
      var G__26087 = count__26079;
      var G__26088 = i__26080 + 1;
      seq__26077 = G__26085;
      chunk__26078 = G__26086;
      count__26079 = G__26087;
      i__26080 = G__26088;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__26077);
      if (temp__4425__auto__) {
        var seq__26077__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__26077__$1)) {
          var c__5310__auto__ = cljs.core.chunk_first(seq__26077__$1);
          var G__26089 = cljs.core.chunk_rest(seq__26077__$1);
          var G__26090 = c__5310__auto__;
          var G__26091 = cljs.core.count(c__5310__auto__);
          var G__26092 = 0;
          seq__26077 = G__26089;
          chunk__26078 = G__26090;
          count__26079 = G__26091;
          i__26080 = G__26092;
          continue;
        } else {
          var vec__26082 = cljs.core.first(seq__26077__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26082, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26082, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__26093 = cljs.core.next(seq__26077__$1);
          var G__26094 = null;
          var G__26095 = 0;
          var G__26096 = 0;
          seq__26077 = G__26093;
          chunk__26078 = G__26094;
          count__26079 = G__26095;
          i__26080 = G__26096;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(init, null, self__.nil_val) : f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$1) : cljs.core.deref.call(null, init__$1);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var root_iter = self__.root ? cljs.core._iterator(self__.root) : cljs.core.nil_iter;
  if (self__.has_nil_QMARK_) {
    return new cljs.core.HashMapIter(self__.nil_val, root_iter, false);
  } else {
    return root_iter;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap({}, self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash(k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return !(self__.root.inode_lookup(0, cljs.core.hash(k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__26097 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__26098 = cljs.core.next(es);
          ret = G__26097;
          es = G__26098;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__26099 = null;
  var G__26099__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__26099__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__26099 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__26099__2.call(this, self__, k);
      case 3:
        return G__26099__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__26099.cljs$core$IFn$_invoke$arity$2 = G__26099__2;
  G__26099.cljs$core$IFn$_invoke$arity$3 = G__26099__3;
  return G__26099;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args26076) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args26076)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", 
  "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function cljs$core$__GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var len = arr__$1.length;
  var i = 0;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__26100 = i + 2;
      var G__26101 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
      i = G__26100;
      ret = G__26101;
      continue;
    } else {
      return cljs.core._persistent_BANG_(ret);
    }
    break;
  }
};
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__26102 = i + 1;
      var G__26103 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, ks[i], vs[i]);
      i = G__26102;
      out = G__26103;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition0$ = 258;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 2048 || o.cljs$core$IMapEntry$ ? true : !o.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o)) {
      return tcoll.assoc_BANG_(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.key.call(null, o), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4423__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4423__auto__)) {
          var e = temp__4423__auto__;
          var G__26105 = cljs.core.next(es);
          var G__26106 = tcoll__$1.assoc_BANG_(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e));
          es = G__26105;
          tcoll__$1 = G__26106;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash(k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, 
  "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function cljs$core$__GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function cljs$core$tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__26107 = ascending_QMARK_ ? t.left : t.right;
      var G__26108 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1, t);
      t = G__26107;
      stack__$1 = G__26108;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count(cljs.core.next(coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek(self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "stack", "stack", 847125597, null), cljs.core.with_meta(new cljs.core.Symbol(null, "ascending?", "ascending?", -1938452653, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, 
  "cnt", "cnt", 1924510325, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function cljs$core$__GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.create_tree_map_seq = function cljs$core$create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function cljs$core$balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function cljs$core$balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function cljs$core$balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right(key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right(right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function cljs$core$balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left(key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left(left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function cljs$core$tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? cljs$core$tree_map_kv_reduce(node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$1) : cljs.core.deref.call(null, init__$1);
  } else {
    var init__$2 = function() {
      var G__26118 = init__$1;
      var G__26119 = node.key;
      var G__26120 = node.val;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26118, G__26119, G__26120) : f.call(null, G__26118, G__26119, G__26120);
    }();
    if (cljs.core.reduced_QMARK_(init__$2)) {
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
    } else {
      var init__$3 = !(node.right == null) ? cljs$core$tree_map_kv_reduce(node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_(init__$3)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$3) : cljs.core.deref.call(null, init__$3);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del(self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del(self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__26122 = null;
  var G__26122__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__26122__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__26122 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__26122__2.call(this, self__, k);
      case 3:
        return G__26122__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__26122.cljs$core$IFn$_invoke$arity$2 = G__26122__2;
  G__26122.cljs$core$IFn$_invoke$arity$3 = G__26122__3;
  return G__26122;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args26121) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args26121)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function cljs$core$__GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__26124 = null;
  var G__26124__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__26124__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__26124 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__26124__2.call(this, self__, k);
      case 3:
        return G__26124__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__26124.cljs$core$IFn$_invoke$arity$2 = G__26124__2;
  G__26124.cljs$core$IFn$_invoke$arity$3 = G__26124__3;
  return G__26124;
}();
cljs.core.RedNode.prototype.apply = function(self__, args26123) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args26123)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function cljs$core$__GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.tree_map_add = function cljs$core$tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = function() {
      var G__26137 = k;
      var G__26138 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__26137, G__26138) : comp.call(null, G__26137, G__26138);
    }();
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = cljs$core$tree_map_add(comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = cljs$core$tree_map_add(comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function cljs$core$tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = cljs$core$tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, cljs$core$tree_map_append(left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, cljs$core$tree_map_append(left, right.left), right.right, null);
        } else {
          var app = cljs$core$tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del(left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function cljs$core$tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = function() {
      var G__26157 = k;
      var G__26158 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__26157, G__26158) : comp.call(null, G__26157, G__26158);
    }();
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append(tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = cljs$core$tree_map_remove(comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del(tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = cljs$core$tree_map_remove(comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del(tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function cljs$core$tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(k, tk) : comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, cljs$core$tree_map_replace(comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, cljs$core$tree_map_replace(comp, tree.right, k, v));
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__26168 = cljs.core.seq(coll);
  var chunk__26169 = null;
  var count__26170 = 0;
  var i__26171 = 0;
  while (true) {
    if (i__26171 < count__26170) {
      var vec__26172 = chunk__26169.cljs$core$IIndexed$_nth$arity$2(null, i__26171);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26172, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26172, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__26178 = seq__26168;
      var G__26179 = chunk__26169;
      var G__26180 = count__26170;
      var G__26181 = i__26171 + 1;
      seq__26168 = G__26178;
      chunk__26169 = G__26179;
      count__26170 = G__26180;
      i__26171 = G__26181;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__26168);
      if (temp__4425__auto__) {
        var seq__26168__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__26168__$1)) {
          var c__5310__auto__ = cljs.core.chunk_first(seq__26168__$1);
          var G__26182 = cljs.core.chunk_rest(seq__26168__$1);
          var G__26183 = c__5310__auto__;
          var G__26184 = cljs.core.count(c__5310__auto__);
          var G__26185 = 0;
          seq__26168 = G__26182;
          chunk__26169 = G__26183;
          count__26170 = G__26184;
          i__26171 = G__26185;
          continue;
        } else {
          var vec__26173 = cljs.core.first(seq__26168__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26173, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26173, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__26186 = cljs.core.next(seq__26168__$1);
          var G__26187 = null;
          var G__26188 = 0;
          var G__26189 = 0;
          seq__26168 = G__26186;
          chunk__26169 = G__26187;
          count__26170 = G__26188;
          i__26171 = G__26189;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = function() {
        var G__26174 = k;
        var G__26175 = t.key;
        return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__26174, G__26175) : self__.comp.call(null, G__26174, G__26175);
      }();
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__26190 = t.left;
          t = G__26190;
          continue;
        } else {
          var G__26191 = t.right;
          t = G__26191;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce(self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove(self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add(self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace(self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__26192 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__26193 = cljs.core.next(es);
          ret = G__26192;
          es = G__26193;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__26194 = null;
  var G__26194__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__26194__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__26194 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__26194__2.call(this, self__, k);
      case 3:
        return G__26194__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__26194.cljs$core$IFn$_invoke$arity$2 = G__26194__2;
  G__26194.cljs$core$IFn$_invoke$arity$3 = G__26194__3;
  return G__26194;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args26167) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args26167)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = function() {
          var G__26176 = k;
          var G__26177 = t.key;
          return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__26176, G__26177) : self__.comp.call(null, G__26176, G__26177);
        }();
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__26195 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__26196 = t.left;
              stack = G__26195;
              t = G__26196;
              continue;
            } else {
              var G__26197 = stack;
              var G__26198 = t.right;
              stack = G__26197;
              t = G__26198;
              continue;
            }
          } else {
            if (c > 0) {
              var G__26199 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__26200 = t.right;
              stack = G__26199;
              t = G__26200;
              continue;
            } else {
              var G__26201 = stack;
              var G__26202 = t.left;
              stack = G__26201;
              t = G__26202;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(entry) : cljs.core.key.call(null, entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "comp", "comp", -1462482139, null), new cljs.core.Symbol(null, "tree", "tree", 1444219499, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function cljs$core$__GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.hash_map = function cljs$core$hash_map() {
  var args__5572__auto__ = [];
  var len__5565__auto___26204 = arguments.length;
  var i__5566__auto___26205 = 0;
  while (true) {
    if (i__5566__auto___26205 < len__5565__auto___26204) {
      args__5572__auto__.push(arguments[i__5566__auto___26205]);
      var G__26206 = i__5566__auto___26205 + 1;
      i__5566__auto___26205 = G__26206;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (in$) {
      var G__26207 = cljs.core.nnext(in$);
      var G__26208 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__26207;
      out = G__26208;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.hash_map.cljs$lang$maxFixedArity = 0;
cljs.core.hash_map.cljs$lang$applyTo = function(seq26203) {
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq26203));
};
cljs.core.array_map = function cljs$core$array_map() {
  var args__5572__auto__ = [];
  var len__5565__auto___26210 = arguments.length;
  var i__5566__auto___26211 = 0;
  while (true) {
    if (i__5566__auto___26211 < len__5565__auto___26210) {
      args__5572__auto__.push(arguments[i__5566__auto___26211]);
      var G__26212 = i__5566__auto___26211 + 1;
      i__5566__auto___26211 = G__26212;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var arr = keyvals instanceof cljs.core.IndexedSeq && keyvals.i === 0 ? keyvals.arr : cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(keyvals);
  return cljs.core.PersistentArrayMap.fromArray(arr, true, false);
};
cljs.core.array_map.cljs$lang$maxFixedArity = 0;
cljs.core.array_map.cljs$lang$applyTo = function(seq26209) {
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq26209));
};
cljs.core.obj_map = function cljs$core$obj_map() {
  var args__5572__auto__ = [];
  var len__5565__auto___26216 = arguments.length;
  var i__5566__auto___26217 = 0;
  while (true) {
    if (i__5566__auto___26217 < len__5565__auto___26216) {
      args__5572__auto__.push(arguments[i__5566__auto___26217]);
      var G__26218 = i__5566__auto___26217 + 1;
      i__5566__auto___26217 = G__26218;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var ks = [];
  var obj = {};
  var kvs = cljs.core.seq(keyvals);
  while (true) {
    if (kvs) {
      ks.push(cljs.core.first(kvs));
      obj[cljs.core.first(kvs)] = cljs.core.second(kvs);
      var G__26219 = cljs.core.nnext(kvs);
      kvs = G__26219;
      continue;
    } else {
      return cljs.core.ObjMap.fromObject(ks, obj);
    }
    break;
  }
};
cljs.core.obj_map.cljs$lang$maxFixedArity = 0;
cljs.core.obj_map.cljs$lang$applyTo = function(seq26213) {
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq26213));
};
cljs.core.sorted_map = function cljs$core$sorted_map() {
  var args__5572__auto__ = [];
  var len__5565__auto___26221 = arguments.length;
  var i__5566__auto___26222 = 0;
  while (true) {
    if (i__5566__auto___26222 < len__5565__auto___26221) {
      args__5572__auto__.push(arguments[i__5566__auto___26222]);
      var G__26223 = i__5566__auto___26222 + 1;
      i__5566__auto___26222 = G__26223;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.PersistentTreeMap.EMPTY;
  while (true) {
    if (in$) {
      var G__26224 = cljs.core.nnext(in$);
      var G__26225 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__26224;
      out = G__26225;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_map.cljs$lang$applyTo = function(seq26220) {
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq26220));
};
cljs.core.sorted_map_by = function cljs$core$sorted_map_by() {
  var args__5572__auto__ = [];
  var len__5565__auto___26228 = arguments.length;
  var i__5566__auto___26229 = 0;
  while (true) {
    if (i__5566__auto___26229 < len__5565__auto___26228) {
      args__5572__auto__.push(arguments[i__5566__auto___26229]);
      var G__26230 = i__5566__auto___26229 + 1;
      i__5566__auto___26229 = G__26230;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator), null, 0, null, 0);
  while (true) {
    if (in$) {
      var G__26231 = cljs.core.nnext(in$);
      var G__26232 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__26231;
      out = G__26232;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_map_by.cljs$lang$applyTo = function(seq26226) {
  var G__26227 = cljs.core.first(seq26226);
  var seq26226__$1 = cljs.core.next(seq26226);
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(G__26227, seq26226__$1);
};
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.KeySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function cljs$core$__GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.keys = function cljs$core$keys(hash_map) {
  var temp__4425__auto__ = cljs.core.seq(hash_map);
  if (temp__4425__auto__) {
    var mseq = temp__4425__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function cljs$core$key(map_entry) {
  return cljs.core._key(map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ValSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function cljs$core$__GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.vals = function cljs$core$vals(hash_map) {
  var temp__4425__auto__ = cljs.core.seq(hash_map);
  if (temp__4425__auto__) {
    var mseq = temp__4425__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function cljs$core$val(map_entry) {
  return cljs.core._val(map_entry);
};
cljs.core.merge = function cljs$core$merge() {
  var args__5572__auto__ = [];
  var len__5565__auto___26240 = arguments.length;
  var i__5566__auto___26241 = 0;
  while (true) {
    if (i__5566__auto___26241 < len__5565__auto___26240) {
      args__5572__auto__.push(arguments[i__5566__auto___26241]);
      var G__26242 = i__5566__auto___26241 + 1;
      i__5566__auto___26241 = G__26242;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic = function(maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(p1__26237_SHARP_, p2__26238_SHARP_) {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
        var or__4526__auto__ = p1__26237_SHARP_;
        if (cljs.core.truth_(or__4526__auto__)) {
          return or__4526__auto__;
        } else {
          return cljs.core.PersistentArrayMap.EMPTY;
        }
      }(), p2__26238_SHARP_);
    }, maps);
  } else {
    return null;
  }
};
cljs.core.merge.cljs$lang$maxFixedArity = 0;
cljs.core.merge.cljs$lang$applyTo = function(seq26239) {
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq26239));
};
cljs.core.merge_with = function cljs$core$merge_with() {
  var args__5572__auto__ = [];
  var len__5565__auto___26247 = arguments.length;
  var i__5566__auto___26248 = 0;
  while (true) {
    if (i__5566__auto___26248 < len__5565__auto___26247) {
      args__5572__auto__.push(arguments[i__5566__auto___26248]);
      var G__26249 = i__5566__auto___26248 + 1;
      i__5566__auto___26248 = G__26249;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic = function(f, maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    var merge_entry = function(m, e) {
      var k = cljs.core.first(e);
      var v = cljs.core.second(e);
      if (cljs.core.contains_QMARK_(m, k)) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
          var G__26245 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
          var G__26246 = v;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26245, G__26246) : f.call(null, G__26245, G__26246);
        }());
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
      }
    };
    var merge2 = function(merge_entry) {
      return function(m1, m2) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry, function() {
          var or__4526__auto__ = m1;
          if (cljs.core.truth_(or__4526__auto__)) {
            return or__4526__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), cljs.core.seq(m2));
      };
    }(merge_entry);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2, maps);
  } else {
    return null;
  }
};
cljs.core.merge_with.cljs$lang$maxFixedArity = 1;
cljs.core.merge_with.cljs$lang$applyTo = function(seq26243) {
  var G__26244 = cljs.core.first(seq26243);
  var seq26243__$1 = cljs.core.next(seq26243);
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(G__26244, seq26243__$1);
};
cljs.core.select_keys = function cljs$core$select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq(keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first(keys);
      var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__26250 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, key, entry) : ret;
      var G__26251 = cljs.core.next(keys);
      ret = G__26250;
      keys = G__26251;
      continue;
    } else {
      return cljs.core.with_meta(ret, cljs.core.meta(map));
    }
    break;
  }
};
cljs.core.HashSetIter = function(iter) {
  this.iter = iter;
};
cljs.core.HashSetIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.iter.hasNext();
};
cljs.core.HashSetIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (self__.iter.hasNext()) {
    return self__.iter.next().tail[0];
  } else {
    throw new Error("No such element");
  }
};
cljs.core.HashSetIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.HashSetIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "iter", "iter", -1346195486, null)], null);
};
cljs.core.HashSetIter.cljs$lang$type = true;
cljs.core.HashSetIter.cljs$lang$ctorStr = "cljs.core/HashSetIter";
cljs.core.HashSetIter.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/HashSetIter");
};
cljs.core.__GT_HashSetIter = function cljs$core$__GT_HashSetIter(iter) {
  return new cljs.core.HashSetIter(iter);
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__26254 = cljs.core.seq(coll);
  var chunk__26255 = null;
  var count__26256 = 0;
  var i__26257 = 0;
  while (true) {
    if (i__26257 < count__26256) {
      var vec__26258 = chunk__26255.cljs$core$IIndexed$_nth$arity$2(null, i__26257);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26258, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26258, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__26260 = seq__26254;
      var G__26261 = chunk__26255;
      var G__26262 = count__26256;
      var G__26263 = i__26257 + 1;
      seq__26254 = G__26260;
      chunk__26255 = G__26261;
      count__26256 = G__26262;
      i__26257 = G__26263;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__26254);
      if (temp__4425__auto__) {
        var seq__26254__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__26254__$1)) {
          var c__5310__auto__ = cljs.core.chunk_first(seq__26254__$1);
          var G__26264 = cljs.core.chunk_rest(seq__26254__$1);
          var G__26265 = c__5310__auto__;
          var G__26266 = cljs.core.count(c__5310__auto__);
          var G__26267 = 0;
          seq__26254 = G__26264;
          chunk__26255 = G__26265;
          count__26256 = G__26266;
          i__26257 = G__26267;
          continue;
        } else {
          var vec__26259 = cljs.core.first(seq__26254__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26259, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26259, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__26268 = cljs.core.next(seq__26254__$1);
          var G__26269 = null;
          var G__26270 = 0;
          var G__26271 = 0;
          seq__26254 = G__26268;
          chunk__26255 = G__26269;
          count__26256 = G__26270;
          i__26257 = G__26271;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_(self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.HashSetIter(cljs.core._iterator(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__26252_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__26252_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc(self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__26272 = null;
  var G__26272__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__26272__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__26272 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__26272__2.call(this, self__, k);
      case 3:
        return G__26272__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__26272.cljs$core$IFn$_invoke$arity$2 = G__26272__2;
  G__26272.cljs$core$IFn$_invoke$arity$3 = G__26272__3;
  return G__26272;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args26253) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args26253)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "hash-map", "hash-map", -439030950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function cljs$core$__GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone(items);
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__26273 = i + 1;
        var G__26274 = cljs.core._assoc_BANG_(out, items[i], null);
        i = G__26273;
        out = G__26274;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__26275 = i + 1;
        var G__26276 = cljs.core._conj_BANG_(out, items[i]);
        i = G__26275;
        out = G__26276;
        continue;
      } else {
        return cljs.core._persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition1$ = 136;
  this.cljs$lang$protocol_mask$partition0$ = 259;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(self__.transient_map), null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count(self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__26278 = null;
  var G__26278__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__26278__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__26278 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__26278__2.call(this, self__, k);
      case 3:
        return G__26278__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__26278.cljs$core$IFn$_invoke$arity$2 = G__26278__2;
  G__26278.cljs$core$IFn$_invoke$arity$3 = G__26278__3;
  return G__26278;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args26277) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args26277)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "transient-map", "transient-map", 351764893, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function cljs$core$__GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__26281 = cljs.core.seq(coll);
  var chunk__26282 = null;
  var count__26283 = 0;
  var i__26284 = 0;
  while (true) {
    if (i__26284 < count__26283) {
      var vec__26285 = chunk__26282.cljs$core$IIndexed$_nth$arity$2(null, i__26284);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26285, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26285, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__26287 = seq__26281;
      var G__26288 = chunk__26282;
      var G__26289 = count__26283;
      var G__26290 = i__26284 + 1;
      seq__26281 = G__26287;
      chunk__26282 = G__26288;
      count__26283 = G__26289;
      i__26284 = G__26290;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__26281);
      if (temp__4425__auto__) {
        var seq__26281__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__26281__$1)) {
          var c__5310__auto__ = cljs.core.chunk_first(seq__26281__$1);
          var G__26291 = cljs.core.chunk_rest(seq__26281__$1);
          var G__26292 = c__5310__auto__;
          var G__26293 = cljs.core.count(c__5310__auto__);
          var G__26294 = 0;
          seq__26281 = G__26291;
          chunk__26282 = G__26292;
          count__26283 = G__26293;
          i__26284 = G__26294;
          continue;
        } else {
          var vec__26286 = cljs.core.first(seq__26281__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26286, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26286, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__26295 = cljs.core.next(seq__26281__$1);
          var G__26296 = null;
          var G__26297 = 0;
          var G__26298 = 0;
          seq__26281 = G__26295;
          chunk__26282 = G__26296;
          count__26283 = G__26297;
          i__26284 = G__26298;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count(self__.tree_map) > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__26279_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__26279_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core._empty(self__.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__26299 = null;
  var G__26299__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__26299__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__26299 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__26299__2.call(this, self__, k);
      case 3:
        return G__26299__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__26299.cljs$core$IFn$_invoke$arity$2 = G__26299__2;
  G__26299.cljs$core$IFn$_invoke$arity$3 = G__26299__3;
  return G__26299;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args26280) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args26280)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator(self__.tree_map);
};
cljs.core.PersistentTreeSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "tree-map", "tree-map", 1373073049, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function cljs$core$__GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.set_from_indexed_seq = function cljs$core$set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__5404__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__5404__auto__.length) {
        var G__26300 = i + 1;
        var G__26301 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, arr[i]);
        i = G__26300;
        res = G__26301;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function cljs$core$set(coll) {
  var in$ = cljs.core.seq(coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq(in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__26302 = cljs.core.next(in$__$1);
          var G__26303 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, in$__$1.cljs$core$ISeq$_first$arity$1(null));
          in$__$1 = G__26302;
          out = G__26303;
          continue;
        } else {
          return cljs.core.persistent_BANG_(out);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function cljs$core$hash_set() {
  var args26304 = [];
  var len__5565__auto___26308 = arguments.length;
  var i__5566__auto___26309 = 0;
  while (true) {
    if (i__5566__auto___26309 < len__5565__auto___26308) {
      args26304.push(arguments[i__5566__auto___26309]);
      var G__26310 = i__5566__auto___26309 + 1;
      i__5566__auto___26309 = G__26310;
      continue;
    } else {
    }
    break;
  }
  var G__26307 = args26304.length;
  switch(G__26307) {
    case 0:
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args26304.slice(0), 0);
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(argseq__5584__auto__);
  }
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentHashSet.EMPTY;
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.set(keys);
};
cljs.core.hash_set.cljs$lang$applyTo = function(seq26305) {
  return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq26305));
};
cljs.core.hash_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set = function cljs$core$sorted_set() {
  var args__5572__auto__ = [];
  var len__5565__auto___26313 = arguments.length;
  var i__5566__auto___26314 = 0;
  while (true) {
    if (i__5566__auto___26314 < len__5565__auto___26313) {
      args__5572__auto__.push(arguments[i__5566__auto___26314]);
      var G__26315 = i__5566__auto___26314 + 1;
      i__5566__auto___26314 = G__26315;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
};
cljs.core.sorted_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set.cljs$lang$applyTo = function(seq26312) {
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq26312));
};
cljs.core.sorted_set_by = function cljs$core$sorted_set_by() {
  var args__5572__auto__ = [];
  var len__5565__auto___26318 = arguments.length;
  var i__5566__auto___26319 = 0;
  while (true) {
    if (i__5566__auto___26319 < len__5565__auto___26318) {
      args__5572__auto__.push(arguments[i__5566__auto___26319]);
      var G__26320 = i__5566__auto___26319 + 1;
      i__5566__auto___26319 = G__26320;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(comparator), 0), keys);
};
cljs.core.sorted_set_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_set_by.cljs$lang$applyTo = function(seq26316) {
  var G__26317 = cljs.core.first(seq26316);
  var seq26316__$1 = cljs.core.next(seq26316);
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(G__26317, seq26316__$1);
};
cljs.core.replace = function cljs$core$replace() {
  var args26323 = [];
  var len__5565__auto___26326 = arguments.length;
  var i__5566__auto___26327 = 0;
  while (true) {
    if (i__5566__auto___26327 < len__5565__auto___26326) {
      args26323.push(arguments[i__5566__auto___26327]);
      var G__26328 = i__5566__auto___26327 + 1;
      i__5566__auto___26327 = G__26328;
      continue;
    } else {
    }
    break;
  }
  var G__26325 = args26323.length;
  switch(G__26325) {
    case 1:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26323.length)].join(""));;
  }
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$1 = function(smap) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p1__26321_SHARP_) {
    var temp__4423__auto__ = cljs.core.find(smap, p1__26321_SHARP_);
    if (cljs.core.truth_(temp__4423__auto__)) {
      var e = temp__4423__auto__;
      return cljs.core.val(e);
    } else {
      return p1__26321_SHARP_;
    }
  });
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$2 = function(smap, coll) {
  if (cljs.core.vector_QMARK_(coll)) {
    var n = cljs.core.count(coll);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(n) {
      return function(v, i) {
        var temp__4423__auto__ = cljs.core.find(smap, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, i));
        if (cljs.core.truth_(temp__4423__auto__)) {
          var e = temp__4423__auto__;
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v, i, cljs.core.second(e));
        } else {
          return v;
        }
      };
    }(n), coll, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.iterate(cljs.core.inc, 0)));
  } else {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__26322_SHARP_) {
      var temp__4423__auto__ = cljs.core.find(smap, p1__26322_SHARP_);
      if (cljs.core.truth_(temp__4423__auto__)) {
        var e = temp__4423__auto__;
        return cljs.core.second(e);
      } else {
        return p1__26322_SHARP_;
      }
    }, coll);
  }
};
cljs.core.replace.cljs$lang$maxFixedArity = 2;
cljs.core.distinct = function cljs$core$distinct() {
  var args26330 = [];
  var len__5565__auto___26339 = arguments.length;
  var i__5566__auto___26340 = 0;
  while (true) {
    if (i__5566__auto___26340 < len__5565__auto___26339) {
      args26330.push(arguments[i__5566__auto___26340]);
      var G__26341 = i__5566__auto___26340 + 1;
      i__5566__auto___26340 = G__26341;
      continue;
    } else {
    }
    break;
  }
  var G__26332 = args26330.length;
  switch(G__26332) {
    case 0:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26330.length)].join(""));;
  }
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
    return function(seen) {
      return function() {
        var G__26343 = null;
        var G__26343__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__26343__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__26343__2 = function(result, input) {
          if (cljs.core.contains_QMARK_(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(seen) : cljs.core.deref.call(null, seen), input)) {
            return result;
          } else {
            cljs.core._vreset_BANG_(seen, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core._deref(seen), input));
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__26343 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__26343__0.call(this);
            case 1:
              return G__26343__1.call(this, result);
            case 2:
              return G__26343__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__26343.cljs$core$IFn$_invoke$arity$0 = G__26343__0;
        G__26343.cljs$core$IFn$_invoke$arity$1 = G__26343__1;
        G__26343.cljs$core$IFn$_invoke$arity$2 = G__26343__2;
        return G__26343;
      }();
    }(seen);
  };
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var step = function cljs$core$step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__26337, seen__$1) {
        while (true) {
          var vec__26338 = p__26337;
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26338, 0, null);
          var xs__$1 = vec__26338;
          var temp__4425__auto__ = cljs.core.seq(xs__$1);
          if (temp__4425__auto__) {
            var s = temp__4425__auto__;
            if (cljs.core.contains_QMARK_(seen__$1, f)) {
              var G__26344 = cljs.core.rest(s);
              var G__26345 = seen__$1;
              p__26337 = G__26344;
              seen__$1 = G__26345;
              continue;
            } else {
              return cljs.core.cons(f, cljs$core$step(cljs.core.rest(s), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step(coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.distinct.cljs$lang$maxFixedArity = 1;
cljs.core.butlast = function cljs$core$butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next(s__$1)) {
      var G__26346 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, cljs.core.first(s__$1));
      var G__26347 = cljs.core.next(s__$1);
      ret = G__26346;
      s__$1 = G__26347;
      continue;
    } else {
      return cljs.core.seq(ret);
    }
    break;
  }
};
cljs.core.name = function cljs$core$name(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 4096 || x.cljs$core$INamed$ ? true : false : false) {
    return x.cljs$core$INamed$_name$arity$1(null);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function cljs$core$zipmap(keys, vals) {
  var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq(keys);
  var vs = cljs.core.seq(vals);
  while (true) {
    if (ks && vs) {
      var G__26350 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map, cljs.core.first(ks), cljs.core.first(vs));
      var G__26351 = cljs.core.next(ks);
      var G__26352 = cljs.core.next(vs);
      map = G__26350;
      ks = G__26351;
      vs = G__26352;
      continue;
    } else {
      return cljs.core.persistent_BANG_(map);
    }
    break;
  }
};
cljs.core.max_key = function cljs$core$max_key() {
  var args26355 = [];
  var len__5565__auto___26362 = arguments.length;
  var i__5566__auto___26363 = 0;
  while (true) {
    if (i__5566__auto___26363 < len__5565__auto___26362) {
      args26355.push(arguments[i__5566__auto___26363]);
      var G__26364 = i__5566__auto___26363 + 1;
      i__5566__auto___26363 = G__26364;
      continue;
    } else {
    }
    break;
  }
  var G__26361 = args26355.length;
  switch(G__26361) {
    case 2:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args26355.slice(3), 0);
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5584__auto__);
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) > (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
    return x;
  } else {
    return y;
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__26353_SHARP_, p2__26354_SHARP_) {
    return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, p1__26353_SHARP_, p2__26354_SHARP_);
  }, cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.max_key.cljs$lang$applyTo = function(seq26356) {
  var G__26357 = cljs.core.first(seq26356);
  var seq26356__$1 = cljs.core.next(seq26356);
  var G__26358 = cljs.core.first(seq26356__$1);
  var seq26356__$2 = cljs.core.next(seq26356__$1);
  var G__26359 = cljs.core.first(seq26356__$2);
  var seq26356__$3 = cljs.core.next(seq26356__$2);
  return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(G__26357, G__26358, G__26359, seq26356__$3);
};
cljs.core.max_key.cljs$lang$maxFixedArity = 3;
cljs.core.min_key = function cljs$core$min_key() {
  var args26368 = [];
  var len__5565__auto___26375 = arguments.length;
  var i__5566__auto___26376 = 0;
  while (true) {
    if (i__5566__auto___26376 < len__5565__auto___26375) {
      args26368.push(arguments[i__5566__auto___26376]);
      var G__26377 = i__5566__auto___26376 + 1;
      i__5566__auto___26376 = G__26377;
      continue;
    } else {
    }
    break;
  }
  var G__26374 = args26368.length;
  switch(G__26374) {
    case 2:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args26368.slice(3), 0);
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5584__auto__);
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) < (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
    return x;
  } else {
    return y;
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__26366_SHARP_, p2__26367_SHARP_) {
    return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, p1__26366_SHARP_, p2__26367_SHARP_);
  }, cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.min_key.cljs$lang$applyTo = function(seq26369) {
  var G__26370 = cljs.core.first(seq26369);
  var seq26369__$1 = cljs.core.next(seq26369);
  var G__26371 = cljs.core.first(seq26369__$1);
  var seq26369__$2 = cljs.core.next(seq26369__$1);
  var G__26372 = cljs.core.first(seq26369__$2);
  var seq26369__$3 = cljs.core.next(seq26369__$2);
  return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(G__26370, G__26371, G__26372, seq26369__$3);
};
cljs.core.min_key.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function cljs$core$__GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function cljs$core$array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function cljs$core$partition_all() {
  var args26379 = [];
  var len__5565__auto___26382 = arguments.length;
  var i__5566__auto___26383 = 0;
  while (true) {
    if (i__5566__auto___26383 < len__5565__auto___26382) {
      args26379.push(arguments[i__5566__auto___26383]);
      var G__26384 = i__5566__auto___26383 + 1;
      i__5566__auto___26383 = G__26384;
      continue;
    } else {
    }
    break;
  }
  var G__26381 = args26379.length;
  switch(G__26381) {
    case 1:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26379.length)].join(""));;
  }
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var a = cljs.core.array_list();
    return function(a) {
      return function() {
        var G__26386 = null;
        var G__26386__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__26386__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v));
          }();
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null, result__$1);
        };
        var G__26386__2 = function(result, input) {
          a.add(input);
          if (n === a.size()) {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
          } else {
            return result;
          }
        };
        G__26386 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__26386__0.call(this);
            case 1:
              return G__26386__1.call(this, result);
            case 2:
              return G__26386__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__26386.cljs$core$IFn$_invoke$arity$0 = G__26386__0;
        G__26386.cljs$core$IFn$_invoke$arity$1 = G__26386__1;
        G__26386.cljs$core$IFn$_invoke$arity$2 = G__26386__2;
        return G__26386;
      }();
    }(a);
  };
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s), cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_all.cljs$lang$maxFixedArity = 3;
cljs.core.take_while = function cljs$core$take_while() {
  var args26387 = [];
  var len__5565__auto___26391 = arguments.length;
  var i__5566__auto___26392 = 0;
  while (true) {
    if (i__5566__auto___26392 < len__5565__auto___26391) {
      args26387.push(arguments[i__5566__auto___26392]);
      var G__26393 = i__5566__auto___26392 + 1;
      i__5566__auto___26392 = G__26393;
      continue;
    } else {
    }
    break;
  }
  var G__26389 = args26387.length;
  switch(G__26389) {
    case 1:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26387.length)].join(""));;
  }
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__26395 = null;
      var G__26395__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__26395__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__26395__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return cljs.core.reduced(result);
        }
      };
      G__26395 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__26395__0.call(this);
          case 1:
            return G__26395__1.call(this, result);
          case 2:
            return G__26395__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__26395.cljs$core$IFn$_invoke$arity$0 = G__26395__0;
      G__26395.cljs$core$IFn$_invoke$arity$1 = G__26395__1;
      G__26395.cljs$core$IFn$_invoke$arity$2 = G__26395__2;
      return G__26395;
    }();
  };
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      if (cljs.core.truth_(function() {
        var G__26390 = cljs.core.first(s);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__26390) : pred.call(null, G__26390);
      }())) {
        return cljs.core.cons(cljs.core.first(s), cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_while.cljs$lang$maxFixedArity = 2;
cljs.core.mk_bound_fn = function cljs$core$mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator(sc);
    var G__26404 = function() {
      var G__26406 = cljs.core._entry_key(sc, e);
      var G__26407 = key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__26406, G__26407) : comp.call(null, G__26406, G__26407);
    }();
    var G__26405 = 0;
    return test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__26404, G__26405) : test.call(null, G__26404, G__26405);
  };
};
cljs.core.subseq = function cljs$core$subseq() {
  var args26408 = [];
  var len__5565__auto___26413 = arguments.length;
  var i__5566__auto___26414 = 0;
  while (true) {
    if (i__5566__auto___26414 < len__5565__auto___26413) {
      args26408.push(arguments[i__5566__auto___26414]);
      var G__26415 = i__5566__auto___26414 + 1;
      i__5566__auto___26414 = G__26415;
      continue;
    } else {
    }
    break;
  }
  var G__26410 = args26408.length;
  switch(G__26410) {
    case 3:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26408.length)].join(""));;
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
    var temp__4425__auto__ = cljs.core._sorted_seq_from(sc, key, true);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var vec__26411 = temp__4425__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26411, 0, null);
      var s = vec__26411;
      if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, true));
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__4425__auto__ = cljs.core._sorted_seq_from(sc, start_key, true);
  if (cljs.core.truth_(temp__4425__auto__)) {
    var vec__26412 = temp__4425__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26412, 0, null);
    var s = vec__26412;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, start_test, start_key).call(null, e)) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.subseq.cljs$lang$maxFixedArity = 5;
cljs.core.rsubseq = function cljs$core$rsubseq() {
  var args26417 = [];
  var len__5565__auto___26422 = arguments.length;
  var i__5566__auto___26423 = 0;
  while (true) {
    if (i__5566__auto___26423 < len__5565__auto___26422) {
      args26417.push(arguments[i__5566__auto___26423]);
      var G__26424 = i__5566__auto___26423 + 1;
      i__5566__auto___26423 = G__26424;
      continue;
    } else {
    }
    break;
  }
  var G__26419 = args26417.length;
  switch(G__26419) {
    case 3:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26417.length)].join(""));;
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
    var temp__4425__auto__ = cljs.core._sorted_seq_from(sc, key, false);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var vec__26420 = temp__4425__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26420, 0, null);
      var s = vec__26420;
      if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, false));
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__4425__auto__ = cljs.core._sorted_seq_from(sc, end_key, false);
  if (cljs.core.truth_(temp__4425__auto__)) {
    var vec__26421 = temp__4425__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26421, 0, null);
    var s = vec__26421;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, end_test, end_key).call(null, e)) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.rsubseq.cljs$lang$maxFixedArity = 5;
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null)], null);
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function cljs$core$__GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$ = true;
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not(cljs.core._seq(rng__$1))) {
    return 0;
  } else {
    var G__26426 = (self__.end - self__.start) / self__.step;
    return Math.ceil(G__26426);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential(rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, i) : f.call(null, ret, i);
      if (cljs.core.reduced_QMARK_(ret__$1)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(ret__$1) : cljs.core.deref.call(null, ret__$1);
      } else {
        var G__26427 = i + self__.step;
        var G__26428 = ret__$1;
        i = G__26427;
        ret = G__26428;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq(rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq(rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons(o, rng__$1);
};
cljs.core.Range.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function cljs$core$__GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.range = function cljs$core$range() {
  var args26429 = [];
  var len__5565__auto___26432 = arguments.length;
  var i__5566__auto___26433 = 0;
  while (true) {
    if (i__5566__auto___26433 < len__5565__auto___26432) {
      args26429.push(arguments[i__5566__auto___26433]);
      var G__26434 = i__5566__auto___26433 + 1;
      i__5566__auto___26433 = G__26434;
      continue;
    } else {
    }
    break;
  }
  var G__26431 = args26429.length;
  switch(G__26431) {
    case 0:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26429.length)].join(""));;
  }
};
cljs.core.range.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$1 = function(end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$2 = function(start, end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(start, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$3 = function(start, end, step) {
  return new cljs.core.Range(null, start, end, step, null);
};
cljs.core.range.cljs$lang$maxFixedArity = 3;
cljs.core.take_nth = function cljs$core$take_nth() {
  var args26436 = [];
  var len__5565__auto___26441 = arguments.length;
  var i__5566__auto___26442 = 0;
  while (true) {
    if (i__5566__auto___26442 < len__5565__auto___26441) {
      args26436.push(arguments[i__5566__auto___26442]);
      var G__26443 = i__5566__auto___26442 + 1;
      i__5566__auto___26442 = G__26443;
      continue;
    } else {
    }
    break;
  }
  var G__26438 = args26436.length;
  switch(G__26438) {
    case 1:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26436.length)].join(""));;
  }
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__26439 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__26439) : cljs.core.pr_str.call(null, G__26439);
    }())].join(""));
  }
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__26445 = null;
        var G__26445__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__26445__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__26445__2 = function(result, input) {
          var i = cljs.core._vreset_BANG_(ia, cljs.core._deref(ia) + 1);
          if (cljs.core.rem(i, n) === 0) {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          } else {
            return result;
          }
        };
        G__26445 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__26445__0.call(this);
            case 1:
              return G__26445__1.call(this, result);
            case 2:
              return G__26445__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__26445.cljs$core$IFn$_invoke$arity$0 = G__26445__0;
        G__26445.cljs$core$IFn$_invoke$arity$1 = G__26445__1;
        G__26445.cljs$core$IFn$_invoke$arity$2 = G__26445__2;
        return G__26445;
      }();
    }(ia);
  };
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__26440 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__26440) : cljs.core.pr_str.call(null, G__26440);
    }())].join(""));
  }
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      return cljs.core.cons(cljs.core.first(s), cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(n, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_nth.cljs$lang$maxFixedArity = 2;
cljs.core.split_with = function cljs$core$split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, coll), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred, coll)], null);
};
cljs.core.partition_by = function cljs$core$partition_by() {
  var args26447 = [];
  var len__5565__auto___26450 = arguments.length;
  var i__5566__auto___26451 = 0;
  while (true) {
    if (i__5566__auto___26451 < len__5565__auto___26450) {
      args26447.push(arguments[i__5566__auto___26451]);
      var G__26452 = i__5566__auto___26451 + 1;
      i__5566__auto___26451 = G__26452;
      continue;
    } else {
    }
    break;
  }
  var G__26449 = args26447.length;
  switch(G__26449) {
    case 1:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26447.length)].join(""));;
  }
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var a = cljs.core.array_list();
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(a, pa) {
      return function() {
        var G__26454 = null;
        var G__26454__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__26454__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v));
          }();
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null, result__$1);
        };
        var G__26454__2 = function(result, input) {
          var pval = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(pa) : cljs.core.deref.call(null, pa);
          var val = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
          cljs.core.vreset_BANG_(pa, val);
          if (cljs.core.keyword_identical_QMARK_(pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val, pval)) {
            a.add(input);
            return result;
          } else {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
            if (cljs.core.reduced_QMARK_(ret)) {
            } else {
              a.add(input);
            }
            return ret;
          }
        };
        G__26454 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__26454__0.call(this);
            case 1:
              return G__26454__1.call(this, result);
            case 2:
              return G__26454__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__26454.cljs$core$IFn$_invoke$arity$0 = G__26454__0;
        G__26454.cljs$core$IFn$_invoke$arity$1 = G__26454__1;
        G__26454.cljs$core$IFn$_invoke$arity$2 = G__26454__2;
        return G__26454;
      }();
    }(a, pa);
  };
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      var fst = cljs.core.first(s);
      var fv = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(fst) : f.call(null, fst);
      var run = cljs.core.cons(fst, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(fst, fv, s, temp__4425__auto__) {
        return function(p1__26446_SHARP_) {
          return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(p1__26446_SHARP_) : f.call(null, p1__26446_SHARP_));
        };
      }(fst, fv, s, temp__4425__auto__), cljs.core.next(s)));
      return cljs.core.cons(run, cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(f, cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run), s))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_by.cljs$lang$maxFixedArity = 2;
cljs.core.frequencies = function cljs$core$frequencies(coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(counts, x) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts, x, cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts, x, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function cljs$core$reductions() {
  var args26455 = [];
  var len__5565__auto___26460 = arguments.length;
  var i__5566__auto___26461 = 0;
  while (true) {
    if (i__5566__auto___26461 < len__5565__auto___26460) {
      args26455.push(arguments[i__5566__auto___26461]);
      var G__26462 = i__5566__auto___26461 + 1;
      i__5566__auto___26461 = G__26462;
      continue;
    } else {
    }
    break;
  }
  var G__26457 = args26455.length;
  switch(G__26457) {
    case 2:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26455.length)].join(""));;
  }
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4423__auto__ = cljs.core.seq(coll);
    if (temp__4423__auto__) {
      var s = temp__4423__auto__;
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.rest(s));
    } else {
      return cljs.core._conj(cljs.core.List.EMPTY, f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
    }
  }, null, null);
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$3 = function(f, init, coll) {
  return cljs.core.cons(init, new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, function() {
        var G__26458 = init;
        var G__26459 = cljs.core.first(s);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26458, G__26459) : f.call(null, G__26458, G__26459);
      }(), cljs.core.rest(s));
    } else {
      return null;
    }
  }, null, null));
};
cljs.core.reductions.cljs$lang$maxFixedArity = 3;
cljs.core.juxt = function cljs$core$juxt() {
  var args26474 = [];
  var len__5565__auto___26481 = arguments.length;
  var i__5566__auto___26482 = 0;
  while (true) {
    if (i__5566__auto___26482 < len__5565__auto___26481) {
      args26474.push(arguments[i__5566__auto___26482]);
      var G__26483 = i__5566__auto___26482 + 1;
      i__5566__auto___26482 = G__26483;
      continue;
    } else {
    }
    break;
  }
  var G__26480 = args26474.length;
  switch(G__26480) {
    case 1:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args26474.slice(3), 0);
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5584__auto__);
  }
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function() {
    var G__26485 = null;
    var G__26485__0 = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null)], null);
    };
    var G__26485__1 = function(x) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x)], null);
    };
    var G__26485__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y)], null);
    };
    var G__26485__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z)], null);
    };
    var G__26485__4 = function() {
      var G__26486__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args)], null);
      };
      var G__26486 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__26487__i = 0, G__26487__a = new Array(arguments.length - 3);
          while (G__26487__i < G__26487__a.length) {
            G__26487__a[G__26487__i] = arguments[G__26487__i + 3];
            ++G__26487__i;
          }
          args = new cljs.core.IndexedSeq(G__26487__a, 0);
        }
        return G__26486__delegate.call(this, x, y, z, args);
      };
      G__26486.cljs$lang$maxFixedArity = 3;
      G__26486.cljs$lang$applyTo = function(arglist__26488) {
        var x = cljs.core.first(arglist__26488);
        arglist__26488 = cljs.core.next(arglist__26488);
        var y = cljs.core.first(arglist__26488);
        arglist__26488 = cljs.core.next(arglist__26488);
        var z = cljs.core.first(arglist__26488);
        var args = cljs.core.rest(arglist__26488);
        return G__26486__delegate(x, y, z, args);
      };
      G__26486.cljs$core$IFn$_invoke$arity$variadic = G__26486__delegate;
      return G__26486;
    }();
    G__26485 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__26485__0.call(this);
        case 1:
          return G__26485__1.call(this, x);
        case 2:
          return G__26485__2.call(this, x, y);
        case 3:
          return G__26485__3.call(this, x, y, z);
        default:
          var G__26489 = null;
          if (arguments.length > 3) {
            var G__26490__i = 0, G__26490__a = new Array(arguments.length - 3);
            while (G__26490__i < G__26490__a.length) {
              G__26490__a[G__26490__i] = arguments[G__26490__i + 3];
              ++G__26490__i;
            }
            G__26489 = new cljs.core.IndexedSeq(G__26490__a, 0);
          }
          return G__26485__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__26489);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__26485.cljs$lang$maxFixedArity = 3;
    G__26485.cljs$lang$applyTo = G__26485__4.cljs$lang$applyTo;
    G__26485.cljs$core$IFn$_invoke$arity$0 = G__26485__0;
    G__26485.cljs$core$IFn$_invoke$arity$1 = G__26485__1;
    G__26485.cljs$core$IFn$_invoke$arity$2 = G__26485__2;
    G__26485.cljs$core$IFn$_invoke$arity$3 = G__26485__3;
    G__26485.cljs$core$IFn$_invoke$arity$variadic = G__26485__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__26485;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__26491 = null;
    var G__26491__0 = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null)], null);
    };
    var G__26491__1 = function(x) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x)], null);
    };
    var G__26491__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y)], null);
    };
    var G__26491__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z)], null);
    };
    var G__26491__4 = function() {
      var G__26492__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)], null);
      };
      var G__26492 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__26493__i = 0, G__26493__a = new Array(arguments.length - 3);
          while (G__26493__i < G__26493__a.length) {
            G__26493__a[G__26493__i] = arguments[G__26493__i + 3];
            ++G__26493__i;
          }
          args = new cljs.core.IndexedSeq(G__26493__a, 0);
        }
        return G__26492__delegate.call(this, x, y, z, args);
      };
      G__26492.cljs$lang$maxFixedArity = 3;
      G__26492.cljs$lang$applyTo = function(arglist__26494) {
        var x = cljs.core.first(arglist__26494);
        arglist__26494 = cljs.core.next(arglist__26494);
        var y = cljs.core.first(arglist__26494);
        arglist__26494 = cljs.core.next(arglist__26494);
        var z = cljs.core.first(arglist__26494);
        var args = cljs.core.rest(arglist__26494);
        return G__26492__delegate(x, y, z, args);
      };
      G__26492.cljs$core$IFn$_invoke$arity$variadic = G__26492__delegate;
      return G__26492;
    }();
    G__26491 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__26491__0.call(this);
        case 1:
          return G__26491__1.call(this, x);
        case 2:
          return G__26491__2.call(this, x, y);
        case 3:
          return G__26491__3.call(this, x, y, z);
        default:
          var G__26495 = null;
          if (arguments.length > 3) {
            var G__26496__i = 0, G__26496__a = new Array(arguments.length - 3);
            while (G__26496__i < G__26496__a.length) {
              G__26496__a[G__26496__i] = arguments[G__26496__i + 3];
              ++G__26496__i;
            }
            G__26495 = new cljs.core.IndexedSeq(G__26496__a, 0);
          }
          return G__26491__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__26495);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__26491.cljs$lang$maxFixedArity = 3;
    G__26491.cljs$lang$applyTo = G__26491__4.cljs$lang$applyTo;
    G__26491.cljs$core$IFn$_invoke$arity$0 = G__26491__0;
    G__26491.cljs$core$IFn$_invoke$arity$1 = G__26491__1;
    G__26491.cljs$core$IFn$_invoke$arity$2 = G__26491__2;
    G__26491.cljs$core$IFn$_invoke$arity$3 = G__26491__3;
    G__26491.cljs$core$IFn$_invoke$arity$variadic = G__26491__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__26491;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__26497 = null;
    var G__26497__0 = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null), h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null)], null);
    };
    var G__26497__1 = function(x) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x), h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x)], null);
    };
    var G__26497__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y), h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y)], null);
    };
    var G__26497__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z), h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z)], null);
    };
    var G__26497__4 = function() {
      var G__26498__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)], null);
      };
      var G__26498 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__26499__i = 0, G__26499__a = new Array(arguments.length - 3);
          while (G__26499__i < G__26499__a.length) {
            G__26499__a[G__26499__i] = arguments[G__26499__i + 3];
            ++G__26499__i;
          }
          args = new cljs.core.IndexedSeq(G__26499__a, 0);
        }
        return G__26498__delegate.call(this, x, y, z, args);
      };
      G__26498.cljs$lang$maxFixedArity = 3;
      G__26498.cljs$lang$applyTo = function(arglist__26500) {
        var x = cljs.core.first(arglist__26500);
        arglist__26500 = cljs.core.next(arglist__26500);
        var y = cljs.core.first(arglist__26500);
        arglist__26500 = cljs.core.next(arglist__26500);
        var z = cljs.core.first(arglist__26500);
        var args = cljs.core.rest(arglist__26500);
        return G__26498__delegate(x, y, z, args);
      };
      G__26498.cljs$core$IFn$_invoke$arity$variadic = G__26498__delegate;
      return G__26498;
    }();
    G__26497 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__26497__0.call(this);
        case 1:
          return G__26497__1.call(this, x);
        case 2:
          return G__26497__2.call(this, x, y);
        case 3:
          return G__26497__3.call(this, x, y, z);
        default:
          var G__26501 = null;
          if (arguments.length > 3) {
            var G__26502__i = 0, G__26502__a = new Array(arguments.length - 3);
            while (G__26502__i < G__26502__a.length) {
              G__26502__a[G__26502__i] = arguments[G__26502__i + 3];
              ++G__26502__i;
            }
            G__26501 = new cljs.core.IndexedSeq(G__26502__a, 0);
          }
          return G__26497__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__26501);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__26497.cljs$lang$maxFixedArity = 3;
    G__26497.cljs$lang$applyTo = G__26497__4.cljs$lang$applyTo;
    G__26497.cljs$core$IFn$_invoke$arity$0 = G__26497__0;
    G__26497.cljs$core$IFn$_invoke$arity$1 = G__26497__1;
    G__26497.cljs$core$IFn$_invoke$arity$2 = G__26497__2;
    G__26497.cljs$core$IFn$_invoke$arity$3 = G__26497__3;
    G__26497.cljs$core$IFn$_invoke$arity$variadic = G__26497__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__26497;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic = function(f, g, h, fs) {
  var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f, g, h, fs);
  return function(fs__$1) {
    return function() {
      var G__26503 = null;
      var G__26503__0 = function() {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__26464_SHARP_, p2__26465_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__26464_SHARP_, p2__26465_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__26465_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__26465_SHARP_.call(null));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__26503__1 = function(x) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__26466_SHARP_, p2__26467_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__26466_SHARP_, p2__26467_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__26467_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p2__26467_SHARP_.call(null, x));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__26503__2 = function(x, y) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__26468_SHARP_, p2__26469_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__26468_SHARP_, p2__26469_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__26469_SHARP_.cljs$core$IFn$_invoke$arity$2(x, y) : p2__26469_SHARP_.call(null, x, y));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__26503__3 = function(x, y, z) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__26470_SHARP_, p2__26471_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__26470_SHARP_, p2__26471_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__26471_SHARP_.cljs$core$IFn$_invoke$arity$3(x, y, z) : p2__26471_SHARP_.call(null, x, y, z));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__26503__4 = function() {
        var G__26504__delegate = function(x, y, z, args) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
            return function(p1__26472_SHARP_, p2__26473_SHARP_) {
              return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__26472_SHARP_, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__26473_SHARP_, x, y, z, args));
            };
          }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__26504 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__26505__i = 0, G__26505__a = new Array(arguments.length - 3);
            while (G__26505__i < G__26505__a.length) {
              G__26505__a[G__26505__i] = arguments[G__26505__i + 3];
              ++G__26505__i;
            }
            args = new cljs.core.IndexedSeq(G__26505__a, 0);
          }
          return G__26504__delegate.call(this, x, y, z, args);
        };
        G__26504.cljs$lang$maxFixedArity = 3;
        G__26504.cljs$lang$applyTo = function(arglist__26506) {
          var x = cljs.core.first(arglist__26506);
          arglist__26506 = cljs.core.next(arglist__26506);
          var y = cljs.core.first(arglist__26506);
          arglist__26506 = cljs.core.next(arglist__26506);
          var z = cljs.core.first(arglist__26506);
          var args = cljs.core.rest(arglist__26506);
          return G__26504__delegate(x, y, z, args);
        };
        G__26504.cljs$core$IFn$_invoke$arity$variadic = G__26504__delegate;
        return G__26504;
      }();
      G__26503 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__26503__0.call(this);
          case 1:
            return G__26503__1.call(this, x);
          case 2:
            return G__26503__2.call(this, x, y);
          case 3:
            return G__26503__3.call(this, x, y, z);
          default:
            var G__26507 = null;
            if (arguments.length > 3) {
              var G__26508__i = 0, G__26508__a = new Array(arguments.length - 3);
              while (G__26508__i < G__26508__a.length) {
                G__26508__a[G__26508__i] = arguments[G__26508__i + 3];
                ++G__26508__i;
              }
              G__26507 = new cljs.core.IndexedSeq(G__26508__a, 0);
            }
            return G__26503__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__26507);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__26503.cljs$lang$maxFixedArity = 3;
      G__26503.cljs$lang$applyTo = G__26503__4.cljs$lang$applyTo;
      G__26503.cljs$core$IFn$_invoke$arity$0 = G__26503__0;
      G__26503.cljs$core$IFn$_invoke$arity$1 = G__26503__1;
      G__26503.cljs$core$IFn$_invoke$arity$2 = G__26503__2;
      G__26503.cljs$core$IFn$_invoke$arity$3 = G__26503__3;
      G__26503.cljs$core$IFn$_invoke$arity$variadic = G__26503__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__26503;
    }();
  }(fs__$1);
};
cljs.core.juxt.cljs$lang$applyTo = function(seq26475) {
  var G__26476 = cljs.core.first(seq26475);
  var seq26475__$1 = cljs.core.next(seq26475);
  var G__26477 = cljs.core.first(seq26475__$1);
  var seq26475__$2 = cljs.core.next(seq26475__$1);
  var G__26478 = cljs.core.first(seq26475__$2);
  var seq26475__$3 = cljs.core.next(seq26475__$2);
  return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(G__26476, G__26477, G__26478, seq26475__$3);
};
cljs.core.juxt.cljs$lang$maxFixedArity = 3;
cljs.core.dorun = function cljs$core$dorun() {
  var args26509 = [];
  var len__5565__auto___26512 = arguments.length;
  var i__5566__auto___26513 = 0;
  while (true) {
    if (i__5566__auto___26513 < len__5565__auto___26512) {
      args26509.push(arguments[i__5566__auto___26513]);
      var G__26514 = i__5566__auto___26513 + 1;
      i__5566__auto___26513 = G__26514;
      continue;
    } else {
    }
    break;
  }
  var G__26511 = args26509.length;
  switch(G__26511) {
    case 1:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26509.length)].join(""));;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var G__26516 = cljs.core.next(coll);
      coll = G__26516;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  while (true) {
    if (cljs.core.seq(coll) && n > 0) {
      var G__26517 = n - 1;
      var G__26518 = cljs.core.next(coll);
      n = G__26517;
      coll = G__26518;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$lang$maxFixedArity = 2;
cljs.core.doall = function cljs$core$doall() {
  var args26519 = [];
  var len__5565__auto___26522 = arguments.length;
  var i__5566__auto___26523 = 0;
  while (true) {
    if (i__5566__auto___26523 < len__5565__auto___26522) {
      args26519.push(arguments[i__5566__auto___26523]);
      var G__26524 = i__5566__auto___26523 + 1;
      i__5566__auto___26523 = G__26524;
      continue;
    } else {
    }
    break;
  }
  var G__26521 = args26519.length;
  switch(G__26521) {
    case 1:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26519.length)].join(""));;
  }
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);
  return coll;
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n, coll);
  return coll;
};
cljs.core.doall.cljs$lang$maxFixedArity = 2;
cljs.core.regexp_QMARK_ = function cljs$core$regexp_QMARK_(x) {
  return x instanceof RegExp;
};
cljs.core.re_matches = function cljs$core$re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches), s)) {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function cljs$core$re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function cljs$core$re_seq(re, s) {
  var match_data = cljs.core.re_find(re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_(match_data) ? cljs.core.first(match_data) : match_data;
  var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, match_idx + cljs.core.count(match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons(match_data, cljs.core.seq(post_match) ? cljs$core$re_seq(re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function cljs$core$re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__26527 = cljs.core.re_find(/^\(\?([idmsux]*)\)/, s);
    var prefix = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26527, 0, null);
    var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26527, 1, null);
    var pattern = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, cljs.core.count(prefix));
    return new RegExp(pattern, function() {
      var or__4526__auto__ = flags;
      if (cljs.core.truth_(or__4526__auto__)) {
        return or__4526__auto__;
      } else {
        return "";
      }
    }());
  }
};
cljs.core.pr_sequential_writer = function cljs$core$pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_26535 = cljs.core._STAR_print_level_STAR_;
  cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
  try {
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write(writer, "#");
    } else {
      cljs.core._write(writer, begin);
      if ((new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) === 0) {
        if (cljs.core.seq(coll)) {
          cljs.core._write(writer, function() {
            var or__4526__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
            if (cljs.core.truth_(or__4526__auto__)) {
              return or__4526__auto__;
            } else {
              return "...";
            }
          }());
        } else {
        }
      } else {
        if (cljs.core.seq(coll)) {
          var G__26536_26542 = cljs.core.first(coll);
          var G__26537_26543 = writer;
          var G__26538_26544 = opts;
          print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__26536_26542, G__26537_26543, G__26538_26544) : print_one.call(null, G__26536_26542, G__26537_26543, G__26538_26544);
        } else {
        }
        var coll_26545__$1 = cljs.core.next(coll);
        var n_26546 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
        while (true) {
          if (coll_26545__$1 && (n_26546 == null || !(n_26546 === 0))) {
            cljs.core._write(writer, sep);
            var G__26539_26547 = cljs.core.first(coll_26545__$1);
            var G__26540_26548 = writer;
            var G__26541_26549 = opts;
            print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__26539_26547, G__26540_26548, G__26541_26549) : print_one.call(null, G__26539_26547, G__26540_26548, G__26541_26549);
            var G__26550 = cljs.core.next(coll_26545__$1);
            var G__26551 = n_26546 - 1;
            coll_26545__$1 = G__26550;
            n_26546 = G__26551;
            continue;
          } else {
            if (cljs.core.seq(coll_26545__$1) && n_26546 === 0) {
              cljs.core._write(writer, sep);
              cljs.core._write(writer, function() {
                var or__4526__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
                if (cljs.core.truth_(or__4526__auto__)) {
                  return or__4526__auto__;
                } else {
                  return "...";
                }
              }());
            } else {
            }
          }
          break;
        }
      }
      return cljs.core._write(writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_26535;
  }
};
cljs.core.write_all = function cljs$core$write_all() {
  var args__5572__auto__ = [];
  var len__5565__auto___26558 = arguments.length;
  var i__5566__auto___26559 = 0;
  while (true) {
    if (i__5566__auto___26559 < len__5565__auto___26558) {
      args__5572__auto__.push(arguments[i__5566__auto___26559]);
      var G__26560 = i__5566__auto___26559 + 1;
      i__5566__auto___26559 = G__26560;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic = function(writer, ss) {
  var seq__26554 = cljs.core.seq(ss);
  var chunk__26555 = null;
  var count__26556 = 0;
  var i__26557 = 0;
  while (true) {
    if (i__26557 < count__26556) {
      var s = chunk__26555.cljs$core$IIndexed$_nth$arity$2(null, i__26557);
      cljs.core._write(writer, s);
      var G__26561 = seq__26554;
      var G__26562 = chunk__26555;
      var G__26563 = count__26556;
      var G__26564 = i__26557 + 1;
      seq__26554 = G__26561;
      chunk__26555 = G__26562;
      count__26556 = G__26563;
      i__26557 = G__26564;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__26554);
      if (temp__4425__auto__) {
        var seq__26554__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__26554__$1)) {
          var c__5310__auto__ = cljs.core.chunk_first(seq__26554__$1);
          var G__26565 = cljs.core.chunk_rest(seq__26554__$1);
          var G__26566 = c__5310__auto__;
          var G__26567 = cljs.core.count(c__5310__auto__);
          var G__26568 = 0;
          seq__26554 = G__26565;
          chunk__26555 = G__26566;
          count__26556 = G__26567;
          i__26557 = G__26568;
          continue;
        } else {
          var s = cljs.core.first(seq__26554__$1);
          cljs.core._write(writer, s);
          var G__26569 = cljs.core.next(seq__26554__$1);
          var G__26570 = null;
          var G__26571 = 0;
          var G__26572 = 0;
          seq__26554 = G__26569;
          chunk__26555 = G__26570;
          count__26556 = G__26571;
          i__26557 = G__26572;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.write_all.cljs$lang$maxFixedArity = 1;
cljs.core.write_all.cljs$lang$applyTo = function(seq26552) {
  var G__26553 = cljs.core.first(seq26552);
  var seq26552__$1 = cljs.core.next(seq26552);
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(G__26553, seq26552__$1);
};
cljs.core.string_print = function cljs$core$string_print(x) {
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function cljs$core$flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj26574 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj26574;
}();
cljs.core.quote_string = function cljs$core$quote_string(s) {
  return [cljs.core.str('"'), cljs.core.str(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.print_meta_QMARK_ = function cljs$core$print_meta_QMARK_(opts, obj) {
  var and__4514__auto__ = cljs.core.boolean$(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964)));
  if (and__4514__auto__) {
    var and__4514__auto____$1 = !(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 131072 || obj.cljs$core$IMeta$ ? true : false : false;
    if (and__4514__auto____$1) {
      return !(cljs.core.meta(obj) == null);
    } else {
      return and__4514__auto____$1;
    }
  } else {
    return and__4514__auto__;
  }
};
cljs.core.pr_writer_impl = function cljs$core$pr_writer_impl(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write(writer, "nil");
  } else {
    if (cljs.core.print_meta_QMARK_(opts, obj)) {
      cljs.core._write(writer, "^");
      var G__26590_26599 = cljs.core.meta(obj);
      var G__26591_26600 = writer;
      var G__26592_26601 = opts;
      cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__26590_26599, G__26591_26600, G__26592_26601) : cljs.core.pr_writer.call(null, G__26590_26599, G__26591_26600, G__26592_26601);
      cljs.core._write(writer, " ");
    } else {
    }
    if (obj.cljs$lang$type) {
      return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
    } else {
      if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 2147483648 || obj.cljs$core$IPrintWithWriter$ ? true : false : false) {
        return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, opts);
      } else {
        if (obj === true || obj === false || typeof obj === "number") {
          return cljs.core._write(writer, [cljs.core.str(obj)].join(""));
        } else {
          if (cljs.core.object_QMARK_(obj)) {
            cljs.core._write(writer, "#js ");
            var G__26594 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k), obj[k]], null);
            }, cljs.core.js_keys(obj));
            var G__26595 = cljs.core.pr_writer;
            var G__26596 = writer;
            var G__26597 = opts;
            return cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__26594, G__26595, G__26596, G__26597) : cljs.core.print_map.call(null, G__26594, G__26595, G__26596, G__26597);
          } else {
            if (cljs.core.array_QMARK_(obj)) {
              return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#js [", " ", "]", opts, obj);
            } else {
              if (goog.isString(obj)) {
                if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                  return cljs.core._write(writer, cljs.core.quote_string(obj));
                } else {
                  return cljs.core._write(writer, obj);
                }
              } else {
                if (goog.isFunction(obj)) {
                  var name = obj.name;
                  var name__$1 = cljs.core.truth_(function() {
                    var or__4526__auto__ = name == null;
                    if (or__4526__auto__) {
                      return or__4526__auto__;
                    } else {
                      return goog.string.isEmpty(name);
                    }
                  }()) ? "Function" : name;
                  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", name__$1, ' "', [cljs.core.str(obj)].join(""), '"]'], 0));
                } else {
                  if (obj instanceof Date) {
                    var normalize = function(n, len) {
                      var ns = [cljs.core.str(n)].join("");
                      while (true) {
                        if (cljs.core.count(ns) < len) {
                          var G__26602 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                          ns = G__26602;
                          continue;
                        } else {
                          return ns;
                        }
                        break;
                      }
                    };
                    return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize(obj.getUTCMonth() + 1, 2), "-", normalize(obj.getUTCDate(), 2), "T", normalize(obj.getUTCHours(), 2), ":", normalize(obj.getUTCMinutes(), 2), ":", normalize(obj.getUTCSeconds(), 2), ".", normalize(obj.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
                  } else {
                    if (cljs.core.regexp_QMARK_(obj)) {
                      return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#"', obj.source, '"'], 0));
                    } else {
                      if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 2147483648 || obj.cljs$core$IPrintWithWriter$ ? true : false : false) {
                        return cljs.core._pr_writer(obj, writer, opts);
                      } else {
                        if (cljs.core.truth_(obj.constructor.cljs$lang$ctorStr)) {
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", obj.constructor.cljs$lang$ctorStr.replace(new RegExp("/", "g"), "."), "]"], 0));
                        } else {
                          var name = obj.constructor.name;
                          var name__$1 = cljs.core.truth_(function() {
                            var or__4526__auto__ = name == null;
                            if (or__4526__auto__) {
                              return or__4526__auto__;
                            } else {
                              return goog.string.isEmpty(name);
                            }
                          }()) ? "Object" : name;
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", name__$1, " ", [cljs.core.str(obj)].join(""), "]"], 0));
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_writer = function cljs$core$pr_writer(obj, writer, opts) {
  var temp__4423__auto__ = (new cljs.core.Keyword(null, "alt-impl", "alt-impl", 670969595)).cljs$core$IFn$_invoke$arity$1(opts);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var alt_impl = temp__4423__auto__;
    var G__26606 = obj;
    var G__26607 = writer;
    var G__26608 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts, new cljs.core.Keyword(null, "fallback-impl", "fallback-impl", -1501286995), cljs.core.pr_writer_impl);
    return alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__26606, G__26607, G__26608) : alt_impl.call(null, G__26606, G__26607, G__26608);
  } else {
    return cljs.core.pr_writer_impl(obj, writer, opts);
  }
};
cljs.core.pr_seq_writer = function cljs$core$pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer(cljs.core.first(objs), writer, opts);
  var seq__26613 = cljs.core.seq(cljs.core.next(objs));
  var chunk__26614 = null;
  var count__26615 = 0;
  var i__26616 = 0;
  while (true) {
    if (i__26616 < count__26615) {
      var obj = chunk__26614.cljs$core$IIndexed$_nth$arity$2(null, i__26616);
      cljs.core._write(writer, " ");
      cljs.core.pr_writer(obj, writer, opts);
      var G__26617 = seq__26613;
      var G__26618 = chunk__26614;
      var G__26619 = count__26615;
      var G__26620 = i__26616 + 1;
      seq__26613 = G__26617;
      chunk__26614 = G__26618;
      count__26615 = G__26619;
      i__26616 = G__26620;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__26613);
      if (temp__4425__auto__) {
        var seq__26613__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__26613__$1)) {
          var c__5310__auto__ = cljs.core.chunk_first(seq__26613__$1);
          var G__26621 = cljs.core.chunk_rest(seq__26613__$1);
          var G__26622 = c__5310__auto__;
          var G__26623 = cljs.core.count(c__5310__auto__);
          var G__26624 = 0;
          seq__26613 = G__26621;
          chunk__26614 = G__26622;
          count__26615 = G__26623;
          i__26616 = G__26624;
          continue;
        } else {
          var obj = cljs.core.first(seq__26613__$1);
          cljs.core._write(writer, " ");
          cljs.core.pr_writer(obj, writer, opts);
          var G__26625 = cljs.core.next(seq__26613__$1);
          var G__26626 = null;
          var G__26627 = 0;
          var G__26628 = 0;
          seq__26613 = G__26625;
          chunk__26614 = G__26626;
          count__26615 = G__26627;
          i__26616 = G__26628;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function cljs$core$pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer(objs, writer, opts);
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return sb;
};
cljs.core.pr_str_with_opts = function cljs$core$pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "";
  } else {
    return [cljs.core.str(cljs.core.pr_sb_with_opts(objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function cljs$core$prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts(objs, opts);
    sb.append("\n");
    return [cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function cljs$core$pr_with_opts(objs, opts) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(objs, opts));
};
cljs.core.newline = function cljs$core$newline() {
  var args26629 = [];
  var len__5565__auto___26632 = arguments.length;
  var i__5566__auto___26633 = 0;
  while (true) {
    if (i__5566__auto___26633 < len__5565__auto___26632) {
      args26629.push(arguments[i__5566__auto___26633]);
      var G__26634 = i__5566__auto___26633 + 1;
      i__5566__auto___26633 = G__26634;
      continue;
    } else {
    }
    break;
  }
  var G__26631 = args26629.length;
  switch(G__26631) {
    case 0:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26629.length)].join(""));;
  }
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(null);
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$1 = function(opts) {
  cljs.core.string_print("\n");
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush();
  } else {
    return null;
  }
};
cljs.core.newline.cljs$lang$maxFixedArity = 1;
cljs.core.pr_str = function cljs$core$pr_str() {
  var args__5572__auto__ = [];
  var len__5565__auto___26637 = arguments.length;
  var i__5566__auto___26638 = 0;
  while (true) {
    if (i__5566__auto___26638 < len__5565__auto___26637) {
      args__5572__auto__.push(arguments[i__5566__auto___26638]);
      var G__26639 = i__5566__auto___26638 + 1;
      i__5566__auto___26638 = G__26639;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr_str.cljs$lang$maxFixedArity = 0;
cljs.core.pr_str.cljs$lang$applyTo = function(seq26636) {
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq26636));
};
cljs.core.prn_str = function cljs$core$prn_str() {
  var args__5572__auto__ = [];
  var len__5565__auto___26641 = arguments.length;
  var i__5566__auto___26642 = 0;
  while (true) {
    if (i__5566__auto___26642 < len__5565__auto___26641) {
      args__5572__auto__.push(arguments[i__5566__auto___26642]);
      var G__26643 = i__5566__auto___26642 + 1;
      i__5566__auto___26642 = G__26643;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.prn_str.cljs$lang$maxFixedArity = 0;
cljs.core.prn_str.cljs$lang$applyTo = function(seq26640) {
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq26640));
};
cljs.core.pr = function cljs$core$pr() {
  var args__5572__auto__ = [];
  var len__5565__auto___26645 = arguments.length;
  var i__5566__auto___26646 = 0;
  while (true) {
    if (i__5566__auto___26646 < len__5565__auto___26645) {
      args__5572__auto__.push(arguments[i__5566__auto___26646]);
      var G__26647 = i__5566__auto___26646 + 1;
      i__5566__auto___26646 = G__26647;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr.cljs$lang$maxFixedArity = 0;
cljs.core.pr.cljs$lang$applyTo = function(seq26644) {
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq26644));
};
cljs.core.print = function() {
  var cljs$core$cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs$core$cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__26648__i = 0, G__26648__a = new Array(arguments.length - 0);
      while (G__26648__i < G__26648__a.length) {
        G__26648__a[G__26648__i] = arguments[G__26648__i + 0];
        ++G__26648__i;
      }
      objs = new cljs.core.IndexedSeq(G__26648__a, 0);
    }
    return cljs$core$cljs_core_print__delegate.call(this, objs);
  };
  cljs$core$cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs$core$cljs_core_print.cljs$lang$applyTo = function(arglist__26649) {
    var objs = cljs.core.seq(arglist__26649);
    return cljs$core$cljs_core_print__delegate(objs);
  };
  cljs$core$cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs$core$cljs_core_print__delegate;
  return cljs$core$cljs_core_print;
}();
cljs.core.print_str = function cljs$core$print_str() {
  var args__5572__auto__ = [];
  var len__5565__auto___26651 = arguments.length;
  var i__5566__auto___26652 = 0;
  while (true) {
    if (i__5566__auto___26652 < len__5565__auto___26651) {
      args__5572__auto__.push(arguments[i__5566__auto___26652]);
      var G__26653 = i__5566__auto___26652 + 1;
      i__5566__auto___26652 = G__26653;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.print_str.cljs$lang$maxFixedArity = 0;
cljs.core.print_str.cljs$lang$applyTo = function(seq26650) {
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq26650));
};
cljs.core.println = function cljs$core$println() {
  var args__5572__auto__ = [];
  var len__5565__auto___26655 = arguments.length;
  var i__5566__auto___26656 = 0;
  while (true) {
    if (i__5566__auto___26656 < len__5565__auto___26655) {
      args__5572__auto__.push(arguments[i__5566__auto___26656]);
      var G__26657 = i__5566__auto___26656 + 1;
      i__5566__auto___26656 = G__26657;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
cljs.core.println.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.println.cljs$lang$maxFixedArity = 0;
cljs.core.println.cljs$lang$applyTo = function(seq26654) {
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq26654));
};
cljs.core.println_str = function cljs$core$println_str() {
  var args__5572__auto__ = [];
  var len__5565__auto___26659 = arguments.length;
  var i__5566__auto___26660 = 0;
  while (true) {
    if (i__5566__auto___26660 < len__5565__auto___26659) {
      args__5572__auto__.push(arguments[i__5566__auto___26660]);
      var G__26661 = i__5566__auto___26660 + 1;
      i__5566__auto___26660 = G__26661;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.println_str.cljs$lang$maxFixedArity = 0;
cljs.core.println_str.cljs$lang$applyTo = function(seq26658) {
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq26658));
};
cljs.core.prn = function cljs$core$prn() {
  var args__5572__auto__ = [];
  var len__5565__auto___26663 = arguments.length;
  var i__5566__auto___26664 = 0;
  while (true) {
    if (i__5566__auto___26664 < len__5565__auto___26663) {
      args__5572__auto__.push(arguments[i__5566__auto___26664]);
      var G__26665 = i__5566__auto___26664 + 1;
      i__5566__auto___26664 = G__26665;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.prn.cljs$lang$maxFixedArity = 0;
cljs.core.prn.cljs$lang$applyTo = function(seq26662) {
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq26662));
};
cljs.core.print_map = function cljs$core$print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer(writer, function(e, w, opts__$1) {
    var G__26672_26678 = cljs.core.key(e);
    var G__26673_26679 = w;
    var G__26674_26680 = opts__$1;
    print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__26672_26678, G__26673_26679, G__26674_26680) : print_one.call(null, G__26672_26678, G__26673_26679, G__26674_26680);
    cljs.core._write(w, " ");
    var G__26675 = cljs.core.val(e);
    var G__26676 = w;
    var G__26677 = opts__$1;
    return print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__26675, G__26676, G__26677) : print_one.call(null, G__26675, G__26676, G__26677);
  }, "{", ", ", "}", opts, cljs.core.seq(m));
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#object [cljs.core.Volatile ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), a__$1.state], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#'");
  return cljs.core.pr_writer(a__$1.sym, writer, opts);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#object [cljs.core.Atom ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), a__$1.state], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write(writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq(coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Symbol) {
    return cljs.core.compare_symbols(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Keyword) {
    return cljs.core.compare_keywords(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.alter_meta_BANG_ = function cljs$core$alter_meta_BANG_() {
  var args__5572__auto__ = [];
  var len__5565__auto___26684 = arguments.length;
  var i__5566__auto___26685 = 0;
  while (true) {
    if (i__5566__auto___26685 < len__5565__auto___26684) {
      args__5572__auto__.push(arguments[i__5566__auto___26685]);
      var G__26686 = i__5566__auto___26685 + 1;
      i__5566__auto___26685 = G__26686;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 2 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(2), 0) : null;
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5573__auto__);
};
cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(iref, f, args) {
  return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, iref.meta, args);
};
cljs.core.alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.alter_meta_BANG_.cljs$lang$applyTo = function(seq26681) {
  var G__26682 = cljs.core.first(seq26681);
  var seq26681__$1 = cljs.core.next(seq26681);
  var G__26683 = cljs.core.first(seq26681__$1);
  var seq26681__$2 = cljs.core.next(seq26681__$1);
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__26682, G__26683, seq26681__$2);
};
cljs.core.reset_meta_BANG_ = function cljs$core$reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function cljs$core$add_watch(iref, key, f) {
  cljs.core._add_watch(iref, key, f);
  return iref;
};
cljs.core.remove_watch = function cljs$core$remove_watch(iref, key) {
  cljs.core._remove_watch(iref, key);
  return iref;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function cljs$core$gensym() {
  var args26687 = [];
  var len__5565__auto___26690 = arguments.length;
  var i__5566__auto___26691 = 0;
  while (true) {
    if (i__5566__auto___26691 < len__5565__auto___26690) {
      args26687.push(arguments[i__5566__auto___26691]);
      var G__26692 = i__5566__auto___26691 + 1;
      i__5566__auto___26691 = G__26692;
      continue;
    } else {
    }
    break;
  }
  var G__26689 = args26687.length;
  switch(G__26689) {
    case 0:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26687.length)].join(""));;
  }
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("G__");
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$1 = function(prefix_string) {
  if (cljs.core.gensym_counter == null) {
    cljs.core.gensym_counter = cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(0) : cljs.core.atom.call(null, 0);
  } else {
  }
  return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
};
cljs.core.gensym.cljs$lang$maxFixedArity = 1;
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null);
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return cljs.core.not(self__.f);
};
cljs.core.Delay.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function cljs$core$__GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function cljs$core$delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function cljs$core$force(x) {
  if (cljs.core.delay_QMARK_(x)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(x) : cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function cljs$core$realized_QMARK_(d) {
  return cljs.core._realized_QMARK_(d);
};
cljs.core.preserving_reduced = function cljs$core$preserving_reduced(rf) {
  return function(p1__26694_SHARP_, p2__26695_SHARP_) {
    var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(p1__26694_SHARP_, p2__26695_SHARP_) : rf.call(null, p1__26694_SHARP_, p2__26695_SHARP_);
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.reduced(ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cljs$core$cat(rf) {
  var rf1 = cljs.core.preserving_reduced(rf);
  return function(rf1) {
    return function() {
      var G__26696 = null;
      var G__26696__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__26696__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__26696__2 = function(result, input) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1, result, input);
      };
      G__26696 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__26696__0.call(this);
          case 1:
            return G__26696__1.call(this, result);
          case 2:
            return G__26696__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__26696.cljs$core$IFn$_invoke$arity$0 = G__26696__0;
      G__26696.cljs$core$IFn$_invoke$arity$1 = G__26696__1;
      G__26696.cljs$core$IFn$_invoke$arity$2 = G__26696__2;
      return G__26696;
    }();
  }(rf1);
};
cljs.core.dedupe = function cljs$core$dedupe() {
  var args26697 = [];
  var len__5565__auto___26700 = arguments.length;
  var i__5566__auto___26701 = 0;
  while (true) {
    if (i__5566__auto___26701 < len__5565__auto___26700) {
      args26697.push(arguments[i__5566__auto___26701]);
      var G__26702 = i__5566__auto___26701 + 1;
      i__5566__auto___26701 = G__26702;
      continue;
    } else {
    }
    break;
  }
  var G__26699 = args26697.length;
  switch(G__26699) {
    case 0:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26697.length)].join(""));;
  }
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(pa) {
      return function() {
        var G__26704 = null;
        var G__26704__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__26704__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__26704__2 = function(result, input) {
          var prior = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(pa) : cljs.core.deref.call(null, pa);
          cljs.core.vreset_BANG_(pa, input);
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior, input)) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__26704 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__26704__0.call(this);
            case 1:
              return G__26704__1.call(this, result);
            case 2:
              return G__26704__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__26704.cljs$core$IFn$_invoke$arity$0 = G__26704__0;
        G__26704.cljs$core$IFn$_invoke$arity$1 = G__26704__1;
        G__26704.cljs$core$IFn$_invoke$arity$2 = G__26704__2;
        return G__26704;
      }();
    }(pa);
  };
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0(), coll);
};
cljs.core.dedupe.cljs$lang$maxFixedArity = 1;
cljs.core.random_sample = function cljs$core$random_sample() {
  var args26705 = [];
  var len__5565__auto___26708 = arguments.length;
  var i__5566__auto___26709 = 0;
  while (true) {
    if (i__5566__auto___26709 < len__5565__auto___26708) {
      args26705.push(arguments[i__5566__auto___26709]);
      var G__26710 = i__5566__auto___26709 + 1;
      i__5566__auto___26709 = G__26710;
      continue;
    } else {
    }
    break;
  }
  var G__26707 = args26705.length;
  switch(G__26707) {
    case 1:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26705.length)].join(""));;
  }
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1 = function(prob) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(_) {
    return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null)) < prob;
  });
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2 = function(prob, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(_) {
    return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null)) < prob;
  }, coll);
};
cljs.core.random_sample.cljs$lang$maxFixedArity = 2;
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform, self__.coll));
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$2 = function(_, f) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "coll", "coll", -1006698606, null)], null);
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function cljs$core$__GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.eduction = function cljs$core$eduction() {
  var args__5572__auto__ = [];
  var len__5565__auto___26713 = arguments.length;
  var i__5566__auto___26714 = 0;
  while (true) {
    if (i__5566__auto___26714 < len__5565__auto___26713) {
      args__5572__auto__.push(arguments[i__5566__auto___26714]);
      var G__26715 = i__5566__auto___26714 + 1;
      i__5566__auto___26714 = G__26715;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic = function(xforms) {
  return new cljs.core.Eduction(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.comp, cljs.core.butlast(xforms)), cljs.core.last(xforms));
};
cljs.core.eduction.cljs$lang$maxFixedArity = 0;
cljs.core.eduction.cljs$lang$applyTo = function(seq26712) {
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq26712));
};
cljs.core.run_BANG_ = function cljs$core$run_BANG_(proc, coll) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__26717_SHARP_, p2__26716_SHARP_) {
    return proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(p2__26716_SHARP_) : proc.call(null, p2__26716_SHARP_);
  }, null, coll);
};
cljs.core.IEncodeJS = {};
cljs.core._clj__GT_js = function cljs$core$_clj__GT_js(x) {
  if (!(x == null) && !(x.cljs$core$IEncodeJS$_clj__GT_js$arity$1 == null)) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__5162__auto__ = x == null ? null : x;
    var m__5163__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__5163__auto__.call(null, x);
    } else {
      var m__5163__auto____$1 = cljs.core._clj__GT_js["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__5163__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", x);
      }
    }
  }
};
cljs.core._key__GT_js = function cljs$core$_key__GT_js(x) {
  if (!(x == null) && !(x.cljs$core$IEncodeJS$_key__GT_js$arity$1 == null)) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__5162__auto__ = x == null ? null : x;
    var m__5163__auto__ = cljs.core._key__GT_js[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__5163__auto__.call(null, x);
    } else {
      var m__5163__auto____$1 = cljs.core._key__GT_js["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__5163__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", x);
      }
    }
  }
};
cljs.core.key__GT_js = function cljs$core$key__GT_js(k) {
  if (!(k == null) ? false || k.cljs$core$IEncodeJS$ ? true : !k.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, k) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, k)) {
    return cljs.core._clj__GT_js(k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(k) : cljs.core.clj__GT_js.call(null, k);
    } else {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
    }
  }
};
cljs.core.clj__GT_js = function cljs$core$clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (!(x == null) ? false || x.cljs$core$IEncodeJS$ ? true : !x.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, x)) {
      return cljs.core._clj__GT_js(x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name(x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return [cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_(x)) {
            var m = {};
            var seq__26738_26748 = cljs.core.seq(x);
            var chunk__26739_26749 = null;
            var count__26740_26750 = 0;
            var i__26741_26751 = 0;
            while (true) {
              if (i__26741_26751 < count__26740_26750) {
                var vec__26742_26752 = chunk__26739_26749.cljs$core$IIndexed$_nth$arity$2(null, i__26741_26751);
                var k_26753 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26742_26752, 0, null);
                var v_26754 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26742_26752, 1, null);
                m[cljs.core.key__GT_js(k_26753)] = cljs$core$clj__GT_js(v_26754);
                var G__26755 = seq__26738_26748;
                var G__26756 = chunk__26739_26749;
                var G__26757 = count__26740_26750;
                var G__26758 = i__26741_26751 + 1;
                seq__26738_26748 = G__26755;
                chunk__26739_26749 = G__26756;
                count__26740_26750 = G__26757;
                i__26741_26751 = G__26758;
                continue;
              } else {
                var temp__4425__auto___26759 = cljs.core.seq(seq__26738_26748);
                if (temp__4425__auto___26759) {
                  var seq__26738_26760__$1 = temp__4425__auto___26759;
                  if (cljs.core.chunked_seq_QMARK_(seq__26738_26760__$1)) {
                    var c__5310__auto___26761 = cljs.core.chunk_first(seq__26738_26760__$1);
                    var G__26762 = cljs.core.chunk_rest(seq__26738_26760__$1);
                    var G__26763 = c__5310__auto___26761;
                    var G__26764 = cljs.core.count(c__5310__auto___26761);
                    var G__26765 = 0;
                    seq__26738_26748 = G__26762;
                    chunk__26739_26749 = G__26763;
                    count__26740_26750 = G__26764;
                    i__26741_26751 = G__26765;
                    continue;
                  } else {
                    var vec__26743_26766 = cljs.core.first(seq__26738_26760__$1);
                    var k_26767 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26743_26766, 0, null);
                    var v_26768 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26743_26766, 1, null);
                    m[cljs.core.key__GT_js(k_26767)] = cljs$core$clj__GT_js(v_26768);
                    var G__26769 = cljs.core.next(seq__26738_26760__$1);
                    var G__26770 = null;
                    var G__26771 = 0;
                    var G__26772 = 0;
                    seq__26738_26748 = G__26769;
                    chunk__26739_26749 = G__26770;
                    count__26740_26750 = G__26771;
                    i__26741_26751 = G__26772;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_(x)) {
              var arr = [];
              var seq__26744_26773 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$clj__GT_js, x));
              var chunk__26745_26774 = null;
              var count__26746_26775 = 0;
              var i__26747_26776 = 0;
              while (true) {
                if (i__26747_26776 < count__26746_26775) {
                  var x_26777__$1 = chunk__26745_26774.cljs$core$IIndexed$_nth$arity$2(null, i__26747_26776);
                  arr.push(x_26777__$1);
                  var G__26778 = seq__26744_26773;
                  var G__26779 = chunk__26745_26774;
                  var G__26780 = count__26746_26775;
                  var G__26781 = i__26747_26776 + 1;
                  seq__26744_26773 = G__26778;
                  chunk__26745_26774 = G__26779;
                  count__26746_26775 = G__26780;
                  i__26747_26776 = G__26781;
                  continue;
                } else {
                  var temp__4425__auto___26782 = cljs.core.seq(seq__26744_26773);
                  if (temp__4425__auto___26782) {
                    var seq__26744_26783__$1 = temp__4425__auto___26782;
                    if (cljs.core.chunked_seq_QMARK_(seq__26744_26783__$1)) {
                      var c__5310__auto___26784 = cljs.core.chunk_first(seq__26744_26783__$1);
                      var G__26785 = cljs.core.chunk_rest(seq__26744_26783__$1);
                      var G__26786 = c__5310__auto___26784;
                      var G__26787 = cljs.core.count(c__5310__auto___26784);
                      var G__26788 = 0;
                      seq__26744_26773 = G__26785;
                      chunk__26745_26774 = G__26786;
                      count__26746_26775 = G__26787;
                      i__26747_26776 = G__26788;
                      continue;
                    } else {
                      var x_26789__$1 = cljs.core.first(seq__26744_26783__$1);
                      arr.push(x_26789__$1);
                      var G__26790 = cljs.core.next(seq__26744_26783__$1);
                      var G__26791 = null;
                      var G__26792 = 0;
                      var G__26793 = 0;
                      seq__26744_26773 = G__26790;
                      chunk__26745_26774 = G__26791;
                      count__26746_26775 = G__26792;
                      i__26747_26776 = G__26793;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = {};
cljs.core._js__GT_clj = function cljs$core$_js__GT_clj(x, options) {
  if (!(x == null) && !(x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2 == null)) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__5162__auto__ = x == null ? null : x;
    var m__5163__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(x, options) : m__5163__auto__.call(null, x, options);
    } else {
      var m__5163__auto____$1 = cljs.core._js__GT_clj["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(x, options) : m__5163__auto____$1.call(null, x, options);
      } else {
        throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", x);
      }
    }
  }
};
cljs.core.js__GT_clj = function cljs$core$js__GT_clj() {
  var args26796 = [];
  var len__5565__auto___26821 = arguments.length;
  var i__5566__auto___26822 = 0;
  while (true) {
    if (i__5566__auto___26822 < len__5565__auto___26821) {
      args26796.push(arguments[i__5566__auto___26822]);
      var G__26823 = i__5566__auto___26822 + 1;
      i__5566__auto___26822 = G__26823;
      continue;
    } else {
    }
    break;
  }
  var G__26800 = args26796.length;
  switch(G__26800) {
    case 1:
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args26796.slice(1), 0);
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], null)], 0));
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = function(x, opts) {
  var map__26801 = opts;
  var map__26801__$1 = (!(map__26801 == null) ? map__26801.cljs$lang$protocol_mask$partition0$ & 64 || map__26801.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__26801) : map__26801;
  var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__26801__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
  var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
  var f = function(map__26801, map__26801__$1, keywordize_keys, keyfn) {
    return function cljs$core$thisfn(x__$1) {
      if (!(x__$1 == null) ? false || x__$1.cljs$core$IEncodeClojure$ ? true : !x__$1.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, x__$1) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, x__$1)) {
        return cljs.core._js__GT_clj(x__$1, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq_QMARK_(x__$1)) {
          return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
        } else {
          if (cljs.core.coll_QMARK_(x__$1)) {
            return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1), cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
          } else {
            if (cljs.core.array_QMARK_(x__$1)) {
              return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
            } else {
              if (cljs.core.type(x__$1) === Object) {
                return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, function() {
                  var iter__5279__auto__ = function(map__26801, map__26801__$1, keywordize_keys, keyfn) {
                    return function cljs$core$thisfn_$_iter__26815(s__26816) {
                      return new cljs.core.LazySeq(null, function(map__26801, map__26801__$1, keywordize_keys, keyfn) {
                        return function() {
                          var s__26816__$1 = s__26816;
                          while (true) {
                            var temp__4425__auto__ = cljs.core.seq(s__26816__$1);
                            if (temp__4425__auto__) {
                              var s__26816__$2 = temp__4425__auto__;
                              if (cljs.core.chunked_seq_QMARK_(s__26816__$2)) {
                                var c__5277__auto__ = cljs.core.chunk_first(s__26816__$2);
                                var size__5278__auto__ = cljs.core.count(c__5277__auto__);
                                var b__26818 = cljs.core.chunk_buffer(size__5278__auto__);
                                if (function() {
                                  var i__26817 = 0;
                                  while (true) {
                                    if (i__26817 < size__5278__auto__) {
                                      var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__5277__auto__, i__26817);
                                      cljs.core.chunk_append(b__26818, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(k) : keyfn.call(null, k), cljs$core$thisfn(x__$1[k])], null));
                                      var G__26825 = i__26817 + 1;
                                      i__26817 = G__26825;
                                      continue;
                                    } else {
                                      return true;
                                    }
                                    break;
                                  }
                                }()) {
                                  return cljs.core.chunk_cons(cljs.core.chunk(b__26818), cljs$core$thisfn_$_iter__26815(cljs.core.chunk_rest(s__26816__$2)));
                                } else {
                                  return cljs.core.chunk_cons(cljs.core.chunk(b__26818), null);
                                }
                              } else {
                                var k = cljs.core.first(s__26816__$2);
                                return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(k) : keyfn.call(null, k), cljs$core$thisfn(x__$1[k])], null), cljs$core$thisfn_$_iter__26815(cljs.core.rest(s__26816__$2)));
                              }
                            } else {
                              return null;
                            }
                            break;
                          }
                        };
                      }(map__26801, map__26801__$1, keywordize_keys, keyfn), null, null);
                    };
                  }(map__26801, map__26801__$1, keywordize_keys, keyfn);
                  return iter__5279__auto__(cljs.core.js_keys(x__$1));
                }());
              } else {
                return x__$1;
              }
            }
          }
        }
      }
    };
  }(map__26801, map__26801__$1, keywordize_keys, keyfn);
  return f(x);
};
cljs.core.js__GT_clj.cljs$lang$applyTo = function(seq26797) {
  var G__26798 = cljs.core.first(seq26797);
  var seq26797__$1 = cljs.core.next(seq26797);
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(G__26798, seq26797__$1);
};
cljs.core.js__GT_clj.cljs$lang$maxFixedArity = 1;
cljs.core.memoize = function cljs$core$memoize(f) {
  var mem = function() {
    var G__26827 = cljs.core.PersistentArrayMap.EMPTY;
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__26827) : cljs.core.atom.call(null, G__26827);
  }();
  return function(mem) {
    return function() {
      var G__26828__delegate = function(args) {
        var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(mem) : cljs.core.deref.call(null, mem), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__26828 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__26829__i = 0, G__26829__a = new Array(arguments.length - 0);
          while (G__26829__i < G__26829__a.length) {
            G__26829__a[G__26829__i] = arguments[G__26829__i + 0];
            ++G__26829__i;
          }
          args = new cljs.core.IndexedSeq(G__26829__a, 0);
        }
        return G__26828__delegate.call(this, args);
      };
      G__26828.cljs$lang$maxFixedArity = 0;
      G__26828.cljs$lang$applyTo = function(arglist__26830) {
        var args = cljs.core.seq(arglist__26830);
        return G__26828__delegate(args);
      };
      G__26828.cljs$core$IFn$_invoke$arity$variadic = G__26828__delegate;
      return G__26828;
    }();
  }(mem);
};
cljs.core.trampoline = function cljs$core$trampoline() {
  var args26831 = [];
  var len__5565__auto___26836 = arguments.length;
  var i__5566__auto___26837 = 0;
  while (true) {
    if (i__5566__auto___26837 < len__5565__auto___26836) {
      args26831.push(arguments[i__5566__auto___26837]);
      var G__26838 = i__5566__auto___26837 + 1;
      i__5566__auto___26837 = G__26838;
      continue;
    } else {
    }
    break;
  }
  var G__26835 = args26831.length;
  switch(G__26835) {
    case 1:
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args26831.slice(1), 0);
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1 = function(f) {
  while (true) {
    var ret = f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    if (cljs.core.fn_QMARK_(ret)) {
      var G__26840 = ret;
      f = G__26840;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(function() {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
  });
};
cljs.core.trampoline.cljs$lang$applyTo = function(seq26832) {
  var G__26833 = cljs.core.first(seq26832);
  var seq26832__$1 = cljs.core.next(seq26832);
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(G__26833, seq26832__$1);
};
cljs.core.trampoline.cljs$lang$maxFixedArity = 1;
cljs.core.rand = function cljs$core$rand() {
  var args26841 = [];
  var len__5565__auto___26844 = arguments.length;
  var i__5566__auto___26845 = 0;
  while (true) {
    if (i__5566__auto___26845 < len__5565__auto___26844) {
      args26841.push(arguments[i__5566__auto___26845]);
      var G__26846 = i__5566__auto___26845 + 1;
      i__5566__auto___26845 = G__26846;
      continue;
    } else {
    }
    break;
  }
  var G__26843 = args26841.length;
  switch(G__26843) {
    case 0:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26841.length)].join(""));;
  }
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(1);
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return Math.random() * n;
};
cljs.core.rand.cljs$lang$maxFixedArity = 1;
cljs.core.rand_int = function cljs$core$rand_int(n) {
  var G__26849 = Math.random() * n;
  return Math.floor(G__26849);
};
cljs.core.rand_nth = function cljs$core$rand_nth(coll) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, cljs.core.rand_int(cljs.core.count(coll)));
};
cljs.core.group_by = function cljs$core$group_by(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, x) {
    var k = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x);
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function cljs$core$make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function cljs$core$get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = function() {
      var G__26851 = cljs.core.make_hierarchy();
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__26851) : cljs.core.atom.call(null, G__26851);
    }();
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function cljs$core$swap_global_hierarchy_BANG_() {
  var args__5572__auto__ = [];
  var len__5565__auto___26854 = arguments.length;
  var i__5566__auto___26855 = 0;
  while (true) {
    if (i__5566__auto___26855 < len__5565__auto___26854) {
      args__5572__auto__.push(arguments[i__5566__auto___26855]);
      var G__26856 = i__5566__auto___26855 + 1;
      i__5566__auto___26855 = G__26856;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), f, args);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(seq26852) {
  var G__26853 = cljs.core.first(seq26852);
  var seq26852__$1 = cljs.core.next(seq26852);
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__26853, seq26852__$1);
};
cljs.core.isa_QMARK_ = function cljs$core$isa_QMARK_() {
  var args26857 = [];
  var len__5565__auto___26861 = arguments.length;
  var i__5566__auto___26862 = 0;
  while (true) {
    if (i__5566__auto___26862 < len__5565__auto___26861) {
      args26857.push(arguments[i__5566__auto___26862]);
      var G__26863 = i__5566__auto___26862 + 1;
      i__5566__auto___26862 = G__26863;
      continue;
    } else {
    }
    break;
  }
  var G__26859 = args26857.length;
  switch(G__26859) {
    case 2:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26857.length)].join(""));;
  }
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(child, parent) {
  return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
    var G__26860 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26860) : cljs.core.deref.call(null, G__26860);
  }(), child, parent);
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = function(h, child, parent) {
  var or__4526__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child, parent);
  if (or__4526__auto__) {
    return or__4526__auto__;
  } else {
    var or__4526__auto____$1 = cljs.core.contains_QMARK_((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
    if (or__4526__auto____$1) {
      return or__4526__auto____$1;
    } else {
      var and__4514__auto__ = cljs.core.vector_QMARK_(parent);
      if (and__4514__auto__) {
        var and__4514__auto____$1 = cljs.core.vector_QMARK_(child);
        if (and__4514__auto____$1) {
          var and__4514__auto____$2 = cljs.core.count(parent) === cljs.core.count(child);
          if (and__4514__auto____$2) {
            var ret = true;
            var i = 0;
            while (true) {
              if (!ret || i === cljs.core.count(parent)) {
                return ret;
              } else {
                var G__26865 = cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h, child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(i) : child.call(null, i), parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(i) : parent.call(null, i));
                var G__26866 = i + 1;
                ret = G__26865;
                i = G__26866;
                continue;
              }
              break;
            }
          } else {
            return and__4514__auto____$2;
          }
        } else {
          return and__4514__auto____$1;
        }
      } else {
        return and__4514__auto__;
      }
    }
  }
};
cljs.core.isa_QMARK_.cljs$lang$maxFixedArity = 3;
cljs.core.parents = function cljs$core$parents() {
  var args26867 = [];
  var len__5565__auto___26871 = arguments.length;
  var i__5566__auto___26872 = 0;
  while (true) {
    if (i__5566__auto___26872 < len__5565__auto___26871) {
      args26867.push(arguments[i__5566__auto___26872]);
      var G__26873 = i__5566__auto___26872 + 1;
      i__5566__auto___26872 = G__26873;
      continue;
    } else {
    }
    break;
  }
  var G__26869 = args26867.length;
  switch(G__26869) {
    case 1:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26867.length)].join(""));;
  }
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(function() {
    var G__26870 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26870) : cljs.core.deref.call(null, G__26870);
  }(), tag);
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.parents.cljs$lang$maxFixedArity = 2;
cljs.core.ancestors = function cljs$core$ancestors() {
  var args26875 = [];
  var len__5565__auto___26879 = arguments.length;
  var i__5566__auto___26880 = 0;
  while (true) {
    if (i__5566__auto___26880 < len__5565__auto___26879) {
      args26875.push(arguments[i__5566__auto___26880]);
      var G__26881 = i__5566__auto___26880 + 1;
      i__5566__auto___26880 = G__26881;
      continue;
    } else {
    }
    break;
  }
  var G__26877 = args26875.length;
  switch(G__26877) {
    case 1:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26875.length)].join(""));;
  }
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(function() {
    var G__26878 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26878) : cljs.core.deref.call(null, G__26878);
  }(), tag);
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.ancestors.cljs$lang$maxFixedArity = 2;
cljs.core.descendants = function cljs$core$descendants() {
  var args26883 = [];
  var len__5565__auto___26887 = arguments.length;
  var i__5566__auto___26888 = 0;
  while (true) {
    if (i__5566__auto___26888 < len__5565__auto___26887) {
      args26883.push(arguments[i__5566__auto___26888]);
      var G__26889 = i__5566__auto___26888 + 1;
      i__5566__auto___26888 = G__26889;
      continue;
    } else {
    }
    break;
  }
  var G__26885 = args26883.length;
  switch(G__26885) {
    case 1:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26883.length)].join(""));;
  }
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(function() {
    var G__26886 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26886) : cljs.core.deref.call(null, G__26886);
  }(), tag);
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.descendants.cljs$lang$maxFixedArity = 2;
cljs.core.derive = function cljs$core$derive() {
  var args26891 = [];
  var len__5565__auto___26894 = arguments.length;
  var i__5566__auto___26895 = 0;
  while (true) {
    if (i__5566__auto___26895 < len__5565__auto___26894) {
      args26891.push(arguments[i__5566__auto___26895]);
      var G__26896 = i__5566__auto___26895 + 1;
      i__5566__auto___26895 = G__26896;
      continue;
    } else {
    }
    break;
  }
  var G__26893 = args26891.length;
  switch(G__26893) {
    case 2:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26891.length)].join(""));;
  }
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  if (cljs.core.truth_(cljs.core.namespace(parent))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", 1263021155, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
  }
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.derive, cljs.core.array_seq([tag, parent], 0));
  return null;
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag, parent)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", 1466536204, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
  }
  var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
  var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
  var tf = function(tp, td, ta) {
    return function(m, source, sources, target, targets) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(tp, td, ta) {
        return function(ret, k) {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(target, targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(target) : targets.call(null, target))));
        };
      }(tp, td, ta), m, cljs.core.cons(source, sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(source) : sources.call(null, source)));
    };
  }(tp, td, ta);
  var or__4526__auto__ = cljs.core.contains_QMARK_(tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(tag) : tp.call(null, tag), parent) ? null : function() {
    if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(tag) : ta.call(null, tag), parent)) {
      throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
    } else {
    }
    if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(parent) : ta.call(null, parent), tag)) {
      throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
    } else {
    }
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf((new cljs.core.Keyword(null, 
    "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
  }();
  if (cljs.core.truth_(or__4526__auto__)) {
    return or__4526__auto__;
  } else {
    return h;
  }
};
cljs.core.derive.cljs$lang$maxFixedArity = 3;
cljs.core.underive = function cljs$core$underive() {
  var args26901 = [];
  var len__5565__auto___26904 = arguments.length;
  var i__5566__auto___26905 = 0;
  while (true) {
    if (i__5566__auto___26905 < len__5565__auto___26904) {
      args26901.push(arguments[i__5566__auto___26905]);
      var G__26906 = i__5566__auto___26905 + 1;
      i__5566__auto___26905 = G__26906;
      continue;
    } else {
    }
    break;
  }
  var G__26903 = args26901.length;
  switch(G__26903) {
    case 2:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26901.length)].join(""));;
  }
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.underive, cljs.core.array_seq([tag, parent], 0));
  return null;
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var childsParents = cljs.core.truth_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag)) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
  var newParents = cljs.core.truth_(cljs.core.not_empty(childsParents)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap, tag, childsParents) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap, tag);
  var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(parentMap, childsParents, newParents) {
    return function(p1__26898_SHARP_) {
      return cljs.core.cons(cljs.core.first(p1__26898_SHARP_), cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__26898_SHARP_), cljs.core.second(p1__26898_SHARP_)));
    };
  }(parentMap, childsParents, newParents), cljs.core.seq(newParents)));
  if (cljs.core.contains_QMARK_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent)) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(parentMap, childsParents, newParents, deriv_seq) {
      return function(p1__26899_SHARP_, p2__26900_SHARP_) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, p1__26899_SHARP_, p2__26900_SHARP_);
      };
    }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, deriv_seq));
  } else {
    return h;
  }
};
cljs.core.underive.cljs$lang$maxFixedArity = 3;
cljs.core.reset_cache = function cljs$core$reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache, function(_) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(method_table) : cljs.core.deref.call(null, method_table);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy, function(_) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy);
  });
};
cljs.core.prefers_STAR_ = function cljs$core$prefers_STAR_(x, y, prefer_table) {
  var xprefs = (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(prefer_table) : cljs.core.deref.call(null, prefer_table)).call(null, x);
  var or__4526__auto__ = cljs.core.truth_(function() {
    var and__4514__auto__ = xprefs;
    if (cljs.core.truth_(and__4514__auto__)) {
      return xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(y) : xprefs.call(null, y);
    } else {
      return and__4514__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__4526__auto__)) {
    return or__4526__auto__;
  } else {
    var or__4526__auto____$1 = function() {
      var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
      while (true) {
        if (cljs.core.count(ps) > 0) {
          if (cljs.core.truth_(cljs$core$prefers_STAR_(x, cljs.core.first(ps), prefer_table))) {
          } else {
          }
          var G__26920 = cljs.core.rest(ps);
          ps = G__26920;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__4526__auto____$1)) {
      return or__4526__auto____$1;
    } else {
      var or__4526__auto____$2 = function() {
        var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
        while (true) {
          if (cljs.core.count(ps) > 0) {
            if (cljs.core.truth_(cljs$core$prefers_STAR_(cljs.core.first(ps), y, prefer_table))) {
            } else {
            }
            var G__26921 = cljs.core.rest(ps);
            ps = G__26921;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__4526__auto____$2)) {
        return or__4526__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function cljs$core$dominates(x, y, prefer_table) {
  var or__4526__auto__ = cljs.core.prefers_STAR_(x, y, prefer_table);
  if (cljs.core.truth_(or__4526__auto__)) {
    return or__4526__auto__;
  } else {
    return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x, y);
  }
};
cljs.core.find_and_cache_best_method = function cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(be, p__26924) {
    var vec__26925 = p__26924;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26925, 0, null);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26925, 1, null);
    var e = vec__26925;
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__4526__auto__ = be == null;
        if (or__4526__auto__) {
          return or__4526__auto__;
        } else {
          return cljs.core.dominates(k, cljs.core.first(be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first(be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(method_table) : cljs.core.deref.call(null, method_table));
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cached_hierarchy) : cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache, cljs.core.assoc, dispatch_val, cljs.core.second(best_entry));
      return cljs.core.second(best_entry);
    } else {
      cljs.core.reset_cache(method_cache, method_table, cached_hierarchy, hierarchy);
      return cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = {};
cljs.core._reset = function cljs$core$_reset(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_reset$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__5162__auto__ = mf == null ? null : mf;
    var m__5163__auto__ = cljs.core._reset[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__5163__auto__.call(null, mf);
    } else {
      var m__5163__auto____$1 = cljs.core._reset["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__5163__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-reset", mf);
      }
    }
  }
};
cljs.core._add_method = function cljs$core$_add_method(mf, dispatch_val, method) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_add_method$arity$3 == null)) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__5162__auto__ = mf == null ? null : mf;
    var m__5163__auto__ = cljs.core._add_method[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, method) : m__5163__auto__.call(null, mf, dispatch_val, method);
    } else {
      var m__5163__auto____$1 = cljs.core._add_method["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, method) : m__5163__auto____$1.call(null, mf, dispatch_val, method);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-add-method", mf);
      }
    }
  }
};
cljs.core._remove_method = function cljs$core$_remove_method(mf, dispatch_val) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_remove_method$arity$2 == null)) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__5162__auto__ = mf == null ? null : mf;
    var m__5163__auto__ = cljs.core._remove_method[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__5163__auto__.call(null, mf, dispatch_val);
    } else {
      var m__5163__auto____$1 = cljs.core._remove_method["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__5163__auto____$1.call(null, mf, dispatch_val);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-remove-method", mf);
      }
    }
  }
};
cljs.core._prefer_method = function cljs$core$_prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_prefer_method$arity$3 == null)) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__5162__auto__ = mf == null ? null : mf;
    var m__5163__auto__ = cljs.core._prefer_method[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, dispatch_val_y) : m__5163__auto__.call(null, mf, dispatch_val, dispatch_val_y);
    } else {
      var m__5163__auto____$1 = cljs.core._prefer_method["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, dispatch_val_y) : m__5163__auto____$1.call(null, mf, dispatch_val, dispatch_val_y);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-prefer-method", mf);
      }
    }
  }
};
cljs.core._get_method = function cljs$core$_get_method(mf, dispatch_val) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_get_method$arity$2 == null)) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__5162__auto__ = mf == null ? null : mf;
    var m__5163__auto__ = cljs.core._get_method[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__5163__auto__.call(null, mf, dispatch_val);
    } else {
      var m__5163__auto____$1 = cljs.core._get_method["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__5163__auto____$1.call(null, mf, dispatch_val);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-get-method", mf);
      }
    }
  }
};
cljs.core._methods = function cljs$core$_methods(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_methods$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__5162__auto__ = mf == null ? null : mf;
    var m__5163__auto__ = cljs.core._methods[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__5163__auto__.call(null, mf);
    } else {
      var m__5163__auto____$1 = cljs.core._methods["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__5163__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-methods", mf);
      }
    }
  }
};
cljs.core._prefers = function cljs$core$_prefers(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_prefers$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__5162__auto__ = mf == null ? null : mf;
    var m__5163__auto__ = cljs.core._prefers[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__5163__auto__.call(null, mf);
    } else {
      var m__5163__auto____$1 = cljs.core._prefers["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__5163__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-prefers", mf);
      }
    }
  }
};
cljs.core._default_dispatch_val = function cljs$core$_default_dispatch_val(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1(mf);
  } else {
    var x__5162__auto__ = mf == null ? null : mf;
    var m__5163__auto__ = cljs.core._default_dispatch_val[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__5163__auto__.call(null, mf);
    } else {
      var m__5163__auto____$1 = cljs.core._default_dispatch_val["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__5163__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-default-dispatch-val", mf);
      }
    }
  }
};
cljs.core._dispatch_fn = function cljs$core$_dispatch_fn(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_dispatch_fn$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_dispatch_fn$arity$1(mf);
  } else {
    var x__5162__auto__ = mf == null ? null : mf;
    var m__5163__auto__ = cljs.core._dispatch_fn[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__5163__auto__.call(null, mf);
    } else {
      var m__5163__auto____$1 = cljs.core._dispatch_fn["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__5163__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-dispatch-fn", mf);
      }
    }
  }
};
cljs.core.throw_no_method_error = function cljs$core$throw_no_method_error(name, dispatch_val) {
  throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.call = function() {
  var G__26929 = null;
  var G__26929__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
  };
  var G__26929__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null, a);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null, a);
  };
  var G__26929__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.dispatch_fn.call(null, a, b);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a, b) : target_fn.call(null, a, b);
  };
  var G__26929__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.dispatch_fn.call(null, a, b, c);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : target_fn.call(null, a, b, c);
  };
  var G__26929__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.dispatch_fn.call(null, a, b, c, d);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : target_fn.call(null, a, b, c, d);
  };
  var G__26929__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.dispatch_fn.call(null, a, b, c, d, e);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : target_fn.call(null, a, b, c, d, e);
  };
  var G__26929__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.dispatch_fn.call(null, a, b, c, d, e, f);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : target_fn.call(null, a, b, c, d, e, f);
  };
  var G__26929__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : target_fn.call(null, a, b, c, d, e, f, g);
  };
  var G__26929__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : target_fn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__26929__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : target_fn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__26929__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__26929__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__26929__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__26929__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__26929__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__26929__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__26929__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__26929__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__26929__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__26929__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__26929__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__26929__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__26929 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__26929__1.call(this, self__);
      case 2:
        return G__26929__2.call(this, self__, a);
      case 3:
        return G__26929__3.call(this, self__, a, b);
      case 4:
        return G__26929__4.call(this, self__, a, b, c);
      case 5:
        return G__26929__5.call(this, self__, a, b, c, d);
      case 6:
        return G__26929__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__26929__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__26929__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__26929__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__26929__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__26929__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__26929__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__26929__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__26929__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__26929__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__26929__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__26929__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__26929__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__26929__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__26929__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__26929__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__26929__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__26929.cljs$core$IFn$_invoke$arity$1 = G__26929__1;
  G__26929.cljs$core$IFn$_invoke$arity$2 = G__26929__2;
  G__26929.cljs$core$IFn$_invoke$arity$3 = G__26929__3;
  G__26929.cljs$core$IFn$_invoke$arity$4 = G__26929__4;
  G__26929.cljs$core$IFn$_invoke$arity$5 = G__26929__5;
  G__26929.cljs$core$IFn$_invoke$arity$6 = G__26929__6;
  G__26929.cljs$core$IFn$_invoke$arity$7 = G__26929__7;
  G__26929.cljs$core$IFn$_invoke$arity$8 = G__26929__8;
  G__26929.cljs$core$IFn$_invoke$arity$9 = G__26929__9;
  G__26929.cljs$core$IFn$_invoke$arity$10 = G__26929__10;
  G__26929.cljs$core$IFn$_invoke$arity$11 = G__26929__11;
  G__26929.cljs$core$IFn$_invoke$arity$12 = G__26929__12;
  G__26929.cljs$core$IFn$_invoke$arity$13 = G__26929__13;
  G__26929.cljs$core$IFn$_invoke$arity$14 = G__26929__14;
  G__26929.cljs$core$IFn$_invoke$arity$15 = G__26929__15;
  G__26929.cljs$core$IFn$_invoke$arity$16 = G__26929__16;
  G__26929.cljs$core$IFn$_invoke$arity$17 = G__26929__17;
  G__26929.cljs$core$IFn$_invoke$arity$18 = G__26929__18;
  G__26929.cljs$core$IFn$_invoke$arity$19 = G__26929__19;
  G__26929.cljs$core$IFn$_invoke$arity$20 = G__26929__20;
  G__26929.cljs$core$IFn$_invoke$arity$21 = G__26929__21;
  G__26929.cljs$core$IFn$_invoke$arity$22 = G__26929__22;
  return G__26929;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args26928) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args26928)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null, a);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null, a);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.dispatch_fn.call(null, a, b);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a, b) : target_fn.call(null, a, b);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.dispatch_fn.call(null, a, b, c);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : target_fn.call(null, a, b, c);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.dispatch_fn.call(null, a, b, c, d);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : target_fn.call(null, a, b, c, d);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.dispatch_fn.call(null, a, b, c, d, e);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : target_fn.call(null, a, b, c, d, e);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.dispatch_fn.call(null, a, b, c, d, e, f);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : target_fn.call(null, a, b, c, d, e, f);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : target_fn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : target_fn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : target_fn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_default_dispatch_val$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.default_dispatch_val;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_table) : cljs.core.deref.call(null, self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.prefer_table) : cljs.core.deref.call(null, self__.prefer_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch_fn$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.dispatch_fn;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.cached_hierarchy) : cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.hierarchy) : cljs.core.deref.call(null, self__.hierarchy))) {
  } else {
    cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4423__auto__ = (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_cache) : cljs.core.deref.call(null, self__.method_cache)).call(null, dispatch_val);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var target_fn = temp__4423__auto__;
    return target_fn;
  } else {
    var temp__4423__auto____$1 = cljs.core.find_and_cache_best_method(self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4423__auto____$1)) {
      var target_fn = temp__4423__auto____$1;
      return target_fn;
    } else {
      return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_table) : cljs.core.deref.call(null, self__.method_table)).call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "dispatch-fn", "dispatch-fn", -1401088155, null), new cljs.core.Symbol(null, "default-dispatch-val", "default-dispatch-val", -1231201266, null), new cljs.core.Symbol(null, "hierarchy", "hierarchy", 587061186, null), new cljs.core.Symbol(null, "method-table", "method-table", -1878263165, null), new cljs.core.Symbol(null, 
  "prefer-table", "prefer-table", 462168584, null), new cljs.core.Symbol(null, "method-cache", "method-cache", 1230193905, null), new cljs.core.Symbol(null, "cached-hierarchy", "cached-hierarchy", -1085460203, null)], null);
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function cljs$core$__GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function cljs$core$remove_all_methods(multifn) {
  return cljs.core._reset(multifn);
};
cljs.core.remove_method = function cljs$core$remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method(multifn, dispatch_val);
};
cljs.core.prefer_method = function cljs$core$prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method(multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function cljs$core$methods(multifn) {
  return cljs.core._methods(multifn);
};
cljs.core.get_method = function cljs$core$get_method(multifn, dispatch_val) {
  return cljs.core._get_method(multifn, dispatch_val);
};
cljs.core.prefers = function cljs$core$prefers(multifn) {
  return cljs.core._prefers(multifn);
};
cljs.core.default_dispatch_val = function cljs$core$default_dispatch_val(multifn) {
  return cljs.core._default_dispatch_val(multifn);
};
cljs.core.dispatch_fn = function cljs$core$dispatch_fn(multifn) {
  return cljs.core._dispatch_fn(multifn);
};
cljs.core.UUID = function(uuid, __hash) {
  this.uuid = uuid;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
  this.cljs$lang$protocol_mask$partition1$ = 2048;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write(writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.__hash == null) {
    self__.__hash = goog.string.hashCode(self__.uuid);
  } else {
  }
  return self__.__hash;
};
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  var G__26930 = self__.uuid;
  var G__26931 = other.uuid;
  return goog.array.defaultCompare(G__26930, G__26931);
};
cljs.core.UUID.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "uuid", "uuid", -504564192, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function cljs$core$__GT_UUID(uuid, __hash) {
  return new cljs.core.UUID(uuid, __hash);
};
cljs.core.uuid = function cljs$core$uuid(s) {
  return new cljs.core.UUID(s, null);
};
cljs.core.random_uuid = function cljs$core$random_uuid() {
  var hex = function cljs$core$random_uuid_$_hex() {
    return cljs.core.rand_int(15).toString(16);
  };
  var rhex = (8 | 3 & cljs.core.rand_int(14)).toString(16);
  return cljs.core.uuid([cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str("4"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str(rhex), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), 
  cljs.core.str("-"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex())].join(""));
};
cljs.core.pr_writer_ex_info = function cljs$core$pr_writer_ex_info(obj, writer, opts) {
  cljs.core._write(writer, "#error {:message ");
  cljs.core.pr_writer(obj.message, writer, opts);
  if (cljs.core.truth_(obj.data)) {
    cljs.core._write(writer, ", :data ");
    cljs.core.pr_writer(obj.data, writer, opts);
  } else {
  }
  if (cljs.core.truth_(obj.cause)) {
    cljs.core._write(writer, ", :cause ");
    cljs.core.pr_writer(obj.cause, writer, opts);
  } else {
  }
  return cljs.core._write(writer, "}");
};
cljs.core.ExceptionInfo = function cljs$core$ExceptionInfo(message, data, cause) {
  var e = new Error(message);
  var this$ = this;
  this$.message = message;
  this$.data = data;
  this$.cause = cause;
  this$.name = e.name;
  this$.description = e.description;
  this$.number = e.number;
  this$.fileName = e.fileName;
  this$.lineNumber = e.lineNumber;
  this$.columnNumber = e.columnNumber;
  this$.stack = e.stack;
  return this$;
};
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(obj, writer, opts) {
  var obj__$1 = this;
  return cljs.core.pr_writer_ex_info(obj__$1, writer, opts);
};
cljs.core.ExceptionInfo.prototype.toString = function() {
  var this$ = this;
  return cljs.core.pr_str_STAR_(this$);
};
cljs.core.ex_info = function cljs$core$ex_info() {
  var args26932 = [];
  var len__5565__auto___26935 = arguments.length;
  var i__5566__auto___26936 = 0;
  while (true) {
    if (i__5566__auto___26936 < len__5565__auto___26935) {
      args26932.push(arguments[i__5566__auto___26936]);
      var G__26937 = i__5566__auto___26936 + 1;
      i__5566__auto___26936 = G__26937;
      continue;
    } else {
    }
    break;
  }
  var G__26934 = args26932.length;
  switch(G__26934) {
    case 2:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26932.length)].join(""));;
  }
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2 = function(msg, data) {
  return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(msg, data, null);
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3 = function(msg, data, cause) {
  return new cljs.core.ExceptionInfo(msg, data, cause);
};
cljs.core.ex_info.cljs$lang$maxFixedArity = 3;
cljs.core.ex_data = function cljs$core$ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function cljs$core$ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function cljs$core$ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function cljs$core$comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(x, y) : pred.call(null, x, y))) {
      return -1;
    } else {
      if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(y, x) : pred.call(null, y, x))) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function cljs$core$special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, "letfn*", 
  "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), 
  null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
cljs.core.test = function cljs$core$test(v) {
  var f = v.cljs$lang$test;
  if (cljs.core.truth_(f)) {
    f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    return new cljs.core.Keyword(null, "ok", "ok", 967785236);
  } else {
    return new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
  }
};
cljs.core.TaggedLiteral = function(tag, form) {
  this.tag = tag;
  this.form = form;
  this.cljs$lang$protocol_mask$partition0$ = 2153775360;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.TaggedLiteral.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  return other instanceof cljs.core.TaggedLiteral && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.tag, other.tag) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.form, other.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return 31 * cljs.core.hash(self__.tag) + cljs.core.hash(self__.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, v) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this$__$1, v, null);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, v, not_found) {
  var self__ = this;
  var this$__$1 = this;
  var G__26939 = v instanceof cljs.core.Keyword ? v.fqn : null;
  switch(G__26939) {
    case "tag":
      return self__.tag;
      break;
    case "form":
      return self__.form;
      break;
    default:
      return not_found;
  }
};
cljs.core.TaggedLiteral.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, opts) {
  var self__ = this;
  var o__$1 = this;
  cljs.core._write(writer, [cljs.core.str("#"), cljs.core.str(self__.tag), cljs.core.str(" ")].join(""));
  return cljs.core.pr_writer(self__.form, writer, opts);
};
cljs.core.TaggedLiteral.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "form", "form", 16469056, null)], null);
};
cljs.core.TaggedLiteral.cljs$lang$type = true;
cljs.core.TaggedLiteral.cljs$lang$ctorStr = "cljs.core/TaggedLiteral";
cljs.core.TaggedLiteral.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/TaggedLiteral");
};
cljs.core.__GT_TaggedLiteral = function cljs$core$__GT_TaggedLiteral(tag, form) {
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.tagged_literal_QMARK_ = function cljs$core$tagged_literal_QMARK_(value) {
  return value instanceof cljs.core.TaggedLiteral;
};
cljs.core.tagged_literal = function cljs$core$tagged_literal(tag, form) {
  if (tag instanceof cljs.core.Symbol) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "symbol?", "symbol?", 1820680511, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null))], 0)))].join(""));
  }
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.js_reserved_arr = ["abstract", "boolean", "break", "byte", "case", "catch", "char", "class", "const", "continue", "debugger", "default", "delete", "do", "double", "else", "enum", "export", "extends", "final", "finally", "float", "for", "function", "goto", "if", "implements", "import", "in", "instanceof", "int", "interface", "let", "long", "native", "new", "package", "private", "protected", "public", "return", "short", "static", "super", "switch", "synchronized", "this", "throw", "throws", 
"transient", "try", "typeof", "var", "void", "volatile", "while", "with", "yield", "methods", "null"];
cljs.core.js_reserved = null;
cljs.core.js_reserved_QMARK_ = function cljs$core$js_reserved_QMARK_(x) {
  if (cljs.core.js_reserved == null) {
    cljs.core.js_reserved = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__26941_SHARP_, p2__26942_SHARP_) {
      goog.object.set(p1__26941_SHARP_, p2__26942_SHARP_, true);
      return p1__26941_SHARP_;
    }, {}, cljs.core.js_reserved_arr);
  } else {
  }
  return goog.object.containsKey(cljs.core.js_reserved, x);
};
cljs.core.demunge_pattern = function cljs$core$demunge_pattern() {
  if (cljs.core.truth_(cljs.core.DEMUNGE_PATTERN)) {
  } else {
    cljs.core.DEMUNGE_PATTERN = function() {
      var ks = cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(a, b) {
        return b.length - a.length;
      }, cljs.core.js_keys(cljs.core.DEMUNGE_MAP));
      var ks__$1 = ks;
      var ret = "";
      while (true) {
        if (cljs.core.seq(ks__$1)) {
          var G__26945 = cljs.core.next(ks__$1);
          var G__26946 = [cljs.core.str(function() {
            var G__26944 = ret;
            var G__26944__$1 = !(ret === "") ? [cljs.core.str(G__26944), cljs.core.str("|")].join("") : G__26944;
            return G__26944__$1;
          }()), cljs.core.str(cljs.core.first(ks__$1))].join("");
          ks__$1 = G__26945;
          ret = G__26946;
          continue;
        } else {
          return [cljs.core.str(ret), cljs.core.str("|\\$")].join("");
        }
        break;
      }
    }();
  }
  return cljs.core.DEMUNGE_PATTERN;
};
cljs.core.munge_str = function cljs$core$munge_str(name) {
  var sb = new goog.string.StringBuffer;
  var i_26947 = 0;
  while (true) {
    if (i_26947 < name.length) {
      var c_26948 = name.charAt(i_26947);
      var sub_26949 = goog.object.get(cljs.core.CHAR_MAP, c_26948);
      if (!(sub_26949 == null)) {
        sb.append(sub_26949);
      } else {
        sb.append(c_26948);
      }
      var G__26950 = i_26947 + 1;
      i_26947 = G__26950;
      continue;
    } else {
    }
    break;
  }
  return sb.toString();
};
cljs.core.munge = function cljs$core$munge(name) {
  var name_SINGLEQUOTE_ = cljs.core.munge_str([cljs.core.str(name)].join(""));
  var name_SINGLEQUOTE___$1 = name_SINGLEQUOTE_ === ".." ? "_DOT__DOT_" : cljs.core.truth_(cljs.core.js_reserved_QMARK_(name_SINGLEQUOTE_)) ? [cljs.core.str(name_SINGLEQUOTE_), cljs.core.str("$")].join("") : name_SINGLEQUOTE_;
  if (name instanceof cljs.core.Symbol) {
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name_SINGLEQUOTE___$1);
  } else {
    return [cljs.core.str(name_SINGLEQUOTE___$1)].join("");
  }
};
cljs.core.demunge_str = function cljs$core$demunge_str(munged_name) {
  var r = new RegExp(cljs.core.demunge_pattern(), "g");
  var munged_name__$1 = cljs.core.truth_(goog.string.endsWith(munged_name, "$")) ? munged_name.substring(0, munged_name.length - 1) : munged_name;
  var ret = "";
  var last_match_end = 0;
  while (true) {
    var temp__4423__auto__ = r.exec(munged_name__$1);
    if (cljs.core.truth_(temp__4423__auto__)) {
      var match = temp__4423__auto__;
      var vec__26952 = match;
      var x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26952, 0, null);
      var G__26953 = [cljs.core.str(ret), cljs.core.str(munged_name__$1.substring(last_match_end, r.lastIndex - x.length)), cljs.core.str(x === "$" ? "/" : goog.object.get(cljs.core.DEMUNGE_MAP, x))].join("");
      var G__26954 = r.lastIndex;
      ret = G__26953;
      last_match_end = G__26954;
      continue;
    } else {
      return [cljs.core.str(ret), cljs.core.str(munged_name__$1.substring(last_match_end, munged_name__$1.length))].join("");
    }
    break;
  }
};
cljs.core.demunge = function cljs$core$demunge(name) {
  return (name instanceof cljs.core.Symbol ? cljs.core.symbol : cljs.core.str).call(null, function() {
    var name_SINGLEQUOTE_ = [cljs.core.str(name)].join("");
    if (name_SINGLEQUOTE_ === "_DOT__DOT_") {
      return "..";
    } else {
      return cljs.core.demunge_str([cljs.core.str(name)].join(""));
    }
  }());
};
cljs.core.ns_lookup = function cljs$core$ns_lookup(ns_obj, k) {
  return function() {
    return goog.object.get(ns_obj, k);
  };
};
cljs.core.Namespace = function(obj, name) {
  this.obj = obj;
  this.name = name;
  this.cljs$lang$protocol_mask$partition0$ = 6291456;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Namespace.prototype.findInternedVar = function(sym) {
  var self__ = this;
  var this$ = this;
  var k = cljs.core.munge([cljs.core.str(sym)].join(""));
  if (goog.object.containsKey(self__.obj, k)) {
    var var_sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(self__.name)].join(""), [cljs.core.str(sym)].join(""));
    var var_meta = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), this$], null);
    return new cljs.core.Var(cljs.core.ns_lookup(self__.obj, k), var_sym, var_meta);
  } else {
    return null;
  }
};
cljs.core.Namespace.prototype.getName = function() {
  var self__ = this;
  var _ = this;
  return self__.name;
};
cljs.core.Namespace.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [cljs.core.str(self__.name)].join("");
};
cljs.core.Namespace.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Namespace) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.name, other.name);
  } else {
    return false;
  }
};
cljs.core.Namespace.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash(self__.name);
};
cljs.core.Namespace.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "obj", "obj", -1672671807, null), new cljs.core.Symbol(null, "name", "name", -810760592, null)], null);
};
cljs.core.Namespace.cljs$lang$type = true;
cljs.core.Namespace.cljs$lang$ctorStr = "cljs.core/Namespace";
cljs.core.Namespace.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/Namespace");
};
cljs.core.__GT_Namespace = function cljs$core$__GT_Namespace(obj, name) {
  return new cljs.core.Namespace(obj, name);
};
cljs.core.NS_CACHE = null;
cljs.core.find_ns_obj_STAR_ = function cljs$core$find_ns_obj_STAR_(ctxt, xs) {
  while (true) {
    if (ctxt == null) {
      return null;
    } else {
      if (xs == null) {
        return ctxt;
      } else {
        var G__26959 = function() {
          var G__26957 = ctxt;
          var G__26958 = cljs.core.first(xs);
          return goog.object.get(G__26957, G__26958);
        }();
        var G__26960 = cljs.core.next(xs);
        ctxt = G__26959;
        xs = G__26960;
        continue;
      }
    }
    break;
  }
};
cljs.core.find_ns_obj = function cljs$core$find_ns_obj(ns) {
  var munged_ns = cljs.core.munge([cljs.core.str(ns)].join(""));
  var segs = munged_ns.split(".");
  var G__26962 = cljs.core._STAR_target_STAR_;
  switch(G__26962) {
    case "nodejs":
      if (COMPILED) {
        return eval(munged_ns);
      } else {
        return cljs.core.find_ns_obj_STAR_(global, segs);
      }
      break;
    case "default":
      return cljs.core.find_ns_obj_STAR_(window, segs);
      break;
    default:
      throw new Error([cljs.core.str("find-ns-obj not supported for target "), cljs.core.str(cljs.core._STAR_target_STAR_)].join(""));;
  }
};
cljs.core.ns_interns_STAR_ = function cljs$core$ns_interns_STAR_(sym) {
  var ns_obj = cljs.core.find_ns_obj(sym);
  var ns = new cljs.core.Namespace(ns_obj, sym);
  var step = function(ns_obj, ns) {
    return function cljs$core$ns_interns_STAR__$_step(ret, k) {
      var var_sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.demunge(k));
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, var_sym, new cljs.core.Var(function(var_sym, ns_obj, ns) {
        return function() {
          return goog.object.get(ns_obj, k);
        };
      }(var_sym, ns_obj, ns), cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(sym)].join(""), [cljs.core.str(var_sym)].join("")), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), ns], null)));
    };
  }(ns_obj, ns);
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(step, cljs.core.PersistentArrayMap.EMPTY, cljs.core.js_keys(ns_obj));
};
cljs.core.create_ns = function cljs$core$create_ns() {
  var args26964 = [];
  var len__5565__auto___26967 = arguments.length;
  var i__5566__auto___26968 = 0;
  while (true) {
    if (i__5566__auto___26968 < len__5565__auto___26967) {
      args26964.push(arguments[i__5566__auto___26968]);
      var G__26969 = i__5566__auto___26968 + 1;
      i__5566__auto___26968 = G__26969;
      continue;
    } else {
    }
    break;
  }
  var G__26966 = args26964.length;
  switch(G__26966) {
    case 1:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26964.length)].join(""));;
  }
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1 = function(sym) {
  return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(sym, cljs.core.find_ns_obj(sym));
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2 = function(sym, ns_obj) {
  return new cljs.core.Namespace(ns_obj, sym);
};
cljs.core.create_ns.cljs$lang$maxFixedArity = 2;
cljs.core.find_ns = function cljs$core$find_ns(ns) {
  if (cljs.core.NS_CACHE == null) {
    cljs.core.NS_CACHE = function() {
      var G__26972 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__26972) : cljs.core.atom.call(null, G__26972);
    }();
  } else {
  }
  var the_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.core.NS_CACHE) : cljs.core.deref.call(null, cljs.core.NS_CACHE), ns);
  if (!(the_ns == null)) {
    return the_ns;
  } else {
    var ns_obj = cljs.core.find_ns_obj(ns);
    if (ns_obj == null) {
      return null;
    } else {
      var new_ns = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns, ns_obj);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, ns, new_ns);
      return new_ns;
    }
  }
};
cljs.core.find_macros_ns = function cljs$core$find_macros_ns(ns) {
  if (cljs.core.NS_CACHE == null) {
    cljs.core.NS_CACHE = function() {
      var G__26974 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__26974) : cljs.core.atom.call(null, G__26974);
    }();
  } else {
  }
  var the_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.core.NS_CACHE) : cljs.core.deref.call(null, cljs.core.NS_CACHE), ns);
  if (!(the_ns == null)) {
    return the_ns;
  } else {
    var ns_str = [cljs.core.str(ns)].join("");
    var ns__$1 = !goog.string.contains(ns_str, "$macros") ? cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(ns_str), cljs.core.str("$macros")].join("")) : ns;
    var ns_obj = cljs.core.find_ns_obj(ns__$1);
    if (ns_obj == null) {
      return null;
    } else {
      var new_ns = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns__$1, ns_obj);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, ns__$1, new_ns);
      return new_ns;
    }
  }
};
cljs.core.ns_name = function cljs$core$ns_name(ns_obj) {
  return ns_obj.name;
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
clojure.string.seq_reverse = function clojure$string$seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.re_surrogate_pair = new RegExp("([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])", "g");
clojure.string.reverse = function clojure$string$reverse(s) {
  return s.replace(clojure.string.re_surrogate_pair, "$2$1").split("").reverse().join("");
};
clojure.string.replace = function clojure$string$replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (match instanceof RegExp) {
      return s.replace(new RegExp(match.source, "g"), replacement);
    } else {
      throw [cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
    }
  }
};
clojure.string.replace_first = function clojure$string$replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function clojure$string$join() {
  var args18205 = [];
  var len__5565__auto___18208 = arguments.length;
  var i__5566__auto___18209 = 0;
  while (true) {
    if (i__5566__auto___18209 < len__5565__auto___18208) {
      args18205.push(arguments[i__5566__auto___18209]);
      var G__18210 = i__5566__auto___18209 + 1;
      i__5566__auto___18209 = G__18210;
      continue;
    } else {
    }
    break;
  }
  var G__18207 = args18205.length;
  switch(G__18207) {
    case 1:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args18205.length)].join(""));;
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var sb = new goog.string.StringBuffer;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__18212 = sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
      var G__18213 = cljs.core.next.call(null, coll__$1);
      sb = G__18212;
      coll__$1 = G__18213;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$2 = function(separator, coll) {
  var sb = new goog.string.StringBuffer;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
      var coll__$2 = cljs.core.next.call(null, coll__$1);
      if (coll__$2 == null) {
      } else {
        sb.append(separator);
      }
      var G__18214 = sb;
      var G__18215 = coll__$2;
      sb = G__18214;
      coll__$1 = G__18215;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
clojure.string.join.cljs$lang$maxFixedArity = 2;
clojure.string.upper_case = function clojure$string$upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function clojure$string$lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function clojure$string$capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return [cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("");
  }
};
clojure.string.pop_last_while_empty = function clojure$string$pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if ("" === cljs.core.peek.call(null, v__$1)) {
      var G__18216 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__18216;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function clojure$string$discard_trailing_if_needed(limit, v) {
  if (0 === limit) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function clojure$string$split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__18220 = cljs.core._EQ__EQ_;
    var expr__18221 = limit;
    if (cljs.core.truth_(pred__18220.call(null, 1, expr__18221))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__18220.call(null, 2, expr__18221))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function clojure$string$split() {
  var args18223 = [];
  var len__5565__auto___18226 = arguments.length;
  var i__5566__auto___18227 = 0;
  while (true) {
    if (i__5566__auto___18227 < len__5565__auto___18226) {
      args18223.push(arguments[i__5566__auto___18227]);
      var G__18228 = i__5566__auto___18227 + 1;
      i__5566__auto___18227 = G__18228;
      continue;
    } else {
    }
    break;
  }
  var G__18225 = args18223.length;
  switch(G__18225) {
    case 2:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args18223.length)].join(""));;
  }
};
clojure.string.split.cljs$core$IFn$_invoke$arity$2 = function(s, re) {
  return clojure.string.split.call(null, s, re, 0);
};
clojure.string.split.cljs$core$IFn$_invoke$arity$3 = function(s, re, limit) {
  return clojure.string.discard_trailing_if_needed.call(null, limit, "/(?:)/" === [cljs.core.str(re)].join("") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re)) : function() {
    var s__$1 = s;
    var limit__$1 = limit;
    var parts = cljs.core.PersistentVector.EMPTY;
    while (true) {
      if (1 === limit__$1) {
        return cljs.core.conj.call(null, parts, s__$1);
      } else {
        var m = cljs.core.re_find.call(null, re, s__$1);
        if (!(m == null)) {
          var index = s__$1.indexOf(m);
          var G__18230 = s__$1.substring(index + cljs.core.count.call(null, m));
          var G__18231 = limit__$1 - 1;
          var G__18232 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
          s__$1 = G__18230;
          limit__$1 = G__18231;
          parts = G__18232;
          continue;
        } else {
          return cljs.core.conj.call(null, parts, s__$1);
        }
      }
      break;
    }
  }());
};
clojure.string.split.cljs$lang$maxFixedArity = 3;
clojure.string.split_lines = function clojure$string$split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function clojure$string$trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function clojure$string$triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function clojure$string$trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function clojure$string$trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if ("\n" === ch || "\r" === ch) {
        var G__18233 = index - 1;
        index = G__18233;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function clojure$string$blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function clojure$string$escape(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (length === index) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var replacement = cljs.core.get.call(null, cmap, ch);
      if (!(replacement == null)) {
        buffer.append([cljs.core.str(replacement)].join(""));
      } else {
        buffer.append(ch);
      }
      var G__18234 = index + 1;
      index = G__18234;
      continue;
    }
    break;
  }
};
goog.provide("goog.string.format");
goog.require("goog.string");
goog.string.format = function(formatString, var_args) {
  var args = Array.prototype.slice.call(arguments);
  var template = args.shift();
  if (typeof template == "undefined") {
    throw Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\-\ \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if (type == "%") {
      return "%";
    }
    var value = args.shift();
    if (typeof value == "undefined") {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments);
  }
  return template.replace(formatRe, replacerDemuxer);
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_["s"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value;
  if (isNaN(width) || width == "" || replacement.length >= width) {
    return replacement;
  }
  if (flags.indexOf("-", 0) > -1) {
    replacement = replacement + goog.string.repeat(" ", width - replacement.length);
  } else {
    replacement = goog.string.repeat(" ", width - replacement.length) + replacement;
  }
  return replacement;
};
goog.string.format.demuxes_["f"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value.toString();
  if (!(isNaN(precision) || precision == "")) {
    replacement = parseFloat(value).toFixed(precision);
  }
  var sign;
  if (value < 0) {
    sign = "-";
  } else {
    if (flags.indexOf("+") >= 0) {
      sign = "+";
    } else {
      if (flags.indexOf(" ") >= 0) {
        sign = " ";
      } else {
        sign = "";
      }
    }
  }
  if (value >= 0) {
    replacement = sign + replacement;
  }
  if (isNaN(width) || replacement.length >= width) {
    return replacement;
  }
  replacement = isNaN(precision) ? Math.abs(value).toString() : Math.abs(value).toFixed(precision);
  var padCount = width - replacement.length - sign.length;
  if (flags.indexOf("-", 0) >= 0) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount);
  } else {
    var paddingChar = flags.indexOf("0", 0) >= 0 ? "0" : " ";
    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement;
  }
  return replacement;
};
goog.string.format.demuxes_["d"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  return goog.string.format.demuxes_["f"](parseInt(value, 10), flags, width, dotp, 0, type, offset, wholeString);
};
goog.string.format.demuxes_["i"] = goog.string.format.demuxes_["d"];
goog.string.format.demuxes_["u"] = goog.string.format.demuxes_["d"];
goog.provide("schema.utils");
goog.require("cljs.core");
goog.require("goog.string.format");
goog.require("goog.string");
schema.utils.assoc_when = function schema$utils$assoc_when() {
  var args__5572__auto__ = [];
  var len__5565__auto___19753 = arguments.length;
  var i__5566__auto___19754 = 0;
  while (true) {
    if (i__5566__auto___19754 < len__5565__auto___19753) {
      args__5572__auto__.push(arguments[i__5566__auto___19754]);
      var G__19755 = i__5566__auto___19754 + 1;
      i__5566__auto___19754 = G__19755;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return schema.utils.assoc_when.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
schema.utils.assoc_when.cljs$core$IFn$_invoke$arity$variadic = function(m, kvs) {
  if (cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, kvs))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1827825394, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "kvs", "kvs", -1695980277, null)))))].join(""));
  }
  return cljs.core.into.call(null, function() {
    var or__4526__auto__ = m;
    if (cljs.core.truth_(or__4526__auto__)) {
      return or__4526__auto__;
    } else {
      return cljs.core.PersistentArrayMap.EMPTY;
    }
  }(), function() {
    var iter__5279__auto__ = function schema$utils$iter__19745(s__19746) {
      return new cljs.core.LazySeq(null, function() {
        var s__19746__$1 = s__19746;
        while (true) {
          var temp__4425__auto__ = cljs.core.seq.call(null, s__19746__$1);
          if (temp__4425__auto__) {
            var s__19746__$2 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__19746__$2)) {
              var c__5277__auto__ = cljs.core.chunk_first.call(null, s__19746__$2);
              var size__5278__auto__ = cljs.core.count.call(null, c__5277__auto__);
              var b__19748 = cljs.core.chunk_buffer.call(null, size__5278__auto__);
              if (function() {
                var i__19747 = 0;
                while (true) {
                  if (i__19747 < size__5278__auto__) {
                    var vec__19751 = cljs.core._nth.call(null, c__5277__auto__, i__19747);
                    var k = cljs.core.nth.call(null, vec__19751, 0, null);
                    var v = cljs.core.nth.call(null, vec__19751, 1, null);
                    if (cljs.core.truth_(v)) {
                      cljs.core.chunk_append.call(null, b__19748, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null));
                      var G__19756 = i__19747 + 1;
                      i__19747 = G__19756;
                      continue;
                    } else {
                      var G__19757 = i__19747 + 1;
                      i__19747 = G__19757;
                      continue;
                    }
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__19748), schema$utils$iter__19745.call(null, cljs.core.chunk_rest.call(null, s__19746__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__19748), null);
              }
            } else {
              var vec__19752 = cljs.core.first.call(null, s__19746__$2);
              var k = cljs.core.nth.call(null, vec__19752, 0, null);
              var v = cljs.core.nth.call(null, vec__19752, 1, null);
              if (cljs.core.truth_(v)) {
                return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null), schema$utils$iter__19745.call(null, cljs.core.rest.call(null, s__19746__$2)));
              } else {
                var G__19758 = cljs.core.rest.call(null, s__19746__$2);
                s__19746__$1 = G__19758;
                continue;
              }
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__5279__auto__.call(null, cljs.core.partition.call(null, 2, kvs));
  }());
};
schema.utils.assoc_when.cljs$lang$maxFixedArity = 1;
schema.utils.assoc_when.cljs$lang$applyTo = function(seq19743) {
  var G__19744 = cljs.core.first.call(null, seq19743);
  var seq19743__$1 = cljs.core.next.call(null, seq19743);
  return schema.utils.assoc_when.cljs$core$IFn$_invoke$arity$variadic(G__19744, seq19743__$1);
};
schema.utils.type_of = function schema$utils$type_of(x) {
  return typeof x;
};
schema.utils.fn_schema_bearer = function schema$utils$fn_schema_bearer(f) {
  return f;
};
schema.utils.format_STAR_ = function schema$utils$format_STAR_() {
  var args__5572__auto__ = [];
  var len__5565__auto___19761 = arguments.length;
  var i__5566__auto___19762 = 0;
  while (true) {
    if (i__5566__auto___19762 < len__5565__auto___19761) {
      args__5572__auto__.push(arguments[i__5566__auto___19762]);
      var G__19763 = i__5566__auto___19762 + 1;
      i__5566__auto___19762 = G__19763;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return schema.utils.format_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
schema.utils.format_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(fmt, args) {
  return cljs.core.apply.call(null, goog.string.format, fmt, args);
};
schema.utils.format_STAR_.cljs$lang$maxFixedArity = 1;
schema.utils.format_STAR_.cljs$lang$applyTo = function(seq19759) {
  var G__19760 = cljs.core.first.call(null, seq19759);
  var seq19759__$1 = cljs.core.next.call(null, seq19759);
  return schema.utils.format_STAR_.cljs$core$IFn$_invoke$arity$variadic(G__19760, seq19759__$1);
};
schema.utils.value_name = function schema$utils$value_name(value) {
  var t = schema.utils.type_of.call(null, value);
  if (cljs.core.count.call(null, [cljs.core.str(value)].join("")) < 20) {
    return value;
  } else {
    return cljs.core.symbol.call(null, [cljs.core.str("a-"), cljs.core.str(t)].join(""));
  }
};
schema.utils.memoize_id = function schema$utils$memoize_id(f) {
  return cljs.core.memoize.call(null, f);
};
schema.utils.record_QMARK_ = function schema$utils$record_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 67108864 || x.cljs$core$IRecord$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IRecord, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IRecord, x);
  }
};
schema.utils.ValidationError = function(schema, value, expectation_delay, fail_explanation) {
  this.schema = schema;
  this.value = value;
  this.expectation_delay = expectation_delay;
  this.fail_explanation = fail_explanation;
  this.cljs$lang$protocol_mask$partition0$ = 2147483648;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
schema.utils.ValidationError.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this$, writer, opts) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._pr_writer.call(null, schema.utils.validation_error_explain.call(null, this$__$1), writer, opts);
};
schema.utils.ValidationError.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "schema", "schema", 58529736, null), new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.Symbol(null, "expectation-delay", "expectation-delay", -1886214669, null), new cljs.core.Symbol(null, "fail-explanation", "fail-explanation", 530278923, null)], null);
};
schema.utils.ValidationError.cljs$lang$type = true;
schema.utils.ValidationError.cljs$lang$ctorStr = "schema.utils/ValidationError";
schema.utils.ValidationError.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write.call(null, writer__5106__auto__, "schema.utils/ValidationError");
};
schema.utils.__GT_ValidationError = function schema$utils$__GT_ValidationError(schema__$1, value, expectation_delay, fail_explanation) {
  return new schema.utils.ValidationError(schema__$1, value, expectation_delay, fail_explanation);
};
schema.utils.validation_error_explain = function schema$utils$validation_error_explain(err) {
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, err.expectation_delay)), function() {
    var or__4526__auto__ = err.fail_explanation;
    if (cljs.core.truth_(or__4526__auto__)) {
      return or__4526__auto__;
    } else {
      return new cljs.core.Symbol(null, "not", "not", 1044554643, null);
    }
  }());
};
schema.utils.__GT_ValidationError = function schema$utils$__GT_ValidationError(schema__$1, value, expectation_delay, fail_explanation) {
  return new schema.utils.ValidationError(schema__$1, value, expectation_delay, fail_explanation);
};
schema.utils.NamedError = function(name, error) {
  this.name = name;
  this.error = error;
  this.cljs$lang$protocol_mask$partition0$ = 2147483648;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
schema.utils.NamedError.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this$, writer, opts) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._pr_writer.call(null, schema.utils.named_error_explain.call(null, this$__$1), writer, opts);
};
schema.utils.NamedError.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "error", "error", 661562495, null)], null);
};
schema.utils.NamedError.cljs$lang$type = true;
schema.utils.NamedError.cljs$lang$ctorStr = "schema.utils/NamedError";
schema.utils.NamedError.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write.call(null, writer__5106__auto__, "schema.utils/NamedError");
};
schema.utils.__GT_NamedError = function schema$utils$__GT_NamedError(name, error) {
  return new schema.utils.NamedError(name, error);
};
schema.utils.named_error_explain = function schema$utils$named_error_explain(err) {
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, err.name), err.error), new cljs.core.Symbol(null, "named", "named", 1218138048, null));
};
schema.utils.__GT_NamedError = function schema$utils$__GT_NamedError(name, error) {
  return new schema.utils.NamedError(name, error);
};
schema.utils.ErrorContainer = function(error, __meta, __extmap, __hash) {
  this.error = error;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.utils.ErrorContainer.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__5121__auto__, k__5122__auto__) {
  var self__ = this;
  var this__5121__auto____$1 = this;
  return cljs.core._lookup.call(null, this__5121__auto____$1, k__5122__auto__, null);
};
schema.utils.ErrorContainer.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__5123__auto__, k19767, else__5124__auto__) {
  var self__ = this;
  var this__5123__auto____$1 = this;
  var G__19769 = k19767 instanceof cljs.core.Keyword ? k19767.fqn : null;
  switch(G__19769) {
    case "error":
      return self__.error;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k19767, else__5124__auto__);
  }
};
schema.utils.ErrorContainer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__5135__auto__, writer__5136__auto__, opts__5137__auto__) {
  var self__ = this;
  var this__5135__auto____$1 = this;
  var pr_pair__5138__auto__ = function(this__5135__auto____$1) {
    return function(keyval__5139__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__5136__auto__, cljs.core.pr_writer, "", " ", "", opts__5137__auto__, keyval__5139__auto__);
    };
  }(this__5135__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__5136__auto__, pr_pair__5138__auto__, "#schema.utils.ErrorContainer{", ", ", "}", opts__5137__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "error", "error", -978969032), self__.error], null)], null), self__.__extmap));
};
schema.utils.ErrorContainer.prototype.cljs$core$IIterable$ = true;
schema.utils.ErrorContainer.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__19766) {
  var self__ = this;
  var G__19766__$1 = this;
  return new cljs.core.RecordIter(0, G__19766__$1, 1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "error", "error", -978969032)], null), cljs.core._iterator.call(null, self__.__extmap));
};
schema.utils.ErrorContainer.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__5119__auto__) {
  var self__ = this;
  var this__5119__auto____$1 = this;
  return self__.__meta;
};
schema.utils.ErrorContainer.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__5115__auto__) {
  var self__ = this;
  var this__5115__auto____$1 = this;
  return new schema.utils.ErrorContainer(self__.error, self__.__meta, self__.__extmap, self__.__hash);
};
schema.utils.ErrorContainer.prototype.cljs$core$ICounted$_count$arity$1 = function(this__5125__auto__) {
  var self__ = this;
  var this__5125__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.utils.ErrorContainer.prototype.cljs$core$IHash$_hash$arity$1 = function(this__5116__auto__) {
  var self__ = this;
  var this__5116__auto____$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_imap.call(null, this__5116__auto____$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
schema.utils.ErrorContainer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__5117__auto__, other__5118__auto__) {
  var self__ = this;
  var this__5117__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4514__auto__ = other__5118__auto__;
    if (cljs.core.truth_(and__4514__auto__)) {
      var and__4514__auto____$1 = this__5117__auto____$1.constructor === other__5118__auto__.constructor;
      if (and__4514__auto____$1) {
        return cljs.core.equiv_map.call(null, this__5117__auto____$1, other__5118__auto__);
      } else {
        return and__4514__auto____$1;
      }
    } else {
      return and__4514__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.utils.ErrorContainer.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__5130__auto__, k__5131__auto__) {
  var self__ = this;
  var this__5130__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "error", "error", -978969032), null], null), null), k__5131__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__5130__auto____$1), self__.__meta), k__5131__auto__);
  } else {
    return new schema.utils.ErrorContainer(self__.error, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__5131__auto__)), null);
  }
};
schema.utils.ErrorContainer.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__5128__auto__, k__5129__auto__, G__19766) {
  var self__ = this;
  var this__5128__auto____$1 = this;
  var pred__19770 = cljs.core.keyword_identical_QMARK_;
  var expr__19771 = k__5129__auto__;
  if (cljs.core.truth_(pred__19770.call(null, new cljs.core.Keyword(null, "error", "error", -978969032), expr__19771))) {
    return new schema.utils.ErrorContainer(G__19766, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.utils.ErrorContainer(self__.error, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__5129__auto__, G__19766), null);
  }
};
schema.utils.ErrorContainer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__5133__auto__) {
  var self__ = this;
  var this__5133__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "error", "error", -978969032), self__.error], null)], null), self__.__extmap));
};
schema.utils.ErrorContainer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__5120__auto__, G__19766) {
  var self__ = this;
  var this__5120__auto____$1 = this;
  return new schema.utils.ErrorContainer(self__.error, G__19766, self__.__extmap, self__.__hash);
};
schema.utils.ErrorContainer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__5126__auto__, entry__5127__auto__) {
  var self__ = this;
  var this__5126__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__5127__auto__)) {
    return cljs.core._assoc.call(null, this__5126__auto____$1, cljs.core._nth.call(null, entry__5127__auto__, 0), cljs.core._nth.call(null, entry__5127__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__5126__auto____$1, entry__5127__auto__);
  }
};
schema.utils.ErrorContainer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "error", "error", 661562495, null)], null);
};
schema.utils.ErrorContainer.cljs$lang$type = true;
schema.utils.ErrorContainer.cljs$lang$ctorPrSeq = function(this__5155__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.utils/ErrorContainer");
};
schema.utils.ErrorContainer.cljs$lang$ctorPrWriter = function(this__5155__auto__, writer__5156__auto__) {
  return cljs.core._write.call(null, writer__5156__auto__, "schema.utils/ErrorContainer");
};
schema.utils.__GT_ErrorContainer = function schema$utils$__GT_ErrorContainer(error) {
  return new schema.utils.ErrorContainer(error, null, null, null);
};
schema.utils.map__GT_ErrorContainer = function schema$utils$map__GT_ErrorContainer(G__19768) {
  return new schema.utils.ErrorContainer((new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$1(G__19768), null, cljs.core.dissoc.call(null, G__19768, new cljs.core.Keyword(null, "error", "error", -978969032)), null);
};
schema.utils.error = function schema$utils$error(x) {
  if (cljs.core.truth_(x)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "x", "x", -555367584, null)))].join(""));
  }
  return schema.utils.__GT_ErrorContainer.call(null, x);
};
schema.utils.error_QMARK_ = function schema$utils$error_QMARK_(x) {
  return x instanceof schema.utils.ErrorContainer;
};
schema.utils.error_val = function schema$utils$error_val(x) {
  if (cljs.core.truth_(schema.utils.error_QMARK_.call(null, x))) {
    return x.error;
  } else {
    return null;
  }
};
schema.utils.wrap_error_name = function schema$utils$wrap_error_name(name, maybe_error) {
  var temp__4423__auto__ = schema.utils.error_val.call(null, maybe_error);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var e = temp__4423__auto__;
    return schema.utils.error.call(null, schema.utils.__GT_NamedError.call(null, name, e));
  } else {
    return maybe_error;
  }
};
schema.utils.result_builder = function schema$utils$result_builder(lift_to_error) {
  return function schema$utils$result_builder_$_conjer(m, e) {
    var temp__4423__auto__ = schema.utils.error_val.call(null, e);
    if (cljs.core.truth_(temp__4423__auto__)) {
      var err = temp__4423__auto__;
      return schema.utils.error.call(null, cljs.core.conj.call(null, function() {
        var or__4526__auto__ = schema.utils.error_val.call(null, m);
        if (cljs.core.truth_(or__4526__auto__)) {
          return or__4526__auto__;
        } else {
          return lift_to_error.call(null, m);
        }
      }(), err));
    } else {
      var temp__4423__auto____$1 = schema.utils.error_val.call(null, m);
      if (cljs.core.truth_(temp__4423__auto____$1)) {
        var merr = temp__4423__auto____$1;
        return schema.utils.error.call(null, cljs.core.conj.call(null, merr, null));
      } else {
        return cljs.core.conj.call(null, m, e);
      }
    }
  };
};
schema.utils.declare_class_schema_BANG_ = function schema$utils$declare_class_schema_BANG_(klass, schema__$1) {
  return klass["schema$utils$schema"] = schema__$1;
};
schema.utils.class_schema = function schema$utils$class_schema(klass) {
  return klass["schema$utils$schema"];
};
schema.utils.PSimpleCell = {};
schema.utils.get_cell = function schema$utils$get_cell(this$) {
  if (!(this$ == null) && !(this$.schema$utils$PSimpleCell$get_cell$arity$1 == null)) {
    return this$.schema$utils$PSimpleCell$get_cell$arity$1(this$);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = schema.utils.get_cell[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, this$);
    } else {
      var m__5163__auto____$1 = schema.utils.get_cell["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "PSimpleCell.get_cell", this$);
      }
    }
  }
};
schema.utils.set_cell = function schema$utils$set_cell(this$, x) {
  if (!(this$ == null) && !(this$.schema$utils$PSimpleCell$set_cell$arity$2 == null)) {
    return this$.schema$utils$PSimpleCell$set_cell$arity$2(this$, x);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = schema.utils.set_cell[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, this$, x);
    } else {
      var m__5163__auto____$1 = schema.utils.set_cell["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, this$, x);
      } else {
        throw cljs.core.missing_protocol.call(null, "PSimpleCell.set_cell", this$);
      }
    }
  }
};
schema.utils.SimpleVCell = function(q) {
  this.q = q;
};
schema.utils.SimpleVCell.prototype.schema$utils$PSimpleCell$ = true;
schema.utils.SimpleVCell.prototype.schema$utils$PSimpleCell$get_cell$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.q;
};
schema.utils.SimpleVCell.prototype.schema$utils$PSimpleCell$set_cell$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return self__.q = x;
};
schema.utils.SimpleVCell.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "q", "q", -1965434072, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "volatile-mutable", "volatile-mutable", 1731728411), true], null))], null);
};
schema.utils.SimpleVCell.cljs$lang$type = true;
schema.utils.SimpleVCell.cljs$lang$ctorStr = "schema.utils/SimpleVCell";
schema.utils.SimpleVCell.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write.call(null, writer__5106__auto__, "schema.utils/SimpleVCell");
};
schema.utils.__GT_SimpleVCell = function schema$utils$__GT_SimpleVCell(q) {
  return new schema.utils.SimpleVCell(q);
};
schema.utils.use_fn_validation = new schema.utils.SimpleVCell(false);
schema.utils.use_fn_validation.get_cell = cljs.core.partial.call(null, schema.utils.get_cell, schema.utils.use_fn_validation);
schema.utils.use_fn_validation.set_cell = cljs.core.partial.call(null, schema.utils.set_cell, schema.utils.use_fn_validation);
goog.provide("schema.core");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("schema.utils");
schema.core.Schema = {};
schema.core.walker = function schema$core$walker(this$) {
  if (!(this$ == null) && !(this$.schema$core$Schema$walker$arity$1 == null)) {
    return this$.schema$core$Schema$walker$arity$1(this$);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = schema.core.walker[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, this$);
    } else {
      var m__5163__auto____$1 = schema.core.walker["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "Schema.walker", this$);
      }
    }
  }
};
schema.core.explain = function schema$core$explain(this$) {
  if (!(this$ == null) && !(this$.schema$core$Schema$explain$arity$1 == null)) {
    return this$.schema$core$Schema$explain$arity$1(this$);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = schema.core.explain[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, this$);
    } else {
      var m__5163__auto____$1 = schema.core.explain["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "Schema.explain", this$);
      }
    }
  }
};
schema.core.subschema_walker = function schema$core$subschema_walker(s) {
  throw new Error([cljs.core.str("Walking is unsupported outside of start-walker; "), cljs.core.str("all composite schemas must eagerly bind subschema-walkers "), cljs.core.str("outside the returned walker.")].join(""));
};
schema.core.start_walker = function schema$core$start_walker(sub_walker, schema__$1) {
  var subschema_walker19465 = schema.core.subschema_walker;
  schema.core.subschema_walker = sub_walker;
  try {
    return schema.core.subschema_walker.call(null, schema__$1);
  } finally {
    schema.core.subschema_walker = subschema_walker19465;
  }
};
schema.core.checker = function schema$core$checker(schema__$1) {
  return cljs.core.comp.call(null, schema.utils.error_val, schema.core.start_walker.call(null, schema.utils.memoize_id.call(null, schema.core.walker), schema__$1));
};
schema.core.check = function schema$core$check(schema__$1, x) {
  return schema.core.checker.call(null, schema__$1).call(null, x);
};
schema.core.validate = function schema$core$validate(schema__$1, value) {
  var temp__4425__auto___19466 = schema.core.check.call(null, schema__$1, value);
  if (cljs.core.truth_(temp__4425__auto___19466)) {
    var error_19467 = temp__4425__auto___19466;
    throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Value does not match schema: %s", cljs.core.pr_str.call(null, error_19467)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), schema__$1, new cljs.core.Keyword(null, "value", "value", 305978217), value, new cljs.core.Keyword(null, 
    "error", "error", -978969032), error_19467], null));
  } else {
  }
  return value;
};
schema.core.Schema["function"] = true;
schema.core.walker["function"] = function(this$) {
  var class_walker = function() {
    var temp__4423__auto__ = schema.utils.class_schema.call(null, this$);
    if (cljs.core.truth_(temp__4423__auto__)) {
      var more_schema = temp__4423__auto__;
      return schema.core.subschema_walker.call(null, more_schema);
    } else {
      return cljs.core.identity;
    }
  }();
  return function(class_walker) {
    return function(x) {
      var or__4526__auto__ = x == null || cljs.core.not.call(null, function() {
        var or__4526__auto__ = this$ === x.constructor;
        if (or__4526__auto__) {
          return or__4526__auto__;
        } else {
          return x instanceof this$;
        }
      }()) ? schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$, x, new cljs.core.Delay(function(class_walker) {
        return function() {
          return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), this$), new cljs.core.Symbol(null, "instance?", "instance?", 1075939923, null));
        };
      }(class_walker), null), null)) : null;
      if (cljs.core.truth_(or__4526__auto__)) {
        return or__4526__auto__;
      } else {
        return class_walker.call(null, x);
      }
    };
  }(class_walker);
};
schema.core.explain["function"] = function(this$) {
  var temp__4423__auto__ = schema.utils.class_schema.call(null, this$);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var more_schema = temp__4423__auto__;
    return schema.core.explain.call(null, more_schema);
  } else {
    return this$;
  }
};
schema.core.AnythingSchema = function(_, __meta, __extmap, __hash) {
  this._ = _;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.core.AnythingSchema.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__5121__auto__, k__5122__auto__) {
  var self__ = this;
  var this__5121__auto____$1 = this;
  return cljs.core._lookup.call(null, this__5121__auto____$1, k__5122__auto__, null);
};
schema.core.AnythingSchema.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__5123__auto__, k19469, else__5124__auto__) {
  var self__ = this;
  var this__5123__auto____$1 = this;
  var G__19471 = k19469 instanceof cljs.core.Keyword ? k19469.fqn : null;
  switch(G__19471) {
    case "_":
      return self__._;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k19469, else__5124__auto__);
  }
};
schema.core.AnythingSchema.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__5135__auto__, writer__5136__auto__, opts__5137__auto__) {
  var self__ = this;
  var this__5135__auto____$1 = this;
  var pr_pair__5138__auto__ = function(this__5135__auto____$1) {
    return function(keyval__5139__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__5136__auto__, cljs.core.pr_writer, "", " ", "", opts__5137__auto__, keyval__5139__auto__);
    };
  }(this__5135__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__5136__auto__, pr_pair__5138__auto__, "#schema.core.AnythingSchema{", ", ", "}", opts__5137__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "_", "_", 1453416199), self__._], null)], null), self__.__extmap));
};
schema.core.AnythingSchema.prototype.cljs$core$IIterable$ = true;
schema.core.AnythingSchema.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__19468) {
  var self__ = this;
  var G__19468__$1 = this;
  return new cljs.core.RecordIter(0, G__19468__$1, 1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "_", "_", 1453416199)], null), cljs.core._iterator.call(null, self__.__extmap));
};
schema.core.AnythingSchema.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__5119__auto__) {
  var self__ = this;
  var this__5119__auto____$1 = this;
  return self__.__meta;
};
schema.core.AnythingSchema.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__5115__auto__) {
  var self__ = this;
  var this__5115__auto____$1 = this;
  return new schema.core.AnythingSchema(self__._, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.AnythingSchema.prototype.cljs$core$ICounted$_count$arity$1 = function(this__5125__auto__) {
  var self__ = this;
  var this__5125__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.AnythingSchema.prototype.cljs$core$IHash$_hash$arity$1 = function(this__5116__auto__) {
  var self__ = this;
  var this__5116__auto____$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_imap.call(null, this__5116__auto____$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
schema.core.AnythingSchema.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__5117__auto__, other__5118__auto__) {
  var self__ = this;
  var this__5117__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4514__auto__ = other__5118__auto__;
    if (cljs.core.truth_(and__4514__auto__)) {
      var and__4514__auto____$1 = this__5117__auto____$1.constructor === other__5118__auto__.constructor;
      if (and__4514__auto____$1) {
        return cljs.core.equiv_map.call(null, this__5117__auto____$1, other__5118__auto__);
      } else {
        return and__4514__auto____$1;
      }
    } else {
      return and__4514__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.AnythingSchema.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__5130__auto__, k__5131__auto__) {
  var self__ = this;
  var this__5130__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "_", "_", 1453416199), null], null), null), k__5131__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__5130__auto____$1), self__.__meta), k__5131__auto__);
  } else {
    return new schema.core.AnythingSchema(self__._, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__5131__auto__)), null);
  }
};
schema.core.AnythingSchema.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__5128__auto__, k__5129__auto__, G__19468) {
  var self__ = this;
  var this__5128__auto____$1 = this;
  var pred__19472 = cljs.core.keyword_identical_QMARK_;
  var expr__19473 = k__5129__auto__;
  if (cljs.core.truth_(pred__19472.call(null, new cljs.core.Keyword(null, "_", "_", 1453416199), expr__19473))) {
    return new schema.core.AnythingSchema(G__19468, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.AnythingSchema(self__._, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__5129__auto__, G__19468), null);
  }
};
schema.core.AnythingSchema.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__5133__auto__) {
  var self__ = this;
  var this__5133__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "_", "_", 1453416199), self__._], null)], null), self__.__extmap));
};
schema.core.AnythingSchema.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__5120__auto__, G__19468) {
  var self__ = this;
  var this__5120__auto____$1 = this;
  return new schema.core.AnythingSchema(self__._, G__19468, self__.__extmap, self__.__hash);
};
schema.core.AnythingSchema.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__5126__auto__, entry__5127__auto__) {
  var self__ = this;
  var this__5126__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__5127__auto__)) {
    return cljs.core._assoc.call(null, this__5126__auto____$1, cljs.core._nth.call(null, entry__5127__auto__, 0), cljs.core._nth.call(null, entry__5127__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__5126__auto____$1, entry__5127__auto__);
  }
};
schema.core.AnythingSchema.prototype.schema$core$Schema$ = true;
schema.core.AnythingSchema.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.identity;
};
schema.core.AnythingSchema.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.Symbol(null, "Any", "Any", 1277492269, null);
};
schema.core.AnythingSchema.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "_", "_", -1201019570, null)], null);
};
schema.core.AnythingSchema.cljs$lang$type = true;
schema.core.AnythingSchema.cljs$lang$ctorPrSeq = function(this__5155__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/AnythingSchema");
};
schema.core.AnythingSchema.cljs$lang$ctorPrWriter = function(this__5155__auto__, writer__5156__auto__) {
  return cljs.core._write.call(null, writer__5156__auto__, "schema.core/AnythingSchema");
};
schema.core.__GT_AnythingSchema = function schema$core$__GT_AnythingSchema(_) {
  return new schema.core.AnythingSchema(_, null, null, null);
};
schema.core.map__GT_AnythingSchema = function schema$core$map__GT_AnythingSchema(G__19470) {
  return new schema.core.AnythingSchema((new cljs.core.Keyword(null, "_", "_", 1453416199)).cljs$core$IFn$_invoke$arity$1(G__19470), null, cljs.core.dissoc.call(null, G__19470, new cljs.core.Keyword(null, "_", "_", 1453416199)), null);
};
schema.core.Any = new schema.core.AnythingSchema(null, null, null, null);
schema.core.EqSchema = function(v, __meta, __extmap, __hash) {
  this.v = v;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.core.EqSchema.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__5121__auto__, k__5122__auto__) {
  var self__ = this;
  var this__5121__auto____$1 = this;
  return cljs.core._lookup.call(null, this__5121__auto____$1, k__5122__auto__, null);
};
schema.core.EqSchema.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__5123__auto__, k19477, else__5124__auto__) {
  var self__ = this;
  var this__5123__auto____$1 = this;
  var G__19479 = k19477 instanceof cljs.core.Keyword ? k19477.fqn : null;
  switch(G__19479) {
    case "v":
      return self__.v;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k19477, else__5124__auto__);
  }
};
schema.core.EqSchema.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__5135__auto__, writer__5136__auto__, opts__5137__auto__) {
  var self__ = this;
  var this__5135__auto____$1 = this;
  var pr_pair__5138__auto__ = function(this__5135__auto____$1) {
    return function(keyval__5139__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__5136__auto__, cljs.core.pr_writer, "", " ", "", opts__5137__auto__, keyval__5139__auto__);
    };
  }(this__5135__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__5136__auto__, pr_pair__5138__auto__, "#schema.core.EqSchema{", ", ", "}", opts__5137__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "v", "v", 21465059), self__.v], null)], null), self__.__extmap));
};
schema.core.EqSchema.prototype.cljs$core$IIterable$ = true;
schema.core.EqSchema.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__19476) {
  var self__ = this;
  var G__19476__$1 = this;
  return new cljs.core.RecordIter(0, G__19476__$1, 1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "v", "v", 21465059)], null), cljs.core._iterator.call(null, self__.__extmap));
};
schema.core.EqSchema.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__5119__auto__) {
  var self__ = this;
  var this__5119__auto____$1 = this;
  return self__.__meta;
};
schema.core.EqSchema.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__5115__auto__) {
  var self__ = this;
  var this__5115__auto____$1 = this;
  return new schema.core.EqSchema(self__.v, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.EqSchema.prototype.cljs$core$ICounted$_count$arity$1 = function(this__5125__auto__) {
  var self__ = this;
  var this__5125__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.EqSchema.prototype.cljs$core$IHash$_hash$arity$1 = function(this__5116__auto__) {
  var self__ = this;
  var this__5116__auto____$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_imap.call(null, this__5116__auto____$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
schema.core.EqSchema.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__5117__auto__, other__5118__auto__) {
  var self__ = this;
  var this__5117__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4514__auto__ = other__5118__auto__;
    if (cljs.core.truth_(and__4514__auto__)) {
      var and__4514__auto____$1 = this__5117__auto____$1.constructor === other__5118__auto__.constructor;
      if (and__4514__auto____$1) {
        return cljs.core.equiv_map.call(null, this__5117__auto____$1, other__5118__auto__);
      } else {
        return and__4514__auto____$1;
      }
    } else {
      return and__4514__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.EqSchema.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__5130__auto__, k__5131__auto__) {
  var self__ = this;
  var this__5130__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "v", "v", 21465059), null], null), null), k__5131__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__5130__auto____$1), self__.__meta), k__5131__auto__);
  } else {
    return new schema.core.EqSchema(self__.v, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__5131__auto__)), null);
  }
};
schema.core.EqSchema.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__5128__auto__, k__5129__auto__, G__19476) {
  var self__ = this;
  var this__5128__auto____$1 = this;
  var pred__19480 = cljs.core.keyword_identical_QMARK_;
  var expr__19481 = k__5129__auto__;
  if (cljs.core.truth_(pred__19480.call(null, new cljs.core.Keyword(null, "v", "v", 21465059), expr__19481))) {
    return new schema.core.EqSchema(G__19476, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.EqSchema(self__.v, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__5129__auto__, G__19476), null);
  }
};
schema.core.EqSchema.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__5133__auto__) {
  var self__ = this;
  var this__5133__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "v", "v", 21465059), self__.v], null)], null), self__.__extmap));
};
schema.core.EqSchema.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__5120__auto__, G__19476) {
  var self__ = this;
  var this__5120__auto____$1 = this;
  return new schema.core.EqSchema(self__.v, G__19476, self__.__extmap, self__.__hash);
};
schema.core.EqSchema.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__5126__auto__, entry__5127__auto__) {
  var self__ = this;
  var this__5126__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__5127__auto__)) {
    return cljs.core._assoc.call(null, this__5126__auto____$1, cljs.core._nth.call(null, entry__5127__auto__, 0), cljs.core._nth.call(null, entry__5127__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__5126__auto____$1, entry__5127__auto__);
  }
};
schema.core.EqSchema.prototype.schema$core$Schema$ = true;
schema.core.EqSchema.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return function(this$__$1) {
    return function(x) {
      if (cljs.core._EQ_.call(null, self__.v, x)) {
        return x;
      } else {
        return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(this$__$1) {
          return function() {
            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), self__.v), new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null));
          };
        }(this$__$1), null), null));
      }
    };
  }(this$__$1);
};
schema.core.EqSchema.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.v), new cljs.core.Symbol(null, "eq", "eq", 1021992460, null));
};
schema.core.EqSchema.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "v", "v", 1661996586, null)], null);
};
schema.core.EqSchema.cljs$lang$type = true;
schema.core.EqSchema.cljs$lang$ctorPrSeq = function(this__5155__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/EqSchema");
};
schema.core.EqSchema.cljs$lang$ctorPrWriter = function(this__5155__auto__, writer__5156__auto__) {
  return cljs.core._write.call(null, writer__5156__auto__, "schema.core/EqSchema");
};
schema.core.__GT_EqSchema = function schema$core$__GT_EqSchema(v) {
  return new schema.core.EqSchema(v, null, null, null);
};
schema.core.map__GT_EqSchema = function schema$core$map__GT_EqSchema(G__19478) {
  return new schema.core.EqSchema((new cljs.core.Keyword(null, "v", "v", 21465059)).cljs$core$IFn$_invoke$arity$1(G__19478), null, cljs.core.dissoc.call(null, G__19478, new cljs.core.Keyword(null, "v", "v", 21465059)), null);
};
schema.core.eq = function schema$core$eq(v) {
  return new schema.core.EqSchema(v, null, null, null);
};
schema.core.Isa = function(h, parent, __meta, __extmap, __hash) {
  this.h = h;
  this.parent = parent;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.core.Isa.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__5121__auto__, k__5122__auto__) {
  var self__ = this;
  var this__5121__auto____$1 = this;
  return cljs.core._lookup.call(null, this__5121__auto____$1, k__5122__auto__, null);
};
schema.core.Isa.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__5123__auto__, k19485, else__5124__auto__) {
  var self__ = this;
  var this__5123__auto____$1 = this;
  var G__19487 = k19485 instanceof cljs.core.Keyword ? k19485.fqn : null;
  switch(G__19487) {
    case "h":
      return self__.h;
      break;
    case "parent":
      return self__.parent;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k19485, else__5124__auto__);
  }
};
schema.core.Isa.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__5135__auto__, writer__5136__auto__, opts__5137__auto__) {
  var self__ = this;
  var this__5135__auto____$1 = this;
  var pr_pair__5138__auto__ = function(this__5135__auto____$1) {
    return function(keyval__5139__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__5136__auto__, cljs.core.pr_writer, "", " ", "", opts__5137__auto__, keyval__5139__auto__);
    };
  }(this__5135__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__5136__auto__, pr_pair__5138__auto__, "#schema.core.Isa{", ", ", "}", opts__5137__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "h", "h", 1109658740), self__.h], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "parent", "parent", -878878779), self__.parent], null)], null), self__.__extmap));
};
schema.core.Isa.prototype.cljs$core$IIterable$ = true;
schema.core.Isa.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__19484) {
  var self__ = this;
  var G__19484__$1 = this;
  return new cljs.core.RecordIter(0, G__19484__$1, 2, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "h", "h", 1109658740), new cljs.core.Keyword(null, "parent", "parent", -878878779)], null), cljs.core._iterator.call(null, self__.__extmap));
};
schema.core.Isa.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__5119__auto__) {
  var self__ = this;
  var this__5119__auto____$1 = this;
  return self__.__meta;
};
schema.core.Isa.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__5115__auto__) {
  var self__ = this;
  var this__5115__auto____$1 = this;
  return new schema.core.Isa(self__.h, self__.parent, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.Isa.prototype.cljs$core$ICounted$_count$arity$1 = function(this__5125__auto__) {
  var self__ = this;
  var this__5125__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.Isa.prototype.cljs$core$IHash$_hash$arity$1 = function(this__5116__auto__) {
  var self__ = this;
  var this__5116__auto____$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_imap.call(null, this__5116__auto____$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
schema.core.Isa.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__5117__auto__, other__5118__auto__) {
  var self__ = this;
  var this__5117__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4514__auto__ = other__5118__auto__;
    if (cljs.core.truth_(and__4514__auto__)) {
      var and__4514__auto____$1 = this__5117__auto____$1.constructor === other__5118__auto__.constructor;
      if (and__4514__auto____$1) {
        return cljs.core.equiv_map.call(null, this__5117__auto____$1, other__5118__auto__);
      } else {
        return and__4514__auto____$1;
      }
    } else {
      return and__4514__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.Isa.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__5130__auto__, k__5131__auto__) {
  var self__ = this;
  var this__5130__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "parent", "parent", -878878779), null, new cljs.core.Keyword(null, "h", "h", 1109658740), null], null), null), k__5131__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__5130__auto____$1), self__.__meta), k__5131__auto__);
  } else {
    return new schema.core.Isa(self__.h, self__.parent, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__5131__auto__)), null);
  }
};
schema.core.Isa.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__5128__auto__, k__5129__auto__, G__19484) {
  var self__ = this;
  var this__5128__auto____$1 = this;
  var pred__19488 = cljs.core.keyword_identical_QMARK_;
  var expr__19489 = k__5129__auto__;
  if (cljs.core.truth_(pred__19488.call(null, new cljs.core.Keyword(null, "h", "h", 1109658740), expr__19489))) {
    return new schema.core.Isa(G__19484, self__.parent, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__19488.call(null, new cljs.core.Keyword(null, "parent", "parent", -878878779), expr__19489))) {
      return new schema.core.Isa(self__.h, G__19484, self__.__meta, self__.__extmap, null);
    } else {
      return new schema.core.Isa(self__.h, self__.parent, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__5129__auto__, G__19484), null);
    }
  }
};
schema.core.Isa.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__5133__auto__) {
  var self__ = this;
  var this__5133__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "h", "h", 1109658740), self__.h], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parent", "parent", -878878779), self__.parent], null)], null), self__.__extmap));
};
schema.core.Isa.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__5120__auto__, G__19484) {
  var self__ = this;
  var this__5120__auto____$1 = this;
  return new schema.core.Isa(self__.h, self__.parent, G__19484, self__.__extmap, self__.__hash);
};
schema.core.Isa.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__5126__auto__, entry__5127__auto__) {
  var self__ = this;
  var this__5126__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__5127__auto__)) {
    return cljs.core._assoc.call(null, this__5126__auto____$1, cljs.core._nth.call(null, entry__5127__auto__, 0), cljs.core._nth.call(null, entry__5127__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__5126__auto____$1, entry__5127__auto__);
  }
};
schema.core.Isa.prototype.schema$core$Schema$ = true;
schema.core.Isa.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return function(this$__$1) {
    return function(child) {
      if (cljs.core.truth_(function() {
        var or__4526__auto__ = function() {
          var and__4514__auto__ = self__.h;
          if (cljs.core.truth_(and__4514__auto__)) {
            return cljs.core.isa_QMARK_.call(null, self__.h, child, self__.parent);
          } else {
            return and__4514__auto__;
          }
        }();
        if (cljs.core.truth_(or__4526__auto__)) {
          return or__4526__auto__;
        } else {
          return cljs.core.isa_QMARK_.call(null, child, self__.parent);
        }
      }())) {
        return child;
      } else {
        return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, child, new cljs.core.Delay(function(this$__$1) {
          return function() {
            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.parent), child), new cljs.core.Symbol(null, "isa?", "isa?", 1358492324, null));
          };
        }(this$__$1), null), null));
      }
    };
  }(this$__$1);
};
schema.core.Isa.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.parent), new cljs.core.Symbol(null, "isa?", "isa?", 1358492324, null));
};
schema.core.Isa.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "h", "h", -1544777029, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null)], null);
};
schema.core.Isa.cljs$lang$type = true;
schema.core.Isa.cljs$lang$ctorPrSeq = function(this__5155__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/Isa");
};
schema.core.Isa.cljs$lang$ctorPrWriter = function(this__5155__auto__, writer__5156__auto__) {
  return cljs.core._write.call(null, writer__5156__auto__, "schema.core/Isa");
};
schema.core.__GT_Isa = function schema$core$__GT_Isa(h, parent) {
  return new schema.core.Isa(h, parent, null, null, null);
};
schema.core.map__GT_Isa = function schema$core$map__GT_Isa(G__19486) {
  return new schema.core.Isa((new cljs.core.Keyword(null, "h", "h", 1109658740)).cljs$core$IFn$_invoke$arity$1(G__19486), (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(G__19486), null, cljs.core.dissoc.call(null, G__19486, new cljs.core.Keyword(null, "h", "h", 1109658740), new cljs.core.Keyword(null, "parent", "parent", -878878779)), null);
};
schema.core.isa = function schema$core$isa() {
  var args19492 = [];
  var len__5565__auto___19495 = arguments.length;
  var i__5566__auto___19496 = 0;
  while (true) {
    if (i__5566__auto___19496 < len__5565__auto___19495) {
      args19492.push(arguments[i__5566__auto___19496]);
      var G__19497 = i__5566__auto___19496 + 1;
      i__5566__auto___19496 = G__19497;
      continue;
    } else {
    }
    break;
  }
  var G__19494 = args19492.length;
  switch(G__19494) {
    case 1:
      return schema.core.isa.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return schema.core.isa.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args19492.length)].join(""));;
  }
};
schema.core.isa.cljs$core$IFn$_invoke$arity$1 = function(parent) {
  return new schema.core.Isa(null, parent, null, null, null);
};
schema.core.isa.cljs$core$IFn$_invoke$arity$2 = function(h, parent) {
  return new schema.core.Isa(h, parent, null, null, null);
};
schema.core.isa.cljs$lang$maxFixedArity = 2;
schema.core.EnumSchema = function(vs, __meta, __extmap, __hash) {
  this.vs = vs;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.core.EnumSchema.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__5121__auto__, k__5122__auto__) {
  var self__ = this;
  var this__5121__auto____$1 = this;
  return cljs.core._lookup.call(null, this__5121__auto____$1, k__5122__auto__, null);
};
schema.core.EnumSchema.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__5123__auto__, k19500, else__5124__auto__) {
  var self__ = this;
  var this__5123__auto____$1 = this;
  var G__19502 = k19500 instanceof cljs.core.Keyword ? k19500.fqn : null;
  switch(G__19502) {
    case "vs":
      return self__.vs;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k19500, else__5124__auto__);
  }
};
schema.core.EnumSchema.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__5135__auto__, writer__5136__auto__, opts__5137__auto__) {
  var self__ = this;
  var this__5135__auto____$1 = this;
  var pr_pair__5138__auto__ = function(this__5135__auto____$1) {
    return function(keyval__5139__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__5136__auto__, cljs.core.pr_writer, "", " ", "", opts__5137__auto__, keyval__5139__auto__);
    };
  }(this__5135__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__5136__auto__, pr_pair__5138__auto__, "#schema.core.EnumSchema{", ", ", "}", opts__5137__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "vs", "vs", -2022097090), self__.vs], null)], null), self__.__extmap));
};
schema.core.EnumSchema.prototype.cljs$core$IIterable$ = true;
schema.core.EnumSchema.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__19499) {
  var self__ = this;
  var G__19499__$1 = this;
  return new cljs.core.RecordIter(0, G__19499__$1, 1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "vs", "vs", -2022097090)], null), cljs.core._iterator.call(null, self__.__extmap));
};
schema.core.EnumSchema.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__5119__auto__) {
  var self__ = this;
  var this__5119__auto____$1 = this;
  return self__.__meta;
};
schema.core.EnumSchema.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__5115__auto__) {
  var self__ = this;
  var this__5115__auto____$1 = this;
  return new schema.core.EnumSchema(self__.vs, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.EnumSchema.prototype.cljs$core$ICounted$_count$arity$1 = function(this__5125__auto__) {
  var self__ = this;
  var this__5125__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.EnumSchema.prototype.cljs$core$IHash$_hash$arity$1 = function(this__5116__auto__) {
  var self__ = this;
  var this__5116__auto____$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_imap.call(null, this__5116__auto____$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
schema.core.EnumSchema.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__5117__auto__, other__5118__auto__) {
  var self__ = this;
  var this__5117__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4514__auto__ = other__5118__auto__;
    if (cljs.core.truth_(and__4514__auto__)) {
      var and__4514__auto____$1 = this__5117__auto____$1.constructor === other__5118__auto__.constructor;
      if (and__4514__auto____$1) {
        return cljs.core.equiv_map.call(null, this__5117__auto____$1, other__5118__auto__);
      } else {
        return and__4514__auto____$1;
      }
    } else {
      return and__4514__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.EnumSchema.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__5130__auto__, k__5131__auto__) {
  var self__ = this;
  var this__5130__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "vs", "vs", -2022097090), null], null), null), k__5131__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__5130__auto____$1), self__.__meta), k__5131__auto__);
  } else {
    return new schema.core.EnumSchema(self__.vs, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__5131__auto__)), null);
  }
};
schema.core.EnumSchema.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__5128__auto__, k__5129__auto__, G__19499) {
  var self__ = this;
  var this__5128__auto____$1 = this;
  var pred__19503 = cljs.core.keyword_identical_QMARK_;
  var expr__19504 = k__5129__auto__;
  if (cljs.core.truth_(pred__19503.call(null, new cljs.core.Keyword(null, "vs", "vs", -2022097090), expr__19504))) {
    return new schema.core.EnumSchema(G__19499, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.EnumSchema(self__.vs, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__5129__auto__, G__19499), null);
  }
};
schema.core.EnumSchema.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__5133__auto__) {
  var self__ = this;
  var this__5133__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "vs", "vs", -2022097090), self__.vs], null)], null), self__.__extmap));
};
schema.core.EnumSchema.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__5120__auto__, G__19499) {
  var self__ = this;
  var this__5120__auto____$1 = this;
  return new schema.core.EnumSchema(self__.vs, G__19499, self__.__extmap, self__.__hash);
};
schema.core.EnumSchema.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__5126__auto__, entry__5127__auto__) {
  var self__ = this;
  var this__5126__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__5127__auto__)) {
    return cljs.core._assoc.call(null, this__5126__auto____$1, cljs.core._nth.call(null, entry__5127__auto__, 0), cljs.core._nth.call(null, entry__5127__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__5126__auto____$1, entry__5127__auto__);
  }
};
schema.core.EnumSchema.prototype.schema$core$Schema$ = true;
schema.core.EnumSchema.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return function(this$__$1) {
    return function(x) {
      if (cljs.core.contains_QMARK_.call(null, self__.vs, x)) {
        return x;
      } else {
        return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(this$__$1) {
          return function() {
            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), self__.vs);
          };
        }(this$__$1), null), null));
      }
    };
  }(this$__$1);
};
schema.core.EnumSchema.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, new cljs.core.Symbol(null, "enum", "enum", -975417337, null), self__.vs);
};
schema.core.EnumSchema.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "vs", "vs", -381565563, null)], null);
};
schema.core.EnumSchema.cljs$lang$type = true;
schema.core.EnumSchema.cljs$lang$ctorPrSeq = function(this__5155__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/EnumSchema");
};
schema.core.EnumSchema.cljs$lang$ctorPrWriter = function(this__5155__auto__, writer__5156__auto__) {
  return cljs.core._write.call(null, writer__5156__auto__, "schema.core/EnumSchema");
};
schema.core.__GT_EnumSchema = function schema$core$__GT_EnumSchema(vs) {
  return new schema.core.EnumSchema(vs, null, null, null);
};
schema.core.map__GT_EnumSchema = function schema$core$map__GT_EnumSchema(G__19501) {
  return new schema.core.EnumSchema((new cljs.core.Keyword(null, "vs", "vs", -2022097090)).cljs$core$IFn$_invoke$arity$1(G__19501), null, cljs.core.dissoc.call(null, G__19501, new cljs.core.Keyword(null, "vs", "vs", -2022097090)), null);
};
schema.core.enum$ = function schema$core$enum() {
  var args__5572__auto__ = [];
  var len__5565__auto___19508 = arguments.length;
  var i__5566__auto___19509 = 0;
  while (true) {
    if (i__5566__auto___19509 < len__5565__auto___19508) {
      args__5572__auto__.push(arguments[i__5566__auto___19509]);
      var G__19510 = i__5566__auto___19509 + 1;
      i__5566__auto___19509 = G__19510;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return schema.core.enum$.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
schema.core.enum$.cljs$core$IFn$_invoke$arity$variadic = function(vs) {
  return new schema.core.EnumSchema(cljs.core.set.call(null, vs), null, null, null);
};
schema.core.enum$.cljs$lang$maxFixedArity = 0;
schema.core.enum$.cljs$lang$applyTo = function(seq19507) {
  return schema.core.enum$.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq19507));
};
schema.core.Predicate = function(p_QMARK_, pred_name, __meta, __extmap, __hash) {
  this.p_QMARK_ = p_QMARK_;
  this.pred_name = pred_name;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.core.Predicate.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__5121__auto__, k__5122__auto__) {
  var self__ = this;
  var this__5121__auto____$1 = this;
  return cljs.core._lookup.call(null, this__5121__auto____$1, k__5122__auto__, null);
};
schema.core.Predicate.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__5123__auto__, k19512, else__5124__auto__) {
  var self__ = this;
  var this__5123__auto____$1 = this;
  var G__19514 = k19512 instanceof cljs.core.Keyword ? k19512.fqn : null;
  switch(G__19514) {
    case "p?":
      return self__.p_QMARK_;
      break;
    case "pred-name":
      return self__.pred_name;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k19512, else__5124__auto__);
  }
};
schema.core.Predicate.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__5135__auto__, writer__5136__auto__, opts__5137__auto__) {
  var self__ = this;
  var this__5135__auto____$1 = this;
  var pr_pair__5138__auto__ = function(this__5135__auto____$1) {
    return function(keyval__5139__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__5136__auto__, cljs.core.pr_writer, "", " ", "", opts__5137__auto__, keyval__5139__auto__);
    };
  }(this__5135__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__5136__auto__, pr_pair__5138__auto__, "#schema.core.Predicate{", ", ", "}", opts__5137__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p?", "p?", -1172161701), self__.p_QMARK_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "pred-name", "pred-name", -3677451), self__.pred_name], null)], null), self__.__extmap));
};
schema.core.Predicate.prototype.cljs$core$IIterable$ = true;
schema.core.Predicate.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__19511) {
  var self__ = this;
  var G__19511__$1 = this;
  return new cljs.core.RecordIter(0, G__19511__$1, 2, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p?", "p?", -1172161701), new cljs.core.Keyword(null, "pred-name", "pred-name", -3677451)], null), cljs.core._iterator.call(null, self__.__extmap));
};
schema.core.Predicate.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__5119__auto__) {
  var self__ = this;
  var this__5119__auto____$1 = this;
  return self__.__meta;
};
schema.core.Predicate.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__5115__auto__) {
  var self__ = this;
  var this__5115__auto____$1 = this;
  return new schema.core.Predicate(self__.p_QMARK_, self__.pred_name, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.Predicate.prototype.cljs$core$ICounted$_count$arity$1 = function(this__5125__auto__) {
  var self__ = this;
  var this__5125__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.Predicate.prototype.cljs$core$IHash$_hash$arity$1 = function(this__5116__auto__) {
  var self__ = this;
  var this__5116__auto____$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_imap.call(null, this__5116__auto____$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
schema.core.Predicate.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__5117__auto__, other__5118__auto__) {
  var self__ = this;
  var this__5117__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4514__auto__ = other__5118__auto__;
    if (cljs.core.truth_(and__4514__auto__)) {
      var and__4514__auto____$1 = this__5117__auto____$1.constructor === other__5118__auto__.constructor;
      if (and__4514__auto____$1) {
        return cljs.core.equiv_map.call(null, this__5117__auto____$1, other__5118__auto__);
      } else {
        return and__4514__auto____$1;
      }
    } else {
      return and__4514__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.Predicate.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__5130__auto__, k__5131__auto__) {
  var self__ = this;
  var this__5130__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pred-name", "pred-name", -3677451), null, new cljs.core.Keyword(null, "p?", "p?", -1172161701), null], null), null), k__5131__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__5130__auto____$1), self__.__meta), k__5131__auto__);
  } else {
    return new schema.core.Predicate(self__.p_QMARK_, self__.pred_name, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__5131__auto__)), null);
  }
};
schema.core.Predicate.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__5128__auto__, k__5129__auto__, G__19511) {
  var self__ = this;
  var this__5128__auto____$1 = this;
  var pred__19515 = cljs.core.keyword_identical_QMARK_;
  var expr__19516 = k__5129__auto__;
  if (cljs.core.truth_(pred__19515.call(null, new cljs.core.Keyword(null, "p?", "p?", -1172161701), expr__19516))) {
    return new schema.core.Predicate(G__19511, self__.pred_name, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__19515.call(null, new cljs.core.Keyword(null, "pred-name", "pred-name", -3677451), expr__19516))) {
      return new schema.core.Predicate(self__.p_QMARK_, G__19511, self__.__meta, self__.__extmap, null);
    } else {
      return new schema.core.Predicate(self__.p_QMARK_, self__.pred_name, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__5129__auto__, G__19511), null);
    }
  }
};
schema.core.Predicate.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__5133__auto__) {
  var self__ = this;
  var this__5133__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p?", "p?", -1172161701), self__.p_QMARK_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pred-name", "pred-name", -3677451), self__.pred_name], null)], null), self__.__extmap));
};
schema.core.Predicate.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__5120__auto__, G__19511) {
  var self__ = this;
  var this__5120__auto____$1 = this;
  return new schema.core.Predicate(self__.p_QMARK_, self__.pred_name, G__19511, self__.__extmap, self__.__hash);
};
schema.core.Predicate.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__5126__auto__, entry__5127__auto__) {
  var self__ = this;
  var this__5126__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__5127__auto__)) {
    return cljs.core._assoc.call(null, this__5126__auto____$1, cljs.core._nth.call(null, entry__5127__auto__, 0), cljs.core._nth.call(null, entry__5127__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__5126__auto____$1, entry__5127__auto__);
  }
};
schema.core.Predicate.prototype.schema$core$Schema$ = true;
schema.core.Predicate.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return function(this$__$1) {
    return function(x) {
      var temp__4423__auto__ = function() {
        try {
          if (cljs.core.truth_(self__.p_QMARK_.call(null, x))) {
            return null;
          } else {
            return new cljs.core.Symbol(null, "not", "not", 1044554643, null);
          }
        } catch (e19518) {
          if (e19518 instanceof Object) {
            var e = e19518;
            return new cljs.core.Symbol(null, "throws?", "throws?", 789734533, null);
          } else {
            throw e19518;
          }
        }
      }();
      if (cljs.core.truth_(temp__4423__auto__)) {
        var reason = temp__4423__auto__;
        return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(reason, temp__4423__auto__, this$__$1) {
          return function() {
            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), self__.pred_name);
          };
        }(reason, temp__4423__auto__, this$__$1), null), reason));
      } else {
        return x;
      }
    };
  }(this$__$1);
};
schema.core.Predicate.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core._EQ_.call(null, self__.p_QMARK_, cljs.core.integer_QMARK_)) {
    return new cljs.core.Symbol(null, "Int", "Int", -2116888740, null);
  } else {
    if (cljs.core._EQ_.call(null, self__.p_QMARK_, cljs.core.keyword_QMARK_)) {
      return new cljs.core.Symbol(null, "Keyword", "Keyword", -850065993, null);
    } else {
      if (cljs.core._EQ_.call(null, self__.p_QMARK_, cljs.core.symbol_QMARK_)) {
        return new cljs.core.Symbol(null, "Symbol", "Symbol", 716452869, null);
      } else {
        if (cljs.core._EQ_.call(null, self__.p_QMARK_, cljs.core.string_QMARK_)) {
          return new cljs.core.Symbol(null, "Str", "Str", 907970895, null);
        } else {
          return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.pred_name), new cljs.core.Symbol(null, "pred", "pred", -727012372, null));
        }
      }
    }
  }
};
schema.core.Predicate.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p?", "p?", 468369826, null), new cljs.core.Symbol(null, "pred-name", "pred-name", 1636854076, null)], null);
};
schema.core.Predicate.cljs$lang$type = true;
schema.core.Predicate.cljs$lang$ctorPrSeq = function(this__5155__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/Predicate");
};
schema.core.Predicate.cljs$lang$ctorPrWriter = function(this__5155__auto__, writer__5156__auto__) {
  return cljs.core._write.call(null, writer__5156__auto__, "schema.core/Predicate");
};
schema.core.__GT_Predicate = function schema$core$__GT_Predicate(p_QMARK_, pred_name) {
  return new schema.core.Predicate(p_QMARK_, pred_name, null, null, null);
};
schema.core.map__GT_Predicate = function schema$core$map__GT_Predicate(G__19513) {
  return new schema.core.Predicate((new cljs.core.Keyword(null, "p?", "p?", -1172161701)).cljs$core$IFn$_invoke$arity$1(G__19513), (new cljs.core.Keyword(null, "pred-name", "pred-name", -3677451)).cljs$core$IFn$_invoke$arity$1(G__19513), null, cljs.core.dissoc.call(null, G__19513, new cljs.core.Keyword(null, "p?", "p?", -1172161701), new cljs.core.Keyword(null, "pred-name", "pred-name", -3677451)), null);
};
schema.core.pred = function schema$core$pred() {
  var args19520 = [];
  var len__5565__auto___19523 = arguments.length;
  var i__5566__auto___19524 = 0;
  while (true) {
    if (i__5566__auto___19524 < len__5565__auto___19523) {
      args19520.push(arguments[i__5566__auto___19524]);
      var G__19525 = i__5566__auto___19524 + 1;
      i__5566__auto___19524 = G__19525;
      continue;
    } else {
    }
    break;
  }
  var G__19522 = args19520.length;
  switch(G__19522) {
    case 1:
      return schema.core.pred.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return schema.core.pred.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args19520.length)].join(""));;
  }
};
schema.core.pred.cljs$core$IFn$_invoke$arity$1 = function(p_QMARK_) {
  return schema.core.pred.call(null, p_QMARK_, p_QMARK_);
};
schema.core.pred.cljs$core$IFn$_invoke$arity$2 = function(p_QMARK_, pred_name) {
  if (cljs.core.ifn_QMARK_.call(null, p_QMARK_)) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Not a function: %s", p_QMARK_));
  }
  return new schema.core.Predicate(p_QMARK_, pred_name, null, null, null);
};
schema.core.pred.cljs$lang$maxFixedArity = 2;
schema.core.protocol_name = function schema$core$protocol_name(protocol) {
  return (new cljs.core.Keyword(null, "proto-sym", "proto-sym", -886371734)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, protocol));
};
schema.core.Protocol = function(p, __meta, __extmap, __hash) {
  this.p = p;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.core.Protocol.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__5121__auto__, k__5122__auto__) {
  var self__ = this;
  var this__5121__auto____$1 = this;
  return cljs.core._lookup.call(null, this__5121__auto____$1, k__5122__auto__, null);
};
schema.core.Protocol.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__5123__auto__, k19528, else__5124__auto__) {
  var self__ = this;
  var this__5123__auto____$1 = this;
  var G__19530 = k19528 instanceof cljs.core.Keyword ? k19528.fqn : null;
  switch(G__19530) {
    case "p":
      return self__.p;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k19528, else__5124__auto__);
  }
};
schema.core.Protocol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__5135__auto__, writer__5136__auto__, opts__5137__auto__) {
  var self__ = this;
  var this__5135__auto____$1 = this;
  var pr_pair__5138__auto__ = function(this__5135__auto____$1) {
    return function(keyval__5139__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__5136__auto__, cljs.core.pr_writer, "", " ", "", opts__5137__auto__, keyval__5139__auto__);
    };
  }(this__5135__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__5136__auto__, pr_pair__5138__auto__, "#schema.core.Protocol{", ", ", "}", opts__5137__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 151049309), self__.p], null)], null), self__.__extmap));
};
schema.core.Protocol.prototype.cljs$core$IIterable$ = true;
schema.core.Protocol.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__19527) {
  var self__ = this;
  var G__19527__$1 = this;
  return new cljs.core.RecordIter(0, G__19527__$1, 1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 151049309)], null), cljs.core._iterator.call(null, self__.__extmap));
};
schema.core.Protocol.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__5119__auto__) {
  var self__ = this;
  var this__5119__auto____$1 = this;
  return self__.__meta;
};
schema.core.Protocol.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__5115__auto__) {
  var self__ = this;
  var this__5115__auto____$1 = this;
  return new schema.core.Protocol(self__.p, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.Protocol.prototype.cljs$core$ICounted$_count$arity$1 = function(this__5125__auto__) {
  var self__ = this;
  var this__5125__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.Protocol.prototype.cljs$core$IHash$_hash$arity$1 = function(this__5116__auto__) {
  var self__ = this;
  var this__5116__auto____$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_imap.call(null, this__5116__auto____$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
schema.core.Protocol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__5117__auto__, other__5118__auto__) {
  var self__ = this;
  var this__5117__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4514__auto__ = other__5118__auto__;
    if (cljs.core.truth_(and__4514__auto__)) {
      var and__4514__auto____$1 = this__5117__auto____$1.constructor === other__5118__auto__.constructor;
      if (and__4514__auto____$1) {
        return cljs.core.equiv_map.call(null, this__5117__auto____$1, other__5118__auto__);
      } else {
        return and__4514__auto____$1;
      }
    } else {
      return and__4514__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.Protocol.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__5130__auto__, k__5131__auto__) {
  var self__ = this;
  var this__5130__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "p", "p", 151049309), null], null), null), k__5131__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__5130__auto____$1), self__.__meta), k__5131__auto__);
  } else {
    return new schema.core.Protocol(self__.p, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__5131__auto__)), null);
  }
};
schema.core.Protocol.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__5128__auto__, k__5129__auto__, G__19527) {
  var self__ = this;
  var this__5128__auto____$1 = this;
  var pred__19531 = cljs.core.keyword_identical_QMARK_;
  var expr__19532 = k__5129__auto__;
  if (cljs.core.truth_(pred__19531.call(null, new cljs.core.Keyword(null, "p", "p", 151049309), expr__19532))) {
    return new schema.core.Protocol(G__19527, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.Protocol(self__.p, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__5129__auto__, G__19527), null);
  }
};
schema.core.Protocol.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__5133__auto__) {
  var self__ = this;
  var this__5133__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 151049309), self__.p], null)], null), self__.__extmap));
};
schema.core.Protocol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__5120__auto__, G__19527) {
  var self__ = this;
  var this__5120__auto____$1 = this;
  return new schema.core.Protocol(self__.p, G__19527, self__.__extmap, self__.__hash);
};
schema.core.Protocol.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__5126__auto__, entry__5127__auto__) {
  var self__ = this;
  var this__5126__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__5127__auto__)) {
    return cljs.core._assoc.call(null, this__5126__auto____$1, cljs.core._nth.call(null, entry__5127__auto__, 0), cljs.core._nth.call(null, entry__5127__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__5126__auto____$1, entry__5127__auto__);
  }
};
schema.core.Protocol.prototype.schema$core$Schema$ = true;
schema.core.Protocol.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return function(this$__$1) {
    return function(x) {
      if (cljs.core.truth_((new cljs.core.Keyword(null, "proto-pred", "proto-pred", 1885698716)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, this$__$1)).call(null, x))) {
        return x;
      } else {
        return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(this$__$1) {
          return function() {
            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), schema.core.protocol_name.call(null, this$__$1)), new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null));
          };
        }(this$__$1), null), null));
      }
    };
  }(this$__$1);
};
schema.core.Protocol.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.core.protocol_name.call(null, this$__$1)), new cljs.core.Symbol(null, "protocol", "protocol", -2001965651, null));
};
schema.core.Protocol.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p", "p", 1791580836, null)], null);
};
schema.core.Protocol.cljs$lang$type = true;
schema.core.Protocol.cljs$lang$ctorPrSeq = function(this__5155__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/Protocol");
};
schema.core.Protocol.cljs$lang$ctorPrWriter = function(this__5155__auto__, writer__5156__auto__) {
  return cljs.core._write.call(null, writer__5156__auto__, "schema.core/Protocol");
};
schema.core.__GT_Protocol = function schema$core$__GT_Protocol(p) {
  return new schema.core.Protocol(p, null, null, null);
};
schema.core.map__GT_Protocol = function schema$core$map__GT_Protocol(G__19529) {
  return new schema.core.Protocol((new cljs.core.Keyword(null, "p", "p", 151049309)).cljs$core$IFn$_invoke$arity$1(G__19529), null, cljs.core.dissoc.call(null, G__19529, new cljs.core.Keyword(null, "p", "p", 151049309)), null);
};
RegExp.prototype.schema$core$Schema$ = true;
RegExp.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var this$__$1 = this;
  return function(this$__$1) {
    return function(x) {
      if (!(typeof x === "string")) {
        return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(this$__$1) {
          return function() {
            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), new cljs.core.Symbol(null, "string?", "string?", -1129175764, null));
          };
        }(this$__$1), null), null));
      } else {
        if (cljs.core.not.call(null, cljs.core.re_find.call(null, this$__$1, x))) {
          return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(this$__$1) {
            return function() {
              return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), schema.core.explain.call(null, this$__$1)), new cljs.core.Symbol(null, "re-find", "re-find", 1143444147, null));
            };
          }(this$__$1), null), null));
        } else {
          return x;
        }
      }
    };
  }(this$__$1);
};
RegExp.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.symbol.call(null, [cljs.core.str('#"'), cljs.core.str([cljs.core.str(this$__$1)].join("").slice(1, -1)), cljs.core.str('"')].join(""));
};
schema.core.Str = schema.core.pred.call(null, cljs.core.string_QMARK_);
schema.core.Bool = Boolean;
schema.core.Num = Number;
schema.core.Int = schema.core.pred.call(null, cljs.core.integer_QMARK_, new cljs.core.Symbol(null, "integer?", "integer?", 1303791671, null));
schema.core.Keyword = schema.core.pred.call(null, cljs.core.keyword_QMARK_, new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null));
schema.core.Symbol = schema.core.pred.call(null, cljs.core.symbol_QMARK_, new cljs.core.Symbol(null, "symbol?", "symbol?", 1820680511, null));
schema.core.Regex = function() {
  if (typeof schema.core.t19535 !== "undefined") {
  } else {
    schema.core.t19535 = function(meta19536) {
      this.meta19536 = meta19536;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    schema.core.t19535.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_19537, meta19536__$1) {
      var self__ = this;
      var _19537__$1 = this;
      return new schema.core.t19535(meta19536__$1);
    };
    schema.core.t19535.prototype.cljs$core$IMeta$_meta$arity$1 = function(_19537) {
      var self__ = this;
      var _19537__$1 = this;
      return self__.meta19536;
    };
    schema.core.t19535.prototype.schema$core$Schema$ = true;
    schema.core.t19535.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      return function(this$__$1) {
        return function(x) {
          if (x instanceof RegExp) {
            return x;
          } else {
            return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(this$__$1) {
              return function() {
                return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), new cljs.core.Symbol("js", "RegExp", "js/RegExp", 1778210562, null)), new cljs.core.Symbol(null, "instance?", "instance?", 1075939923, null));
              };
            }(this$__$1), null), null));
          }
        };
      }(this$__$1);
    };
    schema.core.t19535.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      return new cljs.core.Symbol(null, "Regex", "Regex", 205914413, null);
    };
    schema.core.t19535.getBasis = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta19536", "meta19536", -69564103, null)], null);
    };
    schema.core.t19535.cljs$lang$type = true;
    schema.core.t19535.cljs$lang$ctorStr = "schema.core/t19535";
    schema.core.t19535.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
      return cljs.core._write.call(null, writer__5106__auto__, "schema.core/t19535");
    };
    schema.core.__GT_t19535 = function schema$core$__GT_t19535(meta19536) {
      return new schema.core.t19535(meta19536);
    };
  }
  return new schema.core.t19535(cljs.core.PersistentArrayMap.EMPTY);
}();
schema.core.Inst = Date;
schema.core.Uuid = cljs.core.UUID;
schema.core.Maybe = function(schema, __meta, __extmap, __hash) {
  this.schema = schema;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.core.Maybe.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__5121__auto__, k__5122__auto__) {
  var self__ = this;
  var this__5121__auto____$1 = this;
  return cljs.core._lookup.call(null, this__5121__auto____$1, k__5122__auto__, null);
};
schema.core.Maybe.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__5123__auto__, k19539, else__5124__auto__) {
  var self__ = this;
  var this__5123__auto____$1 = this;
  var G__19541 = k19539 instanceof cljs.core.Keyword ? k19539.fqn : null;
  switch(G__19541) {
    case "schema":
      return self__.schema;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k19539, else__5124__auto__);
  }
};
schema.core.Maybe.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__5135__auto__, writer__5136__auto__, opts__5137__auto__) {
  var self__ = this;
  var this__5135__auto____$1 = this;
  var pr_pair__5138__auto__ = function(this__5135__auto____$1) {
    return function(keyval__5139__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__5136__auto__, cljs.core.pr_writer, "", " ", "", opts__5137__auto__, keyval__5139__auto__);
    };
  }(this__5135__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__5136__auto__, pr_pair__5138__auto__, "#schema.core.Maybe{", ", ", "}", opts__5137__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null)], null), self__.__extmap));
};
schema.core.Maybe.prototype.cljs$core$IIterable$ = true;
schema.core.Maybe.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__19538) {
  var self__ = this;
  var G__19538__$1 = this;
  return new cljs.core.RecordIter(0, G__19538__$1, 1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791)], null), cljs.core._iterator.call(null, self__.__extmap));
};
schema.core.Maybe.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__5119__auto__) {
  var self__ = this;
  var this__5119__auto____$1 = this;
  return self__.__meta;
};
schema.core.Maybe.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__5115__auto__) {
  var self__ = this;
  var this__5115__auto____$1 = this;
  return new schema.core.Maybe(self__.schema, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.Maybe.prototype.cljs$core$ICounted$_count$arity$1 = function(this__5125__auto__) {
  var self__ = this;
  var this__5125__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.Maybe.prototype.cljs$core$IHash$_hash$arity$1 = function(this__5116__auto__) {
  var self__ = this;
  var this__5116__auto____$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_imap.call(null, this__5116__auto____$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
schema.core.Maybe.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__5117__auto__, other__5118__auto__) {
  var self__ = this;
  var this__5117__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4514__auto__ = other__5118__auto__;
    if (cljs.core.truth_(and__4514__auto__)) {
      var and__4514__auto____$1 = this__5117__auto____$1.constructor === other__5118__auto__.constructor;
      if (and__4514__auto____$1) {
        return cljs.core.equiv_map.call(null, this__5117__auto____$1, other__5118__auto__);
      } else {
        return and__4514__auto____$1;
      }
    } else {
      return and__4514__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.Maybe.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__5130__auto__, k__5131__auto__) {
  var self__ = this;
  var this__5130__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), null], null), null), k__5131__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__5130__auto____$1), self__.__meta), k__5131__auto__);
  } else {
    return new schema.core.Maybe(self__.schema, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__5131__auto__)), null);
  }
};
schema.core.Maybe.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__5128__auto__, k__5129__auto__, G__19538) {
  var self__ = this;
  var this__5128__auto____$1 = this;
  var pred__19542 = cljs.core.keyword_identical_QMARK_;
  var expr__19543 = k__5129__auto__;
  if (cljs.core.truth_(pred__19542.call(null, new cljs.core.Keyword(null, "schema", "schema", -1582001791), expr__19543))) {
    return new schema.core.Maybe(G__19538, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.Maybe(self__.schema, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__5129__auto__, G__19538), null);
  }
};
schema.core.Maybe.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__5133__auto__) {
  var self__ = this;
  var this__5133__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null)], null), self__.__extmap));
};
schema.core.Maybe.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__5120__auto__, G__19538) {
  var self__ = this;
  var this__5120__auto____$1 = this;
  return new schema.core.Maybe(self__.schema, G__19538, self__.__extmap, self__.__hash);
};
schema.core.Maybe.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__5126__auto__, entry__5127__auto__) {
  var self__ = this;
  var this__5126__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__5127__auto__)) {
    return cljs.core._assoc.call(null, this__5126__auto____$1, cljs.core._nth.call(null, entry__5127__auto__, 0), cljs.core._nth.call(null, entry__5127__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__5126__auto____$1, entry__5127__auto__);
  }
};
schema.core.Maybe.prototype.schema$core$Schema$ = true;
schema.core.Maybe.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var sub_walker = schema.core.subschema_walker.call(null, self__.schema);
  return function(sub_walker, this$__$1) {
    return function(x) {
      if (x == null) {
        return null;
      } else {
        return sub_walker.call(null, x);
      }
    };
  }(sub_walker, this$__$1);
};
schema.core.Maybe.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.core.explain.call(null, self__.schema)), new cljs.core.Symbol(null, "maybe", "maybe", 1326133967, null));
};
schema.core.Maybe.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "schema", "schema", 58529736, null)], null);
};
schema.core.Maybe.cljs$lang$type = true;
schema.core.Maybe.cljs$lang$ctorPrSeq = function(this__5155__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/Maybe");
};
schema.core.Maybe.cljs$lang$ctorPrWriter = function(this__5155__auto__, writer__5156__auto__) {
  return cljs.core._write.call(null, writer__5156__auto__, "schema.core/Maybe");
};
schema.core.__GT_Maybe = function schema$core$__GT_Maybe(schema__$1) {
  return new schema.core.Maybe(schema__$1, null, null, null);
};
schema.core.map__GT_Maybe = function schema$core$map__GT_Maybe(G__19540) {
  return new schema.core.Maybe((new cljs.core.Keyword(null, "schema", "schema", -1582001791)).cljs$core$IFn$_invoke$arity$1(G__19540), null, cljs.core.dissoc.call(null, G__19540, new cljs.core.Keyword(null, "schema", "schema", -1582001791)), null);
};
schema.core.maybe = function schema$core$maybe(schema__$1) {
  return new schema.core.Maybe(schema__$1, null, null, null);
};
schema.core.NamedSchema = function(schema, name, __meta, __extmap, __hash) {
  this.schema = schema;
  this.name = name;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.core.NamedSchema.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__5121__auto__, k__5122__auto__) {
  var self__ = this;
  var this__5121__auto____$1 = this;
  return cljs.core._lookup.call(null, this__5121__auto____$1, k__5122__auto__, null);
};
schema.core.NamedSchema.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__5123__auto__, k19547, else__5124__auto__) {
  var self__ = this;
  var this__5123__auto____$1 = this;
  var G__19549 = k19547 instanceof cljs.core.Keyword ? k19547.fqn : null;
  switch(G__19549) {
    case "schema":
      return self__.schema;
      break;
    case "name":
      return self__.name;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k19547, else__5124__auto__);
  }
};
schema.core.NamedSchema.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__5135__auto__, writer__5136__auto__, opts__5137__auto__) {
  var self__ = this;
  var this__5135__auto____$1 = this;
  var pr_pair__5138__auto__ = function(this__5135__auto____$1) {
    return function(keyval__5139__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__5136__auto__, cljs.core.pr_writer, "", " ", "", opts__5137__auto__, keyval__5139__auto__);
    };
  }(this__5135__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__5136__auto__, pr_pair__5138__auto__, "#schema.core.NamedSchema{", ", ", "}", opts__5137__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "name", "name", 1843675177), self__.name], null)], null), self__.__extmap));
};
schema.core.NamedSchema.prototype.cljs$core$IIterable$ = true;
schema.core.NamedSchema.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__19546) {
  var self__ = this;
  var G__19546__$1 = this;
  return new cljs.core.RecordIter(0, G__19546__$1, 2, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Keyword(null, "name", "name", 1843675177)], null), cljs.core._iterator.call(null, self__.__extmap));
};
schema.core.NamedSchema.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__5119__auto__) {
  var self__ = this;
  var this__5119__auto____$1 = this;
  return self__.__meta;
};
schema.core.NamedSchema.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__5115__auto__) {
  var self__ = this;
  var this__5115__auto____$1 = this;
  return new schema.core.NamedSchema(self__.schema, self__.name, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.NamedSchema.prototype.cljs$core$ICounted$_count$arity$1 = function(this__5125__auto__) {
  var self__ = this;
  var this__5125__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.NamedSchema.prototype.cljs$core$IHash$_hash$arity$1 = function(this__5116__auto__) {
  var self__ = this;
  var this__5116__auto____$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_imap.call(null, this__5116__auto____$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
schema.core.NamedSchema.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__5117__auto__, other__5118__auto__) {
  var self__ = this;
  var this__5117__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4514__auto__ = other__5118__auto__;
    if (cljs.core.truth_(and__4514__auto__)) {
      var and__4514__auto____$1 = this__5117__auto____$1.constructor === other__5118__auto__.constructor;
      if (and__4514__auto____$1) {
        return cljs.core.equiv_map.call(null, this__5117__auto____$1, other__5118__auto__);
      } else {
        return and__4514__auto____$1;
      }
    } else {
      return and__4514__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.NamedSchema.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__5130__auto__, k__5131__auto__) {
  var self__ = this;
  var this__5130__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), null, new cljs.core.Keyword(null, "name", "name", 1843675177), null], null), null), k__5131__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__5130__auto____$1), self__.__meta), k__5131__auto__);
  } else {
    return new schema.core.NamedSchema(self__.schema, self__.name, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__5131__auto__)), null);
  }
};
schema.core.NamedSchema.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__5128__auto__, k__5129__auto__, G__19546) {
  var self__ = this;
  var this__5128__auto____$1 = this;
  var pred__19550 = cljs.core.keyword_identical_QMARK_;
  var expr__19551 = k__5129__auto__;
  if (cljs.core.truth_(pred__19550.call(null, new cljs.core.Keyword(null, "schema", "schema", -1582001791), expr__19551))) {
    return new schema.core.NamedSchema(G__19546, self__.name, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__19550.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), expr__19551))) {
      return new schema.core.NamedSchema(self__.schema, G__19546, self__.__meta, self__.__extmap, null);
    } else {
      return new schema.core.NamedSchema(self__.schema, self__.name, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__5129__auto__, G__19546), null);
    }
  }
};
schema.core.NamedSchema.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__5133__auto__) {
  var self__ = this;
  var this__5133__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "name", "name", 1843675177), self__.name], null)], null), self__.__extmap));
};
schema.core.NamedSchema.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__5120__auto__, G__19546) {
  var self__ = this;
  var this__5120__auto____$1 = this;
  return new schema.core.NamedSchema(self__.schema, self__.name, G__19546, self__.__extmap, self__.__hash);
};
schema.core.NamedSchema.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__5126__auto__, entry__5127__auto__) {
  var self__ = this;
  var this__5126__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__5127__auto__)) {
    return cljs.core._assoc.call(null, this__5126__auto____$1, cljs.core._nth.call(null, entry__5127__auto__, 0), cljs.core._nth.call(null, entry__5127__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__5126__auto____$1, entry__5127__auto__);
  }
};
schema.core.NamedSchema.prototype.schema$core$Schema$ = true;
schema.core.NamedSchema.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var sub_walker = schema.core.subschema_walker.call(null, self__.schema);
  return function(sub_walker, this$__$1) {
    return function(x) {
      return schema.utils.wrap_error_name.call(null, self__.name, sub_walker.call(null, x));
    };
  }(sub_walker, this$__$1);
};
schema.core.NamedSchema.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.name), schema.core.explain.call(null, self__.schema)), new cljs.core.Symbol(null, "named", "named", 1218138048, null));
};
schema.core.NamedSchema.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "schema", "schema", 58529736, null), new cljs.core.Symbol(null, "name", "name", -810760592, null)], null);
};
schema.core.NamedSchema.cljs$lang$type = true;
schema.core.NamedSchema.cljs$lang$ctorPrSeq = function(this__5155__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/NamedSchema");
};
schema.core.NamedSchema.cljs$lang$ctorPrWriter = function(this__5155__auto__, writer__5156__auto__) {
  return cljs.core._write.call(null, writer__5156__auto__, "schema.core/NamedSchema");
};
schema.core.__GT_NamedSchema = function schema$core$__GT_NamedSchema(schema__$1, name) {
  return new schema.core.NamedSchema(schema__$1, name, null, null, null);
};
schema.core.map__GT_NamedSchema = function schema$core$map__GT_NamedSchema(G__19548) {
  return new schema.core.NamedSchema((new cljs.core.Keyword(null, "schema", "schema", -1582001791)).cljs$core$IFn$_invoke$arity$1(G__19548), (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(G__19548), null, cljs.core.dissoc.call(null, G__19548, new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Keyword(null, "name", "name", 1843675177)), null);
};
schema.core.named = function schema$core$named(schema__$1, name) {
  return new schema.core.NamedSchema(schema__$1, name, null, null, null);
};
schema.core.Either = function(schemas, __meta, __extmap, __hash) {
  this.schemas = schemas;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.core.Either.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__5121__auto__, k__5122__auto__) {
  var self__ = this;
  var this__5121__auto____$1 = this;
  return cljs.core._lookup.call(null, this__5121__auto____$1, k__5122__auto__, null);
};
schema.core.Either.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__5123__auto__, k19555, else__5124__auto__) {
  var self__ = this;
  var this__5123__auto____$1 = this;
  var G__19557 = k19555 instanceof cljs.core.Keyword ? k19555.fqn : null;
  switch(G__19557) {
    case "schemas":
      return self__.schemas;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k19555, else__5124__auto__);
  }
};
schema.core.Either.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__5135__auto__, writer__5136__auto__, opts__5137__auto__) {
  var self__ = this;
  var this__5135__auto____$1 = this;
  var pr_pair__5138__auto__ = function(this__5135__auto____$1) {
    return function(keyval__5139__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__5136__auto__, cljs.core.pr_writer, "", " ", "", opts__5137__auto__, keyval__5139__auto__);
    };
  }(this__5135__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__5136__auto__, pr_pair__5138__auto__, "#schema.core.Either{", ", ", "}", opts__5137__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schemas", "schemas", 575070579), self__.schemas], null)], null), self__.__extmap));
};
schema.core.Either.prototype.cljs$core$IIterable$ = true;
schema.core.Either.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__19554) {
  var self__ = this;
  var G__19554__$1 = this;
  return new cljs.core.RecordIter(0, G__19554__$1, 1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schemas", "schemas", 575070579)], null), cljs.core._iterator.call(null, self__.__extmap));
};
schema.core.Either.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__5119__auto__) {
  var self__ = this;
  var this__5119__auto____$1 = this;
  return self__.__meta;
};
schema.core.Either.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__5115__auto__) {
  var self__ = this;
  var this__5115__auto____$1 = this;
  return new schema.core.Either(self__.schemas, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.Either.prototype.cljs$core$ICounted$_count$arity$1 = function(this__5125__auto__) {
  var self__ = this;
  var this__5125__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.Either.prototype.cljs$core$IHash$_hash$arity$1 = function(this__5116__auto__) {
  var self__ = this;
  var this__5116__auto____$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_imap.call(null, this__5116__auto____$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
schema.core.Either.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__5117__auto__, other__5118__auto__) {
  var self__ = this;
  var this__5117__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4514__auto__ = other__5118__auto__;
    if (cljs.core.truth_(and__4514__auto__)) {
      var and__4514__auto____$1 = this__5117__auto____$1.constructor === other__5118__auto__.constructor;
      if (and__4514__auto____$1) {
        return cljs.core.equiv_map.call(null, this__5117__auto____$1, other__5118__auto__);
      } else {
        return and__4514__auto____$1;
      }
    } else {
      return and__4514__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.Either.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__5130__auto__, k__5131__auto__) {
  var self__ = this;
  var this__5130__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schemas", "schemas", 575070579), null], null), null), k__5131__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__5130__auto____$1), self__.__meta), k__5131__auto__);
  } else {
    return new schema.core.Either(self__.schemas, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__5131__auto__)), null);
  }
};
schema.core.Either.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__5128__auto__, k__5129__auto__, G__19554) {
  var self__ = this;
  var this__5128__auto____$1 = this;
  var pred__19558 = cljs.core.keyword_identical_QMARK_;
  var expr__19559 = k__5129__auto__;
  if (cljs.core.truth_(pred__19558.call(null, new cljs.core.Keyword(null, "schemas", "schemas", 575070579), expr__19559))) {
    return new schema.core.Either(G__19554, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.Either(self__.schemas, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__5129__auto__, G__19554), null);
  }
};
schema.core.Either.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__5133__auto__) {
  var self__ = this;
  var this__5133__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schemas", "schemas", 575070579), self__.schemas], null)], null), self__.__extmap));
};
schema.core.Either.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__5120__auto__, G__19554) {
  var self__ = this;
  var this__5120__auto____$1 = this;
  return new schema.core.Either(self__.schemas, G__19554, self__.__extmap, self__.__hash);
};
schema.core.Either.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__5126__auto__, entry__5127__auto__) {
  var self__ = this;
  var this__5126__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__5127__auto__)) {
    return cljs.core._assoc.call(null, this__5126__auto____$1, cljs.core._nth.call(null, entry__5127__auto__, 0), cljs.core._nth.call(null, entry__5127__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__5126__auto____$1, entry__5127__auto__);
  }
};
schema.core.Either.prototype.schema$core$Schema$ = true;
schema.core.Either.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var sub_walkers = cljs.core.mapv.call(null, schema.core.subschema_walker, self__.schemas);
  return function(sub_walkers, this$__$1) {
    return function(x) {
      var sub_walkers__$1 = cljs.core.seq.call(null, sub_walkers);
      while (true) {
        if (cljs.core.not.call(null, sub_walkers__$1)) {
          return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(sub_walkers__$1, sub_walkers, this$__$1) {
            return function() {
              return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "schemas", "schemas", -2079365190, null)), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), new cljs.core.Symbol(null, "%", "%", -950237169, null)), new cljs.core.Symbol(null, "check", "check", -1428126865, null))), new cljs.core.Symbol(null, "some", "some", 
              -310548046, null));
            };
          }(sub_walkers__$1, sub_walkers, this$__$1), null), null));
        } else {
          var res = cljs.core.first.call(null, sub_walkers__$1).call(null, x);
          if (cljs.core.not.call(null, schema.utils.error_QMARK_.call(null, res))) {
            return res;
          } else {
            var G__19562 = cljs.core.next.call(null, sub_walkers__$1);
            sub_walkers__$1 = G__19562;
            continue;
          }
        }
        break;
      }
    };
  }(sub_walkers, this$__$1);
};
schema.core.Either.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, new cljs.core.Symbol(null, "either", "either", -2144373018, null), cljs.core.map.call(null, schema.core.explain, self__.schemas));
};
schema.core.Either.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "schemas", "schemas", -2079365190, null)], null);
};
schema.core.Either.cljs$lang$type = true;
schema.core.Either.cljs$lang$ctorPrSeq = function(this__5155__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/Either");
};
schema.core.Either.cljs$lang$ctorPrWriter = function(this__5155__auto__, writer__5156__auto__) {
  return cljs.core._write.call(null, writer__5156__auto__, "schema.core/Either");
};
schema.core.__GT_Either = function schema$core$__GT_Either(schemas) {
  return new schema.core.Either(schemas, null, null, null);
};
schema.core.map__GT_Either = function schema$core$map__GT_Either(G__19556) {
  return new schema.core.Either((new cljs.core.Keyword(null, "schemas", "schemas", 575070579)).cljs$core$IFn$_invoke$arity$1(G__19556), null, cljs.core.dissoc.call(null, G__19556, new cljs.core.Keyword(null, "schemas", "schemas", 575070579)), null);
};
schema.core.either = function schema$core$either() {
  var args__5572__auto__ = [];
  var len__5565__auto___19564 = arguments.length;
  var i__5566__auto___19565 = 0;
  while (true) {
    if (i__5566__auto___19565 < len__5565__auto___19564) {
      args__5572__auto__.push(arguments[i__5566__auto___19565]);
      var G__19566 = i__5566__auto___19565 + 1;
      i__5566__auto___19565 = G__19566;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return schema.core.either.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
schema.core.either.cljs$core$IFn$_invoke$arity$variadic = function(schemas) {
  return new schema.core.Either(schemas, null, null, null);
};
schema.core.either.cljs$lang$maxFixedArity = 0;
schema.core.either.cljs$lang$applyTo = function(seq19563) {
  return schema.core.either.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq19563));
};
schema.core.Both = function(schemas, __meta, __extmap, __hash) {
  this.schemas = schemas;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.core.Both.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__5121__auto__, k__5122__auto__) {
  var self__ = this;
  var this__5121__auto____$1 = this;
  return cljs.core._lookup.call(null, this__5121__auto____$1, k__5122__auto__, null);
};
schema.core.Both.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__5123__auto__, k19568, else__5124__auto__) {
  var self__ = this;
  var this__5123__auto____$1 = this;
  var G__19570 = k19568 instanceof cljs.core.Keyword ? k19568.fqn : null;
  switch(G__19570) {
    case "schemas":
      return self__.schemas;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k19568, else__5124__auto__);
  }
};
schema.core.Both.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__5135__auto__, writer__5136__auto__, opts__5137__auto__) {
  var self__ = this;
  var this__5135__auto____$1 = this;
  var pr_pair__5138__auto__ = function(this__5135__auto____$1) {
    return function(keyval__5139__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__5136__auto__, cljs.core.pr_writer, "", " ", "", opts__5137__auto__, keyval__5139__auto__);
    };
  }(this__5135__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__5136__auto__, pr_pair__5138__auto__, "#schema.core.Both{", ", ", "}", opts__5137__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schemas", "schemas", 575070579), self__.schemas], null)], null), self__.__extmap));
};
schema.core.Both.prototype.cljs$core$IIterable$ = true;
schema.core.Both.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__19567) {
  var self__ = this;
  var G__19567__$1 = this;
  return new cljs.core.RecordIter(0, G__19567__$1, 1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schemas", "schemas", 575070579)], null), cljs.core._iterator.call(null, self__.__extmap));
};
schema.core.Both.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__5119__auto__) {
  var self__ = this;
  var this__5119__auto____$1 = this;
  return self__.__meta;
};
schema.core.Both.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__5115__auto__) {
  var self__ = this;
  var this__5115__auto____$1 = this;
  return new schema.core.Both(self__.schemas, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.Both.prototype.cljs$core$ICounted$_count$arity$1 = function(this__5125__auto__) {
  var self__ = this;
  var this__5125__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.Both.prototype.cljs$core$IHash$_hash$arity$1 = function(this__5116__auto__) {
  var self__ = this;
  var this__5116__auto____$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_imap.call(null, this__5116__auto____$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
schema.core.Both.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__5117__auto__, other__5118__auto__) {
  var self__ = this;
  var this__5117__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4514__auto__ = other__5118__auto__;
    if (cljs.core.truth_(and__4514__auto__)) {
      var and__4514__auto____$1 = this__5117__auto____$1.constructor === other__5118__auto__.constructor;
      if (and__4514__auto____$1) {
        return cljs.core.equiv_map.call(null, this__5117__auto____$1, other__5118__auto__);
      } else {
        return and__4514__auto____$1;
      }
    } else {
      return and__4514__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.Both.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__5130__auto__, k__5131__auto__) {
  var self__ = this;
  var this__5130__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schemas", "schemas", 575070579), null], null), null), k__5131__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__5130__auto____$1), self__.__meta), k__5131__auto__);
  } else {
    return new schema.core.Both(self__.schemas, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__5131__auto__)), null);
  }
};
schema.core.Both.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__5128__auto__, k__5129__auto__, G__19567) {
  var self__ = this;
  var this__5128__auto____$1 = this;
  var pred__19571 = cljs.core.keyword_identical_QMARK_;
  var expr__19572 = k__5129__auto__;
  if (cljs.core.truth_(pred__19571.call(null, new cljs.core.Keyword(null, "schemas", "schemas", 575070579), expr__19572))) {
    return new schema.core.Both(G__19567, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.Both(self__.schemas, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__5129__auto__, G__19567), null);
  }
};
schema.core.Both.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__5133__auto__) {
  var self__ = this;
  var this__5133__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schemas", "schemas", 575070579), self__.schemas], null)], null), self__.__extmap));
};
schema.core.Both.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__5120__auto__, G__19567) {
  var self__ = this;
  var this__5120__auto____$1 = this;
  return new schema.core.Both(self__.schemas, G__19567, self__.__extmap, self__.__hash);
};
schema.core.Both.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__5126__auto__, entry__5127__auto__) {
  var self__ = this;
  var this__5126__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__5127__auto__)) {
    return cljs.core._assoc.call(null, this__5126__auto____$1, cljs.core._nth.call(null, entry__5127__auto__, 0), cljs.core._nth.call(null, entry__5127__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__5126__auto____$1, entry__5127__auto__);
  }
};
schema.core.Both.prototype.schema$core$Schema$ = true;
schema.core.Both.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var sub_walkers = cljs.core.mapv.call(null, schema.core.subschema_walker, self__.schemas);
  return function(sub_walkers, this$__$1) {
    return function(x) {
      return cljs.core.reduce.call(null, function(sub_walkers, this$__$1) {
        return function(x__$1, sub_walker) {
          if (cljs.core.truth_(schema.utils.error_QMARK_.call(null, x__$1))) {
            return x__$1;
          } else {
            return sub_walker.call(null, x__$1);
          }
        };
      }(sub_walkers, this$__$1), x, sub_walkers);
    };
  }(sub_walkers, this$__$1);
};
schema.core.Both.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, new cljs.core.Symbol(null, "both", "both", 1246882687, null), cljs.core.map.call(null, schema.core.explain, self__.schemas));
};
schema.core.Both.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "schemas", "schemas", -2079365190, null)], null);
};
schema.core.Both.cljs$lang$type = true;
schema.core.Both.cljs$lang$ctorPrSeq = function(this__5155__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/Both");
};
schema.core.Both.cljs$lang$ctorPrWriter = function(this__5155__auto__, writer__5156__auto__) {
  return cljs.core._write.call(null, writer__5156__auto__, "schema.core/Both");
};
schema.core.__GT_Both = function schema$core$__GT_Both(schemas) {
  return new schema.core.Both(schemas, null, null, null);
};
schema.core.map__GT_Both = function schema$core$map__GT_Both(G__19569) {
  return new schema.core.Both((new cljs.core.Keyword(null, "schemas", "schemas", 575070579)).cljs$core$IFn$_invoke$arity$1(G__19569), null, cljs.core.dissoc.call(null, G__19569, new cljs.core.Keyword(null, "schemas", "schemas", 575070579)), null);
};
schema.core.both = function schema$core$both() {
  var args__5572__auto__ = [];
  var len__5565__auto___19576 = arguments.length;
  var i__5566__auto___19577 = 0;
  while (true) {
    if (i__5566__auto___19577 < len__5565__auto___19576) {
      args__5572__auto__.push(arguments[i__5566__auto___19577]);
      var G__19578 = i__5566__auto___19577 + 1;
      i__5566__auto___19577 = G__19578;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return schema.core.both.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
schema.core.both.cljs$core$IFn$_invoke$arity$variadic = function(schemas) {
  return new schema.core.Both(schemas, null, null, null);
};
schema.core.both.cljs$lang$maxFixedArity = 0;
schema.core.both.cljs$lang$applyTo = function(seq19575) {
  return schema.core.both.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq19575));
};
schema.core.ConditionalSchema = function(preds_and_schemas, __meta, __extmap, __hash) {
  this.preds_and_schemas = preds_and_schemas;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.core.ConditionalSchema.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__5121__auto__, k__5122__auto__) {
  var self__ = this;
  var this__5121__auto____$1 = this;
  return cljs.core._lookup.call(null, this__5121__auto____$1, k__5122__auto__, null);
};
schema.core.ConditionalSchema.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__5123__auto__, k19580, else__5124__auto__) {
  var self__ = this;
  var this__5123__auto____$1 = this;
  var G__19582 = k19580 instanceof cljs.core.Keyword ? k19580.fqn : null;
  switch(G__19582) {
    case "preds-and-schemas":
      return self__.preds_and_schemas;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k19580, else__5124__auto__);
  }
};
schema.core.ConditionalSchema.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__5135__auto__, writer__5136__auto__, opts__5137__auto__) {
  var self__ = this;
  var this__5135__auto____$1 = this;
  var pr_pair__5138__auto__ = function(this__5135__auto____$1) {
    return function(keyval__5139__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__5136__auto__, cljs.core.pr_writer, "", " ", "", opts__5137__auto__, keyval__5139__auto__);
    };
  }(this__5135__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__5136__auto__, pr_pair__5138__auto__, "#schema.core.ConditionalSchema{", ", ", "}", opts__5137__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "preds-and-schemas", "preds-and-schemas", -1306766355), self__.preds_and_schemas], null)], null), self__.__extmap));
};
schema.core.ConditionalSchema.prototype.cljs$core$IIterable$ = true;
schema.core.ConditionalSchema.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__19579) {
  var self__ = this;
  var G__19579__$1 = this;
  return new cljs.core.RecordIter(0, G__19579__$1, 1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "preds-and-schemas", "preds-and-schemas", -1306766355)], null), cljs.core._iterator.call(null, self__.__extmap));
};
schema.core.ConditionalSchema.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__5119__auto__) {
  var self__ = this;
  var this__5119__auto____$1 = this;
  return self__.__meta;
};
schema.core.ConditionalSchema.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__5115__auto__) {
  var self__ = this;
  var this__5115__auto____$1 = this;
  return new schema.core.ConditionalSchema(self__.preds_and_schemas, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.ConditionalSchema.prototype.cljs$core$ICounted$_count$arity$1 = function(this__5125__auto__) {
  var self__ = this;
  var this__5125__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.ConditionalSchema.prototype.cljs$core$IHash$_hash$arity$1 = function(this__5116__auto__) {
  var self__ = this;
  var this__5116__auto____$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_imap.call(null, this__5116__auto____$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
schema.core.ConditionalSchema.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__5117__auto__, other__5118__auto__) {
  var self__ = this;
  var this__5117__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4514__auto__ = other__5118__auto__;
    if (cljs.core.truth_(and__4514__auto__)) {
      var and__4514__auto____$1 = this__5117__auto____$1.constructor === other__5118__auto__.constructor;
      if (and__4514__auto____$1) {
        return cljs.core.equiv_map.call(null, this__5117__auto____$1, other__5118__auto__);
      } else {
        return and__4514__auto____$1;
      }
    } else {
      return and__4514__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.ConditionalSchema.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__5130__auto__, k__5131__auto__) {
  var self__ = this;
  var this__5130__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "preds-and-schemas", "preds-and-schemas", -1306766355), null], null), null), k__5131__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__5130__auto____$1), self__.__meta), k__5131__auto__);
  } else {
    return new schema.core.ConditionalSchema(self__.preds_and_schemas, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__5131__auto__)), null);
  }
};
schema.core.ConditionalSchema.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__5128__auto__, k__5129__auto__, G__19579) {
  var self__ = this;
  var this__5128__auto____$1 = this;
  var pred__19583 = cljs.core.keyword_identical_QMARK_;
  var expr__19584 = k__5129__auto__;
  if (cljs.core.truth_(pred__19583.call(null, new cljs.core.Keyword(null, "preds-and-schemas", "preds-and-schemas", -1306766355), expr__19584))) {
    return new schema.core.ConditionalSchema(G__19579, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.ConditionalSchema(self__.preds_and_schemas, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__5129__auto__, G__19579), null);
  }
};
schema.core.ConditionalSchema.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__5133__auto__) {
  var self__ = this;
  var this__5133__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "preds-and-schemas", "preds-and-schemas", -1306766355), self__.preds_and_schemas], null)], null), self__.__extmap));
};
schema.core.ConditionalSchema.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__5120__auto__, G__19579) {
  var self__ = this;
  var this__5120__auto____$1 = this;
  return new schema.core.ConditionalSchema(self__.preds_and_schemas, G__19579, self__.__extmap, self__.__hash);
};
schema.core.ConditionalSchema.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__5126__auto__, entry__5127__auto__) {
  var self__ = this;
  var this__5126__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__5127__auto__)) {
    return cljs.core._assoc.call(null, this__5126__auto____$1, cljs.core._nth.call(null, entry__5127__auto__, 0), cljs.core._nth.call(null, entry__5127__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__5126__auto____$1, entry__5127__auto__);
  }
};
schema.core.ConditionalSchema.prototype.schema$core$Schema$ = true;
schema.core.ConditionalSchema.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var preds_and_walkers = cljs.core.mapv.call(null, function(this$__$1) {
    return function(p__19586) {
      var vec__19587 = p__19586;
      var pred = cljs.core.nth.call(null, vec__19587, 0, null);
      var schema__$1 = cljs.core.nth.call(null, vec__19587, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [pred, schema.core.subschema_walker.call(null, schema__$1)], null);
    };
  }(this$__$1), self__.preds_and_schemas);
  return function(preds_and_walkers, this$__$1) {
    return function(x) {
      var temp__4423__auto__ = cljs.core.first.call(null, cljs.core.filter.call(null, function(preds_and_walkers, this$__$1) {
        return function(p__19588) {
          var vec__19589 = p__19588;
          var pred = cljs.core.nth.call(null, vec__19589, 0, null);
          return pred.call(null, x);
        };
      }(preds_and_walkers, this$__$1), preds_and_walkers));
      if (cljs.core.truth_(temp__4423__auto__)) {
        var vec__19590 = temp__4423__auto__;
        var _ = cljs.core.nth.call(null, vec__19590, 0, null);
        var match = cljs.core.nth.call(null, vec__19590, 1, null);
        return match.call(null, x);
      } else {
        return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(temp__4423__auto__, preds_and_walkers, this$__$1) {
          return function() {
            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), new cljs.core.Symbol(null, "matches-some-condition?", "matches-some-condition?", 2097370044, null));
          };
        }(temp__4423__auto__, preds_and_walkers, this$__$1), null), null));
      }
    };
  }(preds_and_walkers, this$__$1);
};
schema.core.ConditionalSchema.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, new cljs.core.Symbol(null, "conditional", "conditional", -1212542970, null), cljs.core.mapcat.call(null, function(this$__$1) {
    return function(p__19591) {
      var vec__19592 = p__19591;
      var pred = cljs.core.nth.call(null, vec__19592, 0, null);
      var schema__$1 = cljs.core.nth.call(null, vec__19592, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [pred, schema.core.explain.call(null, schema__$1)], null);
    };
  }(this$__$1), self__.preds_and_schemas));
};
schema.core.ConditionalSchema.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "preds-and-schemas", "preds-and-schemas", 333765172, null)], null);
};
schema.core.ConditionalSchema.cljs$lang$type = true;
schema.core.ConditionalSchema.cljs$lang$ctorPrSeq = function(this__5155__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/ConditionalSchema");
};
schema.core.ConditionalSchema.cljs$lang$ctorPrWriter = function(this__5155__auto__, writer__5156__auto__) {
  return cljs.core._write.call(null, writer__5156__auto__, "schema.core/ConditionalSchema");
};
schema.core.__GT_ConditionalSchema = function schema$core$__GT_ConditionalSchema(preds_and_schemas) {
  return new schema.core.ConditionalSchema(preds_and_schemas, null, null, null);
};
schema.core.map__GT_ConditionalSchema = function schema$core$map__GT_ConditionalSchema(G__19581) {
  return new schema.core.ConditionalSchema((new cljs.core.Keyword(null, "preds-and-schemas", "preds-and-schemas", -1306766355)).cljs$core$IFn$_invoke$arity$1(G__19581), null, cljs.core.dissoc.call(null, G__19581, new cljs.core.Keyword(null, "preds-and-schemas", "preds-and-schemas", -1306766355)), null);
};
schema.core.conditional = function schema$core$conditional() {
  var args__5572__auto__ = [];
  var len__5565__auto___19603 = arguments.length;
  var i__5566__auto___19604 = 0;
  while (true) {
    if (i__5566__auto___19604 < len__5565__auto___19603) {
      args__5572__auto__.push(arguments[i__5566__auto___19604]);
      var G__19605 = i__5566__auto___19604 + 1;
      i__5566__auto___19604 = G__19605;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return schema.core.conditional.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
schema.core.conditional.cljs$core$IFn$_invoke$arity$variadic = function(preds_and_schemas) {
  if (cljs.core.seq.call(null, preds_and_schemas) && cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, preds_and_schemas))) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Expected even, nonzero number of args; got %s", cljs.core.count.call(null, preds_and_schemas)));
  }
  return new schema.core.ConditionalSchema(function() {
    var iter__5279__auto__ = function schema$core$iter__19595(s__19596) {
      return new cljs.core.LazySeq(null, function() {
        var s__19596__$1 = s__19596;
        while (true) {
          var temp__4425__auto__ = cljs.core.seq.call(null, s__19596__$1);
          if (temp__4425__auto__) {
            var s__19596__$2 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__19596__$2)) {
              var c__5277__auto__ = cljs.core.chunk_first.call(null, s__19596__$2);
              var size__5278__auto__ = cljs.core.count.call(null, c__5277__auto__);
              var b__19598 = cljs.core.chunk_buffer.call(null, size__5278__auto__);
              if (function() {
                var i__19597 = 0;
                while (true) {
                  if (i__19597 < size__5278__auto__) {
                    var vec__19601 = cljs.core._nth.call(null, c__5277__auto__, i__19597);
                    var pred = cljs.core.nth.call(null, vec__19601, 0, null);
                    var schema__$1 = cljs.core.nth.call(null, vec__19601, 1, null);
                    cljs.core.chunk_append.call(null, b__19598, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._EQ_.call(null, pred, new cljs.core.Keyword(null, "else", "else", -1508377146)) ? cljs.core.constantly.call(null, true) : pred, schema__$1], null));
                    var G__19606 = i__19597 + 1;
                    i__19597 = G__19606;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__19598), schema$core$iter__19595.call(null, cljs.core.chunk_rest.call(null, s__19596__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__19598), null);
              }
            } else {
              var vec__19602 = cljs.core.first.call(null, s__19596__$2);
              var pred = cljs.core.nth.call(null, vec__19602, 0, null);
              var schema__$1 = cljs.core.nth.call(null, vec__19602, 1, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._EQ_.call(null, pred, new cljs.core.Keyword(null, "else", "else", -1508377146)) ? cljs.core.constantly.call(null, true) : pred, schema__$1], null), schema$core$iter__19595.call(null, cljs.core.rest.call(null, s__19596__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__5279__auto__.call(null, cljs.core.partition.call(null, 2, preds_and_schemas));
  }(), null, null, null);
};
schema.core.conditional.cljs$lang$maxFixedArity = 0;
schema.core.conditional.cljs$lang$applyTo = function(seq19594) {
  return schema.core.conditional.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq19594));
};
schema.core.if$ = function schema$core$if(pred, if_schema, else_schema) {
  return schema.core.conditional.call(null, pred, if_schema, cljs.core.constantly.call(null, true), else_schema);
};
schema.core._PLUS_missing_PLUS_ = new cljs.core.Keyword("schema.core", "missing", "schema.core/missing", 1420181325);
schema.core.RequiredKey = function(k, __meta, __extmap, __hash) {
  this.k = k;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.core.RequiredKey.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__5121__auto__, k__5122__auto__) {
  var self__ = this;
  var this__5121__auto____$1 = this;
  return cljs.core._lookup.call(null, this__5121__auto____$1, k__5122__auto__, null);
};
schema.core.RequiredKey.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__5123__auto__, k19608, else__5124__auto__) {
  var self__ = this;
  var this__5123__auto____$1 = this;
  var G__19610 = k19608 instanceof cljs.core.Keyword ? k19608.fqn : null;
  switch(G__19610) {
    case "k":
      return self__.k;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k19608, else__5124__auto__);
  }
};
schema.core.RequiredKey.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__5135__auto__, writer__5136__auto__, opts__5137__auto__) {
  var self__ = this;
  var this__5135__auto____$1 = this;
  var pr_pair__5138__auto__ = function(this__5135__auto____$1) {
    return function(keyval__5139__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__5136__auto__, cljs.core.pr_writer, "", " ", "", opts__5137__auto__, keyval__5139__auto__);
    };
  }(this__5135__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__5136__auto__, pr_pair__5138__auto__, "#schema.core.RequiredKey{", ", ", "}", opts__5137__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "k", "k", -2146297393), self__.k], null)], null), self__.__extmap));
};
schema.core.RequiredKey.prototype.cljs$core$IIterable$ = true;
schema.core.RequiredKey.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__19607) {
  var self__ = this;
  var G__19607__$1 = this;
  return new cljs.core.RecordIter(0, G__19607__$1, 1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "k", "k", -2146297393)], null), cljs.core._iterator.call(null, self__.__extmap));
};
schema.core.RequiredKey.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__5119__auto__) {
  var self__ = this;
  var this__5119__auto____$1 = this;
  return self__.__meta;
};
schema.core.RequiredKey.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__5115__auto__) {
  var self__ = this;
  var this__5115__auto____$1 = this;
  return new schema.core.RequiredKey(self__.k, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.RequiredKey.prototype.cljs$core$ICounted$_count$arity$1 = function(this__5125__auto__) {
  var self__ = this;
  var this__5125__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.RequiredKey.prototype.cljs$core$IHash$_hash$arity$1 = function(this__5116__auto__) {
  var self__ = this;
  var this__5116__auto____$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_imap.call(null, this__5116__auto____$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
schema.core.RequiredKey.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__5117__auto__, other__5118__auto__) {
  var self__ = this;
  var this__5117__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4514__auto__ = other__5118__auto__;
    if (cljs.core.truth_(and__4514__auto__)) {
      var and__4514__auto____$1 = this__5117__auto____$1.constructor === other__5118__auto__.constructor;
      if (and__4514__auto____$1) {
        return cljs.core.equiv_map.call(null, this__5117__auto____$1, other__5118__auto__);
      } else {
        return and__4514__auto____$1;
      }
    } else {
      return and__4514__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.RequiredKey.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__5130__auto__, k__5131__auto__) {
  var self__ = this;
  var this__5130__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "k", "k", -2146297393), null], null), null), k__5131__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__5130__auto____$1), self__.__meta), k__5131__auto__);
  } else {
    return new schema.core.RequiredKey(self__.k, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__5131__auto__)), null);
  }
};
schema.core.RequiredKey.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__5128__auto__, k__5129__auto__, G__19607) {
  var self__ = this;
  var this__5128__auto____$1 = this;
  var pred__19611 = cljs.core.keyword_identical_QMARK_;
  var expr__19612 = k__5129__auto__;
  if (cljs.core.truth_(pred__19611.call(null, new cljs.core.Keyword(null, "k", "k", -2146297393), expr__19612))) {
    return new schema.core.RequiredKey(G__19607, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.RequiredKey(self__.k, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__5129__auto__, G__19607), null);
  }
};
schema.core.RequiredKey.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__5133__auto__) {
  var self__ = this;
  var this__5133__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "k", "k", -2146297393), self__.k], null)], null), self__.__extmap));
};
schema.core.RequiredKey.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__5120__auto__, G__19607) {
  var self__ = this;
  var this__5120__auto____$1 = this;
  return new schema.core.RequiredKey(self__.k, G__19607, self__.__extmap, self__.__hash);
};
schema.core.RequiredKey.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__5126__auto__, entry__5127__auto__) {
  var self__ = this;
  var this__5126__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__5127__auto__)) {
    return cljs.core._assoc.call(null, this__5126__auto____$1, cljs.core._nth.call(null, entry__5127__auto__, 0), cljs.core._nth.call(null, entry__5127__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__5126__auto____$1, entry__5127__auto__);
  }
};
schema.core.RequiredKey.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "k", "k", -505765866, null)], null);
};
schema.core.RequiredKey.cljs$lang$type = true;
schema.core.RequiredKey.cljs$lang$ctorPrSeq = function(this__5155__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/RequiredKey");
};
schema.core.RequiredKey.cljs$lang$ctorPrWriter = function(this__5155__auto__, writer__5156__auto__) {
  return cljs.core._write.call(null, writer__5156__auto__, "schema.core/RequiredKey");
};
schema.core.__GT_RequiredKey = function schema$core$__GT_RequiredKey(k) {
  return new schema.core.RequiredKey(k, null, null, null);
};
schema.core.map__GT_RequiredKey = function schema$core$map__GT_RequiredKey(G__19609) {
  return new schema.core.RequiredKey((new cljs.core.Keyword(null, "k", "k", -2146297393)).cljs$core$IFn$_invoke$arity$1(G__19609), null, cljs.core.dissoc.call(null, G__19609, new cljs.core.Keyword(null, "k", "k", -2146297393)), null);
};
schema.core.required_key = function schema$core$required_key(k) {
  if (k instanceof cljs.core.Keyword) {
    return k;
  } else {
    return new schema.core.RequiredKey(k, null, null, null);
  }
};
schema.core.required_key_QMARK_ = function schema$core$required_key_QMARK_(ks) {
  return ks instanceof cljs.core.Keyword || ks instanceof schema.core.RequiredKey;
};
schema.core.OptionalKey = function(k, __meta, __extmap, __hash) {
  this.k = k;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.core.OptionalKey.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__5121__auto__, k__5122__auto__) {
  var self__ = this;
  var this__5121__auto____$1 = this;
  return cljs.core._lookup.call(null, this__5121__auto____$1, k__5122__auto__, null);
};
schema.core.OptionalKey.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__5123__auto__, k19616, else__5124__auto__) {
  var self__ = this;
  var this__5123__auto____$1 = this;
  var G__19618 = k19616 instanceof cljs.core.Keyword ? k19616.fqn : null;
  switch(G__19618) {
    case "k":
      return self__.k;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k19616, else__5124__auto__);
  }
};
schema.core.OptionalKey.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__5135__auto__, writer__5136__auto__, opts__5137__auto__) {
  var self__ = this;
  var this__5135__auto____$1 = this;
  var pr_pair__5138__auto__ = function(this__5135__auto____$1) {
    return function(keyval__5139__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__5136__auto__, cljs.core.pr_writer, "", " ", "", opts__5137__auto__, keyval__5139__auto__);
    };
  }(this__5135__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__5136__auto__, pr_pair__5138__auto__, "#schema.core.OptionalKey{", ", ", "}", opts__5137__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "k", "k", -2146297393), self__.k], null)], null), self__.__extmap));
};
schema.core.OptionalKey.prototype.cljs$core$IIterable$ = true;
schema.core.OptionalKey.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__19615) {
  var self__ = this;
  var G__19615__$1 = this;
  return new cljs.core.RecordIter(0, G__19615__$1, 1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "k", "k", -2146297393)], null), cljs.core._iterator.call(null, self__.__extmap));
};
schema.core.OptionalKey.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__5119__auto__) {
  var self__ = this;
  var this__5119__auto____$1 = this;
  return self__.__meta;
};
schema.core.OptionalKey.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__5115__auto__) {
  var self__ = this;
  var this__5115__auto____$1 = this;
  return new schema.core.OptionalKey(self__.k, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.OptionalKey.prototype.cljs$core$ICounted$_count$arity$1 = function(this__5125__auto__) {
  var self__ = this;
  var this__5125__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.OptionalKey.prototype.cljs$core$IHash$_hash$arity$1 = function(this__5116__auto__) {
  var self__ = this;
  var this__5116__auto____$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_imap.call(null, this__5116__auto____$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
schema.core.OptionalKey.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__5117__auto__, other__5118__auto__) {
  var self__ = this;
  var this__5117__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4514__auto__ = other__5118__auto__;
    if (cljs.core.truth_(and__4514__auto__)) {
      var and__4514__auto____$1 = this__5117__auto____$1.constructor === other__5118__auto__.constructor;
      if (and__4514__auto____$1) {
        return cljs.core.equiv_map.call(null, this__5117__auto____$1, other__5118__auto__);
      } else {
        return and__4514__auto____$1;
      }
    } else {
      return and__4514__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.OptionalKey.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__5130__auto__, k__5131__auto__) {
  var self__ = this;
  var this__5130__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "k", "k", -2146297393), null], null), null), k__5131__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__5130__auto____$1), self__.__meta), k__5131__auto__);
  } else {
    return new schema.core.OptionalKey(self__.k, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__5131__auto__)), null);
  }
};
schema.core.OptionalKey.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__5128__auto__, k__5129__auto__, G__19615) {
  var self__ = this;
  var this__5128__auto____$1 = this;
  var pred__19619 = cljs.core.keyword_identical_QMARK_;
  var expr__19620 = k__5129__auto__;
  if (cljs.core.truth_(pred__19619.call(null, new cljs.core.Keyword(null, "k", "k", -2146297393), expr__19620))) {
    return new schema.core.OptionalKey(G__19615, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.OptionalKey(self__.k, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__5129__auto__, G__19615), null);
  }
};
schema.core.OptionalKey.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__5133__auto__) {
  var self__ = this;
  var this__5133__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "k", "k", -2146297393), self__.k], null)], null), self__.__extmap));
};
schema.core.OptionalKey.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__5120__auto__, G__19615) {
  var self__ = this;
  var this__5120__auto____$1 = this;
  return new schema.core.OptionalKey(self__.k, G__19615, self__.__extmap, self__.__hash);
};
schema.core.OptionalKey.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__5126__auto__, entry__5127__auto__) {
  var self__ = this;
  var this__5126__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__5127__auto__)) {
    return cljs.core._assoc.call(null, this__5126__auto____$1, cljs.core._nth.call(null, entry__5127__auto__, 0), cljs.core._nth.call(null, entry__5127__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__5126__auto____$1, entry__5127__auto__);
  }
};
schema.core.OptionalKey.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "k", "k", -505765866, null)], null);
};
schema.core.OptionalKey.cljs$lang$type = true;
schema.core.OptionalKey.cljs$lang$ctorPrSeq = function(this__5155__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/OptionalKey");
};
schema.core.OptionalKey.cljs$lang$ctorPrWriter = function(this__5155__auto__, writer__5156__auto__) {
  return cljs.core._write.call(null, writer__5156__auto__, "schema.core/OptionalKey");
};
schema.core.__GT_OptionalKey = function schema$core$__GT_OptionalKey(k) {
  return new schema.core.OptionalKey(k, null, null, null);
};
schema.core.map__GT_OptionalKey = function schema$core$map__GT_OptionalKey(G__19617) {
  return new schema.core.OptionalKey((new cljs.core.Keyword(null, "k", "k", -2146297393)).cljs$core$IFn$_invoke$arity$1(G__19617), null, cljs.core.dissoc.call(null, G__19617, new cljs.core.Keyword(null, "k", "k", -2146297393)), null);
};
schema.core.optional_key = function schema$core$optional_key(k) {
  return new schema.core.OptionalKey(k, null, null, null);
};
schema.core.optional_key_QMARK_ = function schema$core$optional_key_QMARK_(ks) {
  return ks instanceof schema.core.OptionalKey;
};
schema.core.explicit_schema_key = function schema$core$explicit_schema_key(ks) {
  if (ks instanceof cljs.core.Keyword) {
    return ks;
  } else {
    if (ks instanceof schema.core.RequiredKey) {
      return ks.k;
    } else {
      if (cljs.core.truth_(schema.core.optional_key_QMARK_.call(null, ks))) {
        return ks.k;
      } else {
        throw new Error(schema.utils.format_STAR_.call(null, "Bad explicit key: %s", ks));
      }
    }
  }
};
schema.core.specific_key_QMARK_ = function schema$core$specific_key_QMARK_(ks) {
  var or__4526__auto__ = schema.core.required_key_QMARK_.call(null, ks);
  if (cljs.core.truth_(or__4526__auto__)) {
    return or__4526__auto__;
  } else {
    return schema.core.optional_key_QMARK_.call(null, ks);
  }
};
schema.core.explain_kspec = function schema$core$explain_kspec(kspec) {
  if (cljs.core.truth_(schema.core.specific_key_QMARK_.call(null, kspec))) {
    if (kspec instanceof cljs.core.Keyword) {
      return kspec;
    } else {
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.core.explicit_schema_key.call(null, kspec)), cljs.core.truth_(schema.core.required_key_QMARK_.call(null, kspec)) ? new cljs.core.Symbol(null, "required-key", "required-key", 1624616412, null) : cljs.core.truth_(schema.core.optional_key_QMARK_.call(null, kspec)) ? new cljs.core.Symbol(null, "optional-key", "optional-key", 988406145, null) : null);
    }
  } else {
    return schema.core.explain.call(null, kspec);
  }
};
schema.core.MapEntry = function(kspec, val_schema, __meta, __extmap, __hash) {
  this.kspec = kspec;
  this.val_schema = val_schema;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.core.MapEntry.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__5121__auto__, k__5122__auto__) {
  var self__ = this;
  var this__5121__auto____$1 = this;
  return cljs.core._lookup.call(null, this__5121__auto____$1, k__5122__auto__, null);
};
schema.core.MapEntry.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__5123__auto__, k19624, else__5124__auto__) {
  var self__ = this;
  var this__5123__auto____$1 = this;
  var G__19626 = k19624 instanceof cljs.core.Keyword ? k19624.fqn : null;
  switch(G__19626) {
    case "kspec":
      return self__.kspec;
      break;
    case "val-schema":
      return self__.val_schema;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k19624, else__5124__auto__);
  }
};
schema.core.MapEntry.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__5135__auto__, writer__5136__auto__, opts__5137__auto__) {
  var self__ = this;
  var this__5135__auto____$1 = this;
  var pr_pair__5138__auto__ = function(this__5135__auto____$1) {
    return function(keyval__5139__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__5136__auto__, cljs.core.pr_writer, "", " ", "", opts__5137__auto__, keyval__5139__auto__);
    };
  }(this__5135__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__5136__auto__, pr_pair__5138__auto__, "#schema.core.MapEntry{", ", ", "}", opts__5137__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "kspec", "kspec", -1151232248), self__.kspec], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "val-schema", "val-schema", -2014773619), self__.val_schema], null)], null), self__.__extmap));
};
schema.core.MapEntry.prototype.cljs$core$IIterable$ = true;
schema.core.MapEntry.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__19623) {
  var self__ = this;
  var G__19623__$1 = this;
  return new cljs.core.RecordIter(0, G__19623__$1, 2, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "kspec", "kspec", -1151232248), new cljs.core.Keyword(null, "val-schema", "val-schema", -2014773619)], null), cljs.core._iterator.call(null, self__.__extmap));
};
schema.core.MapEntry.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__5119__auto__) {
  var self__ = this;
  var this__5119__auto____$1 = this;
  return self__.__meta;
};
schema.core.MapEntry.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__5115__auto__) {
  var self__ = this;
  var this__5115__auto____$1 = this;
  return new schema.core.MapEntry(self__.kspec, self__.val_schema, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.MapEntry.prototype.cljs$core$ICounted$_count$arity$1 = function(this__5125__auto__) {
  var self__ = this;
  var this__5125__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.MapEntry.prototype.cljs$core$IHash$_hash$arity$1 = function(this__5116__auto__) {
  var self__ = this;
  var this__5116__auto____$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_imap.call(null, this__5116__auto____$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
schema.core.MapEntry.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__5117__auto__, other__5118__auto__) {
  var self__ = this;
  var this__5117__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4514__auto__ = other__5118__auto__;
    if (cljs.core.truth_(and__4514__auto__)) {
      var and__4514__auto____$1 = this__5117__auto____$1.constructor === other__5118__auto__.constructor;
      if (and__4514__auto____$1) {
        return cljs.core.equiv_map.call(null, this__5117__auto____$1, other__5118__auto__);
      } else {
        return and__4514__auto____$1;
      }
    } else {
      return and__4514__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.MapEntry.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__5130__auto__, k__5131__auto__) {
  var self__ = this;
  var this__5130__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "kspec", "kspec", -1151232248), null, new cljs.core.Keyword(null, "val-schema", "val-schema", -2014773619), null], null), null), k__5131__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__5130__auto____$1), self__.__meta), k__5131__auto__);
  } else {
    return new schema.core.MapEntry(self__.kspec, self__.val_schema, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__5131__auto__)), null);
  }
};
schema.core.MapEntry.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__5128__auto__, k__5129__auto__, G__19623) {
  var self__ = this;
  var this__5128__auto____$1 = this;
  var pred__19627 = cljs.core.keyword_identical_QMARK_;
  var expr__19628 = k__5129__auto__;
  if (cljs.core.truth_(pred__19627.call(null, new cljs.core.Keyword(null, "kspec", "kspec", -1151232248), expr__19628))) {
    return new schema.core.MapEntry(G__19623, self__.val_schema, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__19627.call(null, new cljs.core.Keyword(null, "val-schema", "val-schema", -2014773619), expr__19628))) {
      return new schema.core.MapEntry(self__.kspec, G__19623, self__.__meta, self__.__extmap, null);
    } else {
      return new schema.core.MapEntry(self__.kspec, self__.val_schema, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__5129__auto__, G__19623), null);
    }
  }
};
schema.core.MapEntry.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__5133__auto__) {
  var self__ = this;
  var this__5133__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "kspec", "kspec", -1151232248), self__.kspec], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "val-schema", "val-schema", -2014773619), self__.val_schema], null)], null), self__.__extmap));
};
schema.core.MapEntry.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__5120__auto__, G__19623) {
  var self__ = this;
  var this__5120__auto____$1 = this;
  return new schema.core.MapEntry(self__.kspec, self__.val_schema, G__19623, self__.__extmap, self__.__hash);
};
schema.core.MapEntry.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__5126__auto__, entry__5127__auto__) {
  var self__ = this;
  var this__5126__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__5127__auto__)) {
    return cljs.core._assoc.call(null, this__5126__auto____$1, cljs.core._nth.call(null, entry__5127__auto__, 0), cljs.core._nth.call(null, entry__5127__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__5126__auto____$1, entry__5127__auto__);
  }
};
schema.core.MapEntry.prototype.schema$core$Schema$ = true;
schema.core.MapEntry.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var val_walker = schema.core.subschema_walker.call(null, self__.val_schema);
  if (cljs.core.truth_(schema.core.specific_key_QMARK_.call(null, self__.kspec))) {
    var optional_QMARK_ = schema.core.optional_key_QMARK_.call(null, self__.kspec);
    var k = schema.core.explicit_schema_key.call(null, self__.kspec);
    return function(optional_QMARK_, k, val_walker, this$__$1) {
      return function(x) {
        if (schema.core._PLUS_missing_PLUS_ === x) {
          if (cljs.core.truth_(optional_QMARK_)) {
            return null;
          } else {
            return schema.utils.error.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, new cljs.core.Symbol(null, "missing-required-key", "missing-required-key", 709961446, null)], null));
          }
        } else {
          if (!cljs.core._EQ_.call(null, 2, cljs.core.count.call(null, x))) {
            return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(optional_QMARK_, k, val_walker, this$__$1) {
              return function() {
                return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), new cljs.core.Symbol(null, "count", "count", -514511684, null))), 2), cljs.core._EQ_);
              };
            }(optional_QMARK_, k, val_walker, this$__$1), null), null));
          } else {
            var vec__19630 = x;
            var xk = cljs.core.nth.call(null, vec__19630, 0, null);
            var xv = cljs.core.nth.call(null, vec__19630, 1, null);
            if (cljs.core._EQ_.call(null, xk, k)) {
            } else {
              throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "xk", "xk", 741114825, null), new cljs.core.Symbol(null, "k", "k", -505765866, null))))].join(""));
            }
            var vres = val_walker.call(null, xv);
            var temp__4423__auto__ = schema.utils.error_val.call(null, vres);
            if (cljs.core.truth_(temp__4423__auto__)) {
              var ve = temp__4423__auto__;
              return schema.utils.error.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [xk, ve], null));
            } else {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [xk, vres], null);
            }
          }
        }
      };
    }(optional_QMARK_, k, val_walker, this$__$1);
  } else {
    var key_walker = schema.core.subschema_walker.call(null, self__.kspec);
    return function(key_walker, val_walker, this$__$1) {
      return function(x) {
        if (!cljs.core._EQ_.call(null, 2, cljs.core.count.call(null, x))) {
          return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(key_walker, val_walker, this$__$1) {
            return function() {
              return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), new cljs.core.Symbol(null, "count", "count", -514511684, null))), 2), cljs.core._EQ_);
            };
          }(key_walker, val_walker, this$__$1), null), null));
        } else {
          var out_k = key_walker.call(null, cljs.core.key.call(null, x));
          var out_ke = schema.utils.error_val.call(null, out_k);
          var out_v = val_walker.call(null, cljs.core.val.call(null, x));
          var out_ve = schema.utils.error_val.call(null, out_v);
          if (cljs.core.truth_(function() {
            var or__4526__auto__ = out_ke;
            if (cljs.core.truth_(or__4526__auto__)) {
              return or__4526__auto__;
            } else {
              return out_ve;
            }
          }())) {
            return schema.utils.error.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
              var or__4526__auto__ = out_ke;
              if (cljs.core.truth_(or__4526__auto__)) {
                return or__4526__auto__;
              } else {
                return cljs.core.key.call(null, x);
              }
            }(), function() {
              var or__4526__auto__ = out_ve;
              if (cljs.core.truth_(or__4526__auto__)) {
                return or__4526__auto__;
              } else {
                return new cljs.core.Symbol(null, "invalid-key", "invalid-key", -1461682245, null);
              }
            }()], null));
          } else {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [out_k, out_v], null);
          }
        }
      };
    }(key_walker, val_walker, this$__$1);
  }
};
schema.core.MapEntry.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.core.explain.call(null, self__.val_schema)), schema.core.explain_kspec.call(null, self__.kspec)), new cljs.core.Symbol(null, "map-entry", "map-entry", 329617471, null));
};
schema.core.MapEntry.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "kspec", "kspec", 489299279, null), new cljs.core.Symbol(null, "val-schema", "val-schema", -374242092, null)], null);
};
schema.core.MapEntry.cljs$lang$type = true;
schema.core.MapEntry.cljs$lang$ctorPrSeq = function(this__5155__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/MapEntry");
};
schema.core.MapEntry.cljs$lang$ctorPrWriter = function(this__5155__auto__, writer__5156__auto__) {
  return cljs.core._write.call(null, writer__5156__auto__, "schema.core/MapEntry");
};
schema.core.__GT_MapEntry = function schema$core$__GT_MapEntry(kspec, val_schema) {
  return new schema.core.MapEntry(kspec, val_schema, null, null, null);
};
schema.core.map__GT_MapEntry = function schema$core$map__GT_MapEntry(G__19625) {
  return new schema.core.MapEntry((new cljs.core.Keyword(null, "kspec", "kspec", -1151232248)).cljs$core$IFn$_invoke$arity$1(G__19625), (new cljs.core.Keyword(null, "val-schema", "val-schema", -2014773619)).cljs$core$IFn$_invoke$arity$1(G__19625), null, cljs.core.dissoc.call(null, G__19625, new cljs.core.Keyword(null, "kspec", "kspec", -1151232248), new cljs.core.Keyword(null, "val-schema", "val-schema", -2014773619)), null);
};
schema.core.map_entry = function schema$core$map_entry(kspec, val_schema) {
  return new schema.core.MapEntry(kspec, val_schema, null, null, null);
};
schema.core.find_extra_keys_schema = function schema$core$find_extra_keys_schema(map_schema) {
  var key_schemata = cljs.core.remove.call(null, schema.core.specific_key_QMARK_, cljs.core.keys.call(null, map_schema));
  if (cljs.core.count.call(null, key_schemata) < 2) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "More than one non-optional/required key schemata: %s", cljs.core.vec.call(null, key_schemata)));
  }
  return cljs.core.first.call(null, key_schemata);
};
schema.core.preserve_map_type = function schema$core$preserve_map_type(original, walker_result) {
  if (cljs.core.truth_(function() {
    var and__4514__auto__ = schema.utils.record_QMARK_.call(null, original);
    if (cljs.core.truth_(and__4514__auto__)) {
      return cljs.core.not.call(null, schema.utils.error_QMARK_.call(null, walker_result));
    } else {
      return and__4514__auto__;
    }
  }())) {
    return cljs.core.into.call(null, original, walker_result);
  } else {
    return walker_result;
  }
};
schema.core.map_walker = function schema$core$map_walker(map_schema) {
  var extra_keys_schema = schema.core.find_extra_keys_schema.call(null, map_schema);
  var extra_walker = cljs.core.truth_(extra_keys_schema) ? schema.core.subschema_walker.call(null, cljs.core.apply.call(null, schema.core.map_entry, cljs.core.find.call(null, map_schema, extra_keys_schema))) : null;
  var explicit_schema = cljs.core.dissoc.call(null, map_schema, extra_keys_schema);
  var explicit_walkers = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__5279__auto__ = function(extra_keys_schema, extra_walker, explicit_schema) {
      return function schema$core$map_walker_$_iter__19646(s__19647) {
        return new cljs.core.LazySeq(null, function(extra_keys_schema, extra_walker, explicit_schema) {
          return function() {
            var s__19647__$1 = s__19647;
            while (true) {
              var temp__4425__auto__ = cljs.core.seq.call(null, s__19647__$1);
              if (temp__4425__auto__) {
                var s__19647__$2 = temp__4425__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, s__19647__$2)) {
                  var c__5277__auto__ = cljs.core.chunk_first.call(null, s__19647__$2);
                  var size__5278__auto__ = cljs.core.count.call(null, c__5277__auto__);
                  var b__19649 = cljs.core.chunk_buffer.call(null, size__5278__auto__);
                  if (function() {
                    var i__19648 = 0;
                    while (true) {
                      if (i__19648 < size__5278__auto__) {
                        var vec__19652 = cljs.core._nth.call(null, c__5277__auto__, i__19648);
                        var k = cljs.core.nth.call(null, vec__19652, 0, null);
                        var v = cljs.core.nth.call(null, vec__19652, 1, null);
                        cljs.core.chunk_append.call(null, b__19649, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.explicit_schema_key.call(null, k), schema.core.subschema_walker.call(null, schema.core.map_entry.call(null, k, v))], null));
                        var G__19659 = i__19648 + 1;
                        i__19648 = G__19659;
                        continue;
                      } else {
                        return true;
                      }
                      break;
                    }
                  }()) {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__19649), schema$core$map_walker_$_iter__19646.call(null, cljs.core.chunk_rest.call(null, s__19647__$2)));
                  } else {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__19649), null);
                  }
                } else {
                  var vec__19653 = cljs.core.first.call(null, s__19647__$2);
                  var k = cljs.core.nth.call(null, vec__19653, 0, null);
                  var v = cljs.core.nth.call(null, vec__19653, 1, null);
                  return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.explicit_schema_key.call(null, k), schema.core.subschema_walker.call(null, schema.core.map_entry.call(null, k, v))], null), schema$core$map_walker_$_iter__19646.call(null, cljs.core.rest.call(null, s__19647__$2)));
                }
              } else {
                return null;
              }
              break;
            }
          };
        }(extra_keys_schema, extra_walker, explicit_schema), null, null);
      };
    }(extra_keys_schema, extra_walker, explicit_schema);
    return iter__5279__auto__.call(null, explicit_schema);
  }());
  var err_conj = schema.utils.result_builder.call(null, cljs.core.constantly.call(null, cljs.core.PersistentArrayMap.EMPTY));
  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, explicit_schema), cljs.core.count.call(null, explicit_walkers))) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Schema has multiple variants of the same explicit key: %s", cljs.core.mapv.call(null, schema.core.explain_kspec, cljs.core.apply.call(null, cljs.core.concat, cljs.core.filter.call(null, function(extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj) {
      return function(p1__19632_SHARP_) {
        return cljs.core.count.call(null, p1__19632_SHARP_) > 1;
      };
    }(extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj), cljs.core.vals.call(null, cljs.core.group_by.call(null, schema.core.explicit_schema_key, cljs.core.keys.call(null, explicit_schema))))))));
  }
  return function(extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj) {
    return function(x) {
      if (!cljs.core.map_QMARK_.call(null, x)) {
        return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, map_schema, x, new cljs.core.Delay(function(extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj) {
          return function() {
            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), new cljs.core.Symbol(null, "map?", "map?", -1780568534, null));
          };
        }(extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj), null), null));
      } else {
        return schema.core.preserve_map_type.call(null, x, function() {
          var ok_key = cljs.core.PersistentHashSet.EMPTY;
          var explicit_walkers__$1 = cljs.core.seq.call(null, explicit_walkers);
          var out = cljs.core.PersistentArrayMap.EMPTY;
          while (true) {
            if (cljs.core.not.call(null, explicit_walkers__$1)) {
              return cljs.core.reduce.call(null, cljs.core.truth_(extra_walker) ? function(ok_key, explicit_walkers__$1, out, extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj) {
                return function(out__$1, e) {
                  return err_conj.call(null, out__$1, extra_walker.call(null, e));
                };
              }(ok_key, explicit_walkers__$1, out, extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj) : function(ok_key, explicit_walkers__$1, out, extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj) {
                return function(out__$1, p__19654) {
                  var vec__19655 = p__19654;
                  var k = cljs.core.nth.call(null, vec__19655, 0, null);
                  var _ = cljs.core.nth.call(null, vec__19655, 1, null);
                  return err_conj.call(null, out__$1, schema.utils.error.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, new cljs.core.Symbol(null, "disallowed-key", "disallowed-key", -1877785633, null)], null)));
                };
              }(ok_key, explicit_walkers__$1, out, extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj), out, cljs.core.remove.call(null, function(ok_key, explicit_walkers__$1, out, extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj) {
                return function(p__19656) {
                  var vec__19657 = p__19656;
                  var k = cljs.core.nth.call(null, vec__19657, 0, null);
                  var v = cljs.core.nth.call(null, vec__19657, 1, null);
                  return ok_key.call(null, k);
                };
              }(ok_key, explicit_walkers__$1, out, extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj), x));
            } else {
              var vec__19658 = cljs.core.first.call(null, explicit_walkers__$1);
              var wk = cljs.core.nth.call(null, vec__19658, 0, null);
              var wv = cljs.core.nth.call(null, vec__19658, 1, null);
              var G__19660 = cljs.core.conj.call(null, ok_key, wk);
              var G__19661 = cljs.core.next.call(null, explicit_walkers__$1);
              var G__19662 = err_conj.call(null, out, wv.call(null, function() {
                var or__4526__auto__ = cljs.core.find.call(null, x, wk);
                if (cljs.core.truth_(or__4526__auto__)) {
                  return or__4526__auto__;
                } else {
                  return schema.core._PLUS_missing_PLUS_;
                }
              }()));
              ok_key = G__19660;
              explicit_walkers__$1 = G__19661;
              out = G__19662;
              continue;
            }
            break;
          }
        }());
      }
    };
  }(extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj);
};
schema.core.map_explain = function schema$core$map_explain(this$) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__5279__auto__ = function schema$core$map_explain_$_iter__19671(s__19672) {
      return new cljs.core.LazySeq(null, function() {
        var s__19672__$1 = s__19672;
        while (true) {
          var temp__4425__auto__ = cljs.core.seq.call(null, s__19672__$1);
          if (temp__4425__auto__) {
            var s__19672__$2 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__19672__$2)) {
              var c__5277__auto__ = cljs.core.chunk_first.call(null, s__19672__$2);
              var size__5278__auto__ = cljs.core.count.call(null, c__5277__auto__);
              var b__19674 = cljs.core.chunk_buffer.call(null, size__5278__auto__);
              if (function() {
                var i__19673 = 0;
                while (true) {
                  if (i__19673 < size__5278__auto__) {
                    var vec__19677 = cljs.core._nth.call(null, c__5277__auto__, i__19673);
                    var k = cljs.core.nth.call(null, vec__19677, 0, null);
                    var v = cljs.core.nth.call(null, vec__19677, 1, null);
                    cljs.core.chunk_append.call(null, b__19674, cljs.core.vec.call(null, cljs.core.next.call(null, schema.core.explain.call(null, schema.core.map_entry.call(null, k, v)))));
                    var G__19679 = i__19673 + 1;
                    i__19673 = G__19679;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__19674), schema$core$map_explain_$_iter__19671.call(null, cljs.core.chunk_rest.call(null, s__19672__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__19674), null);
              }
            } else {
              var vec__19678 = cljs.core.first.call(null, s__19672__$2);
              var k = cljs.core.nth.call(null, vec__19678, 0, null);
              var v = cljs.core.nth.call(null, vec__19678, 1, null);
              return cljs.core.cons.call(null, cljs.core.vec.call(null, cljs.core.next.call(null, schema.core.explain.call(null, schema.core.map_entry.call(null, k, v)))), schema$core$map_explain_$_iter__19671.call(null, cljs.core.rest.call(null, s__19672__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__5279__auto__.call(null, this$);
  }());
};
cljs.core.PersistentArrayMap.prototype.schema$core$Schema$ = true;
cljs.core.PersistentArrayMap.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var this$__$1 = this;
  return schema.core.map_walker.call(null, this$__$1);
};
cljs.core.PersistentArrayMap.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var this$__$1 = this;
  return schema.core.map_explain.call(null, this$__$1);
};
cljs.core.PersistentHashMap.prototype.schema$core$Schema$ = true;
cljs.core.PersistentHashMap.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var this$__$1 = this;
  return schema.core.map_walker.call(null, this$__$1);
};
cljs.core.PersistentHashMap.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var this$__$1 = this;
  return schema.core.map_explain.call(null, this$__$1);
};
cljs.core.PersistentHashSet.prototype.schema$core$Schema$ = true;
cljs.core.PersistentHashSet.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var this$__$1 = this;
  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, this$__$1), 1)) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Set schema must have exactly one element"));
  }
  var sub_walker = schema.core.subschema_walker.call(null, cljs.core.first.call(null, this$__$1));
  return function(sub_walker, this$__$1) {
    return function(x) {
      var or__4526__auto__ = cljs.core.set_QMARK_.call(null, x) ? null : schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(sub_walker, this$__$1) {
        return function() {
          return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), new cljs.core.Symbol(null, "set?", "set?", 1636014792, null));
        };
      }(sub_walker, this$__$1), null), null));
      if (cljs.core.truth_(or__4526__auto__)) {
        return or__4526__auto__;
      } else {
        var vec__19680 = cljs.core.juxt.call(null, cljs.core.remove, cljs.core.keep).call(null, schema.utils.error_val, cljs.core.map.call(null, sub_walker, x));
        var good = cljs.core.nth.call(null, vec__19680, 0, null);
        var bad = cljs.core.nth.call(null, vec__19680, 1, null);
        if (cljs.core.seq.call(null, bad)) {
          return schema.utils.error.call(null, cljs.core.set.call(null, bad));
        } else {
          return cljs.core.set.call(null, good);
        }
      }
    };
  }(sub_walker, this$__$1);
};
cljs.core.PersistentHashSet.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.set.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.explain.call(null, cljs.core.first.call(null, this$__$1))], null));
};
schema.core.One = function(schema, optional_QMARK_, name, __meta, __extmap, __hash) {
  this.schema = schema;
  this.optional_QMARK_ = optional_QMARK_;
  this.name = name;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.core.One.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__5121__auto__, k__5122__auto__) {
  var self__ = this;
  var this__5121__auto____$1 = this;
  return cljs.core._lookup.call(null, this__5121__auto____$1, k__5122__auto__, null);
};
schema.core.One.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__5123__auto__, k19682, else__5124__auto__) {
  var self__ = this;
  var this__5123__auto____$1 = this;
  var G__19684 = k19682 instanceof cljs.core.Keyword ? k19682.fqn : null;
  switch(G__19684) {
    case "schema":
      return self__.schema;
      break;
    case "optional?":
      return self__.optional_QMARK_;
      break;
    case "name":
      return self__.name;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k19682, else__5124__auto__);
  }
};
schema.core.One.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__5135__auto__, writer__5136__auto__, opts__5137__auto__) {
  var self__ = this;
  var this__5135__auto____$1 = this;
  var pr_pair__5138__auto__ = function(this__5135__auto____$1) {
    return function(keyval__5139__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__5136__auto__, cljs.core.pr_writer, "", " ", "", opts__5137__auto__, keyval__5139__auto__);
    };
  }(this__5135__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__5136__auto__, pr_pair__5138__auto__, "#schema.core.One{", ", ", "}", opts__5137__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "optional?", "optional?", 1184638129), self__.optional_QMARK_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "name", "name", 1843675177), self__.name], null)], null), self__.__extmap));
};
schema.core.One.prototype.cljs$core$IIterable$ = true;
schema.core.One.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__19681) {
  var self__ = this;
  var G__19681__$1 = this;
  return new cljs.core.RecordIter(0, G__19681__$1, 3, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Keyword(null, "optional?", "optional?", 1184638129), new cljs.core.Keyword(null, "name", "name", 1843675177)], null), cljs.core._iterator.call(null, self__.__extmap));
};
schema.core.One.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__5119__auto__) {
  var self__ = this;
  var this__5119__auto____$1 = this;
  return self__.__meta;
};
schema.core.One.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__5115__auto__) {
  var self__ = this;
  var this__5115__auto____$1 = this;
  return new schema.core.One(self__.schema, self__.optional_QMARK_, self__.name, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.One.prototype.cljs$core$ICounted$_count$arity$1 = function(this__5125__auto__) {
  var self__ = this;
  var this__5125__auto____$1 = this;
  return 3 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.One.prototype.cljs$core$IHash$_hash$arity$1 = function(this__5116__auto__) {
  var self__ = this;
  var this__5116__auto____$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_imap.call(null, this__5116__auto____$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
schema.core.One.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__5117__auto__, other__5118__auto__) {
  var self__ = this;
  var this__5117__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4514__auto__ = other__5118__auto__;
    if (cljs.core.truth_(and__4514__auto__)) {
      var and__4514__auto____$1 = this__5117__auto____$1.constructor === other__5118__auto__.constructor;
      if (and__4514__auto____$1) {
        return cljs.core.equiv_map.call(null, this__5117__auto____$1, other__5118__auto__);
      } else {
        return and__4514__auto____$1;
      }
    } else {
      return and__4514__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.One.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__5130__auto__, k__5131__auto__) {
  var self__ = this;
  var this__5130__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), null, new cljs.core.Keyword(null, "name", "name", 1843675177), null, new cljs.core.Keyword(null, "optional?", "optional?", 1184638129), null], null), null), k__5131__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__5130__auto____$1), self__.__meta), k__5131__auto__);
  } else {
    return new schema.core.One(self__.schema, self__.optional_QMARK_, self__.name, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__5131__auto__)), null);
  }
};
schema.core.One.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__5128__auto__, k__5129__auto__, G__19681) {
  var self__ = this;
  var this__5128__auto____$1 = this;
  var pred__19685 = cljs.core.keyword_identical_QMARK_;
  var expr__19686 = k__5129__auto__;
  if (cljs.core.truth_(pred__19685.call(null, new cljs.core.Keyword(null, "schema", "schema", -1582001791), expr__19686))) {
    return new schema.core.One(G__19681, self__.optional_QMARK_, self__.name, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__19685.call(null, new cljs.core.Keyword(null, "optional?", "optional?", 1184638129), expr__19686))) {
      return new schema.core.One(self__.schema, G__19681, self__.name, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__19685.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), expr__19686))) {
        return new schema.core.One(self__.schema, self__.optional_QMARK_, G__19681, self__.__meta, self__.__extmap, null);
      } else {
        return new schema.core.One(self__.schema, self__.optional_QMARK_, self__.name, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__5129__auto__, G__19681), null);
      }
    }
  }
};
schema.core.One.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__5133__auto__) {
  var self__ = this;
  var this__5133__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "optional?", "optional?", 1184638129), self__.optional_QMARK_], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "name", "name", 1843675177), self__.name], null)], null), self__.__extmap));
};
schema.core.One.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__5120__auto__, G__19681) {
  var self__ = this;
  var this__5120__auto____$1 = this;
  return new schema.core.One(self__.schema, self__.optional_QMARK_, self__.name, G__19681, self__.__extmap, self__.__hash);
};
schema.core.One.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__5126__auto__, entry__5127__auto__) {
  var self__ = this;
  var this__5126__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__5127__auto__)) {
    return cljs.core._assoc.call(null, this__5126__auto____$1, cljs.core._nth.call(null, entry__5127__auto__, 0), cljs.core._nth.call(null, entry__5127__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__5126__auto____$1, entry__5127__auto__);
  }
};
schema.core.One.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "schema", "schema", 58529736, null), new cljs.core.Symbol(null, "optional?", "optional?", -1469797640, null), new cljs.core.Symbol(null, "name", "name", -810760592, null)], null);
};
schema.core.One.cljs$lang$type = true;
schema.core.One.cljs$lang$ctorPrSeq = function(this__5155__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/One");
};
schema.core.One.cljs$lang$ctorPrWriter = function(this__5155__auto__, writer__5156__auto__) {
  return cljs.core._write.call(null, writer__5156__auto__, "schema.core/One");
};
schema.core.__GT_One = function schema$core$__GT_One(schema__$1, optional_QMARK_, name) {
  return new schema.core.One(schema__$1, optional_QMARK_, name, null, null, null);
};
schema.core.map__GT_One = function schema$core$map__GT_One(G__19683) {
  return new schema.core.One((new cljs.core.Keyword(null, "schema", "schema", -1582001791)).cljs$core$IFn$_invoke$arity$1(G__19683), (new cljs.core.Keyword(null, "optional?", "optional?", 1184638129)).cljs$core$IFn$_invoke$arity$1(G__19683), (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(G__19683), null, cljs.core.dissoc.call(null, G__19683, new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Keyword(null, "optional?", "optional?", 
  1184638129), new cljs.core.Keyword(null, "name", "name", 1843675177)), null);
};
schema.core.one = function schema$core$one(schema__$1, name) {
  return new schema.core.One(schema__$1, false, name, null, null, null);
};
schema.core.optional = function schema$core$optional(schema__$1, name) {
  return new schema.core.One(schema__$1, true, name, null, null, null);
};
schema.core.parse_sequence_schema = function schema$core$parse_sequence_schema(s) {
  var vec__19694 = cljs.core.split_with.call(null, function(p1__19689_SHARP_) {
    return p1__19689_SHARP_ instanceof schema.core.One && cljs.core.not.call(null, (new cljs.core.Keyword(null, "optional?", "optional?", 1184638129)).cljs$core$IFn$_invoke$arity$1(p1__19689_SHARP_));
  }, s);
  var required = cljs.core.nth.call(null, vec__19694, 0, null);
  var more = cljs.core.nth.call(null, vec__19694, 1, null);
  var vec__19695 = cljs.core.split_with.call(null, function(vec__19694, required, more) {
    return function(p1__19690_SHARP_) {
      var and__4514__auto__ = p1__19690_SHARP_ instanceof schema.core.One;
      if (and__4514__auto__) {
        return (new cljs.core.Keyword(null, "optional?", "optional?", 1184638129)).cljs$core$IFn$_invoke$arity$1(p1__19690_SHARP_);
      } else {
        return and__4514__auto__;
      }
    };
  }(vec__19694, required, more), more);
  var optional = cljs.core.nth.call(null, vec__19695, 0, null);
  var more__$1 = cljs.core.nth.call(null, vec__19695, 1, null);
  if (cljs.core.count.call(null, more__$1) <= 1 && cljs.core.every_QMARK_.call(null, function(vec__19694, required, more, vec__19695, optional, more__$1) {
    return function(p1__19691_SHARP_) {
      return !(p1__19691_SHARP_ instanceof schema.core.One);
    };
  }(vec__19694, required, more, vec__19695, optional, more__$1), more__$1)) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Sequence schema %s does not match [one* optional* rest-schema?]", s));
  }
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.concat.call(null, required, optional), cljs.core.first.call(null, more__$1)], null);
};
cljs.core.PersistentVector.prototype.schema$core$Schema$ = true;
cljs.core.PersistentVector.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var this$__$1 = this;
  var vec__19696 = schema.core.parse_sequence_schema.call(null, this$__$1);
  var singles = cljs.core.nth.call(null, vec__19696, 0, null);
  var multi = cljs.core.nth.call(null, vec__19696, 1, null);
  var single_walkers = cljs.core.vec.call(null, function() {
    var iter__5279__auto__ = function(vec__19696, singles, multi, this$__$1) {
      return function schema$core$iter__19697(s__19698) {
        return new cljs.core.LazySeq(null, function(vec__19696, singles, multi, this$__$1) {
          return function() {
            var s__19698__$1 = s__19698;
            while (true) {
              var temp__4425__auto__ = cljs.core.seq.call(null, s__19698__$1);
              if (temp__4425__auto__) {
                var s__19698__$2 = temp__4425__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, s__19698__$2)) {
                  var c__5277__auto__ = cljs.core.chunk_first.call(null, s__19698__$2);
                  var size__5278__auto__ = cljs.core.count.call(null, c__5277__auto__);
                  var b__19700 = cljs.core.chunk_buffer.call(null, size__5278__auto__);
                  if (function() {
                    var i__19699 = 0;
                    while (true) {
                      if (i__19699 < size__5278__auto__) {
                        var s = cljs.core._nth.call(null, c__5277__auto__, i__19699);
                        cljs.core.chunk_append.call(null, b__19700, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, schema.core.subschema_walker.call(null, s.schema)], null));
                        var G__19715 = i__19699 + 1;
                        i__19699 = G__19715;
                        continue;
                      } else {
                        return true;
                      }
                      break;
                    }
                  }()) {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__19700), schema$core$iter__19697.call(null, cljs.core.chunk_rest.call(null, s__19698__$2)));
                  } else {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__19700), null);
                  }
                } else {
                  var s = cljs.core.first.call(null, s__19698__$2);
                  return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, schema.core.subschema_walker.call(null, s.schema)], null), schema$core$iter__19697.call(null, cljs.core.rest.call(null, s__19698__$2)));
                }
              } else {
                return null;
              }
              break;
            }
          };
        }(vec__19696, singles, multi, this$__$1), null, null);
      };
    }(vec__19696, singles, multi, this$__$1);
    return iter__5279__auto__.call(null, singles);
  }());
  var multi_walker = cljs.core.truth_(multi) ? schema.core.subschema_walker.call(null, multi) : null;
  var err_conj = schema.utils.result_builder.call(null, function(vec__19696, singles, multi, single_walkers, multi_walker, this$__$1) {
    return function(m) {
      return cljs.core.vec.call(null, cljs.core.repeat.call(null, cljs.core.count.call(null, m), null));
    };
  }(vec__19696, singles, multi, single_walkers, multi_walker, this$__$1));
  return function(vec__19696, singles, multi, single_walkers, multi_walker, err_conj, this$__$1) {
    return function(x) {
      var or__4526__auto__ = x == null || cljs.core.sequential_QMARK_.call(null, x) ? null : schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(vec__19696, singles, multi, single_walkers, multi_walker, err_conj, this$__$1) {
        return function() {
          return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), new cljs.core.Symbol(null, "sequential?", "sequential?", 1102351463, null));
        };
      }(vec__19696, singles, multi, single_walkers, multi_walker, err_conj, this$__$1), null), null));
      if (cljs.core.truth_(or__4526__auto__)) {
        return or__4526__auto__;
      } else {
        var single_walkers__$1 = single_walkers;
        var x__$1 = x;
        var out = cljs.core.PersistentVector.EMPTY;
        while (true) {
          var temp__4423__auto__ = cljs.core.first.call(null, single_walkers__$1);
          if (cljs.core.truth_(temp__4423__auto__)) {
            var vec__19701 = temp__4423__auto__;
            var first_single = cljs.core.nth.call(null, vec__19701, 0, null);
            var single_walker = cljs.core.nth.call(null, vec__19701, 1, null);
            if (cljs.core.empty_QMARK_.call(null, x__$1)) {
              if (cljs.core.truth_(first_single.optional_QMARK_)) {
                return out;
              } else {
                return err_conj.call(null, out, schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.first, single_walkers__$1)), null, new cljs.core.Delay(function(single_walkers__$1, x__$1, out, vec__19701, first_single, single_walker, temp__4423__auto__, or__4526__auto__, vec__19696, singles, multi, single_walkers, multi_walker, err_conj, this$__$1) {
                  return function() {
                    return cljs.core.list_STAR_.call(null, new cljs.core.Symbol(null, "present?", "present?", -1810613791, null), function() {
                      var iter__5279__auto__ = function(single_walkers__$1, x__$1, out, vec__19701, first_single, single_walker, temp__4423__auto__, or__4526__auto__, vec__19696, singles, multi, single_walkers, multi_walker, err_conj, this$__$1) {
                        return function schema$core$iter__19702(s__19703) {
                          return new cljs.core.LazySeq(null, function(single_walkers__$1, x__$1, out, vec__19701, first_single, single_walker, temp__4423__auto__, or__4526__auto__, vec__19696, singles, multi, single_walkers, multi_walker, err_conj, this$__$1) {
                            return function() {
                              var s__19703__$1 = s__19703;
                              while (true) {
                                var temp__4425__auto__ = cljs.core.seq.call(null, s__19703__$1);
                                if (temp__4425__auto__) {
                                  var s__19703__$2 = temp__4425__auto__;
                                  if (cljs.core.chunked_seq_QMARK_.call(null, s__19703__$2)) {
                                    var c__5277__auto__ = cljs.core.chunk_first.call(null, s__19703__$2);
                                    var size__5278__auto__ = cljs.core.count.call(null, c__5277__auto__);
                                    var b__19705 = cljs.core.chunk_buffer.call(null, size__5278__auto__);
                                    if (function() {
                                      var i__19704 = 0;
                                      while (true) {
                                        if (i__19704 < size__5278__auto__) {
                                          var vec__19708 = cljs.core._nth.call(null, c__5277__auto__, i__19704);
                                          var single = cljs.core.nth.call(null, vec__19708, 0, null);
                                          if (cljs.core.not.call(null, single.optional_QMARK_)) {
                                            cljs.core.chunk_append.call(null, b__19705, single.name);
                                            var G__19716 = i__19704 + 1;
                                            i__19704 = G__19716;
                                            continue;
                                          } else {
                                            return null;
                                          }
                                        } else {
                                          return true;
                                        }
                                        break;
                                      }
                                    }()) {
                                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__19705), schema$core$iter__19702.call(null, cljs.core.chunk_rest.call(null, s__19703__$2)));
                                    } else {
                                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__19705), null);
                                    }
                                  } else {
                                    var vec__19709 = cljs.core.first.call(null, s__19703__$2);
                                    var single = cljs.core.nth.call(null, vec__19709, 0, null);
                                    if (cljs.core.not.call(null, single.optional_QMARK_)) {
                                      return cljs.core.cons.call(null, single.name, schema$core$iter__19702.call(null, cljs.core.rest.call(null, s__19703__$2)));
                                    } else {
                                      return null;
                                    }
                                  }
                                } else {
                                  return null;
                                }
                                break;
                              }
                            };
                          }(single_walkers__$1, x__$1, out, vec__19701, first_single, single_walker, temp__4423__auto__, or__4526__auto__, vec__19696, singles, multi, single_walkers, multi_walker, err_conj, this$__$1), null, null);
                        };
                      }(single_walkers__$1, x__$1, out, vec__19701, first_single, single_walker, temp__4423__auto__, or__4526__auto__, vec__19696, singles, multi, single_walkers, multi_walker, err_conj, this$__$1);
                      return iter__5279__auto__.call(null, single_walkers__$1);
                    }());
                  };
                }(single_walkers__$1, x__$1, out, vec__19701, first_single, single_walker, temp__4423__auto__, or__4526__auto__, vec__19696, singles, multi, single_walkers, multi_walker, err_conj, this$__$1), null), null)));
              }
            } else {
              var G__19717 = cljs.core.next.call(null, single_walkers__$1);
              var G__19718 = cljs.core.rest.call(null, x__$1);
              var G__19719 = err_conj.call(null, out, schema.utils.wrap_error_name.call(null, first_single.name, single_walker.call(null, cljs.core.first.call(null, x__$1))));
              single_walkers__$1 = G__19717;
              x__$1 = G__19718;
              out = G__19719;
              continue;
            }
          } else {
            if (cljs.core.truth_(multi)) {
              return cljs.core.reduce.call(null, err_conj, out, cljs.core.map.call(null, multi_walker, x__$1));
            } else {
              if (cljs.core.seq.call(null, x__$1)) {
                return err_conj.call(null, out, schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, null, x__$1, new cljs.core.Delay(function(single_walkers__$1, x__$1, out, temp__4423__auto__, or__4526__auto__, vec__19696, singles, multi, single_walkers, multi_walker, err_conj, this$__$1) {
                  return function() {
                    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.count.call(null, x__$1)), new cljs.core.Symbol(null, "has-extra-elts?", "has-extra-elts?", -1376562869, null));
                  };
                }(single_walkers__$1, x__$1, out, temp__4423__auto__, or__4526__auto__, vec__19696, singles, multi, single_walkers, multi_walker, err_conj, this$__$1), null), null)));
              } else {
                return out;
              }
            }
          }
          break;
        }
      }
    };
  }(vec__19696, singles, multi, single_walkers, multi_walker, err_conj, this$__$1);
};
cljs.core.PersistentVector.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var this$__$1 = this;
  var vec__19710 = schema.core.parse_sequence_schema.call(null, this$__$1);
  var singles = cljs.core.nth.call(null, vec__19710, 0, null);
  var multi = cljs.core.nth.call(null, vec__19710, 1, null);
  return cljs.core.vec.call(null, cljs.core.concat.call(null, function() {
    var iter__5279__auto__ = function(vec__19710, singles, multi, this$__$1) {
      return function schema$core$iter__19711(s__19712) {
        return new cljs.core.LazySeq(null, function(vec__19710, singles, multi, this$__$1) {
          return function() {
            var s__19712__$1 = s__19712;
            while (true) {
              var temp__4425__auto__ = cljs.core.seq.call(null, s__19712__$1);
              if (temp__4425__auto__) {
                var s__19712__$2 = temp__4425__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, s__19712__$2)) {
                  var c__5277__auto__ = cljs.core.chunk_first.call(null, s__19712__$2);
                  var size__5278__auto__ = cljs.core.count.call(null, c__5277__auto__);
                  var b__19714 = cljs.core.chunk_buffer.call(null, size__5278__auto__);
                  if (function() {
                    var i__19713 = 0;
                    while (true) {
                      if (i__19713 < size__5278__auto__) {
                        var s = cljs.core._nth.call(null, c__5277__auto__, i__19713);
                        cljs.core.chunk_append.call(null, b__19714, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(s)), schema.core.explain.call(null, (new cljs.core.Keyword(null, "schema", "schema", -1582001791)).cljs$core$IFn$_invoke$arity$1(s))), cljs.core.truth_(s.optional_QMARK_) ? new cljs.core.Symbol(null, "optional", "optional", -600484260, null) : 
                        new cljs.core.Symbol(null, "one", "one", -1719427865, null)));
                        var G__19720 = i__19713 + 1;
                        i__19713 = G__19720;
                        continue;
                      } else {
                        return true;
                      }
                      break;
                    }
                  }()) {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__19714), schema$core$iter__19711.call(null, cljs.core.chunk_rest.call(null, s__19712__$2)));
                  } else {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__19714), null);
                  }
                } else {
                  var s = cljs.core.first.call(null, s__19712__$2);
                  return cljs.core.cons.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(s)), schema.core.explain.call(null, (new cljs.core.Keyword(null, "schema", "schema", -1582001791)).cljs$core$IFn$_invoke$arity$1(s))), cljs.core.truth_(s.optional_QMARK_) ? new cljs.core.Symbol(null, "optional", "optional", -600484260, null) : new cljs.core.Symbol(null, 
                  "one", "one", -1719427865, null)), schema$core$iter__19711.call(null, cljs.core.rest.call(null, s__19712__$2)));
                }
              } else {
                return null;
              }
              break;
            }
          };
        }(vec__19710, singles, multi, this$__$1), null, null);
      };
    }(vec__19710, singles, multi, this$__$1);
    return iter__5279__auto__.call(null, singles);
  }(), cljs.core.truth_(multi) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.explain.call(null, multi)], null) : null));
};
schema.core.pair = function schema$core$pair(first_schema, first_name, second_schema, second_name) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, first_schema, first_name), schema.core.one.call(null, second_schema, second_name)], null);
};
schema.core.Record = function(klass, schema, __meta, __extmap, __hash) {
  this.klass = klass;
  this.schema = schema;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.core.Record.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__5121__auto__, k__5122__auto__) {
  var self__ = this;
  var this__5121__auto____$1 = this;
  return cljs.core._lookup.call(null, this__5121__auto____$1, k__5122__auto__, null);
};
schema.core.Record.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__5123__auto__, k19722, else__5124__auto__) {
  var self__ = this;
  var this__5123__auto____$1 = this;
  var G__19724 = k19722 instanceof cljs.core.Keyword ? k19722.fqn : null;
  switch(G__19724) {
    case "klass":
      return self__.klass;
      break;
    case "schema":
      return self__.schema;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k19722, else__5124__auto__);
  }
};
schema.core.Record.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__5135__auto__, writer__5136__auto__, opts__5137__auto__) {
  var self__ = this;
  var this__5135__auto____$1 = this;
  var pr_pair__5138__auto__ = function(this__5135__auto____$1) {
    return function(keyval__5139__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__5136__auto__, cljs.core.pr_writer, "", " ", "", opts__5137__auto__, keyval__5139__auto__);
    };
  }(this__5135__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__5136__auto__, pr_pair__5138__auto__, "#schema.core.Record{", ", ", "}", opts__5137__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "klass", "klass", -1386752349), self__.klass], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null)], null), self__.__extmap));
};
schema.core.Record.prototype.cljs$core$IIterable$ = true;
schema.core.Record.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__19721) {
  var self__ = this;
  var G__19721__$1 = this;
  return new cljs.core.RecordIter(0, G__19721__$1, 2, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "klass", "klass", -1386752349), new cljs.core.Keyword(null, "schema", "schema", -1582001791)], null), cljs.core._iterator.call(null, self__.__extmap));
};
schema.core.Record.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__5119__auto__) {
  var self__ = this;
  var this__5119__auto____$1 = this;
  return self__.__meta;
};
schema.core.Record.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__5115__auto__) {
  var self__ = this;
  var this__5115__auto____$1 = this;
  return new schema.core.Record(self__.klass, self__.schema, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.Record.prototype.cljs$core$ICounted$_count$arity$1 = function(this__5125__auto__) {
  var self__ = this;
  var this__5125__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.Record.prototype.cljs$core$IHash$_hash$arity$1 = function(this__5116__auto__) {
  var self__ = this;
  var this__5116__auto____$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_imap.call(null, this__5116__auto____$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
schema.core.Record.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__5117__auto__, other__5118__auto__) {
  var self__ = this;
  var this__5117__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4514__auto__ = other__5118__auto__;
    if (cljs.core.truth_(and__4514__auto__)) {
      var and__4514__auto____$1 = this__5117__auto____$1.constructor === other__5118__auto__.constructor;
      if (and__4514__auto____$1) {
        return cljs.core.equiv_map.call(null, this__5117__auto____$1, other__5118__auto__);
      } else {
        return and__4514__auto____$1;
      }
    } else {
      return and__4514__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.Record.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__5130__auto__, k__5131__auto__) {
  var self__ = this;
  var this__5130__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), null, new cljs.core.Keyword(null, "klass", "klass", -1386752349), null], null), null), k__5131__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__5130__auto____$1), self__.__meta), k__5131__auto__);
  } else {
    return new schema.core.Record(self__.klass, self__.schema, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__5131__auto__)), null);
  }
};
schema.core.Record.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__5128__auto__, k__5129__auto__, G__19721) {
  var self__ = this;
  var this__5128__auto____$1 = this;
  var pred__19725 = cljs.core.keyword_identical_QMARK_;
  var expr__19726 = k__5129__auto__;
  if (cljs.core.truth_(pred__19725.call(null, new cljs.core.Keyword(null, "klass", "klass", -1386752349), expr__19726))) {
    return new schema.core.Record(G__19721, self__.schema, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__19725.call(null, new cljs.core.Keyword(null, "schema", "schema", -1582001791), expr__19726))) {
      return new schema.core.Record(self__.klass, G__19721, self__.__meta, self__.__extmap, null);
    } else {
      return new schema.core.Record(self__.klass, self__.schema, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__5129__auto__, G__19721), null);
    }
  }
};
schema.core.Record.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__5133__auto__) {
  var self__ = this;
  var this__5133__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "klass", "klass", -1386752349), self__.klass], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null)], null), self__.__extmap));
};
schema.core.Record.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__5120__auto__, G__19721) {
  var self__ = this;
  var this__5120__auto____$1 = this;
  return new schema.core.Record(self__.klass, self__.schema, G__19721, self__.__extmap, self__.__hash);
};
schema.core.Record.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__5126__auto__, entry__5127__auto__) {
  var self__ = this;
  var this__5126__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__5127__auto__)) {
    return cljs.core._assoc.call(null, this__5126__auto____$1, cljs.core._nth.call(null, entry__5127__auto__, 0), cljs.core._nth.call(null, entry__5127__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__5126__auto____$1, entry__5127__auto__);
  }
};
schema.core.Record.prototype.schema$core$Schema$ = true;
schema.core.Record.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var map_checker = schema.core.subschema_walker.call(null, self__.schema);
  var pred_checker = function() {
    var temp__4425__auto__ = (new cljs.core.Keyword(null, "extra-validator-fn", "extra-validator-fn", 1562905865)).cljs$core$IFn$_invoke$arity$1(this$__$1);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var evf = temp__4425__auto__;
      return schema.core.subschema_walker.call(null, schema.core.pred.call(null, evf));
    } else {
      return null;
    }
  }();
  return function(map_checker, pred_checker, this$__$1) {
    return function(r) {
      var or__4526__auto__ = r instanceof self__.klass ? null : schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, r, new cljs.core.Delay(function(map_checker, pred_checker, this$__$1) {
        return function() {
          return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, r)), self__.klass), new cljs.core.Symbol(null, "instance?", "instance?", 1075939923, null));
        };
      }(map_checker, pred_checker, this$__$1), null), null));
      if (cljs.core.truth_(or__4526__auto__)) {
        return or__4526__auto__;
      } else {
        var res = map_checker.call(null, r);
        if (cljs.core.truth_(schema.utils.error_QMARK_.call(null, res))) {
          return res;
        } else {
          var pred_res = cljs.core.truth_(pred_checker) ? pred_checker.call(null, r) : null;
          if (cljs.core.truth_(schema.utils.error_QMARK_.call(null, pred_res))) {
            return pred_res;
          } else {
            return res;
          }
        }
      }
    };
  }(map_checker, pred_checker, this$__$1);
};
schema.core.Record.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.core.explain.call(null, self__.schema)), cljs.core.symbol.call(null, cljs.core.pr_str.call(null, self__.klass))), new cljs.core.Symbol(null, "record", "record", 861424668, null));
};
schema.core.Record.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "klass", "klass", 253779178, null), new cljs.core.Symbol(null, "schema", "schema", 58529736, null)], null);
};
schema.core.Record.cljs$lang$type = true;
schema.core.Record.cljs$lang$ctorPrSeq = function(this__5155__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/Record");
};
schema.core.Record.cljs$lang$ctorPrWriter = function(this__5155__auto__, writer__5156__auto__) {
  return cljs.core._write.call(null, writer__5156__auto__, "schema.core/Record");
};
schema.core.__GT_Record = function schema$core$__GT_Record(klass, schema__$1) {
  return new schema.core.Record(klass, schema__$1, null, null, null);
};
schema.core.map__GT_Record = function schema$core$map__GT_Record(G__19723) {
  return new schema.core.Record((new cljs.core.Keyword(null, "klass", "klass", -1386752349)).cljs$core$IFn$_invoke$arity$1(G__19723), (new cljs.core.Keyword(null, "schema", "schema", -1582001791)).cljs$core$IFn$_invoke$arity$1(G__19723), null, cljs.core.dissoc.call(null, G__19723, new cljs.core.Keyword(null, "klass", "klass", -1386752349), new cljs.core.Keyword(null, "schema", "schema", -1582001791)), null);
};
schema.core.record = function schema$core$record(klass, schema__$1) {
  if (cljs.core.map_QMARK_.call(null, schema__$1)) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Expected map, got %s", schema.utils.type_of.call(null, schema__$1)));
  }
  return new schema.core.Record(klass, schema__$1, null, null, null);
};
schema.core.explain_input_schema = function schema$core$explain_input_schema(input_schema) {
  var vec__19732 = cljs.core.split_with.call(null, function(p1__19729_SHARP_) {
    return p1__19729_SHARP_ instanceof schema.core.One;
  }, input_schema);
  var required = cljs.core.nth.call(null, vec__19732, 0, null);
  var more = cljs.core.nth.call(null, vec__19732, 1, null);
  return cljs.core.concat.call(null, cljs.core.map.call(null, function(vec__19732, required, more) {
    return function(p1__19730_SHARP_) {
      return schema.core.explain.call(null, p1__19730_SHARP_.schema);
    };
  }(vec__19732, required, more), required), cljs.core.seq.call(null, more) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), cljs.core.mapv.call(null, schema.core.explain, more)], null) : null);
};
schema.core.FnSchema = function(output_schema, input_schemas, __meta, __extmap, __hash) {
  this.output_schema = output_schema;
  this.input_schemas = input_schemas;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.core.FnSchema.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__5121__auto__, k__5122__auto__) {
  var self__ = this;
  var this__5121__auto____$1 = this;
  return cljs.core._lookup.call(null, this__5121__auto____$1, k__5122__auto__, null);
};
schema.core.FnSchema.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__5123__auto__, k19734, else__5124__auto__) {
  var self__ = this;
  var this__5123__auto____$1 = this;
  var G__19736 = k19734 instanceof cljs.core.Keyword ? k19734.fqn : null;
  switch(G__19736) {
    case "output-schema":
      return self__.output_schema;
      break;
    case "input-schemas":
      return self__.input_schemas;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k19734, else__5124__auto__);
  }
};
schema.core.FnSchema.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__5135__auto__, writer__5136__auto__, opts__5137__auto__) {
  var self__ = this;
  var this__5135__auto____$1 = this;
  var pr_pair__5138__auto__ = function(this__5135__auto____$1) {
    return function(keyval__5139__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__5136__auto__, cljs.core.pr_writer, "", " ", "", opts__5137__auto__, keyval__5139__auto__);
    };
  }(this__5135__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__5136__auto__, pr_pair__5138__auto__, "#schema.core.FnSchema{", ", ", "}", opts__5137__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "output-schema", "output-schema", 272504137), self__.output_schema], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "input-schemas", "input-schemas", -982154805), self__.input_schemas], null)], null), self__.__extmap));
};
schema.core.FnSchema.prototype.cljs$core$IIterable$ = true;
schema.core.FnSchema.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__19733) {
  var self__ = this;
  var G__19733__$1 = this;
  return new cljs.core.RecordIter(0, G__19733__$1, 2, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "output-schema", "output-schema", 272504137), new cljs.core.Keyword(null, "input-schemas", "input-schemas", -982154805)], null), cljs.core._iterator.call(null, self__.__extmap));
};
schema.core.FnSchema.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__5119__auto__) {
  var self__ = this;
  var this__5119__auto____$1 = this;
  return self__.__meta;
};
schema.core.FnSchema.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__5115__auto__) {
  var self__ = this;
  var this__5115__auto____$1 = this;
  return new schema.core.FnSchema(self__.output_schema, self__.input_schemas, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.FnSchema.prototype.cljs$core$ICounted$_count$arity$1 = function(this__5125__auto__) {
  var self__ = this;
  var this__5125__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.FnSchema.prototype.cljs$core$IHash$_hash$arity$1 = function(this__5116__auto__) {
  var self__ = this;
  var this__5116__auto____$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_imap.call(null, this__5116__auto____$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
schema.core.FnSchema.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__5117__auto__, other__5118__auto__) {
  var self__ = this;
  var this__5117__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4514__auto__ = other__5118__auto__;
    if (cljs.core.truth_(and__4514__auto__)) {
      var and__4514__auto____$1 = this__5117__auto____$1.constructor === other__5118__auto__.constructor;
      if (and__4514__auto____$1) {
        return cljs.core.equiv_map.call(null, this__5117__auto____$1, other__5118__auto__);
      } else {
        return and__4514__auto____$1;
      }
    } else {
      return and__4514__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.FnSchema.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__5130__auto__, k__5131__auto__) {
  var self__ = this;
  var this__5130__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "output-schema", "output-schema", 272504137), null, new cljs.core.Keyword(null, "input-schemas", "input-schemas", -982154805), null], null), null), k__5131__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__5130__auto____$1), self__.__meta), k__5131__auto__);
  } else {
    return new schema.core.FnSchema(self__.output_schema, self__.input_schemas, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__5131__auto__)), null);
  }
};
schema.core.FnSchema.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__5128__auto__, k__5129__auto__, G__19733) {
  var self__ = this;
  var this__5128__auto____$1 = this;
  var pred__19737 = cljs.core.keyword_identical_QMARK_;
  var expr__19738 = k__5129__auto__;
  if (cljs.core.truth_(pred__19737.call(null, new cljs.core.Keyword(null, "output-schema", "output-schema", 272504137), expr__19738))) {
    return new schema.core.FnSchema(G__19733, self__.input_schemas, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__19737.call(null, new cljs.core.Keyword(null, "input-schemas", "input-schemas", -982154805), expr__19738))) {
      return new schema.core.FnSchema(self__.output_schema, G__19733, self__.__meta, self__.__extmap, null);
    } else {
      return new schema.core.FnSchema(self__.output_schema, self__.input_schemas, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__5129__auto__, G__19733), null);
    }
  }
};
schema.core.FnSchema.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__5133__auto__) {
  var self__ = this;
  var this__5133__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "output-schema", "output-schema", 272504137), self__.output_schema], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input-schemas", "input-schemas", -982154805), self__.input_schemas], 
  null)], null), self__.__extmap));
};
schema.core.FnSchema.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__5120__auto__, G__19733) {
  var self__ = this;
  var this__5120__auto____$1 = this;
  return new schema.core.FnSchema(self__.output_schema, self__.input_schemas, G__19733, self__.__extmap, self__.__hash);
};
schema.core.FnSchema.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__5126__auto__, entry__5127__auto__) {
  var self__ = this;
  var this__5126__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__5127__auto__)) {
    return cljs.core._assoc.call(null, this__5126__auto____$1, cljs.core._nth.call(null, entry__5127__auto__, 0), cljs.core._nth.call(null, entry__5127__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__5126__auto____$1, entry__5127__auto__);
  }
};
schema.core.FnSchema.prototype.schema$core$Schema$ = true;
schema.core.FnSchema.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return function(this$__$1) {
    return function(x) {
      if (cljs.core.ifn_QMARK_.call(null, x)) {
        return x;
      } else {
        return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(this$__$1) {
          return function() {
            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null));
          };
        }(this$__$1), null), null));
      }
    };
  }(this$__$1);
};
schema.core.FnSchema.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.count.call(null, self__.input_schemas) > 1) {
    return cljs.core.list_STAR_.call(null, new cljs.core.Symbol(null, "\x3d\x3e*", "\x3d\x3e*", 1909690043, null), schema.core.explain.call(null, self__.output_schema), cljs.core.map.call(null, schema.core.explain_input_schema, self__.input_schemas));
  } else {
    return cljs.core.list_STAR_.call(null, new cljs.core.Symbol(null, "\x3d\x3e", "\x3d\x3e", -813269641, null), schema.core.explain.call(null, self__.output_schema), schema.core.explain_input_schema.call(null, cljs.core.first.call(null, self__.input_schemas)));
  }
};
schema.core.FnSchema.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "output-schema", "output-schema", 1913035664, null), new cljs.core.Symbol(null, "input-schemas", "input-schemas", 658376722, null)], null);
};
schema.core.FnSchema.cljs$lang$type = true;
schema.core.FnSchema.cljs$lang$ctorPrSeq = function(this__5155__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/FnSchema");
};
schema.core.FnSchema.cljs$lang$ctorPrWriter = function(this__5155__auto__, writer__5156__auto__) {
  return cljs.core._write.call(null, writer__5156__auto__, "schema.core/FnSchema");
};
schema.core.__GT_FnSchema = function schema$core$__GT_FnSchema(output_schema, input_schemas) {
  return new schema.core.FnSchema(output_schema, input_schemas, null, null, null);
};
schema.core.map__GT_FnSchema = function schema$core$map__GT_FnSchema(G__19735) {
  return new schema.core.FnSchema((new cljs.core.Keyword(null, "output-schema", "output-schema", 272504137)).cljs$core$IFn$_invoke$arity$1(G__19735), (new cljs.core.Keyword(null, "input-schemas", "input-schemas", -982154805)).cljs$core$IFn$_invoke$arity$1(G__19735), null, cljs.core.dissoc.call(null, G__19735, new cljs.core.Keyword(null, "output-schema", "output-schema", 272504137), new cljs.core.Keyword(null, "input-schemas", "input-schemas", -982154805)), null);
};
schema.core.arity = function schema$core$arity(input_schema) {
  if (cljs.core.seq.call(null, input_schema)) {
    if (cljs.core.last.call(null, input_schema) instanceof schema.core.One) {
      return cljs.core.count.call(null, input_schema);
    } else {
      return Number.MAX_VALUE;
    }
  } else {
    return 0;
  }
};
schema.core.make_fn_schema = function schema$core$make_fn_schema(output_schema, input_schemas) {
  if (cljs.core.seq.call(null, input_schemas)) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Function must have at least one input schema"));
  }
  if (cljs.core.every_QMARK_.call(null, cljs.core.vector_QMARK_, input_schemas)) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Each arity must be a vector."));
  }
  if (cljs.core.truth_(cljs.core.apply.call(null, cljs.core.distinct_QMARK_, cljs.core.map.call(null, schema.core.arity, input_schemas)))) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Arities must be distinct"));
  }
  return new schema.core.FnSchema(output_schema, cljs.core.sort_by.call(null, schema.core.arity, input_schemas), null, null, null);
};
schema.core.schema_with_name = function schema$core$schema_with_name(schema__$1, name) {
  return cljs.core.vary_meta.call(null, schema__$1, cljs.core.assoc, new cljs.core.Keyword(null, "name", "name", 1843675177), name);
};
schema.core.schema_name = function schema$core$schema_name(schema__$1) {
  return (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, schema__$1));
};
schema.core.fn_validation_QMARK_ = function schema$core$fn_validation_QMARK_() {
  return schema.utils.use_fn_validation.get_cell();
};
schema.core.set_fn_validation_BANG_ = function schema$core$set_fn_validation_BANG_(on_QMARK_) {
  return schema.utils.use_fn_validation.set_cell(on_QMARK_);
};
schema.core.schematize_fn = function schema$core$schematize_fn(f, schema__$1) {
  return cljs.core.vary_meta.call(null, f, cljs.core.assoc, new cljs.core.Keyword(null, "schema", "schema", -1582001791), schema__$1);
};
schema.core.fn_schema = function schema$core$fn_schema(f) {
  if (cljs.core.fn_QMARK_.call(null, f)) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Non-function %s", schema.utils.type_of.call(null, f)));
  }
  var or__4526__auto__ = schema.utils.class_schema.call(null, schema.utils.fn_schema_bearer.call(null, f));
  if (cljs.core.truth_(or__4526__auto__)) {
    return or__4526__auto__;
  } else {
    var m__6884__auto__ = cljs.core.meta.call(null, f);
    var k__6885__auto__ = new cljs.core.Keyword(null, "schema", "schema", -1582001791);
    var temp__4423__auto__ = cljs.core.find.call(null, m__6884__auto__, k__6885__auto__);
    if (cljs.core.truth_(temp__4423__auto__)) {
      var pair__6886__auto__ = temp__4423__auto__;
      return cljs.core.val.call(null, pair__6886__auto__);
    } else {
      throw new Error(schema.utils.format_STAR_.call(null, "Key %s not found in %s", k__6885__auto__, m__6884__auto__));
    }
  }
};
goog.provide("om.dom");
goog.require("cljs.core");
goog.require("goog.object");
om.dom.a = function om$dom$a() {
  var args__5572__auto__ = [];
  var len__5565__auto___18481 = arguments.length;
  var i__5566__auto___18482 = 0;
  while (true) {
    if (i__5566__auto___18482 < len__5565__auto___18481) {
      args__5572__auto__.push(arguments[i__5566__auto___18482]);
      var G__18483 = i__5566__auto___18482 + 1;
      i__5566__auto___18482 = G__18483;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.a.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.a.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.a.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.a.cljs$lang$maxFixedArity = 1;
om.dom.a.cljs$lang$applyTo = function(seq18237) {
  var G__18238 = cljs.core.first.call(null, seq18237);
  var seq18237__$1 = cljs.core.next.call(null, seq18237);
  return om.dom.a.cljs$core$IFn$_invoke$arity$variadic(G__18238, seq18237__$1);
};
om.dom.abbr = function om$dom$abbr() {
  var args__5572__auto__ = [];
  var len__5565__auto___18484 = arguments.length;
  var i__5566__auto___18485 = 0;
  while (true) {
    if (i__5566__auto___18485 < len__5565__auto___18484) {
      args__5572__auto__.push(arguments[i__5566__auto___18485]);
      var G__18486 = i__5566__auto___18485 + 1;
      i__5566__auto___18485 = G__18486;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.abbr.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.abbr.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.abbr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.abbr.cljs$lang$maxFixedArity = 1;
om.dom.abbr.cljs$lang$applyTo = function(seq18239) {
  var G__18240 = cljs.core.first.call(null, seq18239);
  var seq18239__$1 = cljs.core.next.call(null, seq18239);
  return om.dom.abbr.cljs$core$IFn$_invoke$arity$variadic(G__18240, seq18239__$1);
};
om.dom.address = function om$dom$address() {
  var args__5572__auto__ = [];
  var len__5565__auto___18487 = arguments.length;
  var i__5566__auto___18488 = 0;
  while (true) {
    if (i__5566__auto___18488 < len__5565__auto___18487) {
      args__5572__auto__.push(arguments[i__5566__auto___18488]);
      var G__18489 = i__5566__auto___18488 + 1;
      i__5566__auto___18488 = G__18489;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.address.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.address.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.address.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.address.cljs$lang$maxFixedArity = 1;
om.dom.address.cljs$lang$applyTo = function(seq18241) {
  var G__18242 = cljs.core.first.call(null, seq18241);
  var seq18241__$1 = cljs.core.next.call(null, seq18241);
  return om.dom.address.cljs$core$IFn$_invoke$arity$variadic(G__18242, seq18241__$1);
};
om.dom.area = function om$dom$area() {
  var args__5572__auto__ = [];
  var len__5565__auto___18490 = arguments.length;
  var i__5566__auto___18491 = 0;
  while (true) {
    if (i__5566__auto___18491 < len__5565__auto___18490) {
      args__5572__auto__.push(arguments[i__5566__auto___18491]);
      var G__18492 = i__5566__auto___18491 + 1;
      i__5566__auto___18491 = G__18492;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.area.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.area.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.area.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.area.cljs$lang$maxFixedArity = 1;
om.dom.area.cljs$lang$applyTo = function(seq18243) {
  var G__18244 = cljs.core.first.call(null, seq18243);
  var seq18243__$1 = cljs.core.next.call(null, seq18243);
  return om.dom.area.cljs$core$IFn$_invoke$arity$variadic(G__18244, seq18243__$1);
};
om.dom.article = function om$dom$article() {
  var args__5572__auto__ = [];
  var len__5565__auto___18493 = arguments.length;
  var i__5566__auto___18494 = 0;
  while (true) {
    if (i__5566__auto___18494 < len__5565__auto___18493) {
      args__5572__auto__.push(arguments[i__5566__auto___18494]);
      var G__18495 = i__5566__auto___18494 + 1;
      i__5566__auto___18494 = G__18495;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.article.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.article.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.article.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.article.cljs$lang$maxFixedArity = 1;
om.dom.article.cljs$lang$applyTo = function(seq18245) {
  var G__18246 = cljs.core.first.call(null, seq18245);
  var seq18245__$1 = cljs.core.next.call(null, seq18245);
  return om.dom.article.cljs$core$IFn$_invoke$arity$variadic(G__18246, seq18245__$1);
};
om.dom.aside = function om$dom$aside() {
  var args__5572__auto__ = [];
  var len__5565__auto___18496 = arguments.length;
  var i__5566__auto___18497 = 0;
  while (true) {
    if (i__5566__auto___18497 < len__5565__auto___18496) {
      args__5572__auto__.push(arguments[i__5566__auto___18497]);
      var G__18498 = i__5566__auto___18497 + 1;
      i__5566__auto___18497 = G__18498;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.aside.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.aside.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.aside.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.aside.cljs$lang$maxFixedArity = 1;
om.dom.aside.cljs$lang$applyTo = function(seq18247) {
  var G__18248 = cljs.core.first.call(null, seq18247);
  var seq18247__$1 = cljs.core.next.call(null, seq18247);
  return om.dom.aside.cljs$core$IFn$_invoke$arity$variadic(G__18248, seq18247__$1);
};
om.dom.audio = function om$dom$audio() {
  var args__5572__auto__ = [];
  var len__5565__auto___18499 = arguments.length;
  var i__5566__auto___18500 = 0;
  while (true) {
    if (i__5566__auto___18500 < len__5565__auto___18499) {
      args__5572__auto__.push(arguments[i__5566__auto___18500]);
      var G__18501 = i__5566__auto___18500 + 1;
      i__5566__auto___18500 = G__18501;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.audio.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.audio.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.audio.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.audio.cljs$lang$maxFixedArity = 1;
om.dom.audio.cljs$lang$applyTo = function(seq18249) {
  var G__18250 = cljs.core.first.call(null, seq18249);
  var seq18249__$1 = cljs.core.next.call(null, seq18249);
  return om.dom.audio.cljs$core$IFn$_invoke$arity$variadic(G__18250, seq18249__$1);
};
om.dom.b = function om$dom$b() {
  var args__5572__auto__ = [];
  var len__5565__auto___18502 = arguments.length;
  var i__5566__auto___18503 = 0;
  while (true) {
    if (i__5566__auto___18503 < len__5565__auto___18502) {
      args__5572__auto__.push(arguments[i__5566__auto___18503]);
      var G__18504 = i__5566__auto___18503 + 1;
      i__5566__auto___18503 = G__18504;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.b.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.b.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.b.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.b.cljs$lang$maxFixedArity = 1;
om.dom.b.cljs$lang$applyTo = function(seq18251) {
  var G__18252 = cljs.core.first.call(null, seq18251);
  var seq18251__$1 = cljs.core.next.call(null, seq18251);
  return om.dom.b.cljs$core$IFn$_invoke$arity$variadic(G__18252, seq18251__$1);
};
om.dom.base = function om$dom$base() {
  var args__5572__auto__ = [];
  var len__5565__auto___18505 = arguments.length;
  var i__5566__auto___18506 = 0;
  while (true) {
    if (i__5566__auto___18506 < len__5565__auto___18505) {
      args__5572__auto__.push(arguments[i__5566__auto___18506]);
      var G__18507 = i__5566__auto___18506 + 1;
      i__5566__auto___18506 = G__18507;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.base.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.base.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.base.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.base.cljs$lang$maxFixedArity = 1;
om.dom.base.cljs$lang$applyTo = function(seq18253) {
  var G__18254 = cljs.core.first.call(null, seq18253);
  var seq18253__$1 = cljs.core.next.call(null, seq18253);
  return om.dom.base.cljs$core$IFn$_invoke$arity$variadic(G__18254, seq18253__$1);
};
om.dom.bdi = function om$dom$bdi() {
  var args__5572__auto__ = [];
  var len__5565__auto___18508 = arguments.length;
  var i__5566__auto___18509 = 0;
  while (true) {
    if (i__5566__auto___18509 < len__5565__auto___18508) {
      args__5572__auto__.push(arguments[i__5566__auto___18509]);
      var G__18510 = i__5566__auto___18509 + 1;
      i__5566__auto___18509 = G__18510;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.bdi.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.bdi.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.bdi.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.bdi.cljs$lang$maxFixedArity = 1;
om.dom.bdi.cljs$lang$applyTo = function(seq18255) {
  var G__18256 = cljs.core.first.call(null, seq18255);
  var seq18255__$1 = cljs.core.next.call(null, seq18255);
  return om.dom.bdi.cljs$core$IFn$_invoke$arity$variadic(G__18256, seq18255__$1);
};
om.dom.bdo = function om$dom$bdo() {
  var args__5572__auto__ = [];
  var len__5565__auto___18511 = arguments.length;
  var i__5566__auto___18512 = 0;
  while (true) {
    if (i__5566__auto___18512 < len__5565__auto___18511) {
      args__5572__auto__.push(arguments[i__5566__auto___18512]);
      var G__18513 = i__5566__auto___18512 + 1;
      i__5566__auto___18512 = G__18513;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.bdo.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.bdo.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.bdo.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.bdo.cljs$lang$maxFixedArity = 1;
om.dom.bdo.cljs$lang$applyTo = function(seq18257) {
  var G__18258 = cljs.core.first.call(null, seq18257);
  var seq18257__$1 = cljs.core.next.call(null, seq18257);
  return om.dom.bdo.cljs$core$IFn$_invoke$arity$variadic(G__18258, seq18257__$1);
};
om.dom.big = function om$dom$big() {
  var args__5572__auto__ = [];
  var len__5565__auto___18514 = arguments.length;
  var i__5566__auto___18515 = 0;
  while (true) {
    if (i__5566__auto___18515 < len__5565__auto___18514) {
      args__5572__auto__.push(arguments[i__5566__auto___18515]);
      var G__18516 = i__5566__auto___18515 + 1;
      i__5566__auto___18515 = G__18516;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.big.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.big.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.big.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.big.cljs$lang$maxFixedArity = 1;
om.dom.big.cljs$lang$applyTo = function(seq18259) {
  var G__18260 = cljs.core.first.call(null, seq18259);
  var seq18259__$1 = cljs.core.next.call(null, seq18259);
  return om.dom.big.cljs$core$IFn$_invoke$arity$variadic(G__18260, seq18259__$1);
};
om.dom.blockquote = function om$dom$blockquote() {
  var args__5572__auto__ = [];
  var len__5565__auto___18517 = arguments.length;
  var i__5566__auto___18518 = 0;
  while (true) {
    if (i__5566__auto___18518 < len__5565__auto___18517) {
      args__5572__auto__.push(arguments[i__5566__auto___18518]);
      var G__18519 = i__5566__auto___18518 + 1;
      i__5566__auto___18518 = G__18519;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.blockquote.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.blockquote.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.blockquote.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.blockquote.cljs$lang$maxFixedArity = 1;
om.dom.blockquote.cljs$lang$applyTo = function(seq18261) {
  var G__18262 = cljs.core.first.call(null, seq18261);
  var seq18261__$1 = cljs.core.next.call(null, seq18261);
  return om.dom.blockquote.cljs$core$IFn$_invoke$arity$variadic(G__18262, seq18261__$1);
};
om.dom.body = function om$dom$body() {
  var args__5572__auto__ = [];
  var len__5565__auto___18520 = arguments.length;
  var i__5566__auto___18521 = 0;
  while (true) {
    if (i__5566__auto___18521 < len__5565__auto___18520) {
      args__5572__auto__.push(arguments[i__5566__auto___18521]);
      var G__18522 = i__5566__auto___18521 + 1;
      i__5566__auto___18521 = G__18522;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.body.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.body.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.body.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.body.cljs$lang$maxFixedArity = 1;
om.dom.body.cljs$lang$applyTo = function(seq18263) {
  var G__18264 = cljs.core.first.call(null, seq18263);
  var seq18263__$1 = cljs.core.next.call(null, seq18263);
  return om.dom.body.cljs$core$IFn$_invoke$arity$variadic(G__18264, seq18263__$1);
};
om.dom.br = function om$dom$br() {
  var args__5572__auto__ = [];
  var len__5565__auto___18523 = arguments.length;
  var i__5566__auto___18524 = 0;
  while (true) {
    if (i__5566__auto___18524 < len__5565__auto___18523) {
      args__5572__auto__.push(arguments[i__5566__auto___18524]);
      var G__18525 = i__5566__auto___18524 + 1;
      i__5566__auto___18524 = G__18525;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.br.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.br.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.br.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.br.cljs$lang$maxFixedArity = 1;
om.dom.br.cljs$lang$applyTo = function(seq18265) {
  var G__18266 = cljs.core.first.call(null, seq18265);
  var seq18265__$1 = cljs.core.next.call(null, seq18265);
  return om.dom.br.cljs$core$IFn$_invoke$arity$variadic(G__18266, seq18265__$1);
};
om.dom.button = function om$dom$button() {
  var args__5572__auto__ = [];
  var len__5565__auto___18526 = arguments.length;
  var i__5566__auto___18527 = 0;
  while (true) {
    if (i__5566__auto___18527 < len__5565__auto___18526) {
      args__5572__auto__.push(arguments[i__5566__auto___18527]);
      var G__18528 = i__5566__auto___18527 + 1;
      i__5566__auto___18527 = G__18528;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.button.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.button.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.button.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.button.cljs$lang$maxFixedArity = 1;
om.dom.button.cljs$lang$applyTo = function(seq18267) {
  var G__18268 = cljs.core.first.call(null, seq18267);
  var seq18267__$1 = cljs.core.next.call(null, seq18267);
  return om.dom.button.cljs$core$IFn$_invoke$arity$variadic(G__18268, seq18267__$1);
};
om.dom.canvas = function om$dom$canvas() {
  var args__5572__auto__ = [];
  var len__5565__auto___18529 = arguments.length;
  var i__5566__auto___18530 = 0;
  while (true) {
    if (i__5566__auto___18530 < len__5565__auto___18529) {
      args__5572__auto__.push(arguments[i__5566__auto___18530]);
      var G__18531 = i__5566__auto___18530 + 1;
      i__5566__auto___18530 = G__18531;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.canvas.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.canvas.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.canvas.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.canvas.cljs$lang$maxFixedArity = 1;
om.dom.canvas.cljs$lang$applyTo = function(seq18269) {
  var G__18270 = cljs.core.first.call(null, seq18269);
  var seq18269__$1 = cljs.core.next.call(null, seq18269);
  return om.dom.canvas.cljs$core$IFn$_invoke$arity$variadic(G__18270, seq18269__$1);
};
om.dom.caption = function om$dom$caption() {
  var args__5572__auto__ = [];
  var len__5565__auto___18532 = arguments.length;
  var i__5566__auto___18533 = 0;
  while (true) {
    if (i__5566__auto___18533 < len__5565__auto___18532) {
      args__5572__auto__.push(arguments[i__5566__auto___18533]);
      var G__18534 = i__5566__auto___18533 + 1;
      i__5566__auto___18533 = G__18534;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.caption.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.caption.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.caption.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.caption.cljs$lang$maxFixedArity = 1;
om.dom.caption.cljs$lang$applyTo = function(seq18271) {
  var G__18272 = cljs.core.first.call(null, seq18271);
  var seq18271__$1 = cljs.core.next.call(null, seq18271);
  return om.dom.caption.cljs$core$IFn$_invoke$arity$variadic(G__18272, seq18271__$1);
};
om.dom.cite = function om$dom$cite() {
  var args__5572__auto__ = [];
  var len__5565__auto___18535 = arguments.length;
  var i__5566__auto___18536 = 0;
  while (true) {
    if (i__5566__auto___18536 < len__5565__auto___18535) {
      args__5572__auto__.push(arguments[i__5566__auto___18536]);
      var G__18537 = i__5566__auto___18536 + 1;
      i__5566__auto___18536 = G__18537;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.cite.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.cite.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.cite.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.cite.cljs$lang$maxFixedArity = 1;
om.dom.cite.cljs$lang$applyTo = function(seq18273) {
  var G__18274 = cljs.core.first.call(null, seq18273);
  var seq18273__$1 = cljs.core.next.call(null, seq18273);
  return om.dom.cite.cljs$core$IFn$_invoke$arity$variadic(G__18274, seq18273__$1);
};
om.dom.code = function om$dom$code() {
  var args__5572__auto__ = [];
  var len__5565__auto___18538 = arguments.length;
  var i__5566__auto___18539 = 0;
  while (true) {
    if (i__5566__auto___18539 < len__5565__auto___18538) {
      args__5572__auto__.push(arguments[i__5566__auto___18539]);
      var G__18540 = i__5566__auto___18539 + 1;
      i__5566__auto___18539 = G__18540;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.code.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.code.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.code.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.code.cljs$lang$maxFixedArity = 1;
om.dom.code.cljs$lang$applyTo = function(seq18275) {
  var G__18276 = cljs.core.first.call(null, seq18275);
  var seq18275__$1 = cljs.core.next.call(null, seq18275);
  return om.dom.code.cljs$core$IFn$_invoke$arity$variadic(G__18276, seq18275__$1);
};
om.dom.col = function om$dom$col() {
  var args__5572__auto__ = [];
  var len__5565__auto___18541 = arguments.length;
  var i__5566__auto___18542 = 0;
  while (true) {
    if (i__5566__auto___18542 < len__5565__auto___18541) {
      args__5572__auto__.push(arguments[i__5566__auto___18542]);
      var G__18543 = i__5566__auto___18542 + 1;
      i__5566__auto___18542 = G__18543;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.col.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.col.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.col.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.col.cljs$lang$maxFixedArity = 1;
om.dom.col.cljs$lang$applyTo = function(seq18277) {
  var G__18278 = cljs.core.first.call(null, seq18277);
  var seq18277__$1 = cljs.core.next.call(null, seq18277);
  return om.dom.col.cljs$core$IFn$_invoke$arity$variadic(G__18278, seq18277__$1);
};
om.dom.colgroup = function om$dom$colgroup() {
  var args__5572__auto__ = [];
  var len__5565__auto___18544 = arguments.length;
  var i__5566__auto___18545 = 0;
  while (true) {
    if (i__5566__auto___18545 < len__5565__auto___18544) {
      args__5572__auto__.push(arguments[i__5566__auto___18545]);
      var G__18546 = i__5566__auto___18545 + 1;
      i__5566__auto___18545 = G__18546;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.colgroup.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.colgroup.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.colgroup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.colgroup.cljs$lang$maxFixedArity = 1;
om.dom.colgroup.cljs$lang$applyTo = function(seq18279) {
  var G__18280 = cljs.core.first.call(null, seq18279);
  var seq18279__$1 = cljs.core.next.call(null, seq18279);
  return om.dom.colgroup.cljs$core$IFn$_invoke$arity$variadic(G__18280, seq18279__$1);
};
om.dom.data = function om$dom$data() {
  var args__5572__auto__ = [];
  var len__5565__auto___18547 = arguments.length;
  var i__5566__auto___18548 = 0;
  while (true) {
    if (i__5566__auto___18548 < len__5565__auto___18547) {
      args__5572__auto__.push(arguments[i__5566__auto___18548]);
      var G__18549 = i__5566__auto___18548 + 1;
      i__5566__auto___18548 = G__18549;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.data.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.data.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.data.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.data.cljs$lang$maxFixedArity = 1;
om.dom.data.cljs$lang$applyTo = function(seq18281) {
  var G__18282 = cljs.core.first.call(null, seq18281);
  var seq18281__$1 = cljs.core.next.call(null, seq18281);
  return om.dom.data.cljs$core$IFn$_invoke$arity$variadic(G__18282, seq18281__$1);
};
om.dom.datalist = function om$dom$datalist() {
  var args__5572__auto__ = [];
  var len__5565__auto___18550 = arguments.length;
  var i__5566__auto___18551 = 0;
  while (true) {
    if (i__5566__auto___18551 < len__5565__auto___18550) {
      args__5572__auto__.push(arguments[i__5566__auto___18551]);
      var G__18552 = i__5566__auto___18551 + 1;
      i__5566__auto___18551 = G__18552;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.datalist.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.datalist.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.datalist.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.datalist.cljs$lang$maxFixedArity = 1;
om.dom.datalist.cljs$lang$applyTo = function(seq18283) {
  var G__18284 = cljs.core.first.call(null, seq18283);
  var seq18283__$1 = cljs.core.next.call(null, seq18283);
  return om.dom.datalist.cljs$core$IFn$_invoke$arity$variadic(G__18284, seq18283__$1);
};
om.dom.dd = function om$dom$dd() {
  var args__5572__auto__ = [];
  var len__5565__auto___18553 = arguments.length;
  var i__5566__auto___18554 = 0;
  while (true) {
    if (i__5566__auto___18554 < len__5565__auto___18553) {
      args__5572__auto__.push(arguments[i__5566__auto___18554]);
      var G__18555 = i__5566__auto___18554 + 1;
      i__5566__auto___18554 = G__18555;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.dd.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.dd.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.dd.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.dd.cljs$lang$maxFixedArity = 1;
om.dom.dd.cljs$lang$applyTo = function(seq18285) {
  var G__18286 = cljs.core.first.call(null, seq18285);
  var seq18285__$1 = cljs.core.next.call(null, seq18285);
  return om.dom.dd.cljs$core$IFn$_invoke$arity$variadic(G__18286, seq18285__$1);
};
om.dom.del = function om$dom$del() {
  var args__5572__auto__ = [];
  var len__5565__auto___18556 = arguments.length;
  var i__5566__auto___18557 = 0;
  while (true) {
    if (i__5566__auto___18557 < len__5565__auto___18556) {
      args__5572__auto__.push(arguments[i__5566__auto___18557]);
      var G__18558 = i__5566__auto___18557 + 1;
      i__5566__auto___18557 = G__18558;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.del.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.del.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.del.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.del.cljs$lang$maxFixedArity = 1;
om.dom.del.cljs$lang$applyTo = function(seq18287) {
  var G__18288 = cljs.core.first.call(null, seq18287);
  var seq18287__$1 = cljs.core.next.call(null, seq18287);
  return om.dom.del.cljs$core$IFn$_invoke$arity$variadic(G__18288, seq18287__$1);
};
om.dom.dfn = function om$dom$dfn() {
  var args__5572__auto__ = [];
  var len__5565__auto___18559 = arguments.length;
  var i__5566__auto___18560 = 0;
  while (true) {
    if (i__5566__auto___18560 < len__5565__auto___18559) {
      args__5572__auto__.push(arguments[i__5566__auto___18560]);
      var G__18561 = i__5566__auto___18560 + 1;
      i__5566__auto___18560 = G__18561;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.dfn.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.dfn.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.dfn.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.dfn.cljs$lang$maxFixedArity = 1;
om.dom.dfn.cljs$lang$applyTo = function(seq18289) {
  var G__18290 = cljs.core.first.call(null, seq18289);
  var seq18289__$1 = cljs.core.next.call(null, seq18289);
  return om.dom.dfn.cljs$core$IFn$_invoke$arity$variadic(G__18290, seq18289__$1);
};
om.dom.div = function om$dom$div() {
  var args__5572__auto__ = [];
  var len__5565__auto___18562 = arguments.length;
  var i__5566__auto___18563 = 0;
  while (true) {
    if (i__5566__auto___18563 < len__5565__auto___18562) {
      args__5572__auto__.push(arguments[i__5566__auto___18563]);
      var G__18564 = i__5566__auto___18563 + 1;
      i__5566__auto___18563 = G__18564;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.div.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.div.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.div.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.div.cljs$lang$maxFixedArity = 1;
om.dom.div.cljs$lang$applyTo = function(seq18291) {
  var G__18292 = cljs.core.first.call(null, seq18291);
  var seq18291__$1 = cljs.core.next.call(null, seq18291);
  return om.dom.div.cljs$core$IFn$_invoke$arity$variadic(G__18292, seq18291__$1);
};
om.dom.dl = function om$dom$dl() {
  var args__5572__auto__ = [];
  var len__5565__auto___18565 = arguments.length;
  var i__5566__auto___18566 = 0;
  while (true) {
    if (i__5566__auto___18566 < len__5565__auto___18565) {
      args__5572__auto__.push(arguments[i__5566__auto___18566]);
      var G__18567 = i__5566__auto___18566 + 1;
      i__5566__auto___18566 = G__18567;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.dl.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.dl.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.dl.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.dl.cljs$lang$maxFixedArity = 1;
om.dom.dl.cljs$lang$applyTo = function(seq18293) {
  var G__18294 = cljs.core.first.call(null, seq18293);
  var seq18293__$1 = cljs.core.next.call(null, seq18293);
  return om.dom.dl.cljs$core$IFn$_invoke$arity$variadic(G__18294, seq18293__$1);
};
om.dom.dt = function om$dom$dt() {
  var args__5572__auto__ = [];
  var len__5565__auto___18568 = arguments.length;
  var i__5566__auto___18569 = 0;
  while (true) {
    if (i__5566__auto___18569 < len__5565__auto___18568) {
      args__5572__auto__.push(arguments[i__5566__auto___18569]);
      var G__18570 = i__5566__auto___18569 + 1;
      i__5566__auto___18569 = G__18570;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.dt.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.dt.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.dt.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.dt.cljs$lang$maxFixedArity = 1;
om.dom.dt.cljs$lang$applyTo = function(seq18295) {
  var G__18296 = cljs.core.first.call(null, seq18295);
  var seq18295__$1 = cljs.core.next.call(null, seq18295);
  return om.dom.dt.cljs$core$IFn$_invoke$arity$variadic(G__18296, seq18295__$1);
};
om.dom.em = function om$dom$em() {
  var args__5572__auto__ = [];
  var len__5565__auto___18571 = arguments.length;
  var i__5566__auto___18572 = 0;
  while (true) {
    if (i__5566__auto___18572 < len__5565__auto___18571) {
      args__5572__auto__.push(arguments[i__5566__auto___18572]);
      var G__18573 = i__5566__auto___18572 + 1;
      i__5566__auto___18572 = G__18573;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.em.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.em.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.em.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.em.cljs$lang$maxFixedArity = 1;
om.dom.em.cljs$lang$applyTo = function(seq18297) {
  var G__18298 = cljs.core.first.call(null, seq18297);
  var seq18297__$1 = cljs.core.next.call(null, seq18297);
  return om.dom.em.cljs$core$IFn$_invoke$arity$variadic(G__18298, seq18297__$1);
};
om.dom.embed = function om$dom$embed() {
  var args__5572__auto__ = [];
  var len__5565__auto___18574 = arguments.length;
  var i__5566__auto___18575 = 0;
  while (true) {
    if (i__5566__auto___18575 < len__5565__auto___18574) {
      args__5572__auto__.push(arguments[i__5566__auto___18575]);
      var G__18576 = i__5566__auto___18575 + 1;
      i__5566__auto___18575 = G__18576;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.embed.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.embed.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.embed.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.embed.cljs$lang$maxFixedArity = 1;
om.dom.embed.cljs$lang$applyTo = function(seq18299) {
  var G__18300 = cljs.core.first.call(null, seq18299);
  var seq18299__$1 = cljs.core.next.call(null, seq18299);
  return om.dom.embed.cljs$core$IFn$_invoke$arity$variadic(G__18300, seq18299__$1);
};
om.dom.fieldset = function om$dom$fieldset() {
  var args__5572__auto__ = [];
  var len__5565__auto___18577 = arguments.length;
  var i__5566__auto___18578 = 0;
  while (true) {
    if (i__5566__auto___18578 < len__5565__auto___18577) {
      args__5572__auto__.push(arguments[i__5566__auto___18578]);
      var G__18579 = i__5566__auto___18578 + 1;
      i__5566__auto___18578 = G__18579;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.fieldset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.fieldset.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.fieldset.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.fieldset.cljs$lang$maxFixedArity = 1;
om.dom.fieldset.cljs$lang$applyTo = function(seq18303) {
  var G__18304 = cljs.core.first.call(null, seq18303);
  var seq18303__$1 = cljs.core.next.call(null, seq18303);
  return om.dom.fieldset.cljs$core$IFn$_invoke$arity$variadic(G__18304, seq18303__$1);
};
om.dom.figcaption = function om$dom$figcaption() {
  var args__5572__auto__ = [];
  var len__5565__auto___18580 = arguments.length;
  var i__5566__auto___18581 = 0;
  while (true) {
    if (i__5566__auto___18581 < len__5565__auto___18580) {
      args__5572__auto__.push(arguments[i__5566__auto___18581]);
      var G__18582 = i__5566__auto___18581 + 1;
      i__5566__auto___18581 = G__18582;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.figcaption.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.figcaption.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.figcaption.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.figcaption.cljs$lang$maxFixedArity = 1;
om.dom.figcaption.cljs$lang$applyTo = function(seq18305) {
  var G__18306 = cljs.core.first.call(null, seq18305);
  var seq18305__$1 = cljs.core.next.call(null, seq18305);
  return om.dom.figcaption.cljs$core$IFn$_invoke$arity$variadic(G__18306, seq18305__$1);
};
om.dom.figure = function om$dom$figure() {
  var args__5572__auto__ = [];
  var len__5565__auto___18583 = arguments.length;
  var i__5566__auto___18584 = 0;
  while (true) {
    if (i__5566__auto___18584 < len__5565__auto___18583) {
      args__5572__auto__.push(arguments[i__5566__auto___18584]);
      var G__18585 = i__5566__auto___18584 + 1;
      i__5566__auto___18584 = G__18585;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.figure.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.figure.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.figure.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.figure.cljs$lang$maxFixedArity = 1;
om.dom.figure.cljs$lang$applyTo = function(seq18307) {
  var G__18308 = cljs.core.first.call(null, seq18307);
  var seq18307__$1 = cljs.core.next.call(null, seq18307);
  return om.dom.figure.cljs$core$IFn$_invoke$arity$variadic(G__18308, seq18307__$1);
};
om.dom.footer = function om$dom$footer() {
  var args__5572__auto__ = [];
  var len__5565__auto___18586 = arguments.length;
  var i__5566__auto___18587 = 0;
  while (true) {
    if (i__5566__auto___18587 < len__5565__auto___18586) {
      args__5572__auto__.push(arguments[i__5566__auto___18587]);
      var G__18588 = i__5566__auto___18587 + 1;
      i__5566__auto___18587 = G__18588;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.footer.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.footer.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.footer.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.footer.cljs$lang$maxFixedArity = 1;
om.dom.footer.cljs$lang$applyTo = function(seq18309) {
  var G__18310 = cljs.core.first.call(null, seq18309);
  var seq18309__$1 = cljs.core.next.call(null, seq18309);
  return om.dom.footer.cljs$core$IFn$_invoke$arity$variadic(G__18310, seq18309__$1);
};
om.dom.form = function om$dom$form() {
  var args__5572__auto__ = [];
  var len__5565__auto___18589 = arguments.length;
  var i__5566__auto___18590 = 0;
  while (true) {
    if (i__5566__auto___18590 < len__5565__auto___18589) {
      args__5572__auto__.push(arguments[i__5566__auto___18590]);
      var G__18591 = i__5566__auto___18590 + 1;
      i__5566__auto___18590 = G__18591;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.form.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.form.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.form.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.form.cljs$lang$maxFixedArity = 1;
om.dom.form.cljs$lang$applyTo = function(seq18311) {
  var G__18312 = cljs.core.first.call(null, seq18311);
  var seq18311__$1 = cljs.core.next.call(null, seq18311);
  return om.dom.form.cljs$core$IFn$_invoke$arity$variadic(G__18312, seq18311__$1);
};
om.dom.h1 = function om$dom$h1() {
  var args__5572__auto__ = [];
  var len__5565__auto___18592 = arguments.length;
  var i__5566__auto___18593 = 0;
  while (true) {
    if (i__5566__auto___18593 < len__5565__auto___18592) {
      args__5572__auto__.push(arguments[i__5566__auto___18593]);
      var G__18594 = i__5566__auto___18593 + 1;
      i__5566__auto___18593 = G__18594;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.h1.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.h1.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.h1.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.h1.cljs$lang$maxFixedArity = 1;
om.dom.h1.cljs$lang$applyTo = function(seq18313) {
  var G__18314 = cljs.core.first.call(null, seq18313);
  var seq18313__$1 = cljs.core.next.call(null, seq18313);
  return om.dom.h1.cljs$core$IFn$_invoke$arity$variadic(G__18314, seq18313__$1);
};
om.dom.h2 = function om$dom$h2() {
  var args__5572__auto__ = [];
  var len__5565__auto___18595 = arguments.length;
  var i__5566__auto___18596 = 0;
  while (true) {
    if (i__5566__auto___18596 < len__5565__auto___18595) {
      args__5572__auto__.push(arguments[i__5566__auto___18596]);
      var G__18597 = i__5566__auto___18596 + 1;
      i__5566__auto___18596 = G__18597;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.h2.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.h2.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.h2.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.h2.cljs$lang$maxFixedArity = 1;
om.dom.h2.cljs$lang$applyTo = function(seq18315) {
  var G__18316 = cljs.core.first.call(null, seq18315);
  var seq18315__$1 = cljs.core.next.call(null, seq18315);
  return om.dom.h2.cljs$core$IFn$_invoke$arity$variadic(G__18316, seq18315__$1);
};
om.dom.h3 = function om$dom$h3() {
  var args__5572__auto__ = [];
  var len__5565__auto___18598 = arguments.length;
  var i__5566__auto___18599 = 0;
  while (true) {
    if (i__5566__auto___18599 < len__5565__auto___18598) {
      args__5572__auto__.push(arguments[i__5566__auto___18599]);
      var G__18600 = i__5566__auto___18599 + 1;
      i__5566__auto___18599 = G__18600;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.h3.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.h3.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.h3.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.h3.cljs$lang$maxFixedArity = 1;
om.dom.h3.cljs$lang$applyTo = function(seq18317) {
  var G__18318 = cljs.core.first.call(null, seq18317);
  var seq18317__$1 = cljs.core.next.call(null, seq18317);
  return om.dom.h3.cljs$core$IFn$_invoke$arity$variadic(G__18318, seq18317__$1);
};
om.dom.h4 = function om$dom$h4() {
  var args__5572__auto__ = [];
  var len__5565__auto___18601 = arguments.length;
  var i__5566__auto___18602 = 0;
  while (true) {
    if (i__5566__auto___18602 < len__5565__auto___18601) {
      args__5572__auto__.push(arguments[i__5566__auto___18602]);
      var G__18603 = i__5566__auto___18602 + 1;
      i__5566__auto___18602 = G__18603;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.h4.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.h4.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.h4.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.h4.cljs$lang$maxFixedArity = 1;
om.dom.h4.cljs$lang$applyTo = function(seq18319) {
  var G__18320 = cljs.core.first.call(null, seq18319);
  var seq18319__$1 = cljs.core.next.call(null, seq18319);
  return om.dom.h4.cljs$core$IFn$_invoke$arity$variadic(G__18320, seq18319__$1);
};
om.dom.h5 = function om$dom$h5() {
  var args__5572__auto__ = [];
  var len__5565__auto___18604 = arguments.length;
  var i__5566__auto___18605 = 0;
  while (true) {
    if (i__5566__auto___18605 < len__5565__auto___18604) {
      args__5572__auto__.push(arguments[i__5566__auto___18605]);
      var G__18606 = i__5566__auto___18605 + 1;
      i__5566__auto___18605 = G__18606;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.h5.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.h5.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.h5.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.h5.cljs$lang$maxFixedArity = 1;
om.dom.h5.cljs$lang$applyTo = function(seq18321) {
  var G__18322 = cljs.core.first.call(null, seq18321);
  var seq18321__$1 = cljs.core.next.call(null, seq18321);
  return om.dom.h5.cljs$core$IFn$_invoke$arity$variadic(G__18322, seq18321__$1);
};
om.dom.h6 = function om$dom$h6() {
  var args__5572__auto__ = [];
  var len__5565__auto___18607 = arguments.length;
  var i__5566__auto___18608 = 0;
  while (true) {
    if (i__5566__auto___18608 < len__5565__auto___18607) {
      args__5572__auto__.push(arguments[i__5566__auto___18608]);
      var G__18609 = i__5566__auto___18608 + 1;
      i__5566__auto___18608 = G__18609;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.h6.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.h6.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.h6.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.h6.cljs$lang$maxFixedArity = 1;
om.dom.h6.cljs$lang$applyTo = function(seq18323) {
  var G__18324 = cljs.core.first.call(null, seq18323);
  var seq18323__$1 = cljs.core.next.call(null, seq18323);
  return om.dom.h6.cljs$core$IFn$_invoke$arity$variadic(G__18324, seq18323__$1);
};
om.dom.head = function om$dom$head() {
  var args__5572__auto__ = [];
  var len__5565__auto___18610 = arguments.length;
  var i__5566__auto___18611 = 0;
  while (true) {
    if (i__5566__auto___18611 < len__5565__auto___18610) {
      args__5572__auto__.push(arguments[i__5566__auto___18611]);
      var G__18612 = i__5566__auto___18611 + 1;
      i__5566__auto___18611 = G__18612;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.head.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.head.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.head.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.head.cljs$lang$maxFixedArity = 1;
om.dom.head.cljs$lang$applyTo = function(seq18325) {
  var G__18326 = cljs.core.first.call(null, seq18325);
  var seq18325__$1 = cljs.core.next.call(null, seq18325);
  return om.dom.head.cljs$core$IFn$_invoke$arity$variadic(G__18326, seq18325__$1);
};
om.dom.header = function om$dom$header() {
  var args__5572__auto__ = [];
  var len__5565__auto___18613 = arguments.length;
  var i__5566__auto___18614 = 0;
  while (true) {
    if (i__5566__auto___18614 < len__5565__auto___18613) {
      args__5572__auto__.push(arguments[i__5566__auto___18614]);
      var G__18615 = i__5566__auto___18614 + 1;
      i__5566__auto___18614 = G__18615;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.header.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.header.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.header.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.header.cljs$lang$maxFixedArity = 1;
om.dom.header.cljs$lang$applyTo = function(seq18327) {
  var G__18328 = cljs.core.first.call(null, seq18327);
  var seq18327__$1 = cljs.core.next.call(null, seq18327);
  return om.dom.header.cljs$core$IFn$_invoke$arity$variadic(G__18328, seq18327__$1);
};
om.dom.hr = function om$dom$hr() {
  var args__5572__auto__ = [];
  var len__5565__auto___18616 = arguments.length;
  var i__5566__auto___18617 = 0;
  while (true) {
    if (i__5566__auto___18617 < len__5565__auto___18616) {
      args__5572__auto__.push(arguments[i__5566__auto___18617]);
      var G__18618 = i__5566__auto___18617 + 1;
      i__5566__auto___18617 = G__18618;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.hr.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.hr.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.hr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.hr.cljs$lang$maxFixedArity = 1;
om.dom.hr.cljs$lang$applyTo = function(seq18329) {
  var G__18330 = cljs.core.first.call(null, seq18329);
  var seq18329__$1 = cljs.core.next.call(null, seq18329);
  return om.dom.hr.cljs$core$IFn$_invoke$arity$variadic(G__18330, seq18329__$1);
};
om.dom.html = function om$dom$html() {
  var args__5572__auto__ = [];
  var len__5565__auto___18619 = arguments.length;
  var i__5566__auto___18620 = 0;
  while (true) {
    if (i__5566__auto___18620 < len__5565__auto___18619) {
      args__5572__auto__.push(arguments[i__5566__auto___18620]);
      var G__18621 = i__5566__auto___18620 + 1;
      i__5566__auto___18620 = G__18621;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.html.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.html.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.html.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.html.cljs$lang$maxFixedArity = 1;
om.dom.html.cljs$lang$applyTo = function(seq18331) {
  var G__18332 = cljs.core.first.call(null, seq18331);
  var seq18331__$1 = cljs.core.next.call(null, seq18331);
  return om.dom.html.cljs$core$IFn$_invoke$arity$variadic(G__18332, seq18331__$1);
};
om.dom.i = function om$dom$i() {
  var args__5572__auto__ = [];
  var len__5565__auto___18622 = arguments.length;
  var i__5566__auto___18623 = 0;
  while (true) {
    if (i__5566__auto___18623 < len__5565__auto___18622) {
      args__5572__auto__.push(arguments[i__5566__auto___18623]);
      var G__18624 = i__5566__auto___18623 + 1;
      i__5566__auto___18623 = G__18624;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.i.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.i.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.i.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.i.cljs$lang$maxFixedArity = 1;
om.dom.i.cljs$lang$applyTo = function(seq18333) {
  var G__18334 = cljs.core.first.call(null, seq18333);
  var seq18333__$1 = cljs.core.next.call(null, seq18333);
  return om.dom.i.cljs$core$IFn$_invoke$arity$variadic(G__18334, seq18333__$1);
};
om.dom.iframe = function om$dom$iframe() {
  var args__5572__auto__ = [];
  var len__5565__auto___18625 = arguments.length;
  var i__5566__auto___18626 = 0;
  while (true) {
    if (i__5566__auto___18626 < len__5565__auto___18625) {
      args__5572__auto__.push(arguments[i__5566__auto___18626]);
      var G__18627 = i__5566__auto___18626 + 1;
      i__5566__auto___18626 = G__18627;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.iframe.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.iframe.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.iframe.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.iframe.cljs$lang$maxFixedArity = 1;
om.dom.iframe.cljs$lang$applyTo = function(seq18335) {
  var G__18336 = cljs.core.first.call(null, seq18335);
  var seq18335__$1 = cljs.core.next.call(null, seq18335);
  return om.dom.iframe.cljs$core$IFn$_invoke$arity$variadic(G__18336, seq18335__$1);
};
om.dom.img = function om$dom$img() {
  var args__5572__auto__ = [];
  var len__5565__auto___18628 = arguments.length;
  var i__5566__auto___18629 = 0;
  while (true) {
    if (i__5566__auto___18629 < len__5565__auto___18628) {
      args__5572__auto__.push(arguments[i__5566__auto___18629]);
      var G__18630 = i__5566__auto___18629 + 1;
      i__5566__auto___18629 = G__18630;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.img.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.img.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.img.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.img.cljs$lang$maxFixedArity = 1;
om.dom.img.cljs$lang$applyTo = function(seq18337) {
  var G__18338 = cljs.core.first.call(null, seq18337);
  var seq18337__$1 = cljs.core.next.call(null, seq18337);
  return om.dom.img.cljs$core$IFn$_invoke$arity$variadic(G__18338, seq18337__$1);
};
om.dom.ins = function om$dom$ins() {
  var args__5572__auto__ = [];
  var len__5565__auto___18631 = arguments.length;
  var i__5566__auto___18632 = 0;
  while (true) {
    if (i__5566__auto___18632 < len__5565__auto___18631) {
      args__5572__auto__.push(arguments[i__5566__auto___18632]);
      var G__18633 = i__5566__auto___18632 + 1;
      i__5566__auto___18632 = G__18633;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.ins.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.ins.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.ins.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.ins.cljs$lang$maxFixedArity = 1;
om.dom.ins.cljs$lang$applyTo = function(seq18339) {
  var G__18340 = cljs.core.first.call(null, seq18339);
  var seq18339__$1 = cljs.core.next.call(null, seq18339);
  return om.dom.ins.cljs$core$IFn$_invoke$arity$variadic(G__18340, seq18339__$1);
};
om.dom.kbd = function om$dom$kbd() {
  var args__5572__auto__ = [];
  var len__5565__auto___18634 = arguments.length;
  var i__5566__auto___18635 = 0;
  while (true) {
    if (i__5566__auto___18635 < len__5565__auto___18634) {
      args__5572__auto__.push(arguments[i__5566__auto___18635]);
      var G__18636 = i__5566__auto___18635 + 1;
      i__5566__auto___18635 = G__18636;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.kbd.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.kbd.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.kbd.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.kbd.cljs$lang$maxFixedArity = 1;
om.dom.kbd.cljs$lang$applyTo = function(seq18341) {
  var G__18342 = cljs.core.first.call(null, seq18341);
  var seq18341__$1 = cljs.core.next.call(null, seq18341);
  return om.dom.kbd.cljs$core$IFn$_invoke$arity$variadic(G__18342, seq18341__$1);
};
om.dom.keygen = function om$dom$keygen() {
  var args__5572__auto__ = [];
  var len__5565__auto___18637 = arguments.length;
  var i__5566__auto___18638 = 0;
  while (true) {
    if (i__5566__auto___18638 < len__5565__auto___18637) {
      args__5572__auto__.push(arguments[i__5566__auto___18638]);
      var G__18639 = i__5566__auto___18638 + 1;
      i__5566__auto___18638 = G__18639;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.keygen.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.keygen.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.keygen.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.keygen.cljs$lang$maxFixedArity = 1;
om.dom.keygen.cljs$lang$applyTo = function(seq18343) {
  var G__18344 = cljs.core.first.call(null, seq18343);
  var seq18343__$1 = cljs.core.next.call(null, seq18343);
  return om.dom.keygen.cljs$core$IFn$_invoke$arity$variadic(G__18344, seq18343__$1);
};
om.dom.label = function om$dom$label() {
  var args__5572__auto__ = [];
  var len__5565__auto___18640 = arguments.length;
  var i__5566__auto___18641 = 0;
  while (true) {
    if (i__5566__auto___18641 < len__5565__auto___18640) {
      args__5572__auto__.push(arguments[i__5566__auto___18641]);
      var G__18642 = i__5566__auto___18641 + 1;
      i__5566__auto___18641 = G__18642;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.label.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.label.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.label.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.label.cljs$lang$maxFixedArity = 1;
om.dom.label.cljs$lang$applyTo = function(seq18345) {
  var G__18346 = cljs.core.first.call(null, seq18345);
  var seq18345__$1 = cljs.core.next.call(null, seq18345);
  return om.dom.label.cljs$core$IFn$_invoke$arity$variadic(G__18346, seq18345__$1);
};
om.dom.legend = function om$dom$legend() {
  var args__5572__auto__ = [];
  var len__5565__auto___18643 = arguments.length;
  var i__5566__auto___18644 = 0;
  while (true) {
    if (i__5566__auto___18644 < len__5565__auto___18643) {
      args__5572__auto__.push(arguments[i__5566__auto___18644]);
      var G__18645 = i__5566__auto___18644 + 1;
      i__5566__auto___18644 = G__18645;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.legend.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.legend.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.legend.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.legend.cljs$lang$maxFixedArity = 1;
om.dom.legend.cljs$lang$applyTo = function(seq18347) {
  var G__18348 = cljs.core.first.call(null, seq18347);
  var seq18347__$1 = cljs.core.next.call(null, seq18347);
  return om.dom.legend.cljs$core$IFn$_invoke$arity$variadic(G__18348, seq18347__$1);
};
om.dom.li = function om$dom$li() {
  var args__5572__auto__ = [];
  var len__5565__auto___18646 = arguments.length;
  var i__5566__auto___18647 = 0;
  while (true) {
    if (i__5566__auto___18647 < len__5565__auto___18646) {
      args__5572__auto__.push(arguments[i__5566__auto___18647]);
      var G__18648 = i__5566__auto___18647 + 1;
      i__5566__auto___18647 = G__18648;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.li.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.li.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.li.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.li.cljs$lang$maxFixedArity = 1;
om.dom.li.cljs$lang$applyTo = function(seq18349) {
  var G__18350 = cljs.core.first.call(null, seq18349);
  var seq18349__$1 = cljs.core.next.call(null, seq18349);
  return om.dom.li.cljs$core$IFn$_invoke$arity$variadic(G__18350, seq18349__$1);
};
om.dom.link = function om$dom$link() {
  var args__5572__auto__ = [];
  var len__5565__auto___18649 = arguments.length;
  var i__5566__auto___18650 = 0;
  while (true) {
    if (i__5566__auto___18650 < len__5565__auto___18649) {
      args__5572__auto__.push(arguments[i__5566__auto___18650]);
      var G__18651 = i__5566__auto___18650 + 1;
      i__5566__auto___18650 = G__18651;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.link.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.link.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.link.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.link.cljs$lang$maxFixedArity = 1;
om.dom.link.cljs$lang$applyTo = function(seq18351) {
  var G__18352 = cljs.core.first.call(null, seq18351);
  var seq18351__$1 = cljs.core.next.call(null, seq18351);
  return om.dom.link.cljs$core$IFn$_invoke$arity$variadic(G__18352, seq18351__$1);
};
om.dom.main = function om$dom$main() {
  var args__5572__auto__ = [];
  var len__5565__auto___18652 = arguments.length;
  var i__5566__auto___18653 = 0;
  while (true) {
    if (i__5566__auto___18653 < len__5565__auto___18652) {
      args__5572__auto__.push(arguments[i__5566__auto___18653]);
      var G__18654 = i__5566__auto___18653 + 1;
      i__5566__auto___18653 = G__18654;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.main.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.main.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.main.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.main.cljs$lang$maxFixedArity = 1;
om.dom.main.cljs$lang$applyTo = function(seq18353) {
  var G__18354 = cljs.core.first.call(null, seq18353);
  var seq18353__$1 = cljs.core.next.call(null, seq18353);
  return om.dom.main.cljs$core$IFn$_invoke$arity$variadic(G__18354, seq18353__$1);
};
om.dom.map = function om$dom$map() {
  var args__5572__auto__ = [];
  var len__5565__auto___18655 = arguments.length;
  var i__5566__auto___18656 = 0;
  while (true) {
    if (i__5566__auto___18656 < len__5565__auto___18655) {
      args__5572__auto__.push(arguments[i__5566__auto___18656]);
      var G__18657 = i__5566__auto___18656 + 1;
      i__5566__auto___18656 = G__18657;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.map.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.map.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.map.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.map.cljs$lang$maxFixedArity = 1;
om.dom.map.cljs$lang$applyTo = function(seq18355) {
  var G__18356 = cljs.core.first.call(null, seq18355);
  var seq18355__$1 = cljs.core.next.call(null, seq18355);
  return om.dom.map.cljs$core$IFn$_invoke$arity$variadic(G__18356, seq18355__$1);
};
om.dom.mark = function om$dom$mark() {
  var args__5572__auto__ = [];
  var len__5565__auto___18658 = arguments.length;
  var i__5566__auto___18659 = 0;
  while (true) {
    if (i__5566__auto___18659 < len__5565__auto___18658) {
      args__5572__auto__.push(arguments[i__5566__auto___18659]);
      var G__18660 = i__5566__auto___18659 + 1;
      i__5566__auto___18659 = G__18660;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.mark.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.mark.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.mark.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.mark.cljs$lang$maxFixedArity = 1;
om.dom.mark.cljs$lang$applyTo = function(seq18357) {
  var G__18358 = cljs.core.first.call(null, seq18357);
  var seq18357__$1 = cljs.core.next.call(null, seq18357);
  return om.dom.mark.cljs$core$IFn$_invoke$arity$variadic(G__18358, seq18357__$1);
};
om.dom.marquee = function om$dom$marquee() {
  var args__5572__auto__ = [];
  var len__5565__auto___18661 = arguments.length;
  var i__5566__auto___18662 = 0;
  while (true) {
    if (i__5566__auto___18662 < len__5565__auto___18661) {
      args__5572__auto__.push(arguments[i__5566__auto___18662]);
      var G__18663 = i__5566__auto___18662 + 1;
      i__5566__auto___18662 = G__18663;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.marquee.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.marquee.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.marquee.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.marquee.cljs$lang$maxFixedArity = 1;
om.dom.marquee.cljs$lang$applyTo = function(seq18359) {
  var G__18360 = cljs.core.first.call(null, seq18359);
  var seq18359__$1 = cljs.core.next.call(null, seq18359);
  return om.dom.marquee.cljs$core$IFn$_invoke$arity$variadic(G__18360, seq18359__$1);
};
om.dom.menu = function om$dom$menu() {
  var args__5572__auto__ = [];
  var len__5565__auto___18664 = arguments.length;
  var i__5566__auto___18665 = 0;
  while (true) {
    if (i__5566__auto___18665 < len__5565__auto___18664) {
      args__5572__auto__.push(arguments[i__5566__auto___18665]);
      var G__18666 = i__5566__auto___18665 + 1;
      i__5566__auto___18665 = G__18666;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.menu.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.menu.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.menu.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.menu.cljs$lang$maxFixedArity = 1;
om.dom.menu.cljs$lang$applyTo = function(seq18361) {
  var G__18362 = cljs.core.first.call(null, seq18361);
  var seq18361__$1 = cljs.core.next.call(null, seq18361);
  return om.dom.menu.cljs$core$IFn$_invoke$arity$variadic(G__18362, seq18361__$1);
};
om.dom.menuitem = function om$dom$menuitem() {
  var args__5572__auto__ = [];
  var len__5565__auto___18667 = arguments.length;
  var i__5566__auto___18668 = 0;
  while (true) {
    if (i__5566__auto___18668 < len__5565__auto___18667) {
      args__5572__auto__.push(arguments[i__5566__auto___18668]);
      var G__18669 = i__5566__auto___18668 + 1;
      i__5566__auto___18668 = G__18669;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.menuitem.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.menuitem.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.menuitem.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.menuitem.cljs$lang$maxFixedArity = 1;
om.dom.menuitem.cljs$lang$applyTo = function(seq18363) {
  var G__18364 = cljs.core.first.call(null, seq18363);
  var seq18363__$1 = cljs.core.next.call(null, seq18363);
  return om.dom.menuitem.cljs$core$IFn$_invoke$arity$variadic(G__18364, seq18363__$1);
};
om.dom.meta = function om$dom$meta() {
  var args__5572__auto__ = [];
  var len__5565__auto___18670 = arguments.length;
  var i__5566__auto___18671 = 0;
  while (true) {
    if (i__5566__auto___18671 < len__5565__auto___18670) {
      args__5572__auto__.push(arguments[i__5566__auto___18671]);
      var G__18672 = i__5566__auto___18671 + 1;
      i__5566__auto___18671 = G__18672;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.meta.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.meta.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.meta.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.meta.cljs$lang$maxFixedArity = 1;
om.dom.meta.cljs$lang$applyTo = function(seq18365) {
  var G__18366 = cljs.core.first.call(null, seq18365);
  var seq18365__$1 = cljs.core.next.call(null, seq18365);
  return om.dom.meta.cljs$core$IFn$_invoke$arity$variadic(G__18366, seq18365__$1);
};
om.dom.meter = function om$dom$meter() {
  var args__5572__auto__ = [];
  var len__5565__auto___18673 = arguments.length;
  var i__5566__auto___18674 = 0;
  while (true) {
    if (i__5566__auto___18674 < len__5565__auto___18673) {
      args__5572__auto__.push(arguments[i__5566__auto___18674]);
      var G__18675 = i__5566__auto___18674 + 1;
      i__5566__auto___18674 = G__18675;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.meter.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.meter.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.meter.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.meter.cljs$lang$maxFixedArity = 1;
om.dom.meter.cljs$lang$applyTo = function(seq18367) {
  var G__18368 = cljs.core.first.call(null, seq18367);
  var seq18367__$1 = cljs.core.next.call(null, seq18367);
  return om.dom.meter.cljs$core$IFn$_invoke$arity$variadic(G__18368, seq18367__$1);
};
om.dom.nav = function om$dom$nav() {
  var args__5572__auto__ = [];
  var len__5565__auto___18676 = arguments.length;
  var i__5566__auto___18677 = 0;
  while (true) {
    if (i__5566__auto___18677 < len__5565__auto___18676) {
      args__5572__auto__.push(arguments[i__5566__auto___18677]);
      var G__18678 = i__5566__auto___18677 + 1;
      i__5566__auto___18677 = G__18678;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.nav.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.nav.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.nav.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.nav.cljs$lang$maxFixedArity = 1;
om.dom.nav.cljs$lang$applyTo = function(seq18369) {
  var G__18370 = cljs.core.first.call(null, seq18369);
  var seq18369__$1 = cljs.core.next.call(null, seq18369);
  return om.dom.nav.cljs$core$IFn$_invoke$arity$variadic(G__18370, seq18369__$1);
};
om.dom.noscript = function om$dom$noscript() {
  var args__5572__auto__ = [];
  var len__5565__auto___18679 = arguments.length;
  var i__5566__auto___18680 = 0;
  while (true) {
    if (i__5566__auto___18680 < len__5565__auto___18679) {
      args__5572__auto__.push(arguments[i__5566__auto___18680]);
      var G__18681 = i__5566__auto___18680 + 1;
      i__5566__auto___18680 = G__18681;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.noscript.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.noscript.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.noscript.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.noscript.cljs$lang$maxFixedArity = 1;
om.dom.noscript.cljs$lang$applyTo = function(seq18371) {
  var G__18372 = cljs.core.first.call(null, seq18371);
  var seq18371__$1 = cljs.core.next.call(null, seq18371);
  return om.dom.noscript.cljs$core$IFn$_invoke$arity$variadic(G__18372, seq18371__$1);
};
om.dom.object = function om$dom$object() {
  var args__5572__auto__ = [];
  var len__5565__auto___18682 = arguments.length;
  var i__5566__auto___18683 = 0;
  while (true) {
    if (i__5566__auto___18683 < len__5565__auto___18682) {
      args__5572__auto__.push(arguments[i__5566__auto___18683]);
      var G__18684 = i__5566__auto___18683 + 1;
      i__5566__auto___18683 = G__18684;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.object.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.object.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.object.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.object.cljs$lang$maxFixedArity = 1;
om.dom.object.cljs$lang$applyTo = function(seq18373) {
  var G__18374 = cljs.core.first.call(null, seq18373);
  var seq18373__$1 = cljs.core.next.call(null, seq18373);
  return om.dom.object.cljs$core$IFn$_invoke$arity$variadic(G__18374, seq18373__$1);
};
om.dom.ol = function om$dom$ol() {
  var args__5572__auto__ = [];
  var len__5565__auto___18685 = arguments.length;
  var i__5566__auto___18686 = 0;
  while (true) {
    if (i__5566__auto___18686 < len__5565__auto___18685) {
      args__5572__auto__.push(arguments[i__5566__auto___18686]);
      var G__18687 = i__5566__auto___18686 + 1;
      i__5566__auto___18686 = G__18687;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.ol.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.ol.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.ol.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.ol.cljs$lang$maxFixedArity = 1;
om.dom.ol.cljs$lang$applyTo = function(seq18375) {
  var G__18376 = cljs.core.first.call(null, seq18375);
  var seq18375__$1 = cljs.core.next.call(null, seq18375);
  return om.dom.ol.cljs$core$IFn$_invoke$arity$variadic(G__18376, seq18375__$1);
};
om.dom.optgroup = function om$dom$optgroup() {
  var args__5572__auto__ = [];
  var len__5565__auto___18688 = arguments.length;
  var i__5566__auto___18689 = 0;
  while (true) {
    if (i__5566__auto___18689 < len__5565__auto___18688) {
      args__5572__auto__.push(arguments[i__5566__auto___18689]);
      var G__18690 = i__5566__auto___18689 + 1;
      i__5566__auto___18689 = G__18690;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.optgroup.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.optgroup.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.optgroup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.optgroup.cljs$lang$maxFixedArity = 1;
om.dom.optgroup.cljs$lang$applyTo = function(seq18377) {
  var G__18378 = cljs.core.first.call(null, seq18377);
  var seq18377__$1 = cljs.core.next.call(null, seq18377);
  return om.dom.optgroup.cljs$core$IFn$_invoke$arity$variadic(G__18378, seq18377__$1);
};
om.dom.output = function om$dom$output() {
  var args__5572__auto__ = [];
  var len__5565__auto___18691 = arguments.length;
  var i__5566__auto___18692 = 0;
  while (true) {
    if (i__5566__auto___18692 < len__5565__auto___18691) {
      args__5572__auto__.push(arguments[i__5566__auto___18692]);
      var G__18693 = i__5566__auto___18692 + 1;
      i__5566__auto___18692 = G__18693;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.output.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.output.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.output.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.output.cljs$lang$maxFixedArity = 1;
om.dom.output.cljs$lang$applyTo = function(seq18379) {
  var G__18380 = cljs.core.first.call(null, seq18379);
  var seq18379__$1 = cljs.core.next.call(null, seq18379);
  return om.dom.output.cljs$core$IFn$_invoke$arity$variadic(G__18380, seq18379__$1);
};
om.dom.p = function om$dom$p() {
  var args__5572__auto__ = [];
  var len__5565__auto___18694 = arguments.length;
  var i__5566__auto___18695 = 0;
  while (true) {
    if (i__5566__auto___18695 < len__5565__auto___18694) {
      args__5572__auto__.push(arguments[i__5566__auto___18695]);
      var G__18696 = i__5566__auto___18695 + 1;
      i__5566__auto___18695 = G__18696;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.p.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.p.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.p.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.p.cljs$lang$maxFixedArity = 1;
om.dom.p.cljs$lang$applyTo = function(seq18381) {
  var G__18382 = cljs.core.first.call(null, seq18381);
  var seq18381__$1 = cljs.core.next.call(null, seq18381);
  return om.dom.p.cljs$core$IFn$_invoke$arity$variadic(G__18382, seq18381__$1);
};
om.dom.param = function om$dom$param() {
  var args__5572__auto__ = [];
  var len__5565__auto___18697 = arguments.length;
  var i__5566__auto___18698 = 0;
  while (true) {
    if (i__5566__auto___18698 < len__5565__auto___18697) {
      args__5572__auto__.push(arguments[i__5566__auto___18698]);
      var G__18699 = i__5566__auto___18698 + 1;
      i__5566__auto___18698 = G__18699;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.param.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.param.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.param.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.param.cljs$lang$maxFixedArity = 1;
om.dom.param.cljs$lang$applyTo = function(seq18383) {
  var G__18384 = cljs.core.first.call(null, seq18383);
  var seq18383__$1 = cljs.core.next.call(null, seq18383);
  return om.dom.param.cljs$core$IFn$_invoke$arity$variadic(G__18384, seq18383__$1);
};
om.dom.pre = function om$dom$pre() {
  var args__5572__auto__ = [];
  var len__5565__auto___18700 = arguments.length;
  var i__5566__auto___18701 = 0;
  while (true) {
    if (i__5566__auto___18701 < len__5565__auto___18700) {
      args__5572__auto__.push(arguments[i__5566__auto___18701]);
      var G__18702 = i__5566__auto___18701 + 1;
      i__5566__auto___18701 = G__18702;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.pre.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.pre.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.pre.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.pre.cljs$lang$maxFixedArity = 1;
om.dom.pre.cljs$lang$applyTo = function(seq18385) {
  var G__18386 = cljs.core.first.call(null, seq18385);
  var seq18385__$1 = cljs.core.next.call(null, seq18385);
  return om.dom.pre.cljs$core$IFn$_invoke$arity$variadic(G__18386, seq18385__$1);
};
om.dom.progress = function om$dom$progress() {
  var args__5572__auto__ = [];
  var len__5565__auto___18703 = arguments.length;
  var i__5566__auto___18704 = 0;
  while (true) {
    if (i__5566__auto___18704 < len__5565__auto___18703) {
      args__5572__auto__.push(arguments[i__5566__auto___18704]);
      var G__18705 = i__5566__auto___18704 + 1;
      i__5566__auto___18704 = G__18705;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.progress.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.progress.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.progress.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.progress.cljs$lang$maxFixedArity = 1;
om.dom.progress.cljs$lang$applyTo = function(seq18387) {
  var G__18388 = cljs.core.first.call(null, seq18387);
  var seq18387__$1 = cljs.core.next.call(null, seq18387);
  return om.dom.progress.cljs$core$IFn$_invoke$arity$variadic(G__18388, seq18387__$1);
};
om.dom.q = function om$dom$q() {
  var args__5572__auto__ = [];
  var len__5565__auto___18706 = arguments.length;
  var i__5566__auto___18707 = 0;
  while (true) {
    if (i__5566__auto___18707 < len__5565__auto___18706) {
      args__5572__auto__.push(arguments[i__5566__auto___18707]);
      var G__18708 = i__5566__auto___18707 + 1;
      i__5566__auto___18707 = G__18708;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.q.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.q.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.q.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.q.cljs$lang$maxFixedArity = 1;
om.dom.q.cljs$lang$applyTo = function(seq18389) {
  var G__18390 = cljs.core.first.call(null, seq18389);
  var seq18389__$1 = cljs.core.next.call(null, seq18389);
  return om.dom.q.cljs$core$IFn$_invoke$arity$variadic(G__18390, seq18389__$1);
};
om.dom.rp = function om$dom$rp() {
  var args__5572__auto__ = [];
  var len__5565__auto___18709 = arguments.length;
  var i__5566__auto___18710 = 0;
  while (true) {
    if (i__5566__auto___18710 < len__5565__auto___18709) {
      args__5572__auto__.push(arguments[i__5566__auto___18710]);
      var G__18711 = i__5566__auto___18710 + 1;
      i__5566__auto___18710 = G__18711;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.rp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.rp.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.rp.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.rp.cljs$lang$maxFixedArity = 1;
om.dom.rp.cljs$lang$applyTo = function(seq18391) {
  var G__18392 = cljs.core.first.call(null, seq18391);
  var seq18391__$1 = cljs.core.next.call(null, seq18391);
  return om.dom.rp.cljs$core$IFn$_invoke$arity$variadic(G__18392, seq18391__$1);
};
om.dom.rt = function om$dom$rt() {
  var args__5572__auto__ = [];
  var len__5565__auto___18712 = arguments.length;
  var i__5566__auto___18713 = 0;
  while (true) {
    if (i__5566__auto___18713 < len__5565__auto___18712) {
      args__5572__auto__.push(arguments[i__5566__auto___18713]);
      var G__18714 = i__5566__auto___18713 + 1;
      i__5566__auto___18713 = G__18714;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.rt.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.rt.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.rt.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.rt.cljs$lang$maxFixedArity = 1;
om.dom.rt.cljs$lang$applyTo = function(seq18393) {
  var G__18394 = cljs.core.first.call(null, seq18393);
  var seq18393__$1 = cljs.core.next.call(null, seq18393);
  return om.dom.rt.cljs$core$IFn$_invoke$arity$variadic(G__18394, seq18393__$1);
};
om.dom.ruby = function om$dom$ruby() {
  var args__5572__auto__ = [];
  var len__5565__auto___18715 = arguments.length;
  var i__5566__auto___18716 = 0;
  while (true) {
    if (i__5566__auto___18716 < len__5565__auto___18715) {
      args__5572__auto__.push(arguments[i__5566__auto___18716]);
      var G__18717 = i__5566__auto___18716 + 1;
      i__5566__auto___18716 = G__18717;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.ruby.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.ruby.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.ruby.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.ruby.cljs$lang$maxFixedArity = 1;
om.dom.ruby.cljs$lang$applyTo = function(seq18395) {
  var G__18396 = cljs.core.first.call(null, seq18395);
  var seq18395__$1 = cljs.core.next.call(null, seq18395);
  return om.dom.ruby.cljs$core$IFn$_invoke$arity$variadic(G__18396, seq18395__$1);
};
om.dom.s = function om$dom$s() {
  var args__5572__auto__ = [];
  var len__5565__auto___18718 = arguments.length;
  var i__5566__auto___18719 = 0;
  while (true) {
    if (i__5566__auto___18719 < len__5565__auto___18718) {
      args__5572__auto__.push(arguments[i__5566__auto___18719]);
      var G__18720 = i__5566__auto___18719 + 1;
      i__5566__auto___18719 = G__18720;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.s.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.s.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.s.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.s.cljs$lang$maxFixedArity = 1;
om.dom.s.cljs$lang$applyTo = function(seq18397) {
  var G__18398 = cljs.core.first.call(null, seq18397);
  var seq18397__$1 = cljs.core.next.call(null, seq18397);
  return om.dom.s.cljs$core$IFn$_invoke$arity$variadic(G__18398, seq18397__$1);
};
om.dom.samp = function om$dom$samp() {
  var args__5572__auto__ = [];
  var len__5565__auto___18721 = arguments.length;
  var i__5566__auto___18722 = 0;
  while (true) {
    if (i__5566__auto___18722 < len__5565__auto___18721) {
      args__5572__auto__.push(arguments[i__5566__auto___18722]);
      var G__18723 = i__5566__auto___18722 + 1;
      i__5566__auto___18722 = G__18723;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.samp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.samp.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.samp.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.samp.cljs$lang$maxFixedArity = 1;
om.dom.samp.cljs$lang$applyTo = function(seq18399) {
  var G__18400 = cljs.core.first.call(null, seq18399);
  var seq18399__$1 = cljs.core.next.call(null, seq18399);
  return om.dom.samp.cljs$core$IFn$_invoke$arity$variadic(G__18400, seq18399__$1);
};
om.dom.script = function om$dom$script() {
  var args__5572__auto__ = [];
  var len__5565__auto___18724 = arguments.length;
  var i__5566__auto___18725 = 0;
  while (true) {
    if (i__5566__auto___18725 < len__5565__auto___18724) {
      args__5572__auto__.push(arguments[i__5566__auto___18725]);
      var G__18726 = i__5566__auto___18725 + 1;
      i__5566__auto___18725 = G__18726;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.script.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.script.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.script.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.script.cljs$lang$maxFixedArity = 1;
om.dom.script.cljs$lang$applyTo = function(seq18401) {
  var G__18402 = cljs.core.first.call(null, seq18401);
  var seq18401__$1 = cljs.core.next.call(null, seq18401);
  return om.dom.script.cljs$core$IFn$_invoke$arity$variadic(G__18402, seq18401__$1);
};
om.dom.section = function om$dom$section() {
  var args__5572__auto__ = [];
  var len__5565__auto___18727 = arguments.length;
  var i__5566__auto___18728 = 0;
  while (true) {
    if (i__5566__auto___18728 < len__5565__auto___18727) {
      args__5572__auto__.push(arguments[i__5566__auto___18728]);
      var G__18729 = i__5566__auto___18728 + 1;
      i__5566__auto___18728 = G__18729;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.section.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.section.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.section.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.section.cljs$lang$maxFixedArity = 1;
om.dom.section.cljs$lang$applyTo = function(seq18403) {
  var G__18404 = cljs.core.first.call(null, seq18403);
  var seq18403__$1 = cljs.core.next.call(null, seq18403);
  return om.dom.section.cljs$core$IFn$_invoke$arity$variadic(G__18404, seq18403__$1);
};
om.dom.select = function om$dom$select() {
  var args__5572__auto__ = [];
  var len__5565__auto___18730 = arguments.length;
  var i__5566__auto___18731 = 0;
  while (true) {
    if (i__5566__auto___18731 < len__5565__auto___18730) {
      args__5572__auto__.push(arguments[i__5566__auto___18731]);
      var G__18732 = i__5566__auto___18731 + 1;
      i__5566__auto___18731 = G__18732;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.select.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.select.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.select.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.select.cljs$lang$maxFixedArity = 1;
om.dom.select.cljs$lang$applyTo = function(seq18405) {
  var G__18406 = cljs.core.first.call(null, seq18405);
  var seq18405__$1 = cljs.core.next.call(null, seq18405);
  return om.dom.select.cljs$core$IFn$_invoke$arity$variadic(G__18406, seq18405__$1);
};
om.dom.small = function om$dom$small() {
  var args__5572__auto__ = [];
  var len__5565__auto___18733 = arguments.length;
  var i__5566__auto___18734 = 0;
  while (true) {
    if (i__5566__auto___18734 < len__5565__auto___18733) {
      args__5572__auto__.push(arguments[i__5566__auto___18734]);
      var G__18735 = i__5566__auto___18734 + 1;
      i__5566__auto___18734 = G__18735;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.small.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.small.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.small.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.small.cljs$lang$maxFixedArity = 1;
om.dom.small.cljs$lang$applyTo = function(seq18407) {
  var G__18408 = cljs.core.first.call(null, seq18407);
  var seq18407__$1 = cljs.core.next.call(null, seq18407);
  return om.dom.small.cljs$core$IFn$_invoke$arity$variadic(G__18408, seq18407__$1);
};
om.dom.source = function om$dom$source() {
  var args__5572__auto__ = [];
  var len__5565__auto___18736 = arguments.length;
  var i__5566__auto___18737 = 0;
  while (true) {
    if (i__5566__auto___18737 < len__5565__auto___18736) {
      args__5572__auto__.push(arguments[i__5566__auto___18737]);
      var G__18738 = i__5566__auto___18737 + 1;
      i__5566__auto___18737 = G__18738;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.source.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.source.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.source.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.source.cljs$lang$maxFixedArity = 1;
om.dom.source.cljs$lang$applyTo = function(seq18409) {
  var G__18410 = cljs.core.first.call(null, seq18409);
  var seq18409__$1 = cljs.core.next.call(null, seq18409);
  return om.dom.source.cljs$core$IFn$_invoke$arity$variadic(G__18410, seq18409__$1);
};
om.dom.span = function om$dom$span() {
  var args__5572__auto__ = [];
  var len__5565__auto___18739 = arguments.length;
  var i__5566__auto___18740 = 0;
  while (true) {
    if (i__5566__auto___18740 < len__5565__auto___18739) {
      args__5572__auto__.push(arguments[i__5566__auto___18740]);
      var G__18741 = i__5566__auto___18740 + 1;
      i__5566__auto___18740 = G__18741;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.span.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.span.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.span.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.span.cljs$lang$maxFixedArity = 1;
om.dom.span.cljs$lang$applyTo = function(seq18411) {
  var G__18412 = cljs.core.first.call(null, seq18411);
  var seq18411__$1 = cljs.core.next.call(null, seq18411);
  return om.dom.span.cljs$core$IFn$_invoke$arity$variadic(G__18412, seq18411__$1);
};
om.dom.strong = function om$dom$strong() {
  var args__5572__auto__ = [];
  var len__5565__auto___18742 = arguments.length;
  var i__5566__auto___18743 = 0;
  while (true) {
    if (i__5566__auto___18743 < len__5565__auto___18742) {
      args__5572__auto__.push(arguments[i__5566__auto___18743]);
      var G__18744 = i__5566__auto___18743 + 1;
      i__5566__auto___18743 = G__18744;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.strong.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.strong.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.strong.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.strong.cljs$lang$maxFixedArity = 1;
om.dom.strong.cljs$lang$applyTo = function(seq18413) {
  var G__18414 = cljs.core.first.call(null, seq18413);
  var seq18413__$1 = cljs.core.next.call(null, seq18413);
  return om.dom.strong.cljs$core$IFn$_invoke$arity$variadic(G__18414, seq18413__$1);
};
om.dom.style = function om$dom$style() {
  var args__5572__auto__ = [];
  var len__5565__auto___18745 = arguments.length;
  var i__5566__auto___18746 = 0;
  while (true) {
    if (i__5566__auto___18746 < len__5565__auto___18745) {
      args__5572__auto__.push(arguments[i__5566__auto___18746]);
      var G__18747 = i__5566__auto___18746 + 1;
      i__5566__auto___18746 = G__18747;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.style.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.style.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.style.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.style.cljs$lang$maxFixedArity = 1;
om.dom.style.cljs$lang$applyTo = function(seq18415) {
  var G__18416 = cljs.core.first.call(null, seq18415);
  var seq18415__$1 = cljs.core.next.call(null, seq18415);
  return om.dom.style.cljs$core$IFn$_invoke$arity$variadic(G__18416, seq18415__$1);
};
om.dom.sub = function om$dom$sub() {
  var args__5572__auto__ = [];
  var len__5565__auto___18748 = arguments.length;
  var i__5566__auto___18749 = 0;
  while (true) {
    if (i__5566__auto___18749 < len__5565__auto___18748) {
      args__5572__auto__.push(arguments[i__5566__auto___18749]);
      var G__18750 = i__5566__auto___18749 + 1;
      i__5566__auto___18749 = G__18750;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.sub.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.sub.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.sub.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.sub.cljs$lang$maxFixedArity = 1;
om.dom.sub.cljs$lang$applyTo = function(seq18417) {
  var G__18418 = cljs.core.first.call(null, seq18417);
  var seq18417__$1 = cljs.core.next.call(null, seq18417);
  return om.dom.sub.cljs$core$IFn$_invoke$arity$variadic(G__18418, seq18417__$1);
};
om.dom.summary = function om$dom$summary() {
  var args__5572__auto__ = [];
  var len__5565__auto___18751 = arguments.length;
  var i__5566__auto___18752 = 0;
  while (true) {
    if (i__5566__auto___18752 < len__5565__auto___18751) {
      args__5572__auto__.push(arguments[i__5566__auto___18752]);
      var G__18753 = i__5566__auto___18752 + 1;
      i__5566__auto___18752 = G__18753;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.summary.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.summary.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.summary.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.summary.cljs$lang$maxFixedArity = 1;
om.dom.summary.cljs$lang$applyTo = function(seq18419) {
  var G__18420 = cljs.core.first.call(null, seq18419);
  var seq18419__$1 = cljs.core.next.call(null, seq18419);
  return om.dom.summary.cljs$core$IFn$_invoke$arity$variadic(G__18420, seq18419__$1);
};
om.dom.sup = function om$dom$sup() {
  var args__5572__auto__ = [];
  var len__5565__auto___18754 = arguments.length;
  var i__5566__auto___18755 = 0;
  while (true) {
    if (i__5566__auto___18755 < len__5565__auto___18754) {
      args__5572__auto__.push(arguments[i__5566__auto___18755]);
      var G__18756 = i__5566__auto___18755 + 1;
      i__5566__auto___18755 = G__18756;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.sup.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.sup.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.sup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.sup.cljs$lang$maxFixedArity = 1;
om.dom.sup.cljs$lang$applyTo = function(seq18421) {
  var G__18422 = cljs.core.first.call(null, seq18421);
  var seq18421__$1 = cljs.core.next.call(null, seq18421);
  return om.dom.sup.cljs$core$IFn$_invoke$arity$variadic(G__18422, seq18421__$1);
};
om.dom.table = function om$dom$table() {
  var args__5572__auto__ = [];
  var len__5565__auto___18757 = arguments.length;
  var i__5566__auto___18758 = 0;
  while (true) {
    if (i__5566__auto___18758 < len__5565__auto___18757) {
      args__5572__auto__.push(arguments[i__5566__auto___18758]);
      var G__18759 = i__5566__auto___18758 + 1;
      i__5566__auto___18758 = G__18759;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.table.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.table.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.table.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.table.cljs$lang$maxFixedArity = 1;
om.dom.table.cljs$lang$applyTo = function(seq18423) {
  var G__18424 = cljs.core.first.call(null, seq18423);
  var seq18423__$1 = cljs.core.next.call(null, seq18423);
  return om.dom.table.cljs$core$IFn$_invoke$arity$variadic(G__18424, seq18423__$1);
};
om.dom.tbody = function om$dom$tbody() {
  var args__5572__auto__ = [];
  var len__5565__auto___18760 = arguments.length;
  var i__5566__auto___18761 = 0;
  while (true) {
    if (i__5566__auto___18761 < len__5565__auto___18760) {
      args__5572__auto__.push(arguments[i__5566__auto___18761]);
      var G__18762 = i__5566__auto___18761 + 1;
      i__5566__auto___18761 = G__18762;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.tbody.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.tbody.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.tbody.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.tbody.cljs$lang$maxFixedArity = 1;
om.dom.tbody.cljs$lang$applyTo = function(seq18425) {
  var G__18426 = cljs.core.first.call(null, seq18425);
  var seq18425__$1 = cljs.core.next.call(null, seq18425);
  return om.dom.tbody.cljs$core$IFn$_invoke$arity$variadic(G__18426, seq18425__$1);
};
om.dom.td = function om$dom$td() {
  var args__5572__auto__ = [];
  var len__5565__auto___18763 = arguments.length;
  var i__5566__auto___18764 = 0;
  while (true) {
    if (i__5566__auto___18764 < len__5565__auto___18763) {
      args__5572__auto__.push(arguments[i__5566__auto___18764]);
      var G__18765 = i__5566__auto___18764 + 1;
      i__5566__auto___18764 = G__18765;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.td.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.td.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.td.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.td.cljs$lang$maxFixedArity = 1;
om.dom.td.cljs$lang$applyTo = function(seq18427) {
  var G__18428 = cljs.core.first.call(null, seq18427);
  var seq18427__$1 = cljs.core.next.call(null, seq18427);
  return om.dom.td.cljs$core$IFn$_invoke$arity$variadic(G__18428, seq18427__$1);
};
om.dom.tfoot = function om$dom$tfoot() {
  var args__5572__auto__ = [];
  var len__5565__auto___18766 = arguments.length;
  var i__5566__auto___18767 = 0;
  while (true) {
    if (i__5566__auto___18767 < len__5565__auto___18766) {
      args__5572__auto__.push(arguments[i__5566__auto___18767]);
      var G__18768 = i__5566__auto___18767 + 1;
      i__5566__auto___18767 = G__18768;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.tfoot.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.tfoot.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.tfoot.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.tfoot.cljs$lang$maxFixedArity = 1;
om.dom.tfoot.cljs$lang$applyTo = function(seq18429) {
  var G__18430 = cljs.core.first.call(null, seq18429);
  var seq18429__$1 = cljs.core.next.call(null, seq18429);
  return om.dom.tfoot.cljs$core$IFn$_invoke$arity$variadic(G__18430, seq18429__$1);
};
om.dom.th = function om$dom$th() {
  var args__5572__auto__ = [];
  var len__5565__auto___18769 = arguments.length;
  var i__5566__auto___18770 = 0;
  while (true) {
    if (i__5566__auto___18770 < len__5565__auto___18769) {
      args__5572__auto__.push(arguments[i__5566__auto___18770]);
      var G__18771 = i__5566__auto___18770 + 1;
      i__5566__auto___18770 = G__18771;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.th.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.th.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.th.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.th.cljs$lang$maxFixedArity = 1;
om.dom.th.cljs$lang$applyTo = function(seq18431) {
  var G__18432 = cljs.core.first.call(null, seq18431);
  var seq18431__$1 = cljs.core.next.call(null, seq18431);
  return om.dom.th.cljs$core$IFn$_invoke$arity$variadic(G__18432, seq18431__$1);
};
om.dom.thead = function om$dom$thead() {
  var args__5572__auto__ = [];
  var len__5565__auto___18772 = arguments.length;
  var i__5566__auto___18773 = 0;
  while (true) {
    if (i__5566__auto___18773 < len__5565__auto___18772) {
      args__5572__auto__.push(arguments[i__5566__auto___18773]);
      var G__18774 = i__5566__auto___18773 + 1;
      i__5566__auto___18773 = G__18774;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.thead.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.thead.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.thead.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.thead.cljs$lang$maxFixedArity = 1;
om.dom.thead.cljs$lang$applyTo = function(seq18433) {
  var G__18434 = cljs.core.first.call(null, seq18433);
  var seq18433__$1 = cljs.core.next.call(null, seq18433);
  return om.dom.thead.cljs$core$IFn$_invoke$arity$variadic(G__18434, seq18433__$1);
};
om.dom.time = function om$dom$time() {
  var args__5572__auto__ = [];
  var len__5565__auto___18775 = arguments.length;
  var i__5566__auto___18776 = 0;
  while (true) {
    if (i__5566__auto___18776 < len__5565__auto___18775) {
      args__5572__auto__.push(arguments[i__5566__auto___18776]);
      var G__18777 = i__5566__auto___18776 + 1;
      i__5566__auto___18776 = G__18777;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.time.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.time.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.time.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.time.cljs$lang$maxFixedArity = 1;
om.dom.time.cljs$lang$applyTo = function(seq18435) {
  var G__18436 = cljs.core.first.call(null, seq18435);
  var seq18435__$1 = cljs.core.next.call(null, seq18435);
  return om.dom.time.cljs$core$IFn$_invoke$arity$variadic(G__18436, seq18435__$1);
};
om.dom.title = function om$dom$title() {
  var args__5572__auto__ = [];
  var len__5565__auto___18778 = arguments.length;
  var i__5566__auto___18779 = 0;
  while (true) {
    if (i__5566__auto___18779 < len__5565__auto___18778) {
      args__5572__auto__.push(arguments[i__5566__auto___18779]);
      var G__18780 = i__5566__auto___18779 + 1;
      i__5566__auto___18779 = G__18780;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.title.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.title.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.title.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.title.cljs$lang$maxFixedArity = 1;
om.dom.title.cljs$lang$applyTo = function(seq18437) {
  var G__18438 = cljs.core.first.call(null, seq18437);
  var seq18437__$1 = cljs.core.next.call(null, seq18437);
  return om.dom.title.cljs$core$IFn$_invoke$arity$variadic(G__18438, seq18437__$1);
};
om.dom.tr = function om$dom$tr() {
  var args__5572__auto__ = [];
  var len__5565__auto___18781 = arguments.length;
  var i__5566__auto___18782 = 0;
  while (true) {
    if (i__5566__auto___18782 < len__5565__auto___18781) {
      args__5572__auto__.push(arguments[i__5566__auto___18782]);
      var G__18783 = i__5566__auto___18782 + 1;
      i__5566__auto___18782 = G__18783;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.tr.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.tr.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.tr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.tr.cljs$lang$maxFixedArity = 1;
om.dom.tr.cljs$lang$applyTo = function(seq18439) {
  var G__18440 = cljs.core.first.call(null, seq18439);
  var seq18439__$1 = cljs.core.next.call(null, seq18439);
  return om.dom.tr.cljs$core$IFn$_invoke$arity$variadic(G__18440, seq18439__$1);
};
om.dom.track = function om$dom$track() {
  var args__5572__auto__ = [];
  var len__5565__auto___18784 = arguments.length;
  var i__5566__auto___18785 = 0;
  while (true) {
    if (i__5566__auto___18785 < len__5565__auto___18784) {
      args__5572__auto__.push(arguments[i__5566__auto___18785]);
      var G__18786 = i__5566__auto___18785 + 1;
      i__5566__auto___18785 = G__18786;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.track.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.track.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.track.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.track.cljs$lang$maxFixedArity = 1;
om.dom.track.cljs$lang$applyTo = function(seq18441) {
  var G__18442 = cljs.core.first.call(null, seq18441);
  var seq18441__$1 = cljs.core.next.call(null, seq18441);
  return om.dom.track.cljs$core$IFn$_invoke$arity$variadic(G__18442, seq18441__$1);
};
om.dom.u = function om$dom$u() {
  var args__5572__auto__ = [];
  var len__5565__auto___18787 = arguments.length;
  var i__5566__auto___18788 = 0;
  while (true) {
    if (i__5566__auto___18788 < len__5565__auto___18787) {
      args__5572__auto__.push(arguments[i__5566__auto___18788]);
      var G__18789 = i__5566__auto___18788 + 1;
      i__5566__auto___18788 = G__18789;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.u.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.u.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.u.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.u.cljs$lang$maxFixedArity = 1;
om.dom.u.cljs$lang$applyTo = function(seq18443) {
  var G__18444 = cljs.core.first.call(null, seq18443);
  var seq18443__$1 = cljs.core.next.call(null, seq18443);
  return om.dom.u.cljs$core$IFn$_invoke$arity$variadic(G__18444, seq18443__$1);
};
om.dom.ul = function om$dom$ul() {
  var args__5572__auto__ = [];
  var len__5565__auto___18790 = arguments.length;
  var i__5566__auto___18791 = 0;
  while (true) {
    if (i__5566__auto___18791 < len__5565__auto___18790) {
      args__5572__auto__.push(arguments[i__5566__auto___18791]);
      var G__18792 = i__5566__auto___18791 + 1;
      i__5566__auto___18791 = G__18792;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.ul.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.ul.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.ul.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.ul.cljs$lang$maxFixedArity = 1;
om.dom.ul.cljs$lang$applyTo = function(seq18445) {
  var G__18446 = cljs.core.first.call(null, seq18445);
  var seq18445__$1 = cljs.core.next.call(null, seq18445);
  return om.dom.ul.cljs$core$IFn$_invoke$arity$variadic(G__18446, seq18445__$1);
};
om.dom.var$ = function om$dom$var() {
  var args__5572__auto__ = [];
  var len__5565__auto___18793 = arguments.length;
  var i__5566__auto___18794 = 0;
  while (true) {
    if (i__5566__auto___18794 < len__5565__auto___18793) {
      args__5572__auto__.push(arguments[i__5566__auto___18794]);
      var G__18795 = i__5566__auto___18794 + 1;
      i__5566__auto___18794 = G__18795;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.var$.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.var$.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.var$.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.var$.cljs$lang$maxFixedArity = 1;
om.dom.var$.cljs$lang$applyTo = function(seq18447) {
  var G__18448 = cljs.core.first.call(null, seq18447);
  var seq18447__$1 = cljs.core.next.call(null, seq18447);
  return om.dom.var$.cljs$core$IFn$_invoke$arity$variadic(G__18448, seq18447__$1);
};
om.dom.video = function om$dom$video() {
  var args__5572__auto__ = [];
  var len__5565__auto___18796 = arguments.length;
  var i__5566__auto___18797 = 0;
  while (true) {
    if (i__5566__auto___18797 < len__5565__auto___18796) {
      args__5572__auto__.push(arguments[i__5566__auto___18797]);
      var G__18798 = i__5566__auto___18797 + 1;
      i__5566__auto___18797 = G__18798;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.video.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.video.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.video.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.video.cljs$lang$maxFixedArity = 1;
om.dom.video.cljs$lang$applyTo = function(seq18449) {
  var G__18450 = cljs.core.first.call(null, seq18449);
  var seq18449__$1 = cljs.core.next.call(null, seq18449);
  return om.dom.video.cljs$core$IFn$_invoke$arity$variadic(G__18450, seq18449__$1);
};
om.dom.wbr = function om$dom$wbr() {
  var args__5572__auto__ = [];
  var len__5565__auto___18799 = arguments.length;
  var i__5566__auto___18800 = 0;
  while (true) {
    if (i__5566__auto___18800 < len__5565__auto___18799) {
      args__5572__auto__.push(arguments[i__5566__auto___18800]);
      var G__18801 = i__5566__auto___18800 + 1;
      i__5566__auto___18800 = G__18801;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.wbr.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.wbr.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.wbr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.wbr.cljs$lang$maxFixedArity = 1;
om.dom.wbr.cljs$lang$applyTo = function(seq18451) {
  var G__18452 = cljs.core.first.call(null, seq18451);
  var seq18451__$1 = cljs.core.next.call(null, seq18451);
  return om.dom.wbr.cljs$core$IFn$_invoke$arity$variadic(G__18452, seq18451__$1);
};
om.dom.circle = function om$dom$circle() {
  var args__5572__auto__ = [];
  var len__5565__auto___18802 = arguments.length;
  var i__5566__auto___18803 = 0;
  while (true) {
    if (i__5566__auto___18803 < len__5565__auto___18802) {
      args__5572__auto__.push(arguments[i__5566__auto___18803]);
      var G__18804 = i__5566__auto___18803 + 1;
      i__5566__auto___18803 = G__18804;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.circle.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.circle.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.circle.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.circle.cljs$lang$maxFixedArity = 1;
om.dom.circle.cljs$lang$applyTo = function(seq18453) {
  var G__18454 = cljs.core.first.call(null, seq18453);
  var seq18453__$1 = cljs.core.next.call(null, seq18453);
  return om.dom.circle.cljs$core$IFn$_invoke$arity$variadic(G__18454, seq18453__$1);
};
om.dom.ellipse = function om$dom$ellipse() {
  var args__5572__auto__ = [];
  var len__5565__auto___18805 = arguments.length;
  var i__5566__auto___18806 = 0;
  while (true) {
    if (i__5566__auto___18806 < len__5565__auto___18805) {
      args__5572__auto__.push(arguments[i__5566__auto___18806]);
      var G__18807 = i__5566__auto___18806 + 1;
      i__5566__auto___18806 = G__18807;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.ellipse.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.ellipse.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.ellipse.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.ellipse.cljs$lang$maxFixedArity = 1;
om.dom.ellipse.cljs$lang$applyTo = function(seq18455) {
  var G__18456 = cljs.core.first.call(null, seq18455);
  var seq18455__$1 = cljs.core.next.call(null, seq18455);
  return om.dom.ellipse.cljs$core$IFn$_invoke$arity$variadic(G__18456, seq18455__$1);
};
om.dom.g = function om$dom$g() {
  var args__5572__auto__ = [];
  var len__5565__auto___18808 = arguments.length;
  var i__5566__auto___18809 = 0;
  while (true) {
    if (i__5566__auto___18809 < len__5565__auto___18808) {
      args__5572__auto__.push(arguments[i__5566__auto___18809]);
      var G__18810 = i__5566__auto___18809 + 1;
      i__5566__auto___18809 = G__18810;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.g.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.g.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.g.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.g.cljs$lang$maxFixedArity = 1;
om.dom.g.cljs$lang$applyTo = function(seq18457) {
  var G__18458 = cljs.core.first.call(null, seq18457);
  var seq18457__$1 = cljs.core.next.call(null, seq18457);
  return om.dom.g.cljs$core$IFn$_invoke$arity$variadic(G__18458, seq18457__$1);
};
om.dom.line = function om$dom$line() {
  var args__5572__auto__ = [];
  var len__5565__auto___18811 = arguments.length;
  var i__5566__auto___18812 = 0;
  while (true) {
    if (i__5566__auto___18812 < len__5565__auto___18811) {
      args__5572__auto__.push(arguments[i__5566__auto___18812]);
      var G__18813 = i__5566__auto___18812 + 1;
      i__5566__auto___18812 = G__18813;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.line.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.line.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.line.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.line.cljs$lang$maxFixedArity = 1;
om.dom.line.cljs$lang$applyTo = function(seq18459) {
  var G__18460 = cljs.core.first.call(null, seq18459);
  var seq18459__$1 = cljs.core.next.call(null, seq18459);
  return om.dom.line.cljs$core$IFn$_invoke$arity$variadic(G__18460, seq18459__$1);
};
om.dom.path = function om$dom$path() {
  var args__5572__auto__ = [];
  var len__5565__auto___18814 = arguments.length;
  var i__5566__auto___18815 = 0;
  while (true) {
    if (i__5566__auto___18815 < len__5565__auto___18814) {
      args__5572__auto__.push(arguments[i__5566__auto___18815]);
      var G__18816 = i__5566__auto___18815 + 1;
      i__5566__auto___18815 = G__18816;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.path.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.path.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.path.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.path.cljs$lang$maxFixedArity = 1;
om.dom.path.cljs$lang$applyTo = function(seq18461) {
  var G__18462 = cljs.core.first.call(null, seq18461);
  var seq18461__$1 = cljs.core.next.call(null, seq18461);
  return om.dom.path.cljs$core$IFn$_invoke$arity$variadic(G__18462, seq18461__$1);
};
om.dom.polyline = function om$dom$polyline() {
  var args__5572__auto__ = [];
  var len__5565__auto___18817 = arguments.length;
  var i__5566__auto___18818 = 0;
  while (true) {
    if (i__5566__auto___18818 < len__5565__auto___18817) {
      args__5572__auto__.push(arguments[i__5566__auto___18818]);
      var G__18819 = i__5566__auto___18818 + 1;
      i__5566__auto___18818 = G__18819;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.polyline.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.polyline.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.polyline.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.polyline.cljs$lang$maxFixedArity = 1;
om.dom.polyline.cljs$lang$applyTo = function(seq18463) {
  var G__18464 = cljs.core.first.call(null, seq18463);
  var seq18463__$1 = cljs.core.next.call(null, seq18463);
  return om.dom.polyline.cljs$core$IFn$_invoke$arity$variadic(G__18464, seq18463__$1);
};
om.dom.rect = function om$dom$rect() {
  var args__5572__auto__ = [];
  var len__5565__auto___18820 = arguments.length;
  var i__5566__auto___18821 = 0;
  while (true) {
    if (i__5566__auto___18821 < len__5565__auto___18820) {
      args__5572__auto__.push(arguments[i__5566__auto___18821]);
      var G__18822 = i__5566__auto___18821 + 1;
      i__5566__auto___18821 = G__18822;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.rect.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.rect.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.rect.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.rect.cljs$lang$maxFixedArity = 1;
om.dom.rect.cljs$lang$applyTo = function(seq18465) {
  var G__18466 = cljs.core.first.call(null, seq18465);
  var seq18465__$1 = cljs.core.next.call(null, seq18465);
  return om.dom.rect.cljs$core$IFn$_invoke$arity$variadic(G__18466, seq18465__$1);
};
om.dom.svg = function om$dom$svg() {
  var args__5572__auto__ = [];
  var len__5565__auto___18823 = arguments.length;
  var i__5566__auto___18824 = 0;
  while (true) {
    if (i__5566__auto___18824 < len__5565__auto___18823) {
      args__5572__auto__.push(arguments[i__5566__auto___18824]);
      var G__18825 = i__5566__auto___18824 + 1;
      i__5566__auto___18824 = G__18825;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.svg.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.svg.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.svg.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.svg.cljs$lang$maxFixedArity = 1;
om.dom.svg.cljs$lang$applyTo = function(seq18467) {
  var G__18468 = cljs.core.first.call(null, seq18467);
  var seq18467__$1 = cljs.core.next.call(null, seq18467);
  return om.dom.svg.cljs$core$IFn$_invoke$arity$variadic(G__18468, seq18467__$1);
};
om.dom.text = function om$dom$text() {
  var args__5572__auto__ = [];
  var len__5565__auto___18826 = arguments.length;
  var i__5566__auto___18827 = 0;
  while (true) {
    if (i__5566__auto___18827 < len__5565__auto___18826) {
      args__5572__auto__.push(arguments[i__5566__auto___18827]);
      var G__18828 = i__5566__auto___18827 + 1;
      i__5566__auto___18827 = G__18828;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.text.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.text.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.text.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.text.cljs$lang$maxFixedArity = 1;
om.dom.text.cljs$lang$applyTo = function(seq18469) {
  var G__18470 = cljs.core.first.call(null, seq18469);
  var seq18469__$1 = cljs.core.next.call(null, seq18469);
  return om.dom.text.cljs$core$IFn$_invoke$arity$variadic(G__18470, seq18469__$1);
};
om.dom.defs = function om$dom$defs() {
  var args__5572__auto__ = [];
  var len__5565__auto___18829 = arguments.length;
  var i__5566__auto___18830 = 0;
  while (true) {
    if (i__5566__auto___18830 < len__5565__auto___18829) {
      args__5572__auto__.push(arguments[i__5566__auto___18830]);
      var G__18831 = i__5566__auto___18830 + 1;
      i__5566__auto___18830 = G__18831;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.defs.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.defs.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.defs.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.defs.cljs$lang$maxFixedArity = 1;
om.dom.defs.cljs$lang$applyTo = function(seq18471) {
  var G__18472 = cljs.core.first.call(null, seq18471);
  var seq18471__$1 = cljs.core.next.call(null, seq18471);
  return om.dom.defs.cljs$core$IFn$_invoke$arity$variadic(G__18472, seq18471__$1);
};
om.dom.linearGradient = function om$dom$linearGradient() {
  var args__5572__auto__ = [];
  var len__5565__auto___18832 = arguments.length;
  var i__5566__auto___18833 = 0;
  while (true) {
    if (i__5566__auto___18833 < len__5565__auto___18832) {
      args__5572__auto__.push(arguments[i__5566__auto___18833]);
      var G__18834 = i__5566__auto___18833 + 1;
      i__5566__auto___18833 = G__18834;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.linearGradient.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.linearGradient.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.linearGradient.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.linearGradient.cljs$lang$maxFixedArity = 1;
om.dom.linearGradient.cljs$lang$applyTo = function(seq18473) {
  var G__18474 = cljs.core.first.call(null, seq18473);
  var seq18473__$1 = cljs.core.next.call(null, seq18473);
  return om.dom.linearGradient.cljs$core$IFn$_invoke$arity$variadic(G__18474, seq18473__$1);
};
om.dom.polygon = function om$dom$polygon() {
  var args__5572__auto__ = [];
  var len__5565__auto___18835 = arguments.length;
  var i__5566__auto___18836 = 0;
  while (true) {
    if (i__5566__auto___18836 < len__5565__auto___18835) {
      args__5572__auto__.push(arguments[i__5566__auto___18836]);
      var G__18837 = i__5566__auto___18836 + 1;
      i__5566__auto___18836 = G__18837;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.polygon.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.polygon.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.polygon.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.polygon.cljs$lang$maxFixedArity = 1;
om.dom.polygon.cljs$lang$applyTo = function(seq18475) {
  var G__18476 = cljs.core.first.call(null, seq18475);
  var seq18475__$1 = cljs.core.next.call(null, seq18475);
  return om.dom.polygon.cljs$core$IFn$_invoke$arity$variadic(G__18476, seq18475__$1);
};
om.dom.radialGradient = function om$dom$radialGradient() {
  var args__5572__auto__ = [];
  var len__5565__auto___18838 = arguments.length;
  var i__5566__auto___18839 = 0;
  while (true) {
    if (i__5566__auto___18839 < len__5565__auto___18838) {
      args__5572__auto__.push(arguments[i__5566__auto___18839]);
      var G__18840 = i__5566__auto___18839 + 1;
      i__5566__auto___18839 = G__18840;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.radialGradient.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.radialGradient.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.radialGradient.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.radialGradient.cljs$lang$maxFixedArity = 1;
om.dom.radialGradient.cljs$lang$applyTo = function(seq18477) {
  var G__18478 = cljs.core.first.call(null, seq18477);
  var seq18477__$1 = cljs.core.next.call(null, seq18477);
  return om.dom.radialGradient.cljs$core$IFn$_invoke$arity$variadic(G__18478, seq18477__$1);
};
om.dom.stop = function om$dom$stop() {
  var args__5572__auto__ = [];
  var len__5565__auto___18841 = arguments.length;
  var i__5566__auto___18842 = 0;
  while (true) {
    if (i__5566__auto___18842 < len__5565__auto___18841) {
      args__5572__auto__.push(arguments[i__5566__auto___18842]);
      var G__18843 = i__5566__auto___18842 + 1;
      i__5566__auto___18842 = G__18843;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.stop.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.stop.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.stop.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.stop.cljs$lang$maxFixedArity = 1;
om.dom.stop.cljs$lang$applyTo = function(seq18479) {
  var G__18480 = cljs.core.first.call(null, seq18479);
  var seq18479__$1 = cljs.core.next.call(null, seq18479);
  return om.dom.stop.cljs$core$IFn$_invoke$arity$variadic(G__18480, seq18479__$1);
};
om.dom.tspan = function om$dom$tspan() {
  var args__5572__auto__ = [];
  var len__5565__auto___18844 = arguments.length;
  var i__5566__auto___18845 = 0;
  while (true) {
    if (i__5566__auto___18845 < len__5565__auto___18844) {
      args__5572__auto__.push(arguments[i__5566__auto___18845]);
      var G__18846 = i__5566__auto___18845 + 1;
      i__5566__auto___18845 = G__18846;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return om.dom.tspan.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
om.dom.tspan.cljs$core$IFn$_invoke$arity$variadic = function(opts__7866__auto__, children__7867__auto__) {
  return React.DOM.tspan.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7866__auto__, children__7867__auto__)));
};
om.dom.tspan.cljs$lang$maxFixedArity = 1;
om.dom.tspan.cljs$lang$applyTo = function(seq18301) {
  var G__18302 = cljs.core.first.call(null, seq18301);
  var seq18301__$1 = cljs.core.next.call(null, seq18301);
  return om.dom.tspan.cljs$core$IFn$_invoke$arity$variadic(G__18302, seq18301__$1);
};
om.dom.wrap_form_element = function om$dom$wrap_form_element(ctor, display_name) {
  return React.createFactory(React.createClass({"getDisplayName":function() {
    return display_name;
  }, "getInitialState":function() {
    var this$ = this;
    return {"value":this$.props["value"]};
  }, "onChange":function(e) {
    var this$ = this;
    var handler = this$.props["onChange"];
    if (handler == null) {
      return null;
    } else {
      handler.call(null, e);
      return this$.setState({"value":e.target.value});
    }
  }, "componentWillReceiveProps":function(new_props) {
    var this$ = this;
    return this$.setState({"value":new_props["value"]});
  }, "render":function() {
    var this$ = this;
    var props = {};
    goog.object.extend(props, this$.props, {"value":this$.state["value"], "onChange":this$["onChange"], "children":this$.props["children"]});
    return ctor.call(null, props);
  }}));
};
om.dom.input = om.dom.wrap_form_element.call(null, React.DOM.input, "input");
om.dom.textarea = om.dom.wrap_form_element.call(null, React.DOM.textarea, "textarea");
om.dom.option = om.dom.wrap_form_element.call(null, React.DOM.option, "option");
om.dom.render = function om$dom$render(component, el) {
  return React.render(component, el);
};
om.dom.render_to_str = function om$dom$render_to_str(c) {
  return React.renderToString(c);
};
goog.provide("om_tools.dom");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("om.dom");
om_tools.dom.camel_case = function om_tools$dom$camel_case(s) {
  return clojure.string.replace.call(null, s, /-(\w)/, cljs.core.comp.call(null, clojure.string.upper_case, cljs.core.second));
};
om_tools.dom.opt_key_case = function om_tools$dom$opt_key_case(attr) {
  if (cljs.core.truth_(function() {
    var or__4526__auto__ = cljs.core.count.call(null, attr) < 5;
    if (or__4526__auto__) {
      return or__4526__auto__;
    } else {
      var G__17067 = cljs.core.subs.call(null, attr, 0, 5);
      switch(G__17067) {
        case "data-":
        ;
        case "aria-":
          return true;
          break;
        default:
          return false;
      }
    }
  }())) {
    return attr;
  } else {
    return om_tools.dom.camel_case.call(null, attr);
  }
};
om_tools.dom.opt_key_alias = function om_tools$dom$opt_key_alias(opt) {
  var G__17070 = opt instanceof cljs.core.Keyword ? opt.fqn : null;
  switch(G__17070) {
    case "class":
      return new cljs.core.Keyword(null, "className", "className", -1983287057);
      break;
    case "for":
      return new cljs.core.Keyword(null, "htmlFor", "htmlFor", -1050291720);
      break;
    default:
      return opt;
  }
};
om_tools.dom.format_opt_key = function om_tools$dom$format_opt_key(opt_key) {
  return cljs.core.keyword.call(null, om_tools.dom.opt_key_case.call(null, cljs.core.name.call(null, om_tools.dom.opt_key_alias.call(null, opt_key))));
};
om_tools.dom.format_opt_val = function om_tools$dom$format_opt_val(opt_val) {
  if (cljs.core.map_QMARK_.call(null, opt_val)) {
    return om_tools.dom.format_opts.call(null, opt_val);
  } else {
    return opt_val;
  }
};
om_tools.dom.format_opts = function om_tools$dom$format_opts(opts) {
  if (cljs.core.map_QMARK_.call(null, opts)) {
    return cljs.core.clj__GT_js.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__17074) {
      var vec__17075 = p__17074;
      var k = cljs.core.nth.call(null, vec__17075, 0, null);
      var v = cljs.core.nth.call(null, vec__17075, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [om_tools.dom.format_opt_key.call(null, k), om_tools.dom.format_opt_val.call(null, v)], null);
    }, opts)));
  } else {
    return opts;
  }
};
om_tools.dom.possible_coll_QMARK_ = function om_tools$dom$possible_coll_QMARK_(form) {
  return cljs.core.coll_QMARK_.call(null, form) || form instanceof cljs.core.Symbol || cljs.core.list_QMARK_.call(null, form);
};
om_tools.dom.valid_element_QMARK_ = function om_tools$dom$valid_element_QMARK_(x) {
  return function() {
    var or__4526__auto__ = React.isValidElement;
    if (cljs.core.truth_(or__4526__auto__)) {
      return or__4526__auto__;
    } else {
      return React.isValidComponent;
    }
  }().call(null, x);
};
om_tools.dom.js_opts_QMARK_ = function om_tools$dom$js_opts_QMARK_(x) {
  return cljs.core.object_QMARK_.call(null, x) && !om_tools.dom.valid_element_QMARK_.call(null, x);
};
om_tools.dom.element_args = function om_tools$dom$element_args(opts, children) {
  if (opts == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, children], null);
  } else {
    if (cljs.core.map_QMARK_.call(null, opts)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [om_tools.dom.format_opts.call(null, opts), children], null);
    } else {
      if (cljs.core.truth_(om_tools.dom.js_opts_QMARK_.call(null, opts))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [opts, children], null);
      } else {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, cljs.core.cons.call(null, opts, children)], null);
      }
    }
  }
};
om_tools.dom.element = function om_tools$dom$element(ctor, opts, children) {
  var vec__17077 = om_tools.dom.element_args.call(null, opts, children);
  var opts__$1 = cljs.core.nth.call(null, vec__17077, 0, null);
  var children__$1 = cljs.core.nth.call(null, vec__17077, 1, null);
  return cljs.core.apply.call(null, ctor, cljs.core.flatten.call(null, cljs.core.cons.call(null, opts__$1, children__$1)));
};
om_tools.dom.a = function om_tools$dom$a() {
  var args17078 = [];
  var len__5565__auto___17703 = arguments.length;
  var i__5566__auto___17704 = 0;
  while (true) {
    if (i__5566__auto___17704 < len__5565__auto___17703) {
      args17078.push(arguments[i__5566__auto___17704]);
      var G__17705 = i__5566__auto___17704 + 1;
      i__5566__auto___17704 = G__17705;
      continue;
    } else {
    }
    break;
  }
  var G__17082 = args17078.length;
  switch(G__17082) {
    case 0:
      return om_tools.dom.a.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17078.slice(1), 0);
      return om_tools.dom.a.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.a.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.a, null, null);
};
om_tools.dom.a.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.a, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.a.cljs$lang$applyTo = function(seq17079) {
  var G__17080 = cljs.core.first.call(null, seq17079);
  var seq17079__$1 = cljs.core.next.call(null, seq17079);
  return om_tools.dom.a.cljs$core$IFn$_invoke$arity$variadic(G__17080, seq17079__$1);
};
om_tools.dom.a.cljs$lang$maxFixedArity = 1;
om_tools.dom.abbr = function om_tools$dom$abbr() {
  var args17083 = [];
  var len__5565__auto___17707 = arguments.length;
  var i__5566__auto___17708 = 0;
  while (true) {
    if (i__5566__auto___17708 < len__5565__auto___17707) {
      args17083.push(arguments[i__5566__auto___17708]);
      var G__17709 = i__5566__auto___17708 + 1;
      i__5566__auto___17708 = G__17709;
      continue;
    } else {
    }
    break;
  }
  var G__17087 = args17083.length;
  switch(G__17087) {
    case 0:
      return om_tools.dom.abbr.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17083.slice(1), 0);
      return om_tools.dom.abbr.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.abbr.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.abbr, null, null);
};
om_tools.dom.abbr.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.abbr, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.abbr.cljs$lang$applyTo = function(seq17084) {
  var G__17085 = cljs.core.first.call(null, seq17084);
  var seq17084__$1 = cljs.core.next.call(null, seq17084);
  return om_tools.dom.abbr.cljs$core$IFn$_invoke$arity$variadic(G__17085, seq17084__$1);
};
om_tools.dom.abbr.cljs$lang$maxFixedArity = 1;
om_tools.dom.address = function om_tools$dom$address() {
  var args17088 = [];
  var len__5565__auto___17711 = arguments.length;
  var i__5566__auto___17712 = 0;
  while (true) {
    if (i__5566__auto___17712 < len__5565__auto___17711) {
      args17088.push(arguments[i__5566__auto___17712]);
      var G__17713 = i__5566__auto___17712 + 1;
      i__5566__auto___17712 = G__17713;
      continue;
    } else {
    }
    break;
  }
  var G__17092 = args17088.length;
  switch(G__17092) {
    case 0:
      return om_tools.dom.address.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17088.slice(1), 0);
      return om_tools.dom.address.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.address.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.address, null, null);
};
om_tools.dom.address.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.address, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.address.cljs$lang$applyTo = function(seq17089) {
  var G__17090 = cljs.core.first.call(null, seq17089);
  var seq17089__$1 = cljs.core.next.call(null, seq17089);
  return om_tools.dom.address.cljs$core$IFn$_invoke$arity$variadic(G__17090, seq17089__$1);
};
om_tools.dom.address.cljs$lang$maxFixedArity = 1;
om_tools.dom.area = function om_tools$dom$area() {
  var args17093 = [];
  var len__5565__auto___17715 = arguments.length;
  var i__5566__auto___17716 = 0;
  while (true) {
    if (i__5566__auto___17716 < len__5565__auto___17715) {
      args17093.push(arguments[i__5566__auto___17716]);
      var G__17717 = i__5566__auto___17716 + 1;
      i__5566__auto___17716 = G__17717;
      continue;
    } else {
    }
    break;
  }
  var G__17097 = args17093.length;
  switch(G__17097) {
    case 0:
      return om_tools.dom.area.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17093.slice(1), 0);
      return om_tools.dom.area.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.area.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.area, null, null);
};
om_tools.dom.area.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.area, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.area.cljs$lang$applyTo = function(seq17094) {
  var G__17095 = cljs.core.first.call(null, seq17094);
  var seq17094__$1 = cljs.core.next.call(null, seq17094);
  return om_tools.dom.area.cljs$core$IFn$_invoke$arity$variadic(G__17095, seq17094__$1);
};
om_tools.dom.area.cljs$lang$maxFixedArity = 1;
om_tools.dom.article = function om_tools$dom$article() {
  var args17098 = [];
  var len__5565__auto___17719 = arguments.length;
  var i__5566__auto___17720 = 0;
  while (true) {
    if (i__5566__auto___17720 < len__5565__auto___17719) {
      args17098.push(arguments[i__5566__auto___17720]);
      var G__17721 = i__5566__auto___17720 + 1;
      i__5566__auto___17720 = G__17721;
      continue;
    } else {
    }
    break;
  }
  var G__17102 = args17098.length;
  switch(G__17102) {
    case 0:
      return om_tools.dom.article.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17098.slice(1), 0);
      return om_tools.dom.article.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.article.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.article, null, null);
};
om_tools.dom.article.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.article, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.article.cljs$lang$applyTo = function(seq17099) {
  var G__17100 = cljs.core.first.call(null, seq17099);
  var seq17099__$1 = cljs.core.next.call(null, seq17099);
  return om_tools.dom.article.cljs$core$IFn$_invoke$arity$variadic(G__17100, seq17099__$1);
};
om_tools.dom.article.cljs$lang$maxFixedArity = 1;
om_tools.dom.aside = function om_tools$dom$aside() {
  var args17103 = [];
  var len__5565__auto___17723 = arguments.length;
  var i__5566__auto___17724 = 0;
  while (true) {
    if (i__5566__auto___17724 < len__5565__auto___17723) {
      args17103.push(arguments[i__5566__auto___17724]);
      var G__17725 = i__5566__auto___17724 + 1;
      i__5566__auto___17724 = G__17725;
      continue;
    } else {
    }
    break;
  }
  var G__17107 = args17103.length;
  switch(G__17107) {
    case 0:
      return om_tools.dom.aside.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17103.slice(1), 0);
      return om_tools.dom.aside.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.aside.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.aside, null, null);
};
om_tools.dom.aside.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.aside, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.aside.cljs$lang$applyTo = function(seq17104) {
  var G__17105 = cljs.core.first.call(null, seq17104);
  var seq17104__$1 = cljs.core.next.call(null, seq17104);
  return om_tools.dom.aside.cljs$core$IFn$_invoke$arity$variadic(G__17105, seq17104__$1);
};
om_tools.dom.aside.cljs$lang$maxFixedArity = 1;
om_tools.dom.audio = function om_tools$dom$audio() {
  var args17108 = [];
  var len__5565__auto___17727 = arguments.length;
  var i__5566__auto___17728 = 0;
  while (true) {
    if (i__5566__auto___17728 < len__5565__auto___17727) {
      args17108.push(arguments[i__5566__auto___17728]);
      var G__17729 = i__5566__auto___17728 + 1;
      i__5566__auto___17728 = G__17729;
      continue;
    } else {
    }
    break;
  }
  var G__17112 = args17108.length;
  switch(G__17112) {
    case 0:
      return om_tools.dom.audio.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17108.slice(1), 0);
      return om_tools.dom.audio.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.audio.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.audio, null, null);
};
om_tools.dom.audio.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.audio, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.audio.cljs$lang$applyTo = function(seq17109) {
  var G__17110 = cljs.core.first.call(null, seq17109);
  var seq17109__$1 = cljs.core.next.call(null, seq17109);
  return om_tools.dom.audio.cljs$core$IFn$_invoke$arity$variadic(G__17110, seq17109__$1);
};
om_tools.dom.audio.cljs$lang$maxFixedArity = 1;
om_tools.dom.b = function om_tools$dom$b() {
  var args17113 = [];
  var len__5565__auto___17731 = arguments.length;
  var i__5566__auto___17732 = 0;
  while (true) {
    if (i__5566__auto___17732 < len__5565__auto___17731) {
      args17113.push(arguments[i__5566__auto___17732]);
      var G__17733 = i__5566__auto___17732 + 1;
      i__5566__auto___17732 = G__17733;
      continue;
    } else {
    }
    break;
  }
  var G__17117 = args17113.length;
  switch(G__17117) {
    case 0:
      return om_tools.dom.b.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17113.slice(1), 0);
      return om_tools.dom.b.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.b.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.b, null, null);
};
om_tools.dom.b.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.b, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.b.cljs$lang$applyTo = function(seq17114) {
  var G__17115 = cljs.core.first.call(null, seq17114);
  var seq17114__$1 = cljs.core.next.call(null, seq17114);
  return om_tools.dom.b.cljs$core$IFn$_invoke$arity$variadic(G__17115, seq17114__$1);
};
om_tools.dom.b.cljs$lang$maxFixedArity = 1;
om_tools.dom.base = function om_tools$dom$base() {
  var args17118 = [];
  var len__5565__auto___17735 = arguments.length;
  var i__5566__auto___17736 = 0;
  while (true) {
    if (i__5566__auto___17736 < len__5565__auto___17735) {
      args17118.push(arguments[i__5566__auto___17736]);
      var G__17737 = i__5566__auto___17736 + 1;
      i__5566__auto___17736 = G__17737;
      continue;
    } else {
    }
    break;
  }
  var G__17122 = args17118.length;
  switch(G__17122) {
    case 0:
      return om_tools.dom.base.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17118.slice(1), 0);
      return om_tools.dom.base.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.base.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.base, null, null);
};
om_tools.dom.base.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.base, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.base.cljs$lang$applyTo = function(seq17119) {
  var G__17120 = cljs.core.first.call(null, seq17119);
  var seq17119__$1 = cljs.core.next.call(null, seq17119);
  return om_tools.dom.base.cljs$core$IFn$_invoke$arity$variadic(G__17120, seq17119__$1);
};
om_tools.dom.base.cljs$lang$maxFixedArity = 1;
om_tools.dom.bdi = function om_tools$dom$bdi() {
  var args17123 = [];
  var len__5565__auto___17739 = arguments.length;
  var i__5566__auto___17740 = 0;
  while (true) {
    if (i__5566__auto___17740 < len__5565__auto___17739) {
      args17123.push(arguments[i__5566__auto___17740]);
      var G__17741 = i__5566__auto___17740 + 1;
      i__5566__auto___17740 = G__17741;
      continue;
    } else {
    }
    break;
  }
  var G__17127 = args17123.length;
  switch(G__17127) {
    case 0:
      return om_tools.dom.bdi.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17123.slice(1), 0);
      return om_tools.dom.bdi.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.bdi.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.bdi, null, null);
};
om_tools.dom.bdi.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.bdi, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.bdi.cljs$lang$applyTo = function(seq17124) {
  var G__17125 = cljs.core.first.call(null, seq17124);
  var seq17124__$1 = cljs.core.next.call(null, seq17124);
  return om_tools.dom.bdi.cljs$core$IFn$_invoke$arity$variadic(G__17125, seq17124__$1);
};
om_tools.dom.bdi.cljs$lang$maxFixedArity = 1;
om_tools.dom.bdo = function om_tools$dom$bdo() {
  var args17128 = [];
  var len__5565__auto___17743 = arguments.length;
  var i__5566__auto___17744 = 0;
  while (true) {
    if (i__5566__auto___17744 < len__5565__auto___17743) {
      args17128.push(arguments[i__5566__auto___17744]);
      var G__17745 = i__5566__auto___17744 + 1;
      i__5566__auto___17744 = G__17745;
      continue;
    } else {
    }
    break;
  }
  var G__17132 = args17128.length;
  switch(G__17132) {
    case 0:
      return om_tools.dom.bdo.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17128.slice(1), 0);
      return om_tools.dom.bdo.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.bdo.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.bdo, null, null);
};
om_tools.dom.bdo.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.bdo, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.bdo.cljs$lang$applyTo = function(seq17129) {
  var G__17130 = cljs.core.first.call(null, seq17129);
  var seq17129__$1 = cljs.core.next.call(null, seq17129);
  return om_tools.dom.bdo.cljs$core$IFn$_invoke$arity$variadic(G__17130, seq17129__$1);
};
om_tools.dom.bdo.cljs$lang$maxFixedArity = 1;
om_tools.dom.big = function om_tools$dom$big() {
  var args17133 = [];
  var len__5565__auto___17747 = arguments.length;
  var i__5566__auto___17748 = 0;
  while (true) {
    if (i__5566__auto___17748 < len__5565__auto___17747) {
      args17133.push(arguments[i__5566__auto___17748]);
      var G__17749 = i__5566__auto___17748 + 1;
      i__5566__auto___17748 = G__17749;
      continue;
    } else {
    }
    break;
  }
  var G__17137 = args17133.length;
  switch(G__17137) {
    case 0:
      return om_tools.dom.big.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17133.slice(1), 0);
      return om_tools.dom.big.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.big.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.big, null, null);
};
om_tools.dom.big.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.big, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.big.cljs$lang$applyTo = function(seq17134) {
  var G__17135 = cljs.core.first.call(null, seq17134);
  var seq17134__$1 = cljs.core.next.call(null, seq17134);
  return om_tools.dom.big.cljs$core$IFn$_invoke$arity$variadic(G__17135, seq17134__$1);
};
om_tools.dom.big.cljs$lang$maxFixedArity = 1;
om_tools.dom.blockquote = function om_tools$dom$blockquote() {
  var args17138 = [];
  var len__5565__auto___17751 = arguments.length;
  var i__5566__auto___17752 = 0;
  while (true) {
    if (i__5566__auto___17752 < len__5565__auto___17751) {
      args17138.push(arguments[i__5566__auto___17752]);
      var G__17753 = i__5566__auto___17752 + 1;
      i__5566__auto___17752 = G__17753;
      continue;
    } else {
    }
    break;
  }
  var G__17142 = args17138.length;
  switch(G__17142) {
    case 0:
      return om_tools.dom.blockquote.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17138.slice(1), 0);
      return om_tools.dom.blockquote.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.blockquote.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.blockquote, null, null);
};
om_tools.dom.blockquote.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.blockquote, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.blockquote.cljs$lang$applyTo = function(seq17139) {
  var G__17140 = cljs.core.first.call(null, seq17139);
  var seq17139__$1 = cljs.core.next.call(null, seq17139);
  return om_tools.dom.blockquote.cljs$core$IFn$_invoke$arity$variadic(G__17140, seq17139__$1);
};
om_tools.dom.blockquote.cljs$lang$maxFixedArity = 1;
om_tools.dom.body = function om_tools$dom$body() {
  var args17143 = [];
  var len__5565__auto___17755 = arguments.length;
  var i__5566__auto___17756 = 0;
  while (true) {
    if (i__5566__auto___17756 < len__5565__auto___17755) {
      args17143.push(arguments[i__5566__auto___17756]);
      var G__17757 = i__5566__auto___17756 + 1;
      i__5566__auto___17756 = G__17757;
      continue;
    } else {
    }
    break;
  }
  var G__17147 = args17143.length;
  switch(G__17147) {
    case 0:
      return om_tools.dom.body.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17143.slice(1), 0);
      return om_tools.dom.body.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.body.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.body, null, null);
};
om_tools.dom.body.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.body, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.body.cljs$lang$applyTo = function(seq17144) {
  var G__17145 = cljs.core.first.call(null, seq17144);
  var seq17144__$1 = cljs.core.next.call(null, seq17144);
  return om_tools.dom.body.cljs$core$IFn$_invoke$arity$variadic(G__17145, seq17144__$1);
};
om_tools.dom.body.cljs$lang$maxFixedArity = 1;
om_tools.dom.br = function om_tools$dom$br() {
  var args17148 = [];
  var len__5565__auto___17759 = arguments.length;
  var i__5566__auto___17760 = 0;
  while (true) {
    if (i__5566__auto___17760 < len__5565__auto___17759) {
      args17148.push(arguments[i__5566__auto___17760]);
      var G__17761 = i__5566__auto___17760 + 1;
      i__5566__auto___17760 = G__17761;
      continue;
    } else {
    }
    break;
  }
  var G__17152 = args17148.length;
  switch(G__17152) {
    case 0:
      return om_tools.dom.br.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17148.slice(1), 0);
      return om_tools.dom.br.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.br.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.br, null, null);
};
om_tools.dom.br.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.br, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.br.cljs$lang$applyTo = function(seq17149) {
  var G__17150 = cljs.core.first.call(null, seq17149);
  var seq17149__$1 = cljs.core.next.call(null, seq17149);
  return om_tools.dom.br.cljs$core$IFn$_invoke$arity$variadic(G__17150, seq17149__$1);
};
om_tools.dom.br.cljs$lang$maxFixedArity = 1;
om_tools.dom.button = function om_tools$dom$button() {
  var args17153 = [];
  var len__5565__auto___17763 = arguments.length;
  var i__5566__auto___17764 = 0;
  while (true) {
    if (i__5566__auto___17764 < len__5565__auto___17763) {
      args17153.push(arguments[i__5566__auto___17764]);
      var G__17765 = i__5566__auto___17764 + 1;
      i__5566__auto___17764 = G__17765;
      continue;
    } else {
    }
    break;
  }
  var G__17157 = args17153.length;
  switch(G__17157) {
    case 0:
      return om_tools.dom.button.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17153.slice(1), 0);
      return om_tools.dom.button.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.button.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.button, null, null);
};
om_tools.dom.button.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.button, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.button.cljs$lang$applyTo = function(seq17154) {
  var G__17155 = cljs.core.first.call(null, seq17154);
  var seq17154__$1 = cljs.core.next.call(null, seq17154);
  return om_tools.dom.button.cljs$core$IFn$_invoke$arity$variadic(G__17155, seq17154__$1);
};
om_tools.dom.button.cljs$lang$maxFixedArity = 1;
om_tools.dom.canvas = function om_tools$dom$canvas() {
  var args17158 = [];
  var len__5565__auto___17767 = arguments.length;
  var i__5566__auto___17768 = 0;
  while (true) {
    if (i__5566__auto___17768 < len__5565__auto___17767) {
      args17158.push(arguments[i__5566__auto___17768]);
      var G__17769 = i__5566__auto___17768 + 1;
      i__5566__auto___17768 = G__17769;
      continue;
    } else {
    }
    break;
  }
  var G__17162 = args17158.length;
  switch(G__17162) {
    case 0:
      return om_tools.dom.canvas.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17158.slice(1), 0);
      return om_tools.dom.canvas.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.canvas.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.canvas, null, null);
};
om_tools.dom.canvas.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.canvas, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.canvas.cljs$lang$applyTo = function(seq17159) {
  var G__17160 = cljs.core.first.call(null, seq17159);
  var seq17159__$1 = cljs.core.next.call(null, seq17159);
  return om_tools.dom.canvas.cljs$core$IFn$_invoke$arity$variadic(G__17160, seq17159__$1);
};
om_tools.dom.canvas.cljs$lang$maxFixedArity = 1;
om_tools.dom.caption = function om_tools$dom$caption() {
  var args17163 = [];
  var len__5565__auto___17771 = arguments.length;
  var i__5566__auto___17772 = 0;
  while (true) {
    if (i__5566__auto___17772 < len__5565__auto___17771) {
      args17163.push(arguments[i__5566__auto___17772]);
      var G__17773 = i__5566__auto___17772 + 1;
      i__5566__auto___17772 = G__17773;
      continue;
    } else {
    }
    break;
  }
  var G__17167 = args17163.length;
  switch(G__17167) {
    case 0:
      return om_tools.dom.caption.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17163.slice(1), 0);
      return om_tools.dom.caption.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.caption.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.caption, null, null);
};
om_tools.dom.caption.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.caption, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.caption.cljs$lang$applyTo = function(seq17164) {
  var G__17165 = cljs.core.first.call(null, seq17164);
  var seq17164__$1 = cljs.core.next.call(null, seq17164);
  return om_tools.dom.caption.cljs$core$IFn$_invoke$arity$variadic(G__17165, seq17164__$1);
};
om_tools.dom.caption.cljs$lang$maxFixedArity = 1;
om_tools.dom.cite = function om_tools$dom$cite() {
  var args17168 = [];
  var len__5565__auto___17775 = arguments.length;
  var i__5566__auto___17776 = 0;
  while (true) {
    if (i__5566__auto___17776 < len__5565__auto___17775) {
      args17168.push(arguments[i__5566__auto___17776]);
      var G__17777 = i__5566__auto___17776 + 1;
      i__5566__auto___17776 = G__17777;
      continue;
    } else {
    }
    break;
  }
  var G__17172 = args17168.length;
  switch(G__17172) {
    case 0:
      return om_tools.dom.cite.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17168.slice(1), 0);
      return om_tools.dom.cite.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.cite.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.cite, null, null);
};
om_tools.dom.cite.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.cite, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.cite.cljs$lang$applyTo = function(seq17169) {
  var G__17170 = cljs.core.first.call(null, seq17169);
  var seq17169__$1 = cljs.core.next.call(null, seq17169);
  return om_tools.dom.cite.cljs$core$IFn$_invoke$arity$variadic(G__17170, seq17169__$1);
};
om_tools.dom.cite.cljs$lang$maxFixedArity = 1;
om_tools.dom.code = function om_tools$dom$code() {
  var args17173 = [];
  var len__5565__auto___17779 = arguments.length;
  var i__5566__auto___17780 = 0;
  while (true) {
    if (i__5566__auto___17780 < len__5565__auto___17779) {
      args17173.push(arguments[i__5566__auto___17780]);
      var G__17781 = i__5566__auto___17780 + 1;
      i__5566__auto___17780 = G__17781;
      continue;
    } else {
    }
    break;
  }
  var G__17177 = args17173.length;
  switch(G__17177) {
    case 0:
      return om_tools.dom.code.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17173.slice(1), 0);
      return om_tools.dom.code.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.code.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.code, null, null);
};
om_tools.dom.code.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.code, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.code.cljs$lang$applyTo = function(seq17174) {
  var G__17175 = cljs.core.first.call(null, seq17174);
  var seq17174__$1 = cljs.core.next.call(null, seq17174);
  return om_tools.dom.code.cljs$core$IFn$_invoke$arity$variadic(G__17175, seq17174__$1);
};
om_tools.dom.code.cljs$lang$maxFixedArity = 1;
om_tools.dom.col = function om_tools$dom$col() {
  var args17178 = [];
  var len__5565__auto___17783 = arguments.length;
  var i__5566__auto___17784 = 0;
  while (true) {
    if (i__5566__auto___17784 < len__5565__auto___17783) {
      args17178.push(arguments[i__5566__auto___17784]);
      var G__17785 = i__5566__auto___17784 + 1;
      i__5566__auto___17784 = G__17785;
      continue;
    } else {
    }
    break;
  }
  var G__17182 = args17178.length;
  switch(G__17182) {
    case 0:
      return om_tools.dom.col.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17178.slice(1), 0);
      return om_tools.dom.col.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.col.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.col, null, null);
};
om_tools.dom.col.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.col, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.col.cljs$lang$applyTo = function(seq17179) {
  var G__17180 = cljs.core.first.call(null, seq17179);
  var seq17179__$1 = cljs.core.next.call(null, seq17179);
  return om_tools.dom.col.cljs$core$IFn$_invoke$arity$variadic(G__17180, seq17179__$1);
};
om_tools.dom.col.cljs$lang$maxFixedArity = 1;
om_tools.dom.colgroup = function om_tools$dom$colgroup() {
  var args17183 = [];
  var len__5565__auto___17787 = arguments.length;
  var i__5566__auto___17788 = 0;
  while (true) {
    if (i__5566__auto___17788 < len__5565__auto___17787) {
      args17183.push(arguments[i__5566__auto___17788]);
      var G__17789 = i__5566__auto___17788 + 1;
      i__5566__auto___17788 = G__17789;
      continue;
    } else {
    }
    break;
  }
  var G__17187 = args17183.length;
  switch(G__17187) {
    case 0:
      return om_tools.dom.colgroup.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17183.slice(1), 0);
      return om_tools.dom.colgroup.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.colgroup.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.colgroup, null, null);
};
om_tools.dom.colgroup.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.colgroup, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.colgroup.cljs$lang$applyTo = function(seq17184) {
  var G__17185 = cljs.core.first.call(null, seq17184);
  var seq17184__$1 = cljs.core.next.call(null, seq17184);
  return om_tools.dom.colgroup.cljs$core$IFn$_invoke$arity$variadic(G__17185, seq17184__$1);
};
om_tools.dom.colgroup.cljs$lang$maxFixedArity = 1;
om_tools.dom.data = function om_tools$dom$data() {
  var args17188 = [];
  var len__5565__auto___17791 = arguments.length;
  var i__5566__auto___17792 = 0;
  while (true) {
    if (i__5566__auto___17792 < len__5565__auto___17791) {
      args17188.push(arguments[i__5566__auto___17792]);
      var G__17793 = i__5566__auto___17792 + 1;
      i__5566__auto___17792 = G__17793;
      continue;
    } else {
    }
    break;
  }
  var G__17192 = args17188.length;
  switch(G__17192) {
    case 0:
      return om_tools.dom.data.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17188.slice(1), 0);
      return om_tools.dom.data.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.data.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.data, null, null);
};
om_tools.dom.data.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.data, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.data.cljs$lang$applyTo = function(seq17189) {
  var G__17190 = cljs.core.first.call(null, seq17189);
  var seq17189__$1 = cljs.core.next.call(null, seq17189);
  return om_tools.dom.data.cljs$core$IFn$_invoke$arity$variadic(G__17190, seq17189__$1);
};
om_tools.dom.data.cljs$lang$maxFixedArity = 1;
om_tools.dom.datalist = function om_tools$dom$datalist() {
  var args17193 = [];
  var len__5565__auto___17795 = arguments.length;
  var i__5566__auto___17796 = 0;
  while (true) {
    if (i__5566__auto___17796 < len__5565__auto___17795) {
      args17193.push(arguments[i__5566__auto___17796]);
      var G__17797 = i__5566__auto___17796 + 1;
      i__5566__auto___17796 = G__17797;
      continue;
    } else {
    }
    break;
  }
  var G__17197 = args17193.length;
  switch(G__17197) {
    case 0:
      return om_tools.dom.datalist.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17193.slice(1), 0);
      return om_tools.dom.datalist.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.datalist.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.datalist, null, null);
};
om_tools.dom.datalist.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.datalist, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.datalist.cljs$lang$applyTo = function(seq17194) {
  var G__17195 = cljs.core.first.call(null, seq17194);
  var seq17194__$1 = cljs.core.next.call(null, seq17194);
  return om_tools.dom.datalist.cljs$core$IFn$_invoke$arity$variadic(G__17195, seq17194__$1);
};
om_tools.dom.datalist.cljs$lang$maxFixedArity = 1;
om_tools.dom.dd = function om_tools$dom$dd() {
  var args17198 = [];
  var len__5565__auto___17799 = arguments.length;
  var i__5566__auto___17800 = 0;
  while (true) {
    if (i__5566__auto___17800 < len__5565__auto___17799) {
      args17198.push(arguments[i__5566__auto___17800]);
      var G__17801 = i__5566__auto___17800 + 1;
      i__5566__auto___17800 = G__17801;
      continue;
    } else {
    }
    break;
  }
  var G__17202 = args17198.length;
  switch(G__17202) {
    case 0:
      return om_tools.dom.dd.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17198.slice(1), 0);
      return om_tools.dom.dd.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.dd.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.dd, null, null);
};
om_tools.dom.dd.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.dd, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.dd.cljs$lang$applyTo = function(seq17199) {
  var G__17200 = cljs.core.first.call(null, seq17199);
  var seq17199__$1 = cljs.core.next.call(null, seq17199);
  return om_tools.dom.dd.cljs$core$IFn$_invoke$arity$variadic(G__17200, seq17199__$1);
};
om_tools.dom.dd.cljs$lang$maxFixedArity = 1;
om_tools.dom.del = function om_tools$dom$del() {
  var args17203 = [];
  var len__5565__auto___17803 = arguments.length;
  var i__5566__auto___17804 = 0;
  while (true) {
    if (i__5566__auto___17804 < len__5565__auto___17803) {
      args17203.push(arguments[i__5566__auto___17804]);
      var G__17805 = i__5566__auto___17804 + 1;
      i__5566__auto___17804 = G__17805;
      continue;
    } else {
    }
    break;
  }
  var G__17207 = args17203.length;
  switch(G__17207) {
    case 0:
      return om_tools.dom.del.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17203.slice(1), 0);
      return om_tools.dom.del.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.del.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.del, null, null);
};
om_tools.dom.del.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.del, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.del.cljs$lang$applyTo = function(seq17204) {
  var G__17205 = cljs.core.first.call(null, seq17204);
  var seq17204__$1 = cljs.core.next.call(null, seq17204);
  return om_tools.dom.del.cljs$core$IFn$_invoke$arity$variadic(G__17205, seq17204__$1);
};
om_tools.dom.del.cljs$lang$maxFixedArity = 1;
om_tools.dom.dfn = function om_tools$dom$dfn() {
  var args17208 = [];
  var len__5565__auto___17807 = arguments.length;
  var i__5566__auto___17808 = 0;
  while (true) {
    if (i__5566__auto___17808 < len__5565__auto___17807) {
      args17208.push(arguments[i__5566__auto___17808]);
      var G__17809 = i__5566__auto___17808 + 1;
      i__5566__auto___17808 = G__17809;
      continue;
    } else {
    }
    break;
  }
  var G__17212 = args17208.length;
  switch(G__17212) {
    case 0:
      return om_tools.dom.dfn.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17208.slice(1), 0);
      return om_tools.dom.dfn.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.dfn.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.dfn, null, null);
};
om_tools.dom.dfn.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.dfn, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.dfn.cljs$lang$applyTo = function(seq17209) {
  var G__17210 = cljs.core.first.call(null, seq17209);
  var seq17209__$1 = cljs.core.next.call(null, seq17209);
  return om_tools.dom.dfn.cljs$core$IFn$_invoke$arity$variadic(G__17210, seq17209__$1);
};
om_tools.dom.dfn.cljs$lang$maxFixedArity = 1;
om_tools.dom.div = function om_tools$dom$div() {
  var args17213 = [];
  var len__5565__auto___17811 = arguments.length;
  var i__5566__auto___17812 = 0;
  while (true) {
    if (i__5566__auto___17812 < len__5565__auto___17811) {
      args17213.push(arguments[i__5566__auto___17812]);
      var G__17813 = i__5566__auto___17812 + 1;
      i__5566__auto___17812 = G__17813;
      continue;
    } else {
    }
    break;
  }
  var G__17217 = args17213.length;
  switch(G__17217) {
    case 0:
      return om_tools.dom.div.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17213.slice(1), 0);
      return om_tools.dom.div.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.div.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.div, null, null);
};
om_tools.dom.div.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.div, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.div.cljs$lang$applyTo = function(seq17214) {
  var G__17215 = cljs.core.first.call(null, seq17214);
  var seq17214__$1 = cljs.core.next.call(null, seq17214);
  return om_tools.dom.div.cljs$core$IFn$_invoke$arity$variadic(G__17215, seq17214__$1);
};
om_tools.dom.div.cljs$lang$maxFixedArity = 1;
om_tools.dom.dl = function om_tools$dom$dl() {
  var args17218 = [];
  var len__5565__auto___17815 = arguments.length;
  var i__5566__auto___17816 = 0;
  while (true) {
    if (i__5566__auto___17816 < len__5565__auto___17815) {
      args17218.push(arguments[i__5566__auto___17816]);
      var G__17817 = i__5566__auto___17816 + 1;
      i__5566__auto___17816 = G__17817;
      continue;
    } else {
    }
    break;
  }
  var G__17222 = args17218.length;
  switch(G__17222) {
    case 0:
      return om_tools.dom.dl.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17218.slice(1), 0);
      return om_tools.dom.dl.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.dl.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.dl, null, null);
};
om_tools.dom.dl.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.dl, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.dl.cljs$lang$applyTo = function(seq17219) {
  var G__17220 = cljs.core.first.call(null, seq17219);
  var seq17219__$1 = cljs.core.next.call(null, seq17219);
  return om_tools.dom.dl.cljs$core$IFn$_invoke$arity$variadic(G__17220, seq17219__$1);
};
om_tools.dom.dl.cljs$lang$maxFixedArity = 1;
om_tools.dom.dt = function om_tools$dom$dt() {
  var args17223 = [];
  var len__5565__auto___17819 = arguments.length;
  var i__5566__auto___17820 = 0;
  while (true) {
    if (i__5566__auto___17820 < len__5565__auto___17819) {
      args17223.push(arguments[i__5566__auto___17820]);
      var G__17821 = i__5566__auto___17820 + 1;
      i__5566__auto___17820 = G__17821;
      continue;
    } else {
    }
    break;
  }
  var G__17227 = args17223.length;
  switch(G__17227) {
    case 0:
      return om_tools.dom.dt.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17223.slice(1), 0);
      return om_tools.dom.dt.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.dt.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.dt, null, null);
};
om_tools.dom.dt.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.dt, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.dt.cljs$lang$applyTo = function(seq17224) {
  var G__17225 = cljs.core.first.call(null, seq17224);
  var seq17224__$1 = cljs.core.next.call(null, seq17224);
  return om_tools.dom.dt.cljs$core$IFn$_invoke$arity$variadic(G__17225, seq17224__$1);
};
om_tools.dom.dt.cljs$lang$maxFixedArity = 1;
om_tools.dom.em = function om_tools$dom$em() {
  var args17228 = [];
  var len__5565__auto___17823 = arguments.length;
  var i__5566__auto___17824 = 0;
  while (true) {
    if (i__5566__auto___17824 < len__5565__auto___17823) {
      args17228.push(arguments[i__5566__auto___17824]);
      var G__17825 = i__5566__auto___17824 + 1;
      i__5566__auto___17824 = G__17825;
      continue;
    } else {
    }
    break;
  }
  var G__17232 = args17228.length;
  switch(G__17232) {
    case 0:
      return om_tools.dom.em.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17228.slice(1), 0);
      return om_tools.dom.em.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.em.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.em, null, null);
};
om_tools.dom.em.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.em, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.em.cljs$lang$applyTo = function(seq17229) {
  var G__17230 = cljs.core.first.call(null, seq17229);
  var seq17229__$1 = cljs.core.next.call(null, seq17229);
  return om_tools.dom.em.cljs$core$IFn$_invoke$arity$variadic(G__17230, seq17229__$1);
};
om_tools.dom.em.cljs$lang$maxFixedArity = 1;
om_tools.dom.embed = function om_tools$dom$embed() {
  var args17233 = [];
  var len__5565__auto___17827 = arguments.length;
  var i__5566__auto___17828 = 0;
  while (true) {
    if (i__5566__auto___17828 < len__5565__auto___17827) {
      args17233.push(arguments[i__5566__auto___17828]);
      var G__17829 = i__5566__auto___17828 + 1;
      i__5566__auto___17828 = G__17829;
      continue;
    } else {
    }
    break;
  }
  var G__17237 = args17233.length;
  switch(G__17237) {
    case 0:
      return om_tools.dom.embed.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17233.slice(1), 0);
      return om_tools.dom.embed.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.embed.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.embed, null, null);
};
om_tools.dom.embed.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.embed, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.embed.cljs$lang$applyTo = function(seq17234) {
  var G__17235 = cljs.core.first.call(null, seq17234);
  var seq17234__$1 = cljs.core.next.call(null, seq17234);
  return om_tools.dom.embed.cljs$core$IFn$_invoke$arity$variadic(G__17235, seq17234__$1);
};
om_tools.dom.embed.cljs$lang$maxFixedArity = 1;
om_tools.dom.fieldset = function om_tools$dom$fieldset() {
  var args17243 = [];
  var len__5565__auto___17831 = arguments.length;
  var i__5566__auto___17832 = 0;
  while (true) {
    if (i__5566__auto___17832 < len__5565__auto___17831) {
      args17243.push(arguments[i__5566__auto___17832]);
      var G__17833 = i__5566__auto___17832 + 1;
      i__5566__auto___17832 = G__17833;
      continue;
    } else {
    }
    break;
  }
  var G__17247 = args17243.length;
  switch(G__17247) {
    case 0:
      return om_tools.dom.fieldset.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17243.slice(1), 0);
      return om_tools.dom.fieldset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.fieldset.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.fieldset, null, null);
};
om_tools.dom.fieldset.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.fieldset, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.fieldset.cljs$lang$applyTo = function(seq17244) {
  var G__17245 = cljs.core.first.call(null, seq17244);
  var seq17244__$1 = cljs.core.next.call(null, seq17244);
  return om_tools.dom.fieldset.cljs$core$IFn$_invoke$arity$variadic(G__17245, seq17244__$1);
};
om_tools.dom.fieldset.cljs$lang$maxFixedArity = 1;
om_tools.dom.figcaption = function om_tools$dom$figcaption() {
  var args17248 = [];
  var len__5565__auto___17835 = arguments.length;
  var i__5566__auto___17836 = 0;
  while (true) {
    if (i__5566__auto___17836 < len__5565__auto___17835) {
      args17248.push(arguments[i__5566__auto___17836]);
      var G__17837 = i__5566__auto___17836 + 1;
      i__5566__auto___17836 = G__17837;
      continue;
    } else {
    }
    break;
  }
  var G__17252 = args17248.length;
  switch(G__17252) {
    case 0:
      return om_tools.dom.figcaption.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17248.slice(1), 0);
      return om_tools.dom.figcaption.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.figcaption.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.figcaption, null, null);
};
om_tools.dom.figcaption.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.figcaption, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.figcaption.cljs$lang$applyTo = function(seq17249) {
  var G__17250 = cljs.core.first.call(null, seq17249);
  var seq17249__$1 = cljs.core.next.call(null, seq17249);
  return om_tools.dom.figcaption.cljs$core$IFn$_invoke$arity$variadic(G__17250, seq17249__$1);
};
om_tools.dom.figcaption.cljs$lang$maxFixedArity = 1;
om_tools.dom.figure = function om_tools$dom$figure() {
  var args17253 = [];
  var len__5565__auto___17839 = arguments.length;
  var i__5566__auto___17840 = 0;
  while (true) {
    if (i__5566__auto___17840 < len__5565__auto___17839) {
      args17253.push(arguments[i__5566__auto___17840]);
      var G__17841 = i__5566__auto___17840 + 1;
      i__5566__auto___17840 = G__17841;
      continue;
    } else {
    }
    break;
  }
  var G__17257 = args17253.length;
  switch(G__17257) {
    case 0:
      return om_tools.dom.figure.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17253.slice(1), 0);
      return om_tools.dom.figure.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.figure.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.figure, null, null);
};
om_tools.dom.figure.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.figure, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.figure.cljs$lang$applyTo = function(seq17254) {
  var G__17255 = cljs.core.first.call(null, seq17254);
  var seq17254__$1 = cljs.core.next.call(null, seq17254);
  return om_tools.dom.figure.cljs$core$IFn$_invoke$arity$variadic(G__17255, seq17254__$1);
};
om_tools.dom.figure.cljs$lang$maxFixedArity = 1;
om_tools.dom.footer = function om_tools$dom$footer() {
  var args17258 = [];
  var len__5565__auto___17843 = arguments.length;
  var i__5566__auto___17844 = 0;
  while (true) {
    if (i__5566__auto___17844 < len__5565__auto___17843) {
      args17258.push(arguments[i__5566__auto___17844]);
      var G__17845 = i__5566__auto___17844 + 1;
      i__5566__auto___17844 = G__17845;
      continue;
    } else {
    }
    break;
  }
  var G__17262 = args17258.length;
  switch(G__17262) {
    case 0:
      return om_tools.dom.footer.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17258.slice(1), 0);
      return om_tools.dom.footer.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.footer.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.footer, null, null);
};
om_tools.dom.footer.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.footer, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.footer.cljs$lang$applyTo = function(seq17259) {
  var G__17260 = cljs.core.first.call(null, seq17259);
  var seq17259__$1 = cljs.core.next.call(null, seq17259);
  return om_tools.dom.footer.cljs$core$IFn$_invoke$arity$variadic(G__17260, seq17259__$1);
};
om_tools.dom.footer.cljs$lang$maxFixedArity = 1;
om_tools.dom.form = function om_tools$dom$form() {
  var args17263 = [];
  var len__5565__auto___17847 = arguments.length;
  var i__5566__auto___17848 = 0;
  while (true) {
    if (i__5566__auto___17848 < len__5565__auto___17847) {
      args17263.push(arguments[i__5566__auto___17848]);
      var G__17849 = i__5566__auto___17848 + 1;
      i__5566__auto___17848 = G__17849;
      continue;
    } else {
    }
    break;
  }
  var G__17267 = args17263.length;
  switch(G__17267) {
    case 0:
      return om_tools.dom.form.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17263.slice(1), 0);
      return om_tools.dom.form.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.form.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.form, null, null);
};
om_tools.dom.form.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.form, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.form.cljs$lang$applyTo = function(seq17264) {
  var G__17265 = cljs.core.first.call(null, seq17264);
  var seq17264__$1 = cljs.core.next.call(null, seq17264);
  return om_tools.dom.form.cljs$core$IFn$_invoke$arity$variadic(G__17265, seq17264__$1);
};
om_tools.dom.form.cljs$lang$maxFixedArity = 1;
om_tools.dom.h1 = function om_tools$dom$h1() {
  var args17268 = [];
  var len__5565__auto___17851 = arguments.length;
  var i__5566__auto___17852 = 0;
  while (true) {
    if (i__5566__auto___17852 < len__5565__auto___17851) {
      args17268.push(arguments[i__5566__auto___17852]);
      var G__17853 = i__5566__auto___17852 + 1;
      i__5566__auto___17852 = G__17853;
      continue;
    } else {
    }
    break;
  }
  var G__17272 = args17268.length;
  switch(G__17272) {
    case 0:
      return om_tools.dom.h1.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17268.slice(1), 0);
      return om_tools.dom.h1.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.h1.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.h1, null, null);
};
om_tools.dom.h1.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.h1, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.h1.cljs$lang$applyTo = function(seq17269) {
  var G__17270 = cljs.core.first.call(null, seq17269);
  var seq17269__$1 = cljs.core.next.call(null, seq17269);
  return om_tools.dom.h1.cljs$core$IFn$_invoke$arity$variadic(G__17270, seq17269__$1);
};
om_tools.dom.h1.cljs$lang$maxFixedArity = 1;
om_tools.dom.h2 = function om_tools$dom$h2() {
  var args17273 = [];
  var len__5565__auto___17855 = arguments.length;
  var i__5566__auto___17856 = 0;
  while (true) {
    if (i__5566__auto___17856 < len__5565__auto___17855) {
      args17273.push(arguments[i__5566__auto___17856]);
      var G__17857 = i__5566__auto___17856 + 1;
      i__5566__auto___17856 = G__17857;
      continue;
    } else {
    }
    break;
  }
  var G__17277 = args17273.length;
  switch(G__17277) {
    case 0:
      return om_tools.dom.h2.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17273.slice(1), 0);
      return om_tools.dom.h2.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.h2.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.h2, null, null);
};
om_tools.dom.h2.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.h2, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.h2.cljs$lang$applyTo = function(seq17274) {
  var G__17275 = cljs.core.first.call(null, seq17274);
  var seq17274__$1 = cljs.core.next.call(null, seq17274);
  return om_tools.dom.h2.cljs$core$IFn$_invoke$arity$variadic(G__17275, seq17274__$1);
};
om_tools.dom.h2.cljs$lang$maxFixedArity = 1;
om_tools.dom.h3 = function om_tools$dom$h3() {
  var args17278 = [];
  var len__5565__auto___17859 = arguments.length;
  var i__5566__auto___17860 = 0;
  while (true) {
    if (i__5566__auto___17860 < len__5565__auto___17859) {
      args17278.push(arguments[i__5566__auto___17860]);
      var G__17861 = i__5566__auto___17860 + 1;
      i__5566__auto___17860 = G__17861;
      continue;
    } else {
    }
    break;
  }
  var G__17282 = args17278.length;
  switch(G__17282) {
    case 0:
      return om_tools.dom.h3.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17278.slice(1), 0);
      return om_tools.dom.h3.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.h3.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.h3, null, null);
};
om_tools.dom.h3.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.h3, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.h3.cljs$lang$applyTo = function(seq17279) {
  var G__17280 = cljs.core.first.call(null, seq17279);
  var seq17279__$1 = cljs.core.next.call(null, seq17279);
  return om_tools.dom.h3.cljs$core$IFn$_invoke$arity$variadic(G__17280, seq17279__$1);
};
om_tools.dom.h3.cljs$lang$maxFixedArity = 1;
om_tools.dom.h4 = function om_tools$dom$h4() {
  var args17283 = [];
  var len__5565__auto___17863 = arguments.length;
  var i__5566__auto___17864 = 0;
  while (true) {
    if (i__5566__auto___17864 < len__5565__auto___17863) {
      args17283.push(arguments[i__5566__auto___17864]);
      var G__17865 = i__5566__auto___17864 + 1;
      i__5566__auto___17864 = G__17865;
      continue;
    } else {
    }
    break;
  }
  var G__17287 = args17283.length;
  switch(G__17287) {
    case 0:
      return om_tools.dom.h4.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17283.slice(1), 0);
      return om_tools.dom.h4.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.h4.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.h4, null, null);
};
om_tools.dom.h4.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.h4, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.h4.cljs$lang$applyTo = function(seq17284) {
  var G__17285 = cljs.core.first.call(null, seq17284);
  var seq17284__$1 = cljs.core.next.call(null, seq17284);
  return om_tools.dom.h4.cljs$core$IFn$_invoke$arity$variadic(G__17285, seq17284__$1);
};
om_tools.dom.h4.cljs$lang$maxFixedArity = 1;
om_tools.dom.h5 = function om_tools$dom$h5() {
  var args17288 = [];
  var len__5565__auto___17867 = arguments.length;
  var i__5566__auto___17868 = 0;
  while (true) {
    if (i__5566__auto___17868 < len__5565__auto___17867) {
      args17288.push(arguments[i__5566__auto___17868]);
      var G__17869 = i__5566__auto___17868 + 1;
      i__5566__auto___17868 = G__17869;
      continue;
    } else {
    }
    break;
  }
  var G__17292 = args17288.length;
  switch(G__17292) {
    case 0:
      return om_tools.dom.h5.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17288.slice(1), 0);
      return om_tools.dom.h5.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.h5.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.h5, null, null);
};
om_tools.dom.h5.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.h5, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.h5.cljs$lang$applyTo = function(seq17289) {
  var G__17290 = cljs.core.first.call(null, seq17289);
  var seq17289__$1 = cljs.core.next.call(null, seq17289);
  return om_tools.dom.h5.cljs$core$IFn$_invoke$arity$variadic(G__17290, seq17289__$1);
};
om_tools.dom.h5.cljs$lang$maxFixedArity = 1;
om_tools.dom.h6 = function om_tools$dom$h6() {
  var args17293 = [];
  var len__5565__auto___17871 = arguments.length;
  var i__5566__auto___17872 = 0;
  while (true) {
    if (i__5566__auto___17872 < len__5565__auto___17871) {
      args17293.push(arguments[i__5566__auto___17872]);
      var G__17873 = i__5566__auto___17872 + 1;
      i__5566__auto___17872 = G__17873;
      continue;
    } else {
    }
    break;
  }
  var G__17297 = args17293.length;
  switch(G__17297) {
    case 0:
      return om_tools.dom.h6.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17293.slice(1), 0);
      return om_tools.dom.h6.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.h6.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.h6, null, null);
};
om_tools.dom.h6.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.h6, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.h6.cljs$lang$applyTo = function(seq17294) {
  var G__17295 = cljs.core.first.call(null, seq17294);
  var seq17294__$1 = cljs.core.next.call(null, seq17294);
  return om_tools.dom.h6.cljs$core$IFn$_invoke$arity$variadic(G__17295, seq17294__$1);
};
om_tools.dom.h6.cljs$lang$maxFixedArity = 1;
om_tools.dom.head = function om_tools$dom$head() {
  var args17298 = [];
  var len__5565__auto___17875 = arguments.length;
  var i__5566__auto___17876 = 0;
  while (true) {
    if (i__5566__auto___17876 < len__5565__auto___17875) {
      args17298.push(arguments[i__5566__auto___17876]);
      var G__17877 = i__5566__auto___17876 + 1;
      i__5566__auto___17876 = G__17877;
      continue;
    } else {
    }
    break;
  }
  var G__17302 = args17298.length;
  switch(G__17302) {
    case 0:
      return om_tools.dom.head.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17298.slice(1), 0);
      return om_tools.dom.head.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.head.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.head, null, null);
};
om_tools.dom.head.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.head, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.head.cljs$lang$applyTo = function(seq17299) {
  var G__17300 = cljs.core.first.call(null, seq17299);
  var seq17299__$1 = cljs.core.next.call(null, seq17299);
  return om_tools.dom.head.cljs$core$IFn$_invoke$arity$variadic(G__17300, seq17299__$1);
};
om_tools.dom.head.cljs$lang$maxFixedArity = 1;
om_tools.dom.header = function om_tools$dom$header() {
  var args17303 = [];
  var len__5565__auto___17879 = arguments.length;
  var i__5566__auto___17880 = 0;
  while (true) {
    if (i__5566__auto___17880 < len__5565__auto___17879) {
      args17303.push(arguments[i__5566__auto___17880]);
      var G__17881 = i__5566__auto___17880 + 1;
      i__5566__auto___17880 = G__17881;
      continue;
    } else {
    }
    break;
  }
  var G__17307 = args17303.length;
  switch(G__17307) {
    case 0:
      return om_tools.dom.header.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17303.slice(1), 0);
      return om_tools.dom.header.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.header.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.header, null, null);
};
om_tools.dom.header.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.header, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.header.cljs$lang$applyTo = function(seq17304) {
  var G__17305 = cljs.core.first.call(null, seq17304);
  var seq17304__$1 = cljs.core.next.call(null, seq17304);
  return om_tools.dom.header.cljs$core$IFn$_invoke$arity$variadic(G__17305, seq17304__$1);
};
om_tools.dom.header.cljs$lang$maxFixedArity = 1;
om_tools.dom.hr = function om_tools$dom$hr() {
  var args17308 = [];
  var len__5565__auto___17883 = arguments.length;
  var i__5566__auto___17884 = 0;
  while (true) {
    if (i__5566__auto___17884 < len__5565__auto___17883) {
      args17308.push(arguments[i__5566__auto___17884]);
      var G__17885 = i__5566__auto___17884 + 1;
      i__5566__auto___17884 = G__17885;
      continue;
    } else {
    }
    break;
  }
  var G__17312 = args17308.length;
  switch(G__17312) {
    case 0:
      return om_tools.dom.hr.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17308.slice(1), 0);
      return om_tools.dom.hr.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.hr.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.hr, null, null);
};
om_tools.dom.hr.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.hr, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.hr.cljs$lang$applyTo = function(seq17309) {
  var G__17310 = cljs.core.first.call(null, seq17309);
  var seq17309__$1 = cljs.core.next.call(null, seq17309);
  return om_tools.dom.hr.cljs$core$IFn$_invoke$arity$variadic(G__17310, seq17309__$1);
};
om_tools.dom.hr.cljs$lang$maxFixedArity = 1;
om_tools.dom.html = function om_tools$dom$html() {
  var args17313 = [];
  var len__5565__auto___17887 = arguments.length;
  var i__5566__auto___17888 = 0;
  while (true) {
    if (i__5566__auto___17888 < len__5565__auto___17887) {
      args17313.push(arguments[i__5566__auto___17888]);
      var G__17889 = i__5566__auto___17888 + 1;
      i__5566__auto___17888 = G__17889;
      continue;
    } else {
    }
    break;
  }
  var G__17317 = args17313.length;
  switch(G__17317) {
    case 0:
      return om_tools.dom.html.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17313.slice(1), 0);
      return om_tools.dom.html.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.html.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.html, null, null);
};
om_tools.dom.html.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.html, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.html.cljs$lang$applyTo = function(seq17314) {
  var G__17315 = cljs.core.first.call(null, seq17314);
  var seq17314__$1 = cljs.core.next.call(null, seq17314);
  return om_tools.dom.html.cljs$core$IFn$_invoke$arity$variadic(G__17315, seq17314__$1);
};
om_tools.dom.html.cljs$lang$maxFixedArity = 1;
om_tools.dom.i = function om_tools$dom$i() {
  var args17318 = [];
  var len__5565__auto___17891 = arguments.length;
  var i__5566__auto___17892 = 0;
  while (true) {
    if (i__5566__auto___17892 < len__5565__auto___17891) {
      args17318.push(arguments[i__5566__auto___17892]);
      var G__17893 = i__5566__auto___17892 + 1;
      i__5566__auto___17892 = G__17893;
      continue;
    } else {
    }
    break;
  }
  var G__17322 = args17318.length;
  switch(G__17322) {
    case 0:
      return om_tools.dom.i.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17318.slice(1), 0);
      return om_tools.dom.i.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.i.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.i, null, null);
};
om_tools.dom.i.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.i, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.i.cljs$lang$applyTo = function(seq17319) {
  var G__17320 = cljs.core.first.call(null, seq17319);
  var seq17319__$1 = cljs.core.next.call(null, seq17319);
  return om_tools.dom.i.cljs$core$IFn$_invoke$arity$variadic(G__17320, seq17319__$1);
};
om_tools.dom.i.cljs$lang$maxFixedArity = 1;
om_tools.dom.iframe = function om_tools$dom$iframe() {
  var args17323 = [];
  var len__5565__auto___17895 = arguments.length;
  var i__5566__auto___17896 = 0;
  while (true) {
    if (i__5566__auto___17896 < len__5565__auto___17895) {
      args17323.push(arguments[i__5566__auto___17896]);
      var G__17897 = i__5566__auto___17896 + 1;
      i__5566__auto___17896 = G__17897;
      continue;
    } else {
    }
    break;
  }
  var G__17327 = args17323.length;
  switch(G__17327) {
    case 0:
      return om_tools.dom.iframe.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17323.slice(1), 0);
      return om_tools.dom.iframe.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.iframe.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.iframe, null, null);
};
om_tools.dom.iframe.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.iframe, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.iframe.cljs$lang$applyTo = function(seq17324) {
  var G__17325 = cljs.core.first.call(null, seq17324);
  var seq17324__$1 = cljs.core.next.call(null, seq17324);
  return om_tools.dom.iframe.cljs$core$IFn$_invoke$arity$variadic(G__17325, seq17324__$1);
};
om_tools.dom.iframe.cljs$lang$maxFixedArity = 1;
om_tools.dom.img = function om_tools$dom$img() {
  var args17328 = [];
  var len__5565__auto___17899 = arguments.length;
  var i__5566__auto___17900 = 0;
  while (true) {
    if (i__5566__auto___17900 < len__5565__auto___17899) {
      args17328.push(arguments[i__5566__auto___17900]);
      var G__17901 = i__5566__auto___17900 + 1;
      i__5566__auto___17900 = G__17901;
      continue;
    } else {
    }
    break;
  }
  var G__17332 = args17328.length;
  switch(G__17332) {
    case 0:
      return om_tools.dom.img.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17328.slice(1), 0);
      return om_tools.dom.img.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.img.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.img, null, null);
};
om_tools.dom.img.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.img, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.img.cljs$lang$applyTo = function(seq17329) {
  var G__17330 = cljs.core.first.call(null, seq17329);
  var seq17329__$1 = cljs.core.next.call(null, seq17329);
  return om_tools.dom.img.cljs$core$IFn$_invoke$arity$variadic(G__17330, seq17329__$1);
};
om_tools.dom.img.cljs$lang$maxFixedArity = 1;
om_tools.dom.ins = function om_tools$dom$ins() {
  var args17333 = [];
  var len__5565__auto___17903 = arguments.length;
  var i__5566__auto___17904 = 0;
  while (true) {
    if (i__5566__auto___17904 < len__5565__auto___17903) {
      args17333.push(arguments[i__5566__auto___17904]);
      var G__17905 = i__5566__auto___17904 + 1;
      i__5566__auto___17904 = G__17905;
      continue;
    } else {
    }
    break;
  }
  var G__17337 = args17333.length;
  switch(G__17337) {
    case 0:
      return om_tools.dom.ins.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17333.slice(1), 0);
      return om_tools.dom.ins.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.ins.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.ins, null, null);
};
om_tools.dom.ins.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.ins, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.ins.cljs$lang$applyTo = function(seq17334) {
  var G__17335 = cljs.core.first.call(null, seq17334);
  var seq17334__$1 = cljs.core.next.call(null, seq17334);
  return om_tools.dom.ins.cljs$core$IFn$_invoke$arity$variadic(G__17335, seq17334__$1);
};
om_tools.dom.ins.cljs$lang$maxFixedArity = 1;
om_tools.dom.kbd = function om_tools$dom$kbd() {
  var args17338 = [];
  var len__5565__auto___17907 = arguments.length;
  var i__5566__auto___17908 = 0;
  while (true) {
    if (i__5566__auto___17908 < len__5565__auto___17907) {
      args17338.push(arguments[i__5566__auto___17908]);
      var G__17909 = i__5566__auto___17908 + 1;
      i__5566__auto___17908 = G__17909;
      continue;
    } else {
    }
    break;
  }
  var G__17342 = args17338.length;
  switch(G__17342) {
    case 0:
      return om_tools.dom.kbd.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17338.slice(1), 0);
      return om_tools.dom.kbd.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.kbd.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.kbd, null, null);
};
om_tools.dom.kbd.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.kbd, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.kbd.cljs$lang$applyTo = function(seq17339) {
  var G__17340 = cljs.core.first.call(null, seq17339);
  var seq17339__$1 = cljs.core.next.call(null, seq17339);
  return om_tools.dom.kbd.cljs$core$IFn$_invoke$arity$variadic(G__17340, seq17339__$1);
};
om_tools.dom.kbd.cljs$lang$maxFixedArity = 1;
om_tools.dom.keygen = function om_tools$dom$keygen() {
  var args17343 = [];
  var len__5565__auto___17911 = arguments.length;
  var i__5566__auto___17912 = 0;
  while (true) {
    if (i__5566__auto___17912 < len__5565__auto___17911) {
      args17343.push(arguments[i__5566__auto___17912]);
      var G__17913 = i__5566__auto___17912 + 1;
      i__5566__auto___17912 = G__17913;
      continue;
    } else {
    }
    break;
  }
  var G__17347 = args17343.length;
  switch(G__17347) {
    case 0:
      return om_tools.dom.keygen.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17343.slice(1), 0);
      return om_tools.dom.keygen.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.keygen.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.keygen, null, null);
};
om_tools.dom.keygen.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.keygen, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.keygen.cljs$lang$applyTo = function(seq17344) {
  var G__17345 = cljs.core.first.call(null, seq17344);
  var seq17344__$1 = cljs.core.next.call(null, seq17344);
  return om_tools.dom.keygen.cljs$core$IFn$_invoke$arity$variadic(G__17345, seq17344__$1);
};
om_tools.dom.keygen.cljs$lang$maxFixedArity = 1;
om_tools.dom.label = function om_tools$dom$label() {
  var args17348 = [];
  var len__5565__auto___17915 = arguments.length;
  var i__5566__auto___17916 = 0;
  while (true) {
    if (i__5566__auto___17916 < len__5565__auto___17915) {
      args17348.push(arguments[i__5566__auto___17916]);
      var G__17917 = i__5566__auto___17916 + 1;
      i__5566__auto___17916 = G__17917;
      continue;
    } else {
    }
    break;
  }
  var G__17352 = args17348.length;
  switch(G__17352) {
    case 0:
      return om_tools.dom.label.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17348.slice(1), 0);
      return om_tools.dom.label.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.label.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.label, null, null);
};
om_tools.dom.label.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.label, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.label.cljs$lang$applyTo = function(seq17349) {
  var G__17350 = cljs.core.first.call(null, seq17349);
  var seq17349__$1 = cljs.core.next.call(null, seq17349);
  return om_tools.dom.label.cljs$core$IFn$_invoke$arity$variadic(G__17350, seq17349__$1);
};
om_tools.dom.label.cljs$lang$maxFixedArity = 1;
om_tools.dom.legend = function om_tools$dom$legend() {
  var args17353 = [];
  var len__5565__auto___17919 = arguments.length;
  var i__5566__auto___17920 = 0;
  while (true) {
    if (i__5566__auto___17920 < len__5565__auto___17919) {
      args17353.push(arguments[i__5566__auto___17920]);
      var G__17921 = i__5566__auto___17920 + 1;
      i__5566__auto___17920 = G__17921;
      continue;
    } else {
    }
    break;
  }
  var G__17357 = args17353.length;
  switch(G__17357) {
    case 0:
      return om_tools.dom.legend.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17353.slice(1), 0);
      return om_tools.dom.legend.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.legend.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.legend, null, null);
};
om_tools.dom.legend.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.legend, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.legend.cljs$lang$applyTo = function(seq17354) {
  var G__17355 = cljs.core.first.call(null, seq17354);
  var seq17354__$1 = cljs.core.next.call(null, seq17354);
  return om_tools.dom.legend.cljs$core$IFn$_invoke$arity$variadic(G__17355, seq17354__$1);
};
om_tools.dom.legend.cljs$lang$maxFixedArity = 1;
om_tools.dom.li = function om_tools$dom$li() {
  var args17358 = [];
  var len__5565__auto___17923 = arguments.length;
  var i__5566__auto___17924 = 0;
  while (true) {
    if (i__5566__auto___17924 < len__5565__auto___17923) {
      args17358.push(arguments[i__5566__auto___17924]);
      var G__17925 = i__5566__auto___17924 + 1;
      i__5566__auto___17924 = G__17925;
      continue;
    } else {
    }
    break;
  }
  var G__17362 = args17358.length;
  switch(G__17362) {
    case 0:
      return om_tools.dom.li.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17358.slice(1), 0);
      return om_tools.dom.li.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.li.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.li, null, null);
};
om_tools.dom.li.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.li, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.li.cljs$lang$applyTo = function(seq17359) {
  var G__17360 = cljs.core.first.call(null, seq17359);
  var seq17359__$1 = cljs.core.next.call(null, seq17359);
  return om_tools.dom.li.cljs$core$IFn$_invoke$arity$variadic(G__17360, seq17359__$1);
};
om_tools.dom.li.cljs$lang$maxFixedArity = 1;
om_tools.dom.link = function om_tools$dom$link() {
  var args17363 = [];
  var len__5565__auto___17927 = arguments.length;
  var i__5566__auto___17928 = 0;
  while (true) {
    if (i__5566__auto___17928 < len__5565__auto___17927) {
      args17363.push(arguments[i__5566__auto___17928]);
      var G__17929 = i__5566__auto___17928 + 1;
      i__5566__auto___17928 = G__17929;
      continue;
    } else {
    }
    break;
  }
  var G__17367 = args17363.length;
  switch(G__17367) {
    case 0:
      return om_tools.dom.link.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17363.slice(1), 0);
      return om_tools.dom.link.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.link.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.link, null, null);
};
om_tools.dom.link.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.link, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.link.cljs$lang$applyTo = function(seq17364) {
  var G__17365 = cljs.core.first.call(null, seq17364);
  var seq17364__$1 = cljs.core.next.call(null, seq17364);
  return om_tools.dom.link.cljs$core$IFn$_invoke$arity$variadic(G__17365, seq17364__$1);
};
om_tools.dom.link.cljs$lang$maxFixedArity = 1;
om_tools.dom.main = function om_tools$dom$main() {
  var args17368 = [];
  var len__5565__auto___17931 = arguments.length;
  var i__5566__auto___17932 = 0;
  while (true) {
    if (i__5566__auto___17932 < len__5565__auto___17931) {
      args17368.push(arguments[i__5566__auto___17932]);
      var G__17933 = i__5566__auto___17932 + 1;
      i__5566__auto___17932 = G__17933;
      continue;
    } else {
    }
    break;
  }
  var G__17372 = args17368.length;
  switch(G__17372) {
    case 0:
      return om_tools.dom.main.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17368.slice(1), 0);
      return om_tools.dom.main.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.main.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.main, null, null);
};
om_tools.dom.main.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.main, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.main.cljs$lang$applyTo = function(seq17369) {
  var G__17370 = cljs.core.first.call(null, seq17369);
  var seq17369__$1 = cljs.core.next.call(null, seq17369);
  return om_tools.dom.main.cljs$core$IFn$_invoke$arity$variadic(G__17370, seq17369__$1);
};
om_tools.dom.main.cljs$lang$maxFixedArity = 1;
om_tools.dom.map = function om_tools$dom$map() {
  var args17373 = [];
  var len__5565__auto___17935 = arguments.length;
  var i__5566__auto___17936 = 0;
  while (true) {
    if (i__5566__auto___17936 < len__5565__auto___17935) {
      args17373.push(arguments[i__5566__auto___17936]);
      var G__17937 = i__5566__auto___17936 + 1;
      i__5566__auto___17936 = G__17937;
      continue;
    } else {
    }
    break;
  }
  var G__17377 = args17373.length;
  switch(G__17377) {
    case 0:
      return om_tools.dom.map.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17373.slice(1), 0);
      return om_tools.dom.map.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.map.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.map, null, null);
};
om_tools.dom.map.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.map, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.map.cljs$lang$applyTo = function(seq17374) {
  var G__17375 = cljs.core.first.call(null, seq17374);
  var seq17374__$1 = cljs.core.next.call(null, seq17374);
  return om_tools.dom.map.cljs$core$IFn$_invoke$arity$variadic(G__17375, seq17374__$1);
};
om_tools.dom.map.cljs$lang$maxFixedArity = 1;
om_tools.dom.mark = function om_tools$dom$mark() {
  var args17378 = [];
  var len__5565__auto___17939 = arguments.length;
  var i__5566__auto___17940 = 0;
  while (true) {
    if (i__5566__auto___17940 < len__5565__auto___17939) {
      args17378.push(arguments[i__5566__auto___17940]);
      var G__17941 = i__5566__auto___17940 + 1;
      i__5566__auto___17940 = G__17941;
      continue;
    } else {
    }
    break;
  }
  var G__17382 = args17378.length;
  switch(G__17382) {
    case 0:
      return om_tools.dom.mark.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17378.slice(1), 0);
      return om_tools.dom.mark.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.mark.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.mark, null, null);
};
om_tools.dom.mark.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.mark, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.mark.cljs$lang$applyTo = function(seq17379) {
  var G__17380 = cljs.core.first.call(null, seq17379);
  var seq17379__$1 = cljs.core.next.call(null, seq17379);
  return om_tools.dom.mark.cljs$core$IFn$_invoke$arity$variadic(G__17380, seq17379__$1);
};
om_tools.dom.mark.cljs$lang$maxFixedArity = 1;
om_tools.dom.marquee = function om_tools$dom$marquee() {
  var args17383 = [];
  var len__5565__auto___17943 = arguments.length;
  var i__5566__auto___17944 = 0;
  while (true) {
    if (i__5566__auto___17944 < len__5565__auto___17943) {
      args17383.push(arguments[i__5566__auto___17944]);
      var G__17945 = i__5566__auto___17944 + 1;
      i__5566__auto___17944 = G__17945;
      continue;
    } else {
    }
    break;
  }
  var G__17387 = args17383.length;
  switch(G__17387) {
    case 0:
      return om_tools.dom.marquee.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17383.slice(1), 0);
      return om_tools.dom.marquee.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.marquee.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.marquee, null, null);
};
om_tools.dom.marquee.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.marquee, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.marquee.cljs$lang$applyTo = function(seq17384) {
  var G__17385 = cljs.core.first.call(null, seq17384);
  var seq17384__$1 = cljs.core.next.call(null, seq17384);
  return om_tools.dom.marquee.cljs$core$IFn$_invoke$arity$variadic(G__17385, seq17384__$1);
};
om_tools.dom.marquee.cljs$lang$maxFixedArity = 1;
om_tools.dom.menu = function om_tools$dom$menu() {
  var args17388 = [];
  var len__5565__auto___17947 = arguments.length;
  var i__5566__auto___17948 = 0;
  while (true) {
    if (i__5566__auto___17948 < len__5565__auto___17947) {
      args17388.push(arguments[i__5566__auto___17948]);
      var G__17949 = i__5566__auto___17948 + 1;
      i__5566__auto___17948 = G__17949;
      continue;
    } else {
    }
    break;
  }
  var G__17392 = args17388.length;
  switch(G__17392) {
    case 0:
      return om_tools.dom.menu.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17388.slice(1), 0);
      return om_tools.dom.menu.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.menu.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.menu, null, null);
};
om_tools.dom.menu.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.menu, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.menu.cljs$lang$applyTo = function(seq17389) {
  var G__17390 = cljs.core.first.call(null, seq17389);
  var seq17389__$1 = cljs.core.next.call(null, seq17389);
  return om_tools.dom.menu.cljs$core$IFn$_invoke$arity$variadic(G__17390, seq17389__$1);
};
om_tools.dom.menu.cljs$lang$maxFixedArity = 1;
om_tools.dom.menuitem = function om_tools$dom$menuitem() {
  var args17393 = [];
  var len__5565__auto___17951 = arguments.length;
  var i__5566__auto___17952 = 0;
  while (true) {
    if (i__5566__auto___17952 < len__5565__auto___17951) {
      args17393.push(arguments[i__5566__auto___17952]);
      var G__17953 = i__5566__auto___17952 + 1;
      i__5566__auto___17952 = G__17953;
      continue;
    } else {
    }
    break;
  }
  var G__17397 = args17393.length;
  switch(G__17397) {
    case 0:
      return om_tools.dom.menuitem.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17393.slice(1), 0);
      return om_tools.dom.menuitem.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.menuitem.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.menuitem, null, null);
};
om_tools.dom.menuitem.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.menuitem, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.menuitem.cljs$lang$applyTo = function(seq17394) {
  var G__17395 = cljs.core.first.call(null, seq17394);
  var seq17394__$1 = cljs.core.next.call(null, seq17394);
  return om_tools.dom.menuitem.cljs$core$IFn$_invoke$arity$variadic(G__17395, seq17394__$1);
};
om_tools.dom.menuitem.cljs$lang$maxFixedArity = 1;
om_tools.dom.meta = function om_tools$dom$meta() {
  var args17398 = [];
  var len__5565__auto___17955 = arguments.length;
  var i__5566__auto___17956 = 0;
  while (true) {
    if (i__5566__auto___17956 < len__5565__auto___17955) {
      args17398.push(arguments[i__5566__auto___17956]);
      var G__17957 = i__5566__auto___17956 + 1;
      i__5566__auto___17956 = G__17957;
      continue;
    } else {
    }
    break;
  }
  var G__17402 = args17398.length;
  switch(G__17402) {
    case 0:
      return om_tools.dom.meta.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17398.slice(1), 0);
      return om_tools.dom.meta.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.meta.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.meta, null, null);
};
om_tools.dom.meta.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.meta, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.meta.cljs$lang$applyTo = function(seq17399) {
  var G__17400 = cljs.core.first.call(null, seq17399);
  var seq17399__$1 = cljs.core.next.call(null, seq17399);
  return om_tools.dom.meta.cljs$core$IFn$_invoke$arity$variadic(G__17400, seq17399__$1);
};
om_tools.dom.meta.cljs$lang$maxFixedArity = 1;
om_tools.dom.meter = function om_tools$dom$meter() {
  var args17403 = [];
  var len__5565__auto___17959 = arguments.length;
  var i__5566__auto___17960 = 0;
  while (true) {
    if (i__5566__auto___17960 < len__5565__auto___17959) {
      args17403.push(arguments[i__5566__auto___17960]);
      var G__17961 = i__5566__auto___17960 + 1;
      i__5566__auto___17960 = G__17961;
      continue;
    } else {
    }
    break;
  }
  var G__17407 = args17403.length;
  switch(G__17407) {
    case 0:
      return om_tools.dom.meter.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17403.slice(1), 0);
      return om_tools.dom.meter.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.meter.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.meter, null, null);
};
om_tools.dom.meter.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.meter, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.meter.cljs$lang$applyTo = function(seq17404) {
  var G__17405 = cljs.core.first.call(null, seq17404);
  var seq17404__$1 = cljs.core.next.call(null, seq17404);
  return om_tools.dom.meter.cljs$core$IFn$_invoke$arity$variadic(G__17405, seq17404__$1);
};
om_tools.dom.meter.cljs$lang$maxFixedArity = 1;
om_tools.dom.nav = function om_tools$dom$nav() {
  var args17408 = [];
  var len__5565__auto___17963 = arguments.length;
  var i__5566__auto___17964 = 0;
  while (true) {
    if (i__5566__auto___17964 < len__5565__auto___17963) {
      args17408.push(arguments[i__5566__auto___17964]);
      var G__17965 = i__5566__auto___17964 + 1;
      i__5566__auto___17964 = G__17965;
      continue;
    } else {
    }
    break;
  }
  var G__17412 = args17408.length;
  switch(G__17412) {
    case 0:
      return om_tools.dom.nav.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17408.slice(1), 0);
      return om_tools.dom.nav.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.nav.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.nav, null, null);
};
om_tools.dom.nav.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.nav, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.nav.cljs$lang$applyTo = function(seq17409) {
  var G__17410 = cljs.core.first.call(null, seq17409);
  var seq17409__$1 = cljs.core.next.call(null, seq17409);
  return om_tools.dom.nav.cljs$core$IFn$_invoke$arity$variadic(G__17410, seq17409__$1);
};
om_tools.dom.nav.cljs$lang$maxFixedArity = 1;
om_tools.dom.noscript = function om_tools$dom$noscript() {
  var args17413 = [];
  var len__5565__auto___17967 = arguments.length;
  var i__5566__auto___17968 = 0;
  while (true) {
    if (i__5566__auto___17968 < len__5565__auto___17967) {
      args17413.push(arguments[i__5566__auto___17968]);
      var G__17969 = i__5566__auto___17968 + 1;
      i__5566__auto___17968 = G__17969;
      continue;
    } else {
    }
    break;
  }
  var G__17417 = args17413.length;
  switch(G__17417) {
    case 0:
      return om_tools.dom.noscript.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17413.slice(1), 0);
      return om_tools.dom.noscript.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.noscript.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.noscript, null, null);
};
om_tools.dom.noscript.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.noscript, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.noscript.cljs$lang$applyTo = function(seq17414) {
  var G__17415 = cljs.core.first.call(null, seq17414);
  var seq17414__$1 = cljs.core.next.call(null, seq17414);
  return om_tools.dom.noscript.cljs$core$IFn$_invoke$arity$variadic(G__17415, seq17414__$1);
};
om_tools.dom.noscript.cljs$lang$maxFixedArity = 1;
om_tools.dom.object = function om_tools$dom$object() {
  var args17418 = [];
  var len__5565__auto___17971 = arguments.length;
  var i__5566__auto___17972 = 0;
  while (true) {
    if (i__5566__auto___17972 < len__5565__auto___17971) {
      args17418.push(arguments[i__5566__auto___17972]);
      var G__17973 = i__5566__auto___17972 + 1;
      i__5566__auto___17972 = G__17973;
      continue;
    } else {
    }
    break;
  }
  var G__17422 = args17418.length;
  switch(G__17422) {
    case 0:
      return om_tools.dom.object.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17418.slice(1), 0);
      return om_tools.dom.object.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.object.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.object, null, null);
};
om_tools.dom.object.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.object, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.object.cljs$lang$applyTo = function(seq17419) {
  var G__17420 = cljs.core.first.call(null, seq17419);
  var seq17419__$1 = cljs.core.next.call(null, seq17419);
  return om_tools.dom.object.cljs$core$IFn$_invoke$arity$variadic(G__17420, seq17419__$1);
};
om_tools.dom.object.cljs$lang$maxFixedArity = 1;
om_tools.dom.ol = function om_tools$dom$ol() {
  var args17423 = [];
  var len__5565__auto___17975 = arguments.length;
  var i__5566__auto___17976 = 0;
  while (true) {
    if (i__5566__auto___17976 < len__5565__auto___17975) {
      args17423.push(arguments[i__5566__auto___17976]);
      var G__17977 = i__5566__auto___17976 + 1;
      i__5566__auto___17976 = G__17977;
      continue;
    } else {
    }
    break;
  }
  var G__17427 = args17423.length;
  switch(G__17427) {
    case 0:
      return om_tools.dom.ol.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17423.slice(1), 0);
      return om_tools.dom.ol.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.ol.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.ol, null, null);
};
om_tools.dom.ol.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.ol, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.ol.cljs$lang$applyTo = function(seq17424) {
  var G__17425 = cljs.core.first.call(null, seq17424);
  var seq17424__$1 = cljs.core.next.call(null, seq17424);
  return om_tools.dom.ol.cljs$core$IFn$_invoke$arity$variadic(G__17425, seq17424__$1);
};
om_tools.dom.ol.cljs$lang$maxFixedArity = 1;
om_tools.dom.optgroup = function om_tools$dom$optgroup() {
  var args17428 = [];
  var len__5565__auto___17979 = arguments.length;
  var i__5566__auto___17980 = 0;
  while (true) {
    if (i__5566__auto___17980 < len__5565__auto___17979) {
      args17428.push(arguments[i__5566__auto___17980]);
      var G__17981 = i__5566__auto___17980 + 1;
      i__5566__auto___17980 = G__17981;
      continue;
    } else {
    }
    break;
  }
  var G__17432 = args17428.length;
  switch(G__17432) {
    case 0:
      return om_tools.dom.optgroup.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17428.slice(1), 0);
      return om_tools.dom.optgroup.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.optgroup.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.optgroup, null, null);
};
om_tools.dom.optgroup.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.optgroup, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.optgroup.cljs$lang$applyTo = function(seq17429) {
  var G__17430 = cljs.core.first.call(null, seq17429);
  var seq17429__$1 = cljs.core.next.call(null, seq17429);
  return om_tools.dom.optgroup.cljs$core$IFn$_invoke$arity$variadic(G__17430, seq17429__$1);
};
om_tools.dom.optgroup.cljs$lang$maxFixedArity = 1;
om_tools.dom.output = function om_tools$dom$output() {
  var args17433 = [];
  var len__5565__auto___17983 = arguments.length;
  var i__5566__auto___17984 = 0;
  while (true) {
    if (i__5566__auto___17984 < len__5565__auto___17983) {
      args17433.push(arguments[i__5566__auto___17984]);
      var G__17985 = i__5566__auto___17984 + 1;
      i__5566__auto___17984 = G__17985;
      continue;
    } else {
    }
    break;
  }
  var G__17437 = args17433.length;
  switch(G__17437) {
    case 0:
      return om_tools.dom.output.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17433.slice(1), 0);
      return om_tools.dom.output.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.output.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.output, null, null);
};
om_tools.dom.output.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.output, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.output.cljs$lang$applyTo = function(seq17434) {
  var G__17435 = cljs.core.first.call(null, seq17434);
  var seq17434__$1 = cljs.core.next.call(null, seq17434);
  return om_tools.dom.output.cljs$core$IFn$_invoke$arity$variadic(G__17435, seq17434__$1);
};
om_tools.dom.output.cljs$lang$maxFixedArity = 1;
om_tools.dom.p = function om_tools$dom$p() {
  var args17438 = [];
  var len__5565__auto___17987 = arguments.length;
  var i__5566__auto___17988 = 0;
  while (true) {
    if (i__5566__auto___17988 < len__5565__auto___17987) {
      args17438.push(arguments[i__5566__auto___17988]);
      var G__17989 = i__5566__auto___17988 + 1;
      i__5566__auto___17988 = G__17989;
      continue;
    } else {
    }
    break;
  }
  var G__17442 = args17438.length;
  switch(G__17442) {
    case 0:
      return om_tools.dom.p.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17438.slice(1), 0);
      return om_tools.dom.p.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.p.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.p, null, null);
};
om_tools.dom.p.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.p, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.p.cljs$lang$applyTo = function(seq17439) {
  var G__17440 = cljs.core.first.call(null, seq17439);
  var seq17439__$1 = cljs.core.next.call(null, seq17439);
  return om_tools.dom.p.cljs$core$IFn$_invoke$arity$variadic(G__17440, seq17439__$1);
};
om_tools.dom.p.cljs$lang$maxFixedArity = 1;
om_tools.dom.param = function om_tools$dom$param() {
  var args17443 = [];
  var len__5565__auto___17991 = arguments.length;
  var i__5566__auto___17992 = 0;
  while (true) {
    if (i__5566__auto___17992 < len__5565__auto___17991) {
      args17443.push(arguments[i__5566__auto___17992]);
      var G__17993 = i__5566__auto___17992 + 1;
      i__5566__auto___17992 = G__17993;
      continue;
    } else {
    }
    break;
  }
  var G__17447 = args17443.length;
  switch(G__17447) {
    case 0:
      return om_tools.dom.param.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17443.slice(1), 0);
      return om_tools.dom.param.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.param.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.param, null, null);
};
om_tools.dom.param.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.param, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.param.cljs$lang$applyTo = function(seq17444) {
  var G__17445 = cljs.core.first.call(null, seq17444);
  var seq17444__$1 = cljs.core.next.call(null, seq17444);
  return om_tools.dom.param.cljs$core$IFn$_invoke$arity$variadic(G__17445, seq17444__$1);
};
om_tools.dom.param.cljs$lang$maxFixedArity = 1;
om_tools.dom.pre = function om_tools$dom$pre() {
  var args17448 = [];
  var len__5565__auto___17995 = arguments.length;
  var i__5566__auto___17996 = 0;
  while (true) {
    if (i__5566__auto___17996 < len__5565__auto___17995) {
      args17448.push(arguments[i__5566__auto___17996]);
      var G__17997 = i__5566__auto___17996 + 1;
      i__5566__auto___17996 = G__17997;
      continue;
    } else {
    }
    break;
  }
  var G__17452 = args17448.length;
  switch(G__17452) {
    case 0:
      return om_tools.dom.pre.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17448.slice(1), 0);
      return om_tools.dom.pre.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.pre.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.pre, null, null);
};
om_tools.dom.pre.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.pre, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.pre.cljs$lang$applyTo = function(seq17449) {
  var G__17450 = cljs.core.first.call(null, seq17449);
  var seq17449__$1 = cljs.core.next.call(null, seq17449);
  return om_tools.dom.pre.cljs$core$IFn$_invoke$arity$variadic(G__17450, seq17449__$1);
};
om_tools.dom.pre.cljs$lang$maxFixedArity = 1;
om_tools.dom.progress = function om_tools$dom$progress() {
  var args17453 = [];
  var len__5565__auto___17999 = arguments.length;
  var i__5566__auto___18000 = 0;
  while (true) {
    if (i__5566__auto___18000 < len__5565__auto___17999) {
      args17453.push(arguments[i__5566__auto___18000]);
      var G__18001 = i__5566__auto___18000 + 1;
      i__5566__auto___18000 = G__18001;
      continue;
    } else {
    }
    break;
  }
  var G__17457 = args17453.length;
  switch(G__17457) {
    case 0:
      return om_tools.dom.progress.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17453.slice(1), 0);
      return om_tools.dom.progress.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.progress.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.progress, null, null);
};
om_tools.dom.progress.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.progress, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.progress.cljs$lang$applyTo = function(seq17454) {
  var G__17455 = cljs.core.first.call(null, seq17454);
  var seq17454__$1 = cljs.core.next.call(null, seq17454);
  return om_tools.dom.progress.cljs$core$IFn$_invoke$arity$variadic(G__17455, seq17454__$1);
};
om_tools.dom.progress.cljs$lang$maxFixedArity = 1;
om_tools.dom.q = function om_tools$dom$q() {
  var args17458 = [];
  var len__5565__auto___18003 = arguments.length;
  var i__5566__auto___18004 = 0;
  while (true) {
    if (i__5566__auto___18004 < len__5565__auto___18003) {
      args17458.push(arguments[i__5566__auto___18004]);
      var G__18005 = i__5566__auto___18004 + 1;
      i__5566__auto___18004 = G__18005;
      continue;
    } else {
    }
    break;
  }
  var G__17462 = args17458.length;
  switch(G__17462) {
    case 0:
      return om_tools.dom.q.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17458.slice(1), 0);
      return om_tools.dom.q.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.q.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.q, null, null);
};
om_tools.dom.q.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.q, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.q.cljs$lang$applyTo = function(seq17459) {
  var G__17460 = cljs.core.first.call(null, seq17459);
  var seq17459__$1 = cljs.core.next.call(null, seq17459);
  return om_tools.dom.q.cljs$core$IFn$_invoke$arity$variadic(G__17460, seq17459__$1);
};
om_tools.dom.q.cljs$lang$maxFixedArity = 1;
om_tools.dom.rp = function om_tools$dom$rp() {
  var args17463 = [];
  var len__5565__auto___18007 = arguments.length;
  var i__5566__auto___18008 = 0;
  while (true) {
    if (i__5566__auto___18008 < len__5565__auto___18007) {
      args17463.push(arguments[i__5566__auto___18008]);
      var G__18009 = i__5566__auto___18008 + 1;
      i__5566__auto___18008 = G__18009;
      continue;
    } else {
    }
    break;
  }
  var G__17467 = args17463.length;
  switch(G__17467) {
    case 0:
      return om_tools.dom.rp.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17463.slice(1), 0);
      return om_tools.dom.rp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.rp.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.rp, null, null);
};
om_tools.dom.rp.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.rp, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.rp.cljs$lang$applyTo = function(seq17464) {
  var G__17465 = cljs.core.first.call(null, seq17464);
  var seq17464__$1 = cljs.core.next.call(null, seq17464);
  return om_tools.dom.rp.cljs$core$IFn$_invoke$arity$variadic(G__17465, seq17464__$1);
};
om_tools.dom.rp.cljs$lang$maxFixedArity = 1;
om_tools.dom.rt = function om_tools$dom$rt() {
  var args17468 = [];
  var len__5565__auto___18011 = arguments.length;
  var i__5566__auto___18012 = 0;
  while (true) {
    if (i__5566__auto___18012 < len__5565__auto___18011) {
      args17468.push(arguments[i__5566__auto___18012]);
      var G__18013 = i__5566__auto___18012 + 1;
      i__5566__auto___18012 = G__18013;
      continue;
    } else {
    }
    break;
  }
  var G__17472 = args17468.length;
  switch(G__17472) {
    case 0:
      return om_tools.dom.rt.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17468.slice(1), 0);
      return om_tools.dom.rt.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.rt.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.rt, null, null);
};
om_tools.dom.rt.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.rt, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.rt.cljs$lang$applyTo = function(seq17469) {
  var G__17470 = cljs.core.first.call(null, seq17469);
  var seq17469__$1 = cljs.core.next.call(null, seq17469);
  return om_tools.dom.rt.cljs$core$IFn$_invoke$arity$variadic(G__17470, seq17469__$1);
};
om_tools.dom.rt.cljs$lang$maxFixedArity = 1;
om_tools.dom.ruby = function om_tools$dom$ruby() {
  var args17473 = [];
  var len__5565__auto___18015 = arguments.length;
  var i__5566__auto___18016 = 0;
  while (true) {
    if (i__5566__auto___18016 < len__5565__auto___18015) {
      args17473.push(arguments[i__5566__auto___18016]);
      var G__18017 = i__5566__auto___18016 + 1;
      i__5566__auto___18016 = G__18017;
      continue;
    } else {
    }
    break;
  }
  var G__17477 = args17473.length;
  switch(G__17477) {
    case 0:
      return om_tools.dom.ruby.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17473.slice(1), 0);
      return om_tools.dom.ruby.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.ruby.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.ruby, null, null);
};
om_tools.dom.ruby.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.ruby, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.ruby.cljs$lang$applyTo = function(seq17474) {
  var G__17475 = cljs.core.first.call(null, seq17474);
  var seq17474__$1 = cljs.core.next.call(null, seq17474);
  return om_tools.dom.ruby.cljs$core$IFn$_invoke$arity$variadic(G__17475, seq17474__$1);
};
om_tools.dom.ruby.cljs$lang$maxFixedArity = 1;
om_tools.dom.s = function om_tools$dom$s() {
  var args17478 = [];
  var len__5565__auto___18019 = arguments.length;
  var i__5566__auto___18020 = 0;
  while (true) {
    if (i__5566__auto___18020 < len__5565__auto___18019) {
      args17478.push(arguments[i__5566__auto___18020]);
      var G__18021 = i__5566__auto___18020 + 1;
      i__5566__auto___18020 = G__18021;
      continue;
    } else {
    }
    break;
  }
  var G__17482 = args17478.length;
  switch(G__17482) {
    case 0:
      return om_tools.dom.s.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17478.slice(1), 0);
      return om_tools.dom.s.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.s.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.s, null, null);
};
om_tools.dom.s.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.s, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.s.cljs$lang$applyTo = function(seq17479) {
  var G__17480 = cljs.core.first.call(null, seq17479);
  var seq17479__$1 = cljs.core.next.call(null, seq17479);
  return om_tools.dom.s.cljs$core$IFn$_invoke$arity$variadic(G__17480, seq17479__$1);
};
om_tools.dom.s.cljs$lang$maxFixedArity = 1;
om_tools.dom.samp = function om_tools$dom$samp() {
  var args17483 = [];
  var len__5565__auto___18023 = arguments.length;
  var i__5566__auto___18024 = 0;
  while (true) {
    if (i__5566__auto___18024 < len__5565__auto___18023) {
      args17483.push(arguments[i__5566__auto___18024]);
      var G__18025 = i__5566__auto___18024 + 1;
      i__5566__auto___18024 = G__18025;
      continue;
    } else {
    }
    break;
  }
  var G__17487 = args17483.length;
  switch(G__17487) {
    case 0:
      return om_tools.dom.samp.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17483.slice(1), 0);
      return om_tools.dom.samp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.samp.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.samp, null, null);
};
om_tools.dom.samp.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.samp, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.samp.cljs$lang$applyTo = function(seq17484) {
  var G__17485 = cljs.core.first.call(null, seq17484);
  var seq17484__$1 = cljs.core.next.call(null, seq17484);
  return om_tools.dom.samp.cljs$core$IFn$_invoke$arity$variadic(G__17485, seq17484__$1);
};
om_tools.dom.samp.cljs$lang$maxFixedArity = 1;
om_tools.dom.script = function om_tools$dom$script() {
  var args17488 = [];
  var len__5565__auto___18027 = arguments.length;
  var i__5566__auto___18028 = 0;
  while (true) {
    if (i__5566__auto___18028 < len__5565__auto___18027) {
      args17488.push(arguments[i__5566__auto___18028]);
      var G__18029 = i__5566__auto___18028 + 1;
      i__5566__auto___18028 = G__18029;
      continue;
    } else {
    }
    break;
  }
  var G__17492 = args17488.length;
  switch(G__17492) {
    case 0:
      return om_tools.dom.script.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17488.slice(1), 0);
      return om_tools.dom.script.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.script.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.script, null, null);
};
om_tools.dom.script.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.script, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.script.cljs$lang$applyTo = function(seq17489) {
  var G__17490 = cljs.core.first.call(null, seq17489);
  var seq17489__$1 = cljs.core.next.call(null, seq17489);
  return om_tools.dom.script.cljs$core$IFn$_invoke$arity$variadic(G__17490, seq17489__$1);
};
om_tools.dom.script.cljs$lang$maxFixedArity = 1;
om_tools.dom.section = function om_tools$dom$section() {
  var args17493 = [];
  var len__5565__auto___18031 = arguments.length;
  var i__5566__auto___18032 = 0;
  while (true) {
    if (i__5566__auto___18032 < len__5565__auto___18031) {
      args17493.push(arguments[i__5566__auto___18032]);
      var G__18033 = i__5566__auto___18032 + 1;
      i__5566__auto___18032 = G__18033;
      continue;
    } else {
    }
    break;
  }
  var G__17497 = args17493.length;
  switch(G__17497) {
    case 0:
      return om_tools.dom.section.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17493.slice(1), 0);
      return om_tools.dom.section.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.section.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.section, null, null);
};
om_tools.dom.section.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.section, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.section.cljs$lang$applyTo = function(seq17494) {
  var G__17495 = cljs.core.first.call(null, seq17494);
  var seq17494__$1 = cljs.core.next.call(null, seq17494);
  return om_tools.dom.section.cljs$core$IFn$_invoke$arity$variadic(G__17495, seq17494__$1);
};
om_tools.dom.section.cljs$lang$maxFixedArity = 1;
om_tools.dom.select = function om_tools$dom$select() {
  var args17498 = [];
  var len__5565__auto___18035 = arguments.length;
  var i__5566__auto___18036 = 0;
  while (true) {
    if (i__5566__auto___18036 < len__5565__auto___18035) {
      args17498.push(arguments[i__5566__auto___18036]);
      var G__18037 = i__5566__auto___18036 + 1;
      i__5566__auto___18036 = G__18037;
      continue;
    } else {
    }
    break;
  }
  var G__17502 = args17498.length;
  switch(G__17502) {
    case 0:
      return om_tools.dom.select.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17498.slice(1), 0);
      return om_tools.dom.select.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.select.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.select, null, null);
};
om_tools.dom.select.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.select, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.select.cljs$lang$applyTo = function(seq17499) {
  var G__17500 = cljs.core.first.call(null, seq17499);
  var seq17499__$1 = cljs.core.next.call(null, seq17499);
  return om_tools.dom.select.cljs$core$IFn$_invoke$arity$variadic(G__17500, seq17499__$1);
};
om_tools.dom.select.cljs$lang$maxFixedArity = 1;
om_tools.dom.small = function om_tools$dom$small() {
  var args17503 = [];
  var len__5565__auto___18039 = arguments.length;
  var i__5566__auto___18040 = 0;
  while (true) {
    if (i__5566__auto___18040 < len__5565__auto___18039) {
      args17503.push(arguments[i__5566__auto___18040]);
      var G__18041 = i__5566__auto___18040 + 1;
      i__5566__auto___18040 = G__18041;
      continue;
    } else {
    }
    break;
  }
  var G__17507 = args17503.length;
  switch(G__17507) {
    case 0:
      return om_tools.dom.small.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17503.slice(1), 0);
      return om_tools.dom.small.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.small.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.small, null, null);
};
om_tools.dom.small.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.small, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.small.cljs$lang$applyTo = function(seq17504) {
  var G__17505 = cljs.core.first.call(null, seq17504);
  var seq17504__$1 = cljs.core.next.call(null, seq17504);
  return om_tools.dom.small.cljs$core$IFn$_invoke$arity$variadic(G__17505, seq17504__$1);
};
om_tools.dom.small.cljs$lang$maxFixedArity = 1;
om_tools.dom.source = function om_tools$dom$source() {
  var args17508 = [];
  var len__5565__auto___18043 = arguments.length;
  var i__5566__auto___18044 = 0;
  while (true) {
    if (i__5566__auto___18044 < len__5565__auto___18043) {
      args17508.push(arguments[i__5566__auto___18044]);
      var G__18045 = i__5566__auto___18044 + 1;
      i__5566__auto___18044 = G__18045;
      continue;
    } else {
    }
    break;
  }
  var G__17512 = args17508.length;
  switch(G__17512) {
    case 0:
      return om_tools.dom.source.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17508.slice(1), 0);
      return om_tools.dom.source.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.source.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.source, null, null);
};
om_tools.dom.source.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.source, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.source.cljs$lang$applyTo = function(seq17509) {
  var G__17510 = cljs.core.first.call(null, seq17509);
  var seq17509__$1 = cljs.core.next.call(null, seq17509);
  return om_tools.dom.source.cljs$core$IFn$_invoke$arity$variadic(G__17510, seq17509__$1);
};
om_tools.dom.source.cljs$lang$maxFixedArity = 1;
om_tools.dom.span = function om_tools$dom$span() {
  var args17513 = [];
  var len__5565__auto___18047 = arguments.length;
  var i__5566__auto___18048 = 0;
  while (true) {
    if (i__5566__auto___18048 < len__5565__auto___18047) {
      args17513.push(arguments[i__5566__auto___18048]);
      var G__18049 = i__5566__auto___18048 + 1;
      i__5566__auto___18048 = G__18049;
      continue;
    } else {
    }
    break;
  }
  var G__17517 = args17513.length;
  switch(G__17517) {
    case 0:
      return om_tools.dom.span.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17513.slice(1), 0);
      return om_tools.dom.span.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.span.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.span, null, null);
};
om_tools.dom.span.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.span, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.span.cljs$lang$applyTo = function(seq17514) {
  var G__17515 = cljs.core.first.call(null, seq17514);
  var seq17514__$1 = cljs.core.next.call(null, seq17514);
  return om_tools.dom.span.cljs$core$IFn$_invoke$arity$variadic(G__17515, seq17514__$1);
};
om_tools.dom.span.cljs$lang$maxFixedArity = 1;
om_tools.dom.strong = function om_tools$dom$strong() {
  var args17518 = [];
  var len__5565__auto___18051 = arguments.length;
  var i__5566__auto___18052 = 0;
  while (true) {
    if (i__5566__auto___18052 < len__5565__auto___18051) {
      args17518.push(arguments[i__5566__auto___18052]);
      var G__18053 = i__5566__auto___18052 + 1;
      i__5566__auto___18052 = G__18053;
      continue;
    } else {
    }
    break;
  }
  var G__17522 = args17518.length;
  switch(G__17522) {
    case 0:
      return om_tools.dom.strong.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17518.slice(1), 0);
      return om_tools.dom.strong.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.strong.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.strong, null, null);
};
om_tools.dom.strong.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.strong, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.strong.cljs$lang$applyTo = function(seq17519) {
  var G__17520 = cljs.core.first.call(null, seq17519);
  var seq17519__$1 = cljs.core.next.call(null, seq17519);
  return om_tools.dom.strong.cljs$core$IFn$_invoke$arity$variadic(G__17520, seq17519__$1);
};
om_tools.dom.strong.cljs$lang$maxFixedArity = 1;
om_tools.dom.style = function om_tools$dom$style() {
  var args17523 = [];
  var len__5565__auto___18055 = arguments.length;
  var i__5566__auto___18056 = 0;
  while (true) {
    if (i__5566__auto___18056 < len__5565__auto___18055) {
      args17523.push(arguments[i__5566__auto___18056]);
      var G__18057 = i__5566__auto___18056 + 1;
      i__5566__auto___18056 = G__18057;
      continue;
    } else {
    }
    break;
  }
  var G__17527 = args17523.length;
  switch(G__17527) {
    case 0:
      return om_tools.dom.style.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17523.slice(1), 0);
      return om_tools.dom.style.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.style.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.style, null, null);
};
om_tools.dom.style.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.style, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.style.cljs$lang$applyTo = function(seq17524) {
  var G__17525 = cljs.core.first.call(null, seq17524);
  var seq17524__$1 = cljs.core.next.call(null, seq17524);
  return om_tools.dom.style.cljs$core$IFn$_invoke$arity$variadic(G__17525, seq17524__$1);
};
om_tools.dom.style.cljs$lang$maxFixedArity = 1;
om_tools.dom.sub = function om_tools$dom$sub() {
  var args17528 = [];
  var len__5565__auto___18059 = arguments.length;
  var i__5566__auto___18060 = 0;
  while (true) {
    if (i__5566__auto___18060 < len__5565__auto___18059) {
      args17528.push(arguments[i__5566__auto___18060]);
      var G__18061 = i__5566__auto___18060 + 1;
      i__5566__auto___18060 = G__18061;
      continue;
    } else {
    }
    break;
  }
  var G__17532 = args17528.length;
  switch(G__17532) {
    case 0:
      return om_tools.dom.sub.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17528.slice(1), 0);
      return om_tools.dom.sub.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.sub.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.sub, null, null);
};
om_tools.dom.sub.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.sub, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.sub.cljs$lang$applyTo = function(seq17529) {
  var G__17530 = cljs.core.first.call(null, seq17529);
  var seq17529__$1 = cljs.core.next.call(null, seq17529);
  return om_tools.dom.sub.cljs$core$IFn$_invoke$arity$variadic(G__17530, seq17529__$1);
};
om_tools.dom.sub.cljs$lang$maxFixedArity = 1;
om_tools.dom.summary = function om_tools$dom$summary() {
  var args17533 = [];
  var len__5565__auto___18063 = arguments.length;
  var i__5566__auto___18064 = 0;
  while (true) {
    if (i__5566__auto___18064 < len__5565__auto___18063) {
      args17533.push(arguments[i__5566__auto___18064]);
      var G__18065 = i__5566__auto___18064 + 1;
      i__5566__auto___18064 = G__18065;
      continue;
    } else {
    }
    break;
  }
  var G__17537 = args17533.length;
  switch(G__17537) {
    case 0:
      return om_tools.dom.summary.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17533.slice(1), 0);
      return om_tools.dom.summary.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.summary.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.summary, null, null);
};
om_tools.dom.summary.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.summary, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.summary.cljs$lang$applyTo = function(seq17534) {
  var G__17535 = cljs.core.first.call(null, seq17534);
  var seq17534__$1 = cljs.core.next.call(null, seq17534);
  return om_tools.dom.summary.cljs$core$IFn$_invoke$arity$variadic(G__17535, seq17534__$1);
};
om_tools.dom.summary.cljs$lang$maxFixedArity = 1;
om_tools.dom.sup = function om_tools$dom$sup() {
  var args17538 = [];
  var len__5565__auto___18067 = arguments.length;
  var i__5566__auto___18068 = 0;
  while (true) {
    if (i__5566__auto___18068 < len__5565__auto___18067) {
      args17538.push(arguments[i__5566__auto___18068]);
      var G__18069 = i__5566__auto___18068 + 1;
      i__5566__auto___18068 = G__18069;
      continue;
    } else {
    }
    break;
  }
  var G__17542 = args17538.length;
  switch(G__17542) {
    case 0:
      return om_tools.dom.sup.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17538.slice(1), 0);
      return om_tools.dom.sup.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.sup.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.sup, null, null);
};
om_tools.dom.sup.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.sup, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.sup.cljs$lang$applyTo = function(seq17539) {
  var G__17540 = cljs.core.first.call(null, seq17539);
  var seq17539__$1 = cljs.core.next.call(null, seq17539);
  return om_tools.dom.sup.cljs$core$IFn$_invoke$arity$variadic(G__17540, seq17539__$1);
};
om_tools.dom.sup.cljs$lang$maxFixedArity = 1;
om_tools.dom.table = function om_tools$dom$table() {
  var args17543 = [];
  var len__5565__auto___18071 = arguments.length;
  var i__5566__auto___18072 = 0;
  while (true) {
    if (i__5566__auto___18072 < len__5565__auto___18071) {
      args17543.push(arguments[i__5566__auto___18072]);
      var G__18073 = i__5566__auto___18072 + 1;
      i__5566__auto___18072 = G__18073;
      continue;
    } else {
    }
    break;
  }
  var G__17547 = args17543.length;
  switch(G__17547) {
    case 0:
      return om_tools.dom.table.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17543.slice(1), 0);
      return om_tools.dom.table.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.table.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.table, null, null);
};
om_tools.dom.table.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.table, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.table.cljs$lang$applyTo = function(seq17544) {
  var G__17545 = cljs.core.first.call(null, seq17544);
  var seq17544__$1 = cljs.core.next.call(null, seq17544);
  return om_tools.dom.table.cljs$core$IFn$_invoke$arity$variadic(G__17545, seq17544__$1);
};
om_tools.dom.table.cljs$lang$maxFixedArity = 1;
om_tools.dom.tbody = function om_tools$dom$tbody() {
  var args17548 = [];
  var len__5565__auto___18075 = arguments.length;
  var i__5566__auto___18076 = 0;
  while (true) {
    if (i__5566__auto___18076 < len__5565__auto___18075) {
      args17548.push(arguments[i__5566__auto___18076]);
      var G__18077 = i__5566__auto___18076 + 1;
      i__5566__auto___18076 = G__18077;
      continue;
    } else {
    }
    break;
  }
  var G__17552 = args17548.length;
  switch(G__17552) {
    case 0:
      return om_tools.dom.tbody.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17548.slice(1), 0);
      return om_tools.dom.tbody.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.tbody.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.tbody, null, null);
};
om_tools.dom.tbody.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.tbody, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.tbody.cljs$lang$applyTo = function(seq17549) {
  var G__17550 = cljs.core.first.call(null, seq17549);
  var seq17549__$1 = cljs.core.next.call(null, seq17549);
  return om_tools.dom.tbody.cljs$core$IFn$_invoke$arity$variadic(G__17550, seq17549__$1);
};
om_tools.dom.tbody.cljs$lang$maxFixedArity = 1;
om_tools.dom.td = function om_tools$dom$td() {
  var args17553 = [];
  var len__5565__auto___18079 = arguments.length;
  var i__5566__auto___18080 = 0;
  while (true) {
    if (i__5566__auto___18080 < len__5565__auto___18079) {
      args17553.push(arguments[i__5566__auto___18080]);
      var G__18081 = i__5566__auto___18080 + 1;
      i__5566__auto___18080 = G__18081;
      continue;
    } else {
    }
    break;
  }
  var G__17557 = args17553.length;
  switch(G__17557) {
    case 0:
      return om_tools.dom.td.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17553.slice(1), 0);
      return om_tools.dom.td.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.td.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.td, null, null);
};
om_tools.dom.td.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.td, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.td.cljs$lang$applyTo = function(seq17554) {
  var G__17555 = cljs.core.first.call(null, seq17554);
  var seq17554__$1 = cljs.core.next.call(null, seq17554);
  return om_tools.dom.td.cljs$core$IFn$_invoke$arity$variadic(G__17555, seq17554__$1);
};
om_tools.dom.td.cljs$lang$maxFixedArity = 1;
om_tools.dom.tfoot = function om_tools$dom$tfoot() {
  var args17558 = [];
  var len__5565__auto___18083 = arguments.length;
  var i__5566__auto___18084 = 0;
  while (true) {
    if (i__5566__auto___18084 < len__5565__auto___18083) {
      args17558.push(arguments[i__5566__auto___18084]);
      var G__18085 = i__5566__auto___18084 + 1;
      i__5566__auto___18084 = G__18085;
      continue;
    } else {
    }
    break;
  }
  var G__17562 = args17558.length;
  switch(G__17562) {
    case 0:
      return om_tools.dom.tfoot.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17558.slice(1), 0);
      return om_tools.dom.tfoot.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.tfoot.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.tfoot, null, null);
};
om_tools.dom.tfoot.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.tfoot, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.tfoot.cljs$lang$applyTo = function(seq17559) {
  var G__17560 = cljs.core.first.call(null, seq17559);
  var seq17559__$1 = cljs.core.next.call(null, seq17559);
  return om_tools.dom.tfoot.cljs$core$IFn$_invoke$arity$variadic(G__17560, seq17559__$1);
};
om_tools.dom.tfoot.cljs$lang$maxFixedArity = 1;
om_tools.dom.th = function om_tools$dom$th() {
  var args17563 = [];
  var len__5565__auto___18087 = arguments.length;
  var i__5566__auto___18088 = 0;
  while (true) {
    if (i__5566__auto___18088 < len__5565__auto___18087) {
      args17563.push(arguments[i__5566__auto___18088]);
      var G__18089 = i__5566__auto___18088 + 1;
      i__5566__auto___18088 = G__18089;
      continue;
    } else {
    }
    break;
  }
  var G__17567 = args17563.length;
  switch(G__17567) {
    case 0:
      return om_tools.dom.th.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17563.slice(1), 0);
      return om_tools.dom.th.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.th.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.th, null, null);
};
om_tools.dom.th.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.th, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.th.cljs$lang$applyTo = function(seq17564) {
  var G__17565 = cljs.core.first.call(null, seq17564);
  var seq17564__$1 = cljs.core.next.call(null, seq17564);
  return om_tools.dom.th.cljs$core$IFn$_invoke$arity$variadic(G__17565, seq17564__$1);
};
om_tools.dom.th.cljs$lang$maxFixedArity = 1;
om_tools.dom.thead = function om_tools$dom$thead() {
  var args17568 = [];
  var len__5565__auto___18091 = arguments.length;
  var i__5566__auto___18092 = 0;
  while (true) {
    if (i__5566__auto___18092 < len__5565__auto___18091) {
      args17568.push(arguments[i__5566__auto___18092]);
      var G__18093 = i__5566__auto___18092 + 1;
      i__5566__auto___18092 = G__18093;
      continue;
    } else {
    }
    break;
  }
  var G__17572 = args17568.length;
  switch(G__17572) {
    case 0:
      return om_tools.dom.thead.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17568.slice(1), 0);
      return om_tools.dom.thead.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.thead.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.thead, null, null);
};
om_tools.dom.thead.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.thead, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.thead.cljs$lang$applyTo = function(seq17569) {
  var G__17570 = cljs.core.first.call(null, seq17569);
  var seq17569__$1 = cljs.core.next.call(null, seq17569);
  return om_tools.dom.thead.cljs$core$IFn$_invoke$arity$variadic(G__17570, seq17569__$1);
};
om_tools.dom.thead.cljs$lang$maxFixedArity = 1;
om_tools.dom.time = function om_tools$dom$time() {
  var args17573 = [];
  var len__5565__auto___18095 = arguments.length;
  var i__5566__auto___18096 = 0;
  while (true) {
    if (i__5566__auto___18096 < len__5565__auto___18095) {
      args17573.push(arguments[i__5566__auto___18096]);
      var G__18097 = i__5566__auto___18096 + 1;
      i__5566__auto___18096 = G__18097;
      continue;
    } else {
    }
    break;
  }
  var G__17577 = args17573.length;
  switch(G__17577) {
    case 0:
      return om_tools.dom.time.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17573.slice(1), 0);
      return om_tools.dom.time.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.time.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.time, null, null);
};
om_tools.dom.time.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.time, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.time.cljs$lang$applyTo = function(seq17574) {
  var G__17575 = cljs.core.first.call(null, seq17574);
  var seq17574__$1 = cljs.core.next.call(null, seq17574);
  return om_tools.dom.time.cljs$core$IFn$_invoke$arity$variadic(G__17575, seq17574__$1);
};
om_tools.dom.time.cljs$lang$maxFixedArity = 1;
om_tools.dom.title = function om_tools$dom$title() {
  var args17578 = [];
  var len__5565__auto___18099 = arguments.length;
  var i__5566__auto___18100 = 0;
  while (true) {
    if (i__5566__auto___18100 < len__5565__auto___18099) {
      args17578.push(arguments[i__5566__auto___18100]);
      var G__18101 = i__5566__auto___18100 + 1;
      i__5566__auto___18100 = G__18101;
      continue;
    } else {
    }
    break;
  }
  var G__17582 = args17578.length;
  switch(G__17582) {
    case 0:
      return om_tools.dom.title.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17578.slice(1), 0);
      return om_tools.dom.title.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.title.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.title, null, null);
};
om_tools.dom.title.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.title, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.title.cljs$lang$applyTo = function(seq17579) {
  var G__17580 = cljs.core.first.call(null, seq17579);
  var seq17579__$1 = cljs.core.next.call(null, seq17579);
  return om_tools.dom.title.cljs$core$IFn$_invoke$arity$variadic(G__17580, seq17579__$1);
};
om_tools.dom.title.cljs$lang$maxFixedArity = 1;
om_tools.dom.tr = function om_tools$dom$tr() {
  var args17583 = [];
  var len__5565__auto___18103 = arguments.length;
  var i__5566__auto___18104 = 0;
  while (true) {
    if (i__5566__auto___18104 < len__5565__auto___18103) {
      args17583.push(arguments[i__5566__auto___18104]);
      var G__18105 = i__5566__auto___18104 + 1;
      i__5566__auto___18104 = G__18105;
      continue;
    } else {
    }
    break;
  }
  var G__17587 = args17583.length;
  switch(G__17587) {
    case 0:
      return om_tools.dom.tr.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17583.slice(1), 0);
      return om_tools.dom.tr.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.tr.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.tr, null, null);
};
om_tools.dom.tr.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.tr, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.tr.cljs$lang$applyTo = function(seq17584) {
  var G__17585 = cljs.core.first.call(null, seq17584);
  var seq17584__$1 = cljs.core.next.call(null, seq17584);
  return om_tools.dom.tr.cljs$core$IFn$_invoke$arity$variadic(G__17585, seq17584__$1);
};
om_tools.dom.tr.cljs$lang$maxFixedArity = 1;
om_tools.dom.track = function om_tools$dom$track() {
  var args17588 = [];
  var len__5565__auto___18107 = arguments.length;
  var i__5566__auto___18108 = 0;
  while (true) {
    if (i__5566__auto___18108 < len__5565__auto___18107) {
      args17588.push(arguments[i__5566__auto___18108]);
      var G__18109 = i__5566__auto___18108 + 1;
      i__5566__auto___18108 = G__18109;
      continue;
    } else {
    }
    break;
  }
  var G__17592 = args17588.length;
  switch(G__17592) {
    case 0:
      return om_tools.dom.track.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17588.slice(1), 0);
      return om_tools.dom.track.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.track.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.track, null, null);
};
om_tools.dom.track.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.track, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.track.cljs$lang$applyTo = function(seq17589) {
  var G__17590 = cljs.core.first.call(null, seq17589);
  var seq17589__$1 = cljs.core.next.call(null, seq17589);
  return om_tools.dom.track.cljs$core$IFn$_invoke$arity$variadic(G__17590, seq17589__$1);
};
om_tools.dom.track.cljs$lang$maxFixedArity = 1;
om_tools.dom.u = function om_tools$dom$u() {
  var args17593 = [];
  var len__5565__auto___18111 = arguments.length;
  var i__5566__auto___18112 = 0;
  while (true) {
    if (i__5566__auto___18112 < len__5565__auto___18111) {
      args17593.push(arguments[i__5566__auto___18112]);
      var G__18113 = i__5566__auto___18112 + 1;
      i__5566__auto___18112 = G__18113;
      continue;
    } else {
    }
    break;
  }
  var G__17597 = args17593.length;
  switch(G__17597) {
    case 0:
      return om_tools.dom.u.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17593.slice(1), 0);
      return om_tools.dom.u.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.u.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.u, null, null);
};
om_tools.dom.u.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.u, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.u.cljs$lang$applyTo = function(seq17594) {
  var G__17595 = cljs.core.first.call(null, seq17594);
  var seq17594__$1 = cljs.core.next.call(null, seq17594);
  return om_tools.dom.u.cljs$core$IFn$_invoke$arity$variadic(G__17595, seq17594__$1);
};
om_tools.dom.u.cljs$lang$maxFixedArity = 1;
om_tools.dom.ul = function om_tools$dom$ul() {
  var args17598 = [];
  var len__5565__auto___18115 = arguments.length;
  var i__5566__auto___18116 = 0;
  while (true) {
    if (i__5566__auto___18116 < len__5565__auto___18115) {
      args17598.push(arguments[i__5566__auto___18116]);
      var G__18117 = i__5566__auto___18116 + 1;
      i__5566__auto___18116 = G__18117;
      continue;
    } else {
    }
    break;
  }
  var G__17602 = args17598.length;
  switch(G__17602) {
    case 0:
      return om_tools.dom.ul.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17598.slice(1), 0);
      return om_tools.dom.ul.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.ul.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.ul, null, null);
};
om_tools.dom.ul.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.ul, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.ul.cljs$lang$applyTo = function(seq17599) {
  var G__17600 = cljs.core.first.call(null, seq17599);
  var seq17599__$1 = cljs.core.next.call(null, seq17599);
  return om_tools.dom.ul.cljs$core$IFn$_invoke$arity$variadic(G__17600, seq17599__$1);
};
om_tools.dom.ul.cljs$lang$maxFixedArity = 1;
om_tools.dom.var$ = function om_tools$dom$var() {
  var args17603 = [];
  var len__5565__auto___18119 = arguments.length;
  var i__5566__auto___18120 = 0;
  while (true) {
    if (i__5566__auto___18120 < len__5565__auto___18119) {
      args17603.push(arguments[i__5566__auto___18120]);
      var G__18121 = i__5566__auto___18120 + 1;
      i__5566__auto___18120 = G__18121;
      continue;
    } else {
    }
    break;
  }
  var G__17607 = args17603.length;
  switch(G__17607) {
    case 0:
      return om_tools.dom.var$.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17603.slice(1), 0);
      return om_tools.dom.var$.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.var$.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.var$, null, null);
};
om_tools.dom.var$.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.var$, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.var$.cljs$lang$applyTo = function(seq17604) {
  var G__17605 = cljs.core.first.call(null, seq17604);
  var seq17604__$1 = cljs.core.next.call(null, seq17604);
  return om_tools.dom.var$.cljs$core$IFn$_invoke$arity$variadic(G__17605, seq17604__$1);
};
om_tools.dom.var$.cljs$lang$maxFixedArity = 1;
om_tools.dom.video = function om_tools$dom$video() {
  var args17608 = [];
  var len__5565__auto___18123 = arguments.length;
  var i__5566__auto___18124 = 0;
  while (true) {
    if (i__5566__auto___18124 < len__5565__auto___18123) {
      args17608.push(arguments[i__5566__auto___18124]);
      var G__18125 = i__5566__auto___18124 + 1;
      i__5566__auto___18124 = G__18125;
      continue;
    } else {
    }
    break;
  }
  var G__17612 = args17608.length;
  switch(G__17612) {
    case 0:
      return om_tools.dom.video.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17608.slice(1), 0);
      return om_tools.dom.video.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.video.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.video, null, null);
};
om_tools.dom.video.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.video, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.video.cljs$lang$applyTo = function(seq17609) {
  var G__17610 = cljs.core.first.call(null, seq17609);
  var seq17609__$1 = cljs.core.next.call(null, seq17609);
  return om_tools.dom.video.cljs$core$IFn$_invoke$arity$variadic(G__17610, seq17609__$1);
};
om_tools.dom.video.cljs$lang$maxFixedArity = 1;
om_tools.dom.wbr = function om_tools$dom$wbr() {
  var args17613 = [];
  var len__5565__auto___18127 = arguments.length;
  var i__5566__auto___18128 = 0;
  while (true) {
    if (i__5566__auto___18128 < len__5565__auto___18127) {
      args17613.push(arguments[i__5566__auto___18128]);
      var G__18129 = i__5566__auto___18128 + 1;
      i__5566__auto___18128 = G__18129;
      continue;
    } else {
    }
    break;
  }
  var G__17617 = args17613.length;
  switch(G__17617) {
    case 0:
      return om_tools.dom.wbr.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17613.slice(1), 0);
      return om_tools.dom.wbr.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.wbr.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.wbr, null, null);
};
om_tools.dom.wbr.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.wbr, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.wbr.cljs$lang$applyTo = function(seq17614) {
  var G__17615 = cljs.core.first.call(null, seq17614);
  var seq17614__$1 = cljs.core.next.call(null, seq17614);
  return om_tools.dom.wbr.cljs$core$IFn$_invoke$arity$variadic(G__17615, seq17614__$1);
};
om_tools.dom.wbr.cljs$lang$maxFixedArity = 1;
om_tools.dom.circle = function om_tools$dom$circle() {
  var args17618 = [];
  var len__5565__auto___18131 = arguments.length;
  var i__5566__auto___18132 = 0;
  while (true) {
    if (i__5566__auto___18132 < len__5565__auto___18131) {
      args17618.push(arguments[i__5566__auto___18132]);
      var G__18133 = i__5566__auto___18132 + 1;
      i__5566__auto___18132 = G__18133;
      continue;
    } else {
    }
    break;
  }
  var G__17622 = args17618.length;
  switch(G__17622) {
    case 0:
      return om_tools.dom.circle.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17618.slice(1), 0);
      return om_tools.dom.circle.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.circle.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.circle, null, null);
};
om_tools.dom.circle.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.circle, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.circle.cljs$lang$applyTo = function(seq17619) {
  var G__17620 = cljs.core.first.call(null, seq17619);
  var seq17619__$1 = cljs.core.next.call(null, seq17619);
  return om_tools.dom.circle.cljs$core$IFn$_invoke$arity$variadic(G__17620, seq17619__$1);
};
om_tools.dom.circle.cljs$lang$maxFixedArity = 1;
om_tools.dom.ellipse = function om_tools$dom$ellipse() {
  var args17623 = [];
  var len__5565__auto___18135 = arguments.length;
  var i__5566__auto___18136 = 0;
  while (true) {
    if (i__5566__auto___18136 < len__5565__auto___18135) {
      args17623.push(arguments[i__5566__auto___18136]);
      var G__18137 = i__5566__auto___18136 + 1;
      i__5566__auto___18136 = G__18137;
      continue;
    } else {
    }
    break;
  }
  var G__17627 = args17623.length;
  switch(G__17627) {
    case 0:
      return om_tools.dom.ellipse.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17623.slice(1), 0);
      return om_tools.dom.ellipse.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.ellipse.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.ellipse, null, null);
};
om_tools.dom.ellipse.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.ellipse, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.ellipse.cljs$lang$applyTo = function(seq17624) {
  var G__17625 = cljs.core.first.call(null, seq17624);
  var seq17624__$1 = cljs.core.next.call(null, seq17624);
  return om_tools.dom.ellipse.cljs$core$IFn$_invoke$arity$variadic(G__17625, seq17624__$1);
};
om_tools.dom.ellipse.cljs$lang$maxFixedArity = 1;
om_tools.dom.g = function om_tools$dom$g() {
  var args17628 = [];
  var len__5565__auto___18139 = arguments.length;
  var i__5566__auto___18140 = 0;
  while (true) {
    if (i__5566__auto___18140 < len__5565__auto___18139) {
      args17628.push(arguments[i__5566__auto___18140]);
      var G__18141 = i__5566__auto___18140 + 1;
      i__5566__auto___18140 = G__18141;
      continue;
    } else {
    }
    break;
  }
  var G__17632 = args17628.length;
  switch(G__17632) {
    case 0:
      return om_tools.dom.g.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17628.slice(1), 0);
      return om_tools.dom.g.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.g.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.g, null, null);
};
om_tools.dom.g.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.g, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.g.cljs$lang$applyTo = function(seq17629) {
  var G__17630 = cljs.core.first.call(null, seq17629);
  var seq17629__$1 = cljs.core.next.call(null, seq17629);
  return om_tools.dom.g.cljs$core$IFn$_invoke$arity$variadic(G__17630, seq17629__$1);
};
om_tools.dom.g.cljs$lang$maxFixedArity = 1;
om_tools.dom.line = function om_tools$dom$line() {
  var args17633 = [];
  var len__5565__auto___18143 = arguments.length;
  var i__5566__auto___18144 = 0;
  while (true) {
    if (i__5566__auto___18144 < len__5565__auto___18143) {
      args17633.push(arguments[i__5566__auto___18144]);
      var G__18145 = i__5566__auto___18144 + 1;
      i__5566__auto___18144 = G__18145;
      continue;
    } else {
    }
    break;
  }
  var G__17637 = args17633.length;
  switch(G__17637) {
    case 0:
      return om_tools.dom.line.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17633.slice(1), 0);
      return om_tools.dom.line.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.line.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.line, null, null);
};
om_tools.dom.line.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.line, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.line.cljs$lang$applyTo = function(seq17634) {
  var G__17635 = cljs.core.first.call(null, seq17634);
  var seq17634__$1 = cljs.core.next.call(null, seq17634);
  return om_tools.dom.line.cljs$core$IFn$_invoke$arity$variadic(G__17635, seq17634__$1);
};
om_tools.dom.line.cljs$lang$maxFixedArity = 1;
om_tools.dom.path = function om_tools$dom$path() {
  var args17638 = [];
  var len__5565__auto___18147 = arguments.length;
  var i__5566__auto___18148 = 0;
  while (true) {
    if (i__5566__auto___18148 < len__5565__auto___18147) {
      args17638.push(arguments[i__5566__auto___18148]);
      var G__18149 = i__5566__auto___18148 + 1;
      i__5566__auto___18148 = G__18149;
      continue;
    } else {
    }
    break;
  }
  var G__17642 = args17638.length;
  switch(G__17642) {
    case 0:
      return om_tools.dom.path.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17638.slice(1), 0);
      return om_tools.dom.path.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.path.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.path, null, null);
};
om_tools.dom.path.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.path, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.path.cljs$lang$applyTo = function(seq17639) {
  var G__17640 = cljs.core.first.call(null, seq17639);
  var seq17639__$1 = cljs.core.next.call(null, seq17639);
  return om_tools.dom.path.cljs$core$IFn$_invoke$arity$variadic(G__17640, seq17639__$1);
};
om_tools.dom.path.cljs$lang$maxFixedArity = 1;
om_tools.dom.polyline = function om_tools$dom$polyline() {
  var args17643 = [];
  var len__5565__auto___18151 = arguments.length;
  var i__5566__auto___18152 = 0;
  while (true) {
    if (i__5566__auto___18152 < len__5565__auto___18151) {
      args17643.push(arguments[i__5566__auto___18152]);
      var G__18153 = i__5566__auto___18152 + 1;
      i__5566__auto___18152 = G__18153;
      continue;
    } else {
    }
    break;
  }
  var G__17647 = args17643.length;
  switch(G__17647) {
    case 0:
      return om_tools.dom.polyline.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17643.slice(1), 0);
      return om_tools.dom.polyline.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.polyline.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.polyline, null, null);
};
om_tools.dom.polyline.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.polyline, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.polyline.cljs$lang$applyTo = function(seq17644) {
  var G__17645 = cljs.core.first.call(null, seq17644);
  var seq17644__$1 = cljs.core.next.call(null, seq17644);
  return om_tools.dom.polyline.cljs$core$IFn$_invoke$arity$variadic(G__17645, seq17644__$1);
};
om_tools.dom.polyline.cljs$lang$maxFixedArity = 1;
om_tools.dom.rect = function om_tools$dom$rect() {
  var args17648 = [];
  var len__5565__auto___18155 = arguments.length;
  var i__5566__auto___18156 = 0;
  while (true) {
    if (i__5566__auto___18156 < len__5565__auto___18155) {
      args17648.push(arguments[i__5566__auto___18156]);
      var G__18157 = i__5566__auto___18156 + 1;
      i__5566__auto___18156 = G__18157;
      continue;
    } else {
    }
    break;
  }
  var G__17652 = args17648.length;
  switch(G__17652) {
    case 0:
      return om_tools.dom.rect.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17648.slice(1), 0);
      return om_tools.dom.rect.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.rect.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.rect, null, null);
};
om_tools.dom.rect.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.rect, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.rect.cljs$lang$applyTo = function(seq17649) {
  var G__17650 = cljs.core.first.call(null, seq17649);
  var seq17649__$1 = cljs.core.next.call(null, seq17649);
  return om_tools.dom.rect.cljs$core$IFn$_invoke$arity$variadic(G__17650, seq17649__$1);
};
om_tools.dom.rect.cljs$lang$maxFixedArity = 1;
om_tools.dom.svg = function om_tools$dom$svg() {
  var args17653 = [];
  var len__5565__auto___18159 = arguments.length;
  var i__5566__auto___18160 = 0;
  while (true) {
    if (i__5566__auto___18160 < len__5565__auto___18159) {
      args17653.push(arguments[i__5566__auto___18160]);
      var G__18161 = i__5566__auto___18160 + 1;
      i__5566__auto___18160 = G__18161;
      continue;
    } else {
    }
    break;
  }
  var G__17657 = args17653.length;
  switch(G__17657) {
    case 0:
      return om_tools.dom.svg.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17653.slice(1), 0);
      return om_tools.dom.svg.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.svg.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.svg, null, null);
};
om_tools.dom.svg.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.svg, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.svg.cljs$lang$applyTo = function(seq17654) {
  var G__17655 = cljs.core.first.call(null, seq17654);
  var seq17654__$1 = cljs.core.next.call(null, seq17654);
  return om_tools.dom.svg.cljs$core$IFn$_invoke$arity$variadic(G__17655, seq17654__$1);
};
om_tools.dom.svg.cljs$lang$maxFixedArity = 1;
om_tools.dom.text = function om_tools$dom$text() {
  var args17658 = [];
  var len__5565__auto___18163 = arguments.length;
  var i__5566__auto___18164 = 0;
  while (true) {
    if (i__5566__auto___18164 < len__5565__auto___18163) {
      args17658.push(arguments[i__5566__auto___18164]);
      var G__18165 = i__5566__auto___18164 + 1;
      i__5566__auto___18164 = G__18165;
      continue;
    } else {
    }
    break;
  }
  var G__17662 = args17658.length;
  switch(G__17662) {
    case 0:
      return om_tools.dom.text.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17658.slice(1), 0);
      return om_tools.dom.text.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.text.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.text, null, null);
};
om_tools.dom.text.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.text, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.text.cljs$lang$applyTo = function(seq17659) {
  var G__17660 = cljs.core.first.call(null, seq17659);
  var seq17659__$1 = cljs.core.next.call(null, seq17659);
  return om_tools.dom.text.cljs$core$IFn$_invoke$arity$variadic(G__17660, seq17659__$1);
};
om_tools.dom.text.cljs$lang$maxFixedArity = 1;
om_tools.dom.defs = function om_tools$dom$defs() {
  var args17663 = [];
  var len__5565__auto___18167 = arguments.length;
  var i__5566__auto___18168 = 0;
  while (true) {
    if (i__5566__auto___18168 < len__5565__auto___18167) {
      args17663.push(arguments[i__5566__auto___18168]);
      var G__18169 = i__5566__auto___18168 + 1;
      i__5566__auto___18168 = G__18169;
      continue;
    } else {
    }
    break;
  }
  var G__17667 = args17663.length;
  switch(G__17667) {
    case 0:
      return om_tools.dom.defs.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17663.slice(1), 0);
      return om_tools.dom.defs.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.defs.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.defs, null, null);
};
om_tools.dom.defs.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.defs, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.defs.cljs$lang$applyTo = function(seq17664) {
  var G__17665 = cljs.core.first.call(null, seq17664);
  var seq17664__$1 = cljs.core.next.call(null, seq17664);
  return om_tools.dom.defs.cljs$core$IFn$_invoke$arity$variadic(G__17665, seq17664__$1);
};
om_tools.dom.defs.cljs$lang$maxFixedArity = 1;
om_tools.dom.linearGradient = function om_tools$dom$linearGradient() {
  var args17668 = [];
  var len__5565__auto___18171 = arguments.length;
  var i__5566__auto___18172 = 0;
  while (true) {
    if (i__5566__auto___18172 < len__5565__auto___18171) {
      args17668.push(arguments[i__5566__auto___18172]);
      var G__18173 = i__5566__auto___18172 + 1;
      i__5566__auto___18172 = G__18173;
      continue;
    } else {
    }
    break;
  }
  var G__17672 = args17668.length;
  switch(G__17672) {
    case 0:
      return om_tools.dom.linearGradient.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17668.slice(1), 0);
      return om_tools.dom.linearGradient.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.linearGradient.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.linearGradient, null, null);
};
om_tools.dom.linearGradient.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.linearGradient, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.linearGradient.cljs$lang$applyTo = function(seq17669) {
  var G__17670 = cljs.core.first.call(null, seq17669);
  var seq17669__$1 = cljs.core.next.call(null, seq17669);
  return om_tools.dom.linearGradient.cljs$core$IFn$_invoke$arity$variadic(G__17670, seq17669__$1);
};
om_tools.dom.linearGradient.cljs$lang$maxFixedArity = 1;
om_tools.dom.polygon = function om_tools$dom$polygon() {
  var args17673 = [];
  var len__5565__auto___18175 = arguments.length;
  var i__5566__auto___18176 = 0;
  while (true) {
    if (i__5566__auto___18176 < len__5565__auto___18175) {
      args17673.push(arguments[i__5566__auto___18176]);
      var G__18177 = i__5566__auto___18176 + 1;
      i__5566__auto___18176 = G__18177;
      continue;
    } else {
    }
    break;
  }
  var G__17677 = args17673.length;
  switch(G__17677) {
    case 0:
      return om_tools.dom.polygon.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17673.slice(1), 0);
      return om_tools.dom.polygon.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.polygon.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.polygon, null, null);
};
om_tools.dom.polygon.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.polygon, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.polygon.cljs$lang$applyTo = function(seq17674) {
  var G__17675 = cljs.core.first.call(null, seq17674);
  var seq17674__$1 = cljs.core.next.call(null, seq17674);
  return om_tools.dom.polygon.cljs$core$IFn$_invoke$arity$variadic(G__17675, seq17674__$1);
};
om_tools.dom.polygon.cljs$lang$maxFixedArity = 1;
om_tools.dom.radialGradient = function om_tools$dom$radialGradient() {
  var args17678 = [];
  var len__5565__auto___18179 = arguments.length;
  var i__5566__auto___18180 = 0;
  while (true) {
    if (i__5566__auto___18180 < len__5565__auto___18179) {
      args17678.push(arguments[i__5566__auto___18180]);
      var G__18181 = i__5566__auto___18180 + 1;
      i__5566__auto___18180 = G__18181;
      continue;
    } else {
    }
    break;
  }
  var G__17682 = args17678.length;
  switch(G__17682) {
    case 0:
      return om_tools.dom.radialGradient.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17678.slice(1), 0);
      return om_tools.dom.radialGradient.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.radialGradient.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.radialGradient, null, null);
};
om_tools.dom.radialGradient.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.radialGradient, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.radialGradient.cljs$lang$applyTo = function(seq17679) {
  var G__17680 = cljs.core.first.call(null, seq17679);
  var seq17679__$1 = cljs.core.next.call(null, seq17679);
  return om_tools.dom.radialGradient.cljs$core$IFn$_invoke$arity$variadic(G__17680, seq17679__$1);
};
om_tools.dom.radialGradient.cljs$lang$maxFixedArity = 1;
om_tools.dom.stop = function om_tools$dom$stop() {
  var args17683 = [];
  var len__5565__auto___18183 = arguments.length;
  var i__5566__auto___18184 = 0;
  while (true) {
    if (i__5566__auto___18184 < len__5565__auto___18183) {
      args17683.push(arguments[i__5566__auto___18184]);
      var G__18185 = i__5566__auto___18184 + 1;
      i__5566__auto___18184 = G__18185;
      continue;
    } else {
    }
    break;
  }
  var G__17687 = args17683.length;
  switch(G__17687) {
    case 0:
      return om_tools.dom.stop.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17683.slice(1), 0);
      return om_tools.dom.stop.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.stop.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.stop, null, null);
};
om_tools.dom.stop.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.stop, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.stop.cljs$lang$applyTo = function(seq17684) {
  var G__17685 = cljs.core.first.call(null, seq17684);
  var seq17684__$1 = cljs.core.next.call(null, seq17684);
  return om_tools.dom.stop.cljs$core$IFn$_invoke$arity$variadic(G__17685, seq17684__$1);
};
om_tools.dom.stop.cljs$lang$maxFixedArity = 1;
om_tools.dom.tspan = function om_tools$dom$tspan() {
  var args17688 = [];
  var len__5565__auto___18187 = arguments.length;
  var i__5566__auto___18188 = 0;
  while (true) {
    if (i__5566__auto___18188 < len__5565__auto___18187) {
      args17688.push(arguments[i__5566__auto___18188]);
      var G__18189 = i__5566__auto___18188 + 1;
      i__5566__auto___18188 = G__18189;
      continue;
    } else {
    }
    break;
  }
  var G__17692 = args17688.length;
  switch(G__17692) {
    case 0:
      return om_tools.dom.tspan.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17688.slice(1), 0);
      return om_tools.dom.tspan.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.tspan.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.tspan, null, null);
};
om_tools.dom.tspan.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, React.DOM.tspan, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.tspan.cljs$lang$applyTo = function(seq17689) {
  var G__17690 = cljs.core.first.call(null, seq17689);
  var seq17689__$1 = cljs.core.next.call(null, seq17689);
  return om_tools.dom.tspan.cljs$core$IFn$_invoke$arity$variadic(G__17690, seq17689__$1);
};
om_tools.dom.tspan.cljs$lang$maxFixedArity = 1;
om_tools.dom.input = function om_tools$dom$input() {
  var args17693 = [];
  var len__5565__auto___18191 = arguments.length;
  var i__5566__auto___18192 = 0;
  while (true) {
    if (i__5566__auto___18192 < len__5565__auto___18191) {
      args17693.push(arguments[i__5566__auto___18192]);
      var G__18193 = i__5566__auto___18192 + 1;
      i__5566__auto___18192 = G__18193;
      continue;
    } else {
    }
    break;
  }
  var G__17697 = args17693.length;
  switch(G__17697) {
    case 0:
      return om_tools.dom.input.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17693.slice(1), 0);
      return om_tools.dom.input.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.input.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, om.dom.input, null, null);
};
om_tools.dom.input.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, om.dom.input, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.input.cljs$lang$applyTo = function(seq17694) {
  var G__17695 = cljs.core.first.call(null, seq17694);
  var seq17694__$1 = cljs.core.next.call(null, seq17694);
  return om_tools.dom.input.cljs$core$IFn$_invoke$arity$variadic(G__17695, seq17694__$1);
};
om_tools.dom.input.cljs$lang$maxFixedArity = 1;
om_tools.dom.textarea = function om_tools$dom$textarea() {
  var args17698 = [];
  var len__5565__auto___18195 = arguments.length;
  var i__5566__auto___18196 = 0;
  while (true) {
    if (i__5566__auto___18196 < len__5565__auto___18195) {
      args17698.push(arguments[i__5566__auto___18196]);
      var G__18197 = i__5566__auto___18196 + 1;
      i__5566__auto___18196 = G__18197;
      continue;
    } else {
    }
    break;
  }
  var G__17702 = args17698.length;
  switch(G__17702) {
    case 0:
      return om_tools.dom.textarea.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17698.slice(1), 0);
      return om_tools.dom.textarea.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.textarea.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, om.dom.textarea, null, null);
};
om_tools.dom.textarea.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, om.dom.textarea, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.textarea.cljs$lang$applyTo = function(seq17699) {
  var G__17700 = cljs.core.first.call(null, seq17699);
  var seq17699__$1 = cljs.core.next.call(null, seq17699);
  return om_tools.dom.textarea.cljs$core$IFn$_invoke$arity$variadic(G__17700, seq17699__$1);
};
om_tools.dom.textarea.cljs$lang$maxFixedArity = 1;
om_tools.dom.option = function om_tools$dom$option() {
  var args17238 = [];
  var len__5565__auto___18199 = arguments.length;
  var i__5566__auto___18200 = 0;
  while (true) {
    if (i__5566__auto___18200 < len__5565__auto___18199) {
      args17238.push(arguments[i__5566__auto___18200]);
      var G__18201 = i__5566__auto___18200 + 1;
      i__5566__auto___18200 = G__18201;
      continue;
    } else {
    }
    break;
  }
  var G__17242 = args17238.length;
  switch(G__17242) {
    case 0:
      return om_tools.dom.option.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args17238.slice(1), 0);
      return om_tools.dom.option.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
om_tools.dom.option.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, om.dom.option, null, null);
};
om_tools.dom.option.cljs$core$IFn$_invoke$arity$variadic = function(opts__9909__auto__, children__9910__auto__) {
  return om_tools.dom.element.call(null, om.dom.option, opts__9909__auto__, children__9910__auto__);
};
om_tools.dom.option.cljs$lang$applyTo = function(seq17239) {
  var G__17240 = cljs.core.first.call(null, seq17239);
  var seq17239__$1 = cljs.core.next.call(null, seq17239);
  return om_tools.dom.option.cljs$core$IFn$_invoke$arity$variadic(G__17240, seq17239__$1);
};
om_tools.dom.option.cljs$lang$maxFixedArity = 1;
om_tools.dom.class_set = function om_tools$dom$class_set(m) {
  var temp__4425__auto__ = cljs.core.seq.call(null, cljs.core.distinct.call(null, cljs.core.map.call(null, cljs.core.name, cljs.core.keys.call(null, cljs.core.filter.call(null, cljs.core.val, m)))));
  if (temp__4425__auto__) {
    var ks = temp__4425__auto__;
    return clojure.string.join.call(null, " ", ks);
  } else {
    return null;
  }
};
goog.provide("plumbing.fnk.schema");
goog.require("cljs.core");
goog.require("schema.core");
goog.require("schema.utils");
plumbing.fnk.schema.Schema = cljs.core.with_meta.call(null, schema.core.__GT_Protocol.call(null, schema.core.Schema), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "proto-sym", "proto-sym", -886371734), new cljs.core.Symbol("s", "Schema", "s/Schema", -1305723789, null), new cljs.core.Keyword(null, "proto-pred", "proto-pred", 1885698716), function(p1__10886__10887__auto__) {
  if (!(p1__10886__10887__auto__ == null)) {
    if (false || p1__10886__10887__auto__.schema$core$Schema$) {
      return true;
    } else {
      if (!p1__10886__10887__auto__.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, schema.core.Schema, p1__10886__10887__auto__);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, schema.core.Schema, p1__10886__10887__auto__);
  }
}], null));
plumbing.fnk.schema.InputSchema = new cljs.core.PersistentArrayMap.fromArray([schema.core.either.call(null, schema.core.eq.call(null, schema.core.Keyword), schema.core.OptionalKey, schema.core.Keyword), plumbing.fnk.schema.Schema], true, false);
plumbing.fnk.schema.OutputSchema = plumbing.fnk.schema.Schema;
plumbing.fnk.schema.IOSchemata = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, plumbing.fnk.schema.InputSchema, new cljs.core.Symbol(null, "input", "input", -2097503808, null)), schema.core.one.call(null, plumbing.fnk.schema.OutputSchema, new cljs.core.Symbol(null, "output", "output", 534662484, null))], null);
plumbing.fnk.schema.GraphInputSchema = new cljs.core.PersistentArrayMap.fromArray([schema.core.either.call(null, schema.core.OptionalKey, schema.core.Keyword), plumbing.fnk.schema.Schema], true, false);
plumbing.fnk.schema.MapOutputSchema = new cljs.core.PersistentArrayMap.fromArray([schema.core.Keyword, plumbing.fnk.schema.Schema], true, false);
plumbing.fnk.schema.GraphIOSchemata = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, plumbing.fnk.schema.GraphInputSchema, new cljs.core.Symbol(null, "input", "input", -2097503808, null)), schema.core.one.call(null, plumbing.fnk.schema.MapOutputSchema, new cljs.core.Symbol(null, "output", "output", 534662484, null))], null);
plumbing.fnk.schema.assert_distinct = function plumbing$fnk$schema$assert_distinct(things) {
  var repeated_things = cljs.core.seq.call(null, cljs.core.filter.call(null, function(p1__19794_SHARP_) {
    return cljs.core.val.call(null, p1__19794_SHARP_) > 1;
  }, cljs.core.frequencies.call(null, things)));
  if (cljs.core.empty_QMARK_.call(null, repeated_things)) {
    return null;
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Got repeated items (expected distinct): %s", repeated_things));
  }
};
plumbing.fnk.schema.safe_get = function plumbing$fnk$schema$safe_get(m, k, key_path) {
  if (cljs.core.map_QMARK_.call(null, m)) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Expected a map at key-path %s, got type %s", key_path, schema.utils.type_of.call(null, m)));
  }
  var vec__19796 = cljs.core.find.call(null, m, k);
  var _ = cljs.core.nth.call(null, vec__19796, 0, null);
  var v = cljs.core.nth.call(null, vec__19796, 1, null);
  var p = vec__19796;
  if (cljs.core.truth_(p)) {
  } else {
    throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Key %s not found in %s", k, cljs.core.keys.call(null, m)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "missing-key", "missing-key", 1259209562), new cljs.core.Keyword(null, "key", "key", -1516042587), k, new cljs.core.Keyword(null, "map", "map", 1371690461), m], null));
  }
  return v;
};
plumbing.fnk.schema.non_map_union = function plumbing$fnk$schema$non_map_union(s1, s2) {
  if (cljs.core._EQ_.call(null, s1, s2)) {
    return s1;
  } else {
    if (cljs.core._EQ_.call(null, s1, schema.core.Any)) {
      return s2;
    } else {
      if (cljs.core._EQ_.call(null, s2, schema.core.Any)) {
        return s1;
      } else {
        return schema.core.both.call(null, s1, s2);
      }
    }
  }
};
plumbing.fnk.schema.non_map_diff = function plumbing$fnk$schema$non_map_diff(s1, s2) {
  return null;
};
plumbing.fnk.schema.map_schema_QMARK_ = function plumbing$fnk$schema$map_schema_QMARK_(m) {
  return m instanceof cljs.core.PersistentArrayMap || m instanceof cljs.core.PersistentHashMap;
};
var ufv___19802 = schema.utils.use_fn_validation;
var output_schema19797_19803 = schema.core.maybe.call(null, schema.core.pair.call(null, schema.core.Keyword, "k", schema.core.Bool, "optional?"));
var input_schema19798_19804 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, cljs.core.with_meta(new cljs.core.Symbol(null, "k", "k", -505765866, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)))], null);
var input_checker19799_19805 = schema.core.checker.call(null, input_schema19798_19804);
var output_checker19800_19806 = schema.core.checker.call(null, output_schema19797_19803);
plumbing.fnk.schema.unwrap_schema_form_key = function(ufv___19802, output_schema19797_19803, input_schema19798_19804, input_checker19799_19805, output_checker19800_19806) {
  return function plumbing$fnk$schema$unwrap_schema_form_key(G__19801) {
    var validate__6953__auto__ = ufv___19802.get_cell();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var args__6954__auto___19807 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__19801], null);
      var temp__4425__auto___19808 = input_checker19799_19805.call(null, args__6954__auto___19807);
      if (cljs.core.truth_(temp__4425__auto___19808)) {
        var error__6955__auto___19809 = temp__4425__auto___19808;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "unwrap-schema-form-key", "unwrap-schema-form-key", -300088791, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), cljs.core.list(new cljs.core.Symbol("s", "maybe", "s/maybe", 1326133944, null), cljs.core.list(new cljs.core.Symbol("s", "pair", "s/pair", 1193014306, null), 
        new cljs.core.Symbol("s", "Keyword", "s/Keyword", -850066400, null), "k", new cljs.core.Symbol("s", "Bool", "s/Bool", 195910545, null), "optional?")), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Given a possibly-unevaluated schema map key form, unpack an explicit keyword\n   and optional? flag, or return nil for a non-explicit key"], null)), cljs.core.pr_str.call(null, error__6955__auto___19809)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 
        1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema19798_19804, new cljs.core.Keyword(null, "value", "value", 305978217), args__6954__auto___19807, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___19809], null));
      } else {
      }
    } else {
    }
    var o__6956__auto__ = function() {
      var k = G__19801;
      while (true) {
        if (cljs.core.truth_(schema.core.specific_key_QMARK_.call(null, k))) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.explicit_schema_key.call(null, k), schema.core.required_key_QMARK_.call(null, k)], null);
        } else {
          if (cljs.core.sequential_QMARK_.call(null, k) && !cljs.core.vector_QMARK_.call(null, k) && cljs.core._EQ_.call(null, cljs.core.count.call(null, k), 2) && cljs.core._EQ_.call(null, cljs.core.first.call(null, k), new cljs.core.Symbol("schema.core", "optional-key", "schema.core/optional-key", -170069547, null))) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.second.call(null, k), false], null);
          } else {
            return null;
          }
        }
        break;
      }
    }();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var temp__4425__auto___19810 = output_checker19800_19806.call(null, o__6956__auto__);
      if (cljs.core.truth_(temp__4425__auto___19810)) {
        var error__6955__auto___19811 = temp__4425__auto___19810;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "unwrap-schema-form-key", "unwrap-schema-form-key", -300088791, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), cljs.core.list(new cljs.core.Symbol("s", "maybe", "s/maybe", 1326133944, null), cljs.core.list(new cljs.core.Symbol("s", "pair", "s/pair", 1193014306, null), 
        new cljs.core.Symbol("s", "Keyword", "s/Keyword", -850066400, null), "k", new cljs.core.Symbol("s", "Bool", "s/Bool", 195910545, null), "optional?")), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Given a possibly-unevaluated schema map key form, unpack an explicit keyword\n   and optional? flag, or return nil for a non-explicit key"], null)), cljs.core.pr_str.call(null, error__6955__auto___19811)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 
        1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema19797_19803, new cljs.core.Keyword(null, "value", "value", 305978217), o__6956__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___19811], null));
      } else {
      }
    } else {
    }
    return o__6956__auto__;
  };
}(ufv___19802, output_schema19797_19803, input_schema19798_19804, input_checker19799_19805, output_checker19800_19806);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, plumbing.fnk.schema.unwrap_schema_form_key), schema.core.make_fn_schema.call(null, output_schema19797_19803, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema19798_19804], null)));
var ufv___19817 = schema.utils.use_fn_validation;
var output_schema19812_19818 = new cljs.core.PersistentArrayMap.fromArray([schema.core.Keyword, schema.core.Bool], true, false);
var input_schema19813_19819 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)))], null);
var input_checker19814_19820 = schema.core.checker.call(null, input_schema19813_19819);
var output_checker19815_19821 = schema.core.checker.call(null, output_schema19812_19818);
plumbing.fnk.schema.explicit_schema_key_map = function(ufv___19817, output_schema19812_19818, input_schema19813_19819, input_checker19814_19820, output_checker19815_19821) {
  return function plumbing$fnk$schema$explicit_schema_key_map(G__19816) {
    var validate__6953__auto__ = ufv___19817.get_cell();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var args__6954__auto___19822 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__19816], null);
      var temp__4425__auto___19823 = input_checker19814_19820.call(null, args__6954__auto___19822);
      if (cljs.core.truth_(temp__4425__auto___19823)) {
        var error__6955__auto___19824 = temp__4425__auto___19823;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "explicit-schema-key-map", "explicit-schema-key-map", 1668953963, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol("s", "Keyword", "s/Keyword", -850066400, null), new cljs.core.Symbol("s", "Bool", "s/Bool", 
        195910545, null)], null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Given a possibly-unevaluated map schema, return a map from bare keyword to true\n   (for required) or false (for optional)"], null)), cljs.core.pr_str.call(null, error__6955__auto___19824)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", 
        -1582001791), input_schema19813_19819, new cljs.core.Keyword(null, "value", "value", 305978217), args__6954__auto___19822, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___19824], null));
      } else {
      }
    } else {
    }
    var o__6956__auto__ = function() {
      var s = G__19816;
      while (true) {
        return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.keep.call(null, plumbing.fnk.schema.unwrap_schema_form_key, cljs.core.keys.call(null, s)));
        break;
      }
    }();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var temp__4425__auto___19825 = output_checker19815_19821.call(null, o__6956__auto__);
      if (cljs.core.truth_(temp__4425__auto___19825)) {
        var error__6955__auto___19826 = temp__4425__auto___19825;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "explicit-schema-key-map", "explicit-schema-key-map", 1668953963, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol("s", "Keyword", "s/Keyword", -850066400, null), new cljs.core.Symbol("s", "Bool", "s/Bool", 
        195910545, null)], null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Given a possibly-unevaluated map schema, return a map from bare keyword to true\n   (for required) or false (for optional)"], null)), cljs.core.pr_str.call(null, error__6955__auto___19826)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", 
        -1582001791), output_schema19812_19818, new cljs.core.Keyword(null, "value", "value", 305978217), o__6956__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___19826], null));
      } else {
      }
    } else {
    }
    return o__6956__auto__;
  };
}(ufv___19817, output_schema19812_19818, input_schema19813_19819, input_checker19814_19820, output_checker19815_19821);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, plumbing.fnk.schema.explicit_schema_key_map), schema.core.make_fn_schema.call(null, output_schema19812_19818, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema19813_19819], null)));
var ufv___19832 = schema.utils.use_fn_validation;
var output_schema19827_19833 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.Keyword], null), new cljs.core.Symbol(null, "required", "required", -846788763, null)), schema.core.one.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.Keyword], null), new cljs.core.Symbol(null, "optional", 
"optional", -600484260, null))], null);
var input_schema19828_19834 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, new cljs.core.PersistentArrayMap.fromArray([schema.core.Keyword, schema.core.Bool], true, false), cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol("s", "Keyword", "s/Keyword", 
-850066400, null), new cljs.core.Symbol("s", "Bool", "s/Bool", 195910545, null)], null)], null)))], null);
var input_checker19829_19835 = schema.core.checker.call(null, input_schema19828_19834);
var output_checker19830_19836 = schema.core.checker.call(null, output_schema19827_19833);
plumbing.fnk.schema.split_schema_keys = function(ufv___19832, output_schema19827_19833, input_schema19828_19834, input_checker19829_19835, output_checker19830_19836) {
  return function plumbing$fnk$schema$split_schema_keys(G__19831) {
    var validate__6953__auto__ = ufv___19832.get_cell();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var args__6954__auto___19837 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__19831], null);
      var temp__4425__auto___19838 = input_checker19829_19835.call(null, args__6954__auto___19837);
      if (cljs.core.truth_(temp__4425__auto___19838)) {
        var error__6955__auto___19839 = temp__4425__auto___19838;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "split-schema-keys", "split-schema-keys", 933671594, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("s", "one", "s/one", -1719427222, null), new cljs.core.PersistentVector(null, 
        1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol("s", "Keyword", "s/Keyword", -850066400, null)], null), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), new cljs.core.Symbol(null, "required", "required", -846788763, null))), cljs.core.list(new cljs.core.Symbol("s", "one", "s/one", -1719427222, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol("s", "Keyword", "s/Keyword", -850066400, 
        null)], null), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), new cljs.core.Symbol(null, "optional", "optional", -600484260, null)))], null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Given output of explicit-schema-key-map, split into seq [req opt]."], null)), cljs.core.pr_str.call(null, error__6955__auto___19839)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", 
        "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema19828_19834, new cljs.core.Keyword(null, "value", "value", 305978217), args__6954__auto___19837, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___19839], null));
      } else {
      }
    } else {
    }
    var o__6956__auto__ = function() {
      var s = G__19831;
      while (true) {
        return cljs.core.mapv.call(null, cljs.core.partial.call(null, cljs.core.mapv, cljs.core.key), cljs.core.juxt.call(null, cljs.core.filter, cljs.core.remove).call(null, cljs.core.val, s));
        break;
      }
    }();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var temp__4425__auto___19840 = output_checker19830_19836.call(null, o__6956__auto__);
      if (cljs.core.truth_(temp__4425__auto___19840)) {
        var error__6955__auto___19841 = temp__4425__auto___19840;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "split-schema-keys", "split-schema-keys", 933671594, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("s", "one", "s/one", -1719427222, null), new cljs.core.PersistentVector(null, 
        1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol("s", "Keyword", "s/Keyword", -850066400, null)], null), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), new cljs.core.Symbol(null, "required", "required", -846788763, null))), cljs.core.list(new cljs.core.Symbol("s", "one", "s/one", -1719427222, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol("s", "Keyword", "s/Keyword", -850066400, 
        null)], null), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), new cljs.core.Symbol(null, "optional", "optional", -600484260, null)))], null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Given output of explicit-schema-key-map, split into seq [req opt]."], null)), cljs.core.pr_str.call(null, error__6955__auto___19841)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", 
        "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema19827_19833, new cljs.core.Keyword(null, "value", "value", 305978217), o__6956__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___19841], null));
      } else {
      }
    } else {
    }
    return o__6956__auto__;
  };
}(ufv___19832, output_schema19827_19833, input_schema19828_19834, input_checker19829_19835, output_checker19830_19836);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, plumbing.fnk.schema.split_schema_keys), schema.core.make_fn_schema.call(null, output_schema19827_19833, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema19828_19834], null)));
plumbing.fnk.schema.merge_on_with = function plumbing$fnk$schema$merge_on_with() {
  var args__5572__auto__ = [];
  var len__5565__auto___19849 = arguments.length;
  var i__5566__auto___19850 = 0;
  while (true) {
    if (i__5566__auto___19850 < len__5565__auto___19849) {
      args__5572__auto__.push(arguments[i__5566__auto___19850]);
      var G__19851 = i__5566__auto___19850 + 1;
      i__5566__auto___19850 = G__19851;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 3 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(3), 0) : null;
  return plumbing.fnk.schema.merge_on_with.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5573__auto__);
};
plumbing.fnk.schema.merge_on_with.cljs$core$IFn$_invoke$arity$variadic = function(key_project, key_combine, val_combine, maps) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.vals.call(null, cljs.core.reduce.call(null, function(m, p__19846) {
    var vec__19847 = p__19846;
    var k = cljs.core.nth.call(null, vec__19847, 0, null);
    var v = cljs.core.nth.call(null, vec__19847, 1, null);
    var pk = key_project.call(null, k);
    var temp__4423__auto__ = cljs.core.get.call(null, m, pk);
    if (cljs.core.truth_(temp__4423__auto__)) {
      var vec__19848 = temp__4423__auto__;
      var ok = cljs.core.nth.call(null, vec__19848, 0, null);
      var ov = cljs.core.nth.call(null, vec__19848, 1, null);
      return cljs.core.assoc.call(null, m, pk, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_combine.call(null, ok, k), val_combine.call(null, ov, v)], null));
    } else {
      return cljs.core.assoc.call(null, m, pk, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null));
    }
  }, cljs.core.PersistentArrayMap.EMPTY, cljs.core.apply.call(null, cljs.core.concat, maps))));
};
plumbing.fnk.schema.merge_on_with.cljs$lang$maxFixedArity = 3;
plumbing.fnk.schema.merge_on_with.cljs$lang$applyTo = function(seq19842) {
  var G__19843 = cljs.core.first.call(null, seq19842);
  var seq19842__$1 = cljs.core.next.call(null, seq19842);
  var G__19844 = cljs.core.first.call(null, seq19842__$1);
  var seq19842__$2 = cljs.core.next.call(null, seq19842__$1);
  var G__19845 = cljs.core.first.call(null, seq19842__$2);
  var seq19842__$3 = cljs.core.next.call(null, seq19842__$2);
  return plumbing.fnk.schema.merge_on_with.cljs$core$IFn$_invoke$arity$variadic(G__19843, G__19844, G__19845, seq19842__$3);
};
var ufv___19859 = schema.utils.use_fn_validation;
var output_schema19853_19860 = plumbing.fnk.schema.InputSchema;
var input_schema19854_19861 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, plumbing.fnk.schema.InputSchema, cljs.core.with_meta(new cljs.core.Symbol(null, "i1", "i1", -572470430, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol(null, "InputSchema", "InputSchema", -824370558, null)], null))), schema.core.one.call(null, plumbing.fnk.schema.InputSchema, 
cljs.core.with_meta(new cljs.core.Symbol(null, "i2", "i2", 850408895, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol(null, "InputSchema", "InputSchema", -824370558, null)], null)))], null);
var input_checker19855_19862 = schema.core.checker.call(null, input_schema19854_19861);
var output_checker19856_19863 = schema.core.checker.call(null, output_schema19853_19860);
plumbing.fnk.schema.union_input_schemata = function(ufv___19859, output_schema19853_19860, input_schema19854_19861, input_checker19855_19862, output_checker19856_19863) {
  return function plumbing$fnk$schema$union_input_schemata(G__19857, G__19858) {
    var validate__6953__auto__ = ufv___19859.get_cell();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var args__6954__auto___19864 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__19857, G__19858], null);
      var temp__4425__auto___19865 = input_checker19855_19862.call(null, args__6954__auto___19864);
      if (cljs.core.truth_(temp__4425__auto___19865)) {
        var error__6955__auto___19866 = temp__4425__auto___19865;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "union-input-schemata", "union-input-schemata", -1338811970, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol(null, "InputSchema", "InputSchema", -824370558, null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns a minimal input schema schema that entails satisfaction of both s1 and s2"], 
        null)), cljs.core.pr_str.call(null, error__6955__auto___19866)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema19854_19861, new cljs.core.Keyword(null, "value", "value", 305978217), args__6954__auto___19864, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___19866], 
        null));
      } else {
      }
    } else {
    }
    var o__6956__auto__ = function() {
      var i1 = G__19857;
      var i2 = G__19858;
      while (true) {
        return plumbing.fnk.schema.merge_on_with.call(null, function(validate__6953__auto__, ufv___19859, output_schema19853_19860, input_schema19854_19861, input_checker19855_19862, output_checker19856_19863) {
          return function(p1__19852_SHARP_) {
            if (cljs.core.truth_(schema.core.specific_key_QMARK_.call(null, p1__19852_SHARP_))) {
              return schema.core.explicit_schema_key.call(null, p1__19852_SHARP_);
            } else {
              return new cljs.core.Keyword(null, "extra", "extra", 1612569067);
            }
          };
        }(validate__6953__auto__, ufv___19859, output_schema19853_19860, input_schema19854_19861, input_checker19855_19862, output_checker19856_19863), function(validate__6953__auto__, ufv___19859, output_schema19853_19860, input_schema19854_19861, input_checker19855_19862, output_checker19856_19863) {
          return function(k1, k2) {
            if (cljs.core.truth_(schema.core.required_key_QMARK_.call(null, k1))) {
              return k1;
            } else {
              if (cljs.core.truth_(schema.core.required_key_QMARK_.call(null, k2))) {
                return k2;
              } else {
                if (cljs.core.truth_(schema.core.optional_key_QMARK_.call(null, k1))) {
                  if (cljs.core._EQ_.call(null, k1, k2)) {
                  } else {
                    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "k1", "k1", -1701777341, null), new cljs.core.Symbol(null, "k2", "k2", -1225133949, null))))].join(""));
                  }
                  return k1;
                } else {
                  if (cljs.core._EQ_.call(null, k1, k2)) {
                    return k1;
                  } else {
                    throw new Error(schema.utils.format_STAR_.call(null, "Only one extra schema allowed"));
                  }
                }
              }
            }
          };
        }(validate__6953__auto__, ufv___19859, output_schema19853_19860, input_schema19854_19861, input_checker19855_19862, output_checker19856_19863), function(validate__6953__auto__, ufv___19859, output_schema19853_19860, input_schema19854_19861, input_checker19855_19862, output_checker19856_19863) {
          return function(s1, s2) {
            if (cljs.core.truth_(function() {
              var and__4514__auto__ = plumbing.fnk.schema.map_schema_QMARK_.call(null, s1);
              if (cljs.core.truth_(and__4514__auto__)) {
                return plumbing.fnk.schema.map_schema_QMARK_.call(null, s2);
              } else {
                return and__4514__auto__;
              }
            }())) {
              return plumbing$fnk$schema$union_input_schemata.call(null, s1, s2);
            } else {
              return plumbing.fnk.schema.non_map_union.call(null, s1, s2);
            }
          };
        }(validate__6953__auto__, ufv___19859, output_schema19853_19860, input_schema19854_19861, input_checker19855_19862, output_checker19856_19863), i1, i2);
        break;
      }
    }();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var temp__4425__auto___19867 = output_checker19856_19863.call(null, o__6956__auto__);
      if (cljs.core.truth_(temp__4425__auto___19867)) {
        var error__6955__auto___19868 = temp__4425__auto___19867;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "union-input-schemata", "union-input-schemata", -1338811970, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol(null, "InputSchema", "InputSchema", -824370558, null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns a minimal input schema schema that entails satisfaction of both s1 and s2"], 
        null)), cljs.core.pr_str.call(null, error__6955__auto___19868)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema19853_19860, new cljs.core.Keyword(null, "value", "value", 305978217), o__6956__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___19868], 
        null));
      } else {
      }
    } else {
    }
    return o__6956__auto__;
  };
}(ufv___19859, output_schema19853_19860, input_schema19854_19861, input_checker19855_19862, output_checker19856_19863);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, plumbing.fnk.schema.union_input_schemata), schema.core.make_fn_schema.call(null, output_schema19853_19860, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema19854_19861], null)));
var ufv___19874 = schema.utils.use_fn_validation;
var output_schema19869_19875 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.Keyword], null);
var input_schema19870_19876 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, plumbing.fnk.schema.InputSchema, cljs.core.with_meta(new cljs.core.Symbol(null, "input-schema", "input-schema", 1373647181, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol(null, "InputSchema", "InputSchema", -824370558, null)], null)))], null);
var input_checker19871_19877 = schema.core.checker.call(null, input_schema19870_19876);
var output_checker19872_19878 = schema.core.checker.call(null, output_schema19869_19875);
plumbing.fnk.schema.required_toplevel_keys = function(ufv___19874, output_schema19869_19875, input_schema19870_19876, input_checker19871_19877, output_checker19872_19878) {
  return function plumbing$fnk$schema$required_toplevel_keys(G__19873) {
    var validate__6953__auto__ = ufv___19874.get_cell();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var args__6954__auto___19879 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__19873], null);
      var temp__4425__auto___19880 = input_checker19871_19877.call(null, args__6954__auto___19879);
      if (cljs.core.truth_(temp__4425__auto___19880)) {
        var error__6955__auto___19881 = temp__4425__auto___19880;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "required-toplevel-keys", "required-toplevel-keys", 1052167617, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol("s", "Keyword", "s/Keyword", -850066400, null)], null), 
        new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Which top-level keys are required (i.e., non-false) by this input schema."], null)), cljs.core.pr_str.call(null, error__6955__auto___19881)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema19870_19876, new cljs.core.Keyword(null, 
        "value", "value", 305978217), args__6954__auto___19879, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___19881], null));
      } else {
      }
    } else {
    }
    var o__6956__auto__ = function() {
      var input_schema = G__19873;
      while (true) {
        return cljs.core.keep.call(null, function(validate__6953__auto__, ufv___19874, output_schema19869_19875, input_schema19870_19876, input_checker19871_19877, output_checker19872_19878) {
          return function(k) {
            if (cljs.core.truth_(schema.core.required_key_QMARK_.call(null, k))) {
              return schema.core.explicit_schema_key.call(null, k);
            } else {
              return null;
            }
          };
        }(validate__6953__auto__, ufv___19874, output_schema19869_19875, input_schema19870_19876, input_checker19871_19877, output_checker19872_19878), cljs.core.keys.call(null, input_schema));
        break;
      }
    }();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var temp__4425__auto___19882 = output_checker19872_19878.call(null, o__6956__auto__);
      if (cljs.core.truth_(temp__4425__auto___19882)) {
        var error__6955__auto___19883 = temp__4425__auto___19882;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "required-toplevel-keys", "required-toplevel-keys", 1052167617, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol("s", "Keyword", "s/Keyword", -850066400, null)], null), 
        new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Which top-level keys are required (i.e., non-false) by this input schema."], null)), cljs.core.pr_str.call(null, error__6955__auto___19883)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema19869_19875, new cljs.core.Keyword(null, 
        "value", "value", 305978217), o__6956__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___19883], null));
      } else {
      }
    } else {
    }
    return o__6956__auto__;
  };
}(ufv___19874, output_schema19869_19875, input_schema19870_19876, input_checker19871_19877, output_checker19872_19878);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, plumbing.fnk.schema.required_toplevel_keys), schema.core.make_fn_schema.call(null, output_schema19869_19875, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema19870_19876], null)));
plumbing.fnk.schema.guess_expr_output_schema = function plumbing$fnk$schema$guess_expr_output_schema(expr) {
  if (cljs.core.map_QMARK_.call(null, expr) && cljs.core.every_QMARK_.call(null, cljs.core.keyword_QMARK_, cljs.core.keys.call(null, expr))) {
    return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
      var iter__5279__auto__ = function plumbing$fnk$schema$guess_expr_output_schema_$_iter__19892(s__19893) {
        return new cljs.core.LazySeq(null, function() {
          var s__19893__$1 = s__19893;
          while (true) {
            var temp__4425__auto__ = cljs.core.seq.call(null, s__19893__$1);
            if (temp__4425__auto__) {
              var s__19893__$2 = temp__4425__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, s__19893__$2)) {
                var c__5277__auto__ = cljs.core.chunk_first.call(null, s__19893__$2);
                var size__5278__auto__ = cljs.core.count.call(null, c__5277__auto__);
                var b__19895 = cljs.core.chunk_buffer.call(null, size__5278__auto__);
                if (function() {
                  var i__19894 = 0;
                  while (true) {
                    if (i__19894 < size__5278__auto__) {
                      var vec__19898 = cljs.core._nth.call(null, c__5277__auto__, i__19894);
                      var k = cljs.core.nth.call(null, vec__19898, 0, null);
                      var v = cljs.core.nth.call(null, vec__19898, 1, null);
                      cljs.core.chunk_append.call(null, b__19895, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, plumbing$fnk$schema$guess_expr_output_schema.call(null, v)], null));
                      var G__19900 = i__19894 + 1;
                      i__19894 = G__19900;
                      continue;
                    } else {
                      return true;
                    }
                    break;
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__19895), plumbing$fnk$schema$guess_expr_output_schema_$_iter__19892.call(null, cljs.core.chunk_rest.call(null, s__19893__$2)));
                } else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__19895), null);
                }
              } else {
                var vec__19899 = cljs.core.first.call(null, s__19893__$2);
                var k = cljs.core.nth.call(null, vec__19899, 0, null);
                var v = cljs.core.nth.call(null, vec__19899, 1, null);
                return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, plumbing$fnk$schema$guess_expr_output_schema.call(null, v)], null), plumbing$fnk$schema$guess_expr_output_schema_$_iter__19892.call(null, cljs.core.rest.call(null, s__19893__$2)));
              }
            } else {
              return null;
            }
            break;
          }
        }, null, null);
      };
      return iter__5279__auto__.call(null, expr);
    }());
  } else {
    return new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null);
  }
};
plumbing.fnk.schema.schema_diff = function plumbing$fnk$schema$schema_diff(input_schema, output_schema) {
  if (cljs.core.not.call(null, plumbing.fnk.schema.map_schema_QMARK_.call(null, input_schema))) {
    return plumbing.fnk.schema.non_map_diff.call(null, input_schema, output_schema);
  } else {
    if (cljs.core.not.call(null, plumbing.fnk.schema.map_schema_QMARK_.call(null, output_schema))) {
      return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, input_schema, output_schema, new cljs.core.Delay(function() {
        return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.core.explain.call(null, output_schema)), new cljs.core.Symbol(null, "map?", "map?", -1780568534, null));
      }, null), null));
    } else {
      return cljs.core.not_empty.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
        var iter__5279__auto__ = function plumbing$fnk$schema$schema_diff_$_iter__19909(s__19910) {
          return new cljs.core.LazySeq(null, function() {
            var s__19910__$1 = s__19910;
            while (true) {
              var temp__4425__auto__ = cljs.core.seq.call(null, s__19910__$1);
              if (temp__4425__auto__) {
                var s__19910__$2 = temp__4425__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, s__19910__$2)) {
                  var c__5277__auto__ = cljs.core.chunk_first.call(null, s__19910__$2);
                  var size__5278__auto__ = cljs.core.count.call(null, c__5277__auto__);
                  var b__19912 = cljs.core.chunk_buffer.call(null, size__5278__auto__);
                  if (function() {
                    var i__19911 = 0;
                    while (true) {
                      if (i__19911 < size__5278__auto__) {
                        var vec__19915 = cljs.core._nth.call(null, c__5277__auto__, i__19911);
                        var k = cljs.core.nth.call(null, vec__19915, 0, null);
                        var v = cljs.core.nth.call(null, vec__19915, 1, null);
                        if (cljs.core.truth_(schema.core.specific_key_QMARK_.call(null, k))) {
                          var required_QMARK_ = schema.core.required_key_QMARK_.call(null, k);
                          var raw_k = schema.core.explicit_schema_key.call(null, k);
                          var present_QMARK_ = cljs.core.contains_QMARK_.call(null, output_schema, raw_k);
                          if (cljs.core.truth_(function() {
                            var or__4526__auto__ = required_QMARK_;
                            if (cljs.core.truth_(or__4526__auto__)) {
                              return or__4526__auto__;
                            } else {
                              return present_QMARK_;
                            }
                          }())) {
                            var fail = !present_QMARK_ ? new cljs.core.Symbol(null, "missing-required-key", "missing-required-key", 709961446, null) : plumbing$fnk$schema$schema_diff.call(null, v, cljs.core.get.call(null, output_schema, raw_k));
                            if (cljs.core.truth_(fail)) {
                              cljs.core.chunk_append.call(null, b__19912, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, fail], null));
                              var G__19917 = i__19911 + 1;
                              i__19911 = G__19917;
                              continue;
                            } else {
                              var G__19918 = i__19911 + 1;
                              i__19911 = G__19918;
                              continue;
                            }
                          } else {
                            var G__19919 = i__19911 + 1;
                            i__19911 = G__19919;
                            continue;
                          }
                        } else {
                          var G__19920 = i__19911 + 1;
                          i__19911 = G__19920;
                          continue;
                        }
                      } else {
                        return true;
                      }
                      break;
                    }
                  }()) {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__19912), plumbing$fnk$schema$schema_diff_$_iter__19909.call(null, cljs.core.chunk_rest.call(null, s__19910__$2)));
                  } else {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__19912), null);
                  }
                } else {
                  var vec__19916 = cljs.core.first.call(null, s__19910__$2);
                  var k = cljs.core.nth.call(null, vec__19916, 0, null);
                  var v = cljs.core.nth.call(null, vec__19916, 1, null);
                  if (cljs.core.truth_(schema.core.specific_key_QMARK_.call(null, k))) {
                    var required_QMARK_ = schema.core.required_key_QMARK_.call(null, k);
                    var raw_k = schema.core.explicit_schema_key.call(null, k);
                    var present_QMARK_ = cljs.core.contains_QMARK_.call(null, output_schema, raw_k);
                    if (cljs.core.truth_(function() {
                      var or__4526__auto__ = required_QMARK_;
                      if (cljs.core.truth_(or__4526__auto__)) {
                        return or__4526__auto__;
                      } else {
                        return present_QMARK_;
                      }
                    }())) {
                      var fail = !present_QMARK_ ? new cljs.core.Symbol(null, "missing-required-key", "missing-required-key", 709961446, null) : plumbing$fnk$schema$schema_diff.call(null, v, cljs.core.get.call(null, output_schema, raw_k));
                      if (cljs.core.truth_(fail)) {
                        return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, fail], null), plumbing$fnk$schema$schema_diff_$_iter__19909.call(null, cljs.core.rest.call(null, s__19910__$2)));
                      } else {
                        var G__19921 = cljs.core.rest.call(null, s__19910__$2);
                        s__19910__$1 = G__19921;
                        continue;
                      }
                    } else {
                      var G__19922 = cljs.core.rest.call(null, s__19910__$2);
                      s__19910__$1 = G__19922;
                      continue;
                    }
                  } else {
                    var G__19923 = cljs.core.rest.call(null, s__19910__$2);
                    s__19910__$1 = G__19923;
                    continue;
                  }
                }
              } else {
                return null;
              }
              break;
            }
          }, null, null);
        };
        return iter__5279__auto__.call(null, input_schema);
      }()));
    }
  }
};
plumbing.fnk.schema.assert_satisfies_schema = function plumbing$fnk$schema$assert_satisfies_schema(input_schema, output_schema) {
  var fails = plumbing.fnk.schema.schema_diff.call(null, input_schema, output_schema);
  if (cljs.core.truth_(fails)) {
    throw cljs.core.ex_info.call(null, [cljs.core.str(fails)].join(""), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "does-not-satisfy-schema", "does-not-satisfy-schema", -1543152824), new cljs.core.Keyword(null, "failures", "failures", -912916356), fails], null));
  } else {
    return null;
  }
};
var ufv___19946 = schema.utils.use_fn_validation;
var output_schema19924_19947 = schema.core.Any;
var input_schema19925_19948 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, plumbing.fnk.schema.IOSchemata, new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null)), schema.core.one.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, plumbing.fnk.schema.InputSchema, new cljs.core.Symbol(null, "input", "input", -2097503808, null)), schema.core.one.call(null, plumbing.fnk.schema.MapOutputSchema, 
new cljs.core.Symbol(null, "output", "output", 534662484, null))], null), new cljs.core.Symbol(null, "arg1", "arg1", -1702536411, null))], null);
var input_checker19926_19949 = schema.core.checker.call(null, input_schema19925_19948);
var output_checker19927_19950 = schema.core.checker.call(null, output_schema19924_19947);
plumbing.fnk.schema.compose_schemata = function(ufv___19946, output_schema19924_19947, input_schema19925_19948, input_checker19926_19949, output_checker19927_19950) {
  return function plumbing$fnk$schema$compose_schemata(G__19928, G__19929) {
    var validate__6953__auto__ = true;
    if (validate__6953__auto__) {
      var args__6954__auto___19951 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__19928, G__19929], null);
      var temp__4425__auto___19952 = input_checker19926_19949.call(null, args__6954__auto___19951);
      if (cljs.core.truth_(temp__4425__auto___19952)) {
        var error__6955__auto___19953 = temp__4425__auto___19952;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "compose-schemata", "compose-schemata", 918607729, null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "always-validate", "always-validate", 1031872127), true, new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null), new cljs.core.Keyword(null, 
        "doc", "doc", 1913296891), "Given pairs of input and output schemata for fnks f1 and f2,\n   return a pair of input and output schemata for #(f2 (merge % (f1 %))).\n   f1's output schema must not contain any optional keys."], null)), cljs.core.pr_str.call(null, error__6955__auto___19953)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, 
        "schema", "schema", -1582001791), input_schema19925_19948, new cljs.core.Keyword(null, "value", "value", 305978217), args__6954__auto___19951, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___19953], null));
      } else {
      }
    } else {
    }
    var o__6956__auto__ = function() {
      var G__19940 = G__19928;
      var vec__19942 = G__19940;
      var i2 = cljs.core.nth.call(null, vec__19942, 0, null);
      var o2 = cljs.core.nth.call(null, vec__19942, 1, null);
      var G__19941 = G__19929;
      var vec__19943 = G__19941;
      var i1 = cljs.core.nth.call(null, vec__19943, 0, null);
      var o1 = cljs.core.nth.call(null, vec__19943, 1, null);
      var G__19940__$1 = G__19940;
      var G__19941__$1 = G__19941;
      while (true) {
        var vec__19944 = G__19940__$1;
        var i2__$1 = cljs.core.nth.call(null, vec__19944, 0, null);
        var o2__$1 = cljs.core.nth.call(null, vec__19944, 1, null);
        var vec__19945 = G__19941__$1;
        var i1__$1 = cljs.core.nth.call(null, vec__19945, 0, null);
        var o1__$1 = cljs.core.nth.call(null, vec__19945, 1, null);
        plumbing.fnk.schema.assert_satisfies_schema.call(null, cljs.core.select_keys.call(null, i2__$1, cljs.core.keys.call(null, o1__$1)), o1__$1);
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [plumbing.fnk.schema.union_input_schemata.call(null, cljs.core.apply.call(null, cljs.core.dissoc, i2__$1, cljs.core.concat.call(null, cljs.core.keys.call(null, o1__$1), cljs.core.map.call(null, schema.core.optional_key, cljs.core.keys.call(null, o1__$1)))), i1__$1), o2__$1], null);
        break;
      }
    }();
    if (validate__6953__auto__) {
      var temp__4425__auto___19954 = output_checker19927_19950.call(null, o__6956__auto__);
      if (cljs.core.truth_(temp__4425__auto___19954)) {
        var error__6955__auto___19955 = temp__4425__auto___19954;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "compose-schemata", "compose-schemata", 918607729, null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "always-validate", "always-validate", 1031872127), true, new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null), new cljs.core.Keyword(null, 
        "doc", "doc", 1913296891), "Given pairs of input and output schemata for fnks f1 and f2,\n   return a pair of input and output schemata for #(f2 (merge % (f1 %))).\n   f1's output schema must not contain any optional keys."], null)), cljs.core.pr_str.call(null, error__6955__auto___19955)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, 
        "schema", "schema", -1582001791), output_schema19924_19947, new cljs.core.Keyword(null, "value", "value", 305978217), o__6956__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___19955], null));
      } else {
      }
    } else {
    }
    return o__6956__auto__;
  };
}(ufv___19946, output_schema19924_19947, input_schema19925_19948, input_checker19926_19949, output_checker19927_19950);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, plumbing.fnk.schema.compose_schemata), schema.core.make_fn_schema.call(null, output_schema19924_19947, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema19925_19948], null)));
plumbing.fnk.schema.schema_key = function plumbing$fnk$schema$schema_key(m, k) {
  if (cljs.core.contains_QMARK_.call(null, m, k)) {
    return k;
  } else {
    if (cljs.core.contains_QMARK_.call(null, m, schema.core.optional_key.call(null, k))) {
      return schema.core.optional_key.call(null, k);
    } else {
      return null;
    }
  }
};
plumbing.fnk.schema.possibly_contains_QMARK_ = function plumbing$fnk$schema$possibly_contains_QMARK_(m, k) {
  return cljs.core.boolean$.call(null, plumbing.fnk.schema.schema_key.call(null, m, k));
};
var ufv___20034 = schema.utils.use_fn_validation;
var output_schema19956_20035 = schema.core.Any;
var input_schema19957_20036 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, plumbing.fnk.schema.InputSchema, cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol(null, "InputSchema", "InputSchema", -824370558, null)], null))), schema.core.one.call(null, new cljs.core.PersistentVector(null, 
1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.Keyword], null), cljs.core.with_meta(new cljs.core.Symbol(null, "ks", "ks", -754231827, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol("s", "Keyword", "s/Keyword", -850066400, null)], null)], null)))], null);
var input_checker19958_20037 = schema.core.checker.call(null, input_schema19957_20036);
var output_checker19959_20038 = schema.core.checker.call(null, output_schema19956_20035);
plumbing.fnk.schema.split_schema = function(ufv___20034, output_schema19956_20035, input_schema19957_20036, input_checker19958_20037, output_checker19959_20038) {
  return function plumbing$fnk$schema$split_schema(G__19960, G__19961) {
    var validate__6953__auto__ = ufv___20034.get_cell();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var args__6954__auto___20039 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__19960, G__19961], null);
      var temp__4425__auto___20040 = input_checker19958_20037.call(null, args__6954__auto___20039);
      if (cljs.core.truth_(temp__4425__auto___20040)) {
        var error__6955__auto___20041 = temp__4425__auto___20040;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "split-schema", "split-schema", 1859174771, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Return a pair [ks-part non-ks-part], with any extra schema removed."], 
        null)), cljs.core.pr_str.call(null, error__6955__auto___20041)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema19957_20036, new cljs.core.Keyword(null, "value", "value", 305978217), args__6954__auto___20039, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___20041], 
        null));
      } else {
      }
    } else {
    }
    var o__6956__auto__ = function() {
      var s = G__19960;
      var ks = G__19961;
      while (true) {
        var ks__$1 = cljs.core.set.call(null, ks);
        var iter__5279__auto__ = function(ks__$1, validate__6953__auto__, ufv___20034, output_schema19956_20035, input_schema19957_20036, input_checker19958_20037, output_checker19959_20038) {
          return function plumbing$fnk$schema$split_schema_$_iter__19998(s__19999) {
            return new cljs.core.LazySeq(null, function(ks__$1, validate__6953__auto__, ufv___20034, output_schema19956_20035, input_schema19957_20036, input_checker19958_20037, output_checker19959_20038) {
              return function() {
                var s__19999__$1 = s__19999;
                while (true) {
                  var temp__4425__auto__ = cljs.core.seq.call(null, s__19999__$1);
                  if (temp__4425__auto__) {
                    var s__19999__$2 = temp__4425__auto__;
                    if (cljs.core.chunked_seq_QMARK_.call(null, s__19999__$2)) {
                      var c__5277__auto__ = cljs.core.chunk_first.call(null, s__19999__$2);
                      var size__5278__auto__ = cljs.core.count.call(null, c__5277__auto__);
                      var b__20001 = cljs.core.chunk_buffer.call(null, size__5278__auto__);
                      if (function() {
                        var i__20000 = 0;
                        while (true) {
                          if (i__20000 < size__5278__auto__) {
                            var in_QMARK_ = cljs.core._nth.call(null, c__5277__auto__, i__20000);
                            cljs.core.chunk_append.call(null, b__20001, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                              var iter__5279__auto__ = function(i__20000, in_QMARK_, c__5277__auto__, size__5278__auto__, b__20001, s__19999__$2, temp__4425__auto__, ks__$1, validate__6953__auto__, ufv___20034, output_schema19956_20035, input_schema19957_20036, input_checker19958_20037, output_checker19959_20038) {
                                return function plumbing$fnk$schema$split_schema_$_iter__19998_$_iter__20018(s__20019) {
                                  return new cljs.core.LazySeq(null, function(i__20000, in_QMARK_, c__5277__auto__, size__5278__auto__, b__20001, s__19999__$2, temp__4425__auto__, ks__$1, validate__6953__auto__, ufv___20034, output_schema19956_20035, input_schema19957_20036, input_checker19958_20037, output_checker19959_20038) {
                                    return function() {
                                      var s__20019__$1 = s__20019;
                                      while (true) {
                                        var temp__4425__auto____$1 = cljs.core.seq.call(null, s__20019__$1);
                                        if (temp__4425__auto____$1) {
                                          var s__20019__$2 = temp__4425__auto____$1;
                                          if (cljs.core.chunked_seq_QMARK_.call(null, s__20019__$2)) {
                                            var c__5277__auto____$1 = cljs.core.chunk_first.call(null, s__20019__$2);
                                            var size__5278__auto____$1 = cljs.core.count.call(null, c__5277__auto____$1);
                                            var b__20021 = cljs.core.chunk_buffer.call(null, size__5278__auto____$1);
                                            if (function() {
                                              var i__20020 = 0;
                                              while (true) {
                                                if (i__20020 < size__5278__auto____$1) {
                                                  var vec__20024 = cljs.core._nth.call(null, c__5277__auto____$1, i__20020);
                                                  var k = cljs.core.nth.call(null, vec__20024, 0, null);
                                                  var v = cljs.core.nth.call(null, vec__20024, 1, null);
                                                  if (cljs.core.truth_(function() {
                                                    var and__4514__auto__ = schema.core.specific_key_QMARK_.call(null, k);
                                                    if (cljs.core.truth_(and__4514__auto__)) {
                                                      return cljs.core._EQ_.call(null, in_QMARK_, cljs.core.contains_QMARK_.call(null, ks__$1, schema.core.explicit_schema_key.call(null, k)));
                                                    } else {
                                                      return and__4514__auto__;
                                                    }
                                                  }())) {
                                                    cljs.core.chunk_append.call(null, b__20021, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null));
                                                    var G__20042 = i__20020 + 1;
                                                    i__20020 = G__20042;
                                                    continue;
                                                  } else {
                                                    var G__20043 = i__20020 + 1;
                                                    i__20020 = G__20043;
                                                    continue;
                                                  }
                                                } else {
                                                  return true;
                                                }
                                                break;
                                              }
                                            }()) {
                                              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20021), plumbing$fnk$schema$split_schema_$_iter__19998_$_iter__20018.call(null, cljs.core.chunk_rest.call(null, s__20019__$2)));
                                            } else {
                                              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20021), null);
                                            }
                                          } else {
                                            var vec__20025 = cljs.core.first.call(null, s__20019__$2);
                                            var k = cljs.core.nth.call(null, vec__20025, 0, null);
                                            var v = cljs.core.nth.call(null, vec__20025, 1, null);
                                            if (cljs.core.truth_(function() {
                                              var and__4514__auto__ = schema.core.specific_key_QMARK_.call(null, k);
                                              if (cljs.core.truth_(and__4514__auto__)) {
                                                return cljs.core._EQ_.call(null, in_QMARK_, cljs.core.contains_QMARK_.call(null, ks__$1, schema.core.explicit_schema_key.call(null, k)));
                                              } else {
                                                return and__4514__auto__;
                                              }
                                            }())) {
                                              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null), plumbing$fnk$schema$split_schema_$_iter__19998_$_iter__20018.call(null, cljs.core.rest.call(null, s__20019__$2)));
                                            } else {
                                              var G__20044 = cljs.core.rest.call(null, s__20019__$2);
                                              s__20019__$1 = G__20044;
                                              continue;
                                            }
                                          }
                                        } else {
                                          return null;
                                        }
                                        break;
                                      }
                                    };
                                  }(i__20000, in_QMARK_, c__5277__auto__, size__5278__auto__, b__20001, s__19999__$2, temp__4425__auto__, ks__$1, validate__6953__auto__, ufv___20034, output_schema19956_20035, input_schema19957_20036, input_checker19958_20037, output_checker19959_20038), null, null);
                                };
                              }(i__20000, in_QMARK_, c__5277__auto__, size__5278__auto__, b__20001, s__19999__$2, temp__4425__auto__, ks__$1, validate__6953__auto__, ufv___20034, output_schema19956_20035, input_schema19957_20036, input_checker19958_20037, output_checker19959_20038);
                              return iter__5279__auto__.call(null, s);
                            }()));
                            var G__20045 = i__20000 + 1;
                            i__20000 = G__20045;
                            continue;
                          } else {
                            return true;
                          }
                          break;
                        }
                      }()) {
                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20001), plumbing$fnk$schema$split_schema_$_iter__19998.call(null, cljs.core.chunk_rest.call(null, s__19999__$2)));
                      } else {
                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20001), null);
                      }
                    } else {
                      var in_QMARK_ = cljs.core.first.call(null, s__19999__$2);
                      return cljs.core.cons.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                        var iter__5279__auto__ = function(in_QMARK_, s__19999__$2, temp__4425__auto__, ks__$1, validate__6953__auto__, ufv___20034, output_schema19956_20035, input_schema19957_20036, input_checker19958_20037, output_checker19959_20038) {
                          return function plumbing$fnk$schema$split_schema_$_iter__19998_$_iter__20026(s__20027) {
                            return new cljs.core.LazySeq(null, function(in_QMARK_, s__19999__$2, temp__4425__auto__, ks__$1, validate__6953__auto__, ufv___20034, output_schema19956_20035, input_schema19957_20036, input_checker19958_20037, output_checker19959_20038) {
                              return function() {
                                var s__20027__$1 = s__20027;
                                while (true) {
                                  var temp__4425__auto____$1 = cljs.core.seq.call(null, s__20027__$1);
                                  if (temp__4425__auto____$1) {
                                    var s__20027__$2 = temp__4425__auto____$1;
                                    if (cljs.core.chunked_seq_QMARK_.call(null, s__20027__$2)) {
                                      var c__5277__auto__ = cljs.core.chunk_first.call(null, s__20027__$2);
                                      var size__5278__auto__ = cljs.core.count.call(null, c__5277__auto__);
                                      var b__20029 = cljs.core.chunk_buffer.call(null, size__5278__auto__);
                                      if (function() {
                                        var i__20028 = 0;
                                        while (true) {
                                          if (i__20028 < size__5278__auto__) {
                                            var vec__20032 = cljs.core._nth.call(null, c__5277__auto__, i__20028);
                                            var k = cljs.core.nth.call(null, vec__20032, 0, null);
                                            var v = cljs.core.nth.call(null, vec__20032, 1, null);
                                            if (cljs.core.truth_(function() {
                                              var and__4514__auto__ = schema.core.specific_key_QMARK_.call(null, k);
                                              if (cljs.core.truth_(and__4514__auto__)) {
                                                return cljs.core._EQ_.call(null, in_QMARK_, cljs.core.contains_QMARK_.call(null, ks__$1, schema.core.explicit_schema_key.call(null, k)));
                                              } else {
                                                return and__4514__auto__;
                                              }
                                            }())) {
                                              cljs.core.chunk_append.call(null, b__20029, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null));
                                              var G__20046 = i__20028 + 1;
                                              i__20028 = G__20046;
                                              continue;
                                            } else {
                                              var G__20047 = i__20028 + 1;
                                              i__20028 = G__20047;
                                              continue;
                                            }
                                          } else {
                                            return true;
                                          }
                                          break;
                                        }
                                      }()) {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20029), plumbing$fnk$schema$split_schema_$_iter__19998_$_iter__20026.call(null, cljs.core.chunk_rest.call(null, s__20027__$2)));
                                      } else {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20029), null);
                                      }
                                    } else {
                                      var vec__20033 = cljs.core.first.call(null, s__20027__$2);
                                      var k = cljs.core.nth.call(null, vec__20033, 0, null);
                                      var v = cljs.core.nth.call(null, vec__20033, 1, null);
                                      if (cljs.core.truth_(function() {
                                        var and__4514__auto__ = schema.core.specific_key_QMARK_.call(null, k);
                                        if (cljs.core.truth_(and__4514__auto__)) {
                                          return cljs.core._EQ_.call(null, in_QMARK_, cljs.core.contains_QMARK_.call(null, ks__$1, schema.core.explicit_schema_key.call(null, k)));
                                        } else {
                                          return and__4514__auto__;
                                        }
                                      }())) {
                                        return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null), plumbing$fnk$schema$split_schema_$_iter__19998_$_iter__20026.call(null, cljs.core.rest.call(null, s__20027__$2)));
                                      } else {
                                        var G__20048 = cljs.core.rest.call(null, s__20027__$2);
                                        s__20027__$1 = G__20048;
                                        continue;
                                      }
                                    }
                                  } else {
                                    return null;
                                  }
                                  break;
                                }
                              };
                            }(in_QMARK_, s__19999__$2, temp__4425__auto__, ks__$1, validate__6953__auto__, ufv___20034, output_schema19956_20035, input_schema19957_20036, input_checker19958_20037, output_checker19959_20038), null, null);
                          };
                        }(in_QMARK_, s__19999__$2, temp__4425__auto__, ks__$1, validate__6953__auto__, ufv___20034, output_schema19956_20035, input_schema19957_20036, input_checker19958_20037, output_checker19959_20038);
                        return iter__5279__auto__.call(null, s);
                      }()), plumbing$fnk$schema$split_schema_$_iter__19998.call(null, cljs.core.rest.call(null, s__19999__$2)));
                    }
                  } else {
                    return null;
                  }
                  break;
                }
              };
            }(ks__$1, validate__6953__auto__, ufv___20034, output_schema19956_20035, input_schema19957_20036, input_checker19958_20037, output_checker19959_20038), null, null);
          };
        }(ks__$1, validate__6953__auto__, ufv___20034, output_schema19956_20035, input_schema19957_20036, input_checker19958_20037, output_checker19959_20038);
        return iter__5279__auto__.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, false], null));
        break;
      }
    }();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var temp__4425__auto___20049 = output_checker19959_20038.call(null, o__6956__auto__);
      if (cljs.core.truth_(temp__4425__auto___20049)) {
        var error__6955__auto___20050 = temp__4425__auto___20049;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "split-schema", "split-schema", 1859174771, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Return a pair [ks-part non-ks-part], with any extra schema removed."], 
        null)), cljs.core.pr_str.call(null, error__6955__auto___20050)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema19956_20035, new cljs.core.Keyword(null, "value", "value", 305978217), o__6956__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___20050], 
        null));
      } else {
      }
    } else {
    }
    return o__6956__auto__;
  };
}(ufv___20034, output_schema19956_20035, input_schema19957_20036, input_checker19958_20037, output_checker19959_20038);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, plumbing.fnk.schema.split_schema), schema.core.make_fn_schema.call(null, output_schema19956_20035, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema19957_20036], null)));
var ufv___20081 = schema.utils.use_fn_validation;
var output_schema20051_20082 = plumbing.fnk.schema.GraphIOSchemata;
var input_schema20052_20083 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, plumbing.fnk.schema.GraphIOSchemata, new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null)), schema.core.one.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Keyword, "key"), schema.core.one.call(null, plumbing.fnk.schema.IOSchemata, "inner-schemas")], null), new cljs.core.Symbol(null, 
"arg1", "arg1", -1702536411, null))], null);
var input_checker20053_20084 = schema.core.checker.call(null, input_schema20052_20083);
var output_checker20054_20085 = schema.core.checker.call(null, output_schema20051_20082);
plumbing.fnk.schema.sequence_schemata = function(ufv___20081, output_schema20051_20082, input_schema20052_20083, input_checker20053_20084, output_checker20054_20085) {
  return function plumbing$fnk$schema$sequence_schemata(G__20055, G__20056) {
    var validate__6953__auto__ = ufv___20081.get_cell();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var args__6954__auto___20086 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__20055, G__20056], null);
      var temp__4425__auto___20087 = input_checker20053_20084.call(null, args__6954__auto___20086);
      if (cljs.core.truth_(temp__4425__auto___20087)) {
        var error__6955__auto___20088 = temp__4425__auto___20087;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "sequence-schemata", "sequence-schemata", -2061205313, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol(null, "GraphIOSchemata", "GraphIOSchemata", -2137701253, null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Given pairs of input and output schemata for fnks f1 and f2, and a keyword k,\n   return a pair of input and output schemata for #(let [v1 (f1 %)] (assoc v1 k (f2 (merge-disjoint % v1))))"], 
        null)), cljs.core.pr_str.call(null, error__6955__auto___20088)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema20052_20083, new cljs.core.Keyword(null, "value", "value", 305978217), args__6954__auto___20086, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___20088], 
        null));
      } else {
      }
    } else {
    }
    var o__6956__auto__ = function() {
      var G__20072 = G__20055;
      var vec__20074 = G__20072;
      var i1 = cljs.core.nth.call(null, vec__20074, 0, null);
      var o1 = cljs.core.nth.call(null, vec__20074, 1, null);
      var G__20073 = G__20056;
      var vec__20075 = G__20073;
      var k = cljs.core.nth.call(null, vec__20075, 0, null);
      var vec__20076 = cljs.core.nth.call(null, vec__20075, 1, null);
      var i2 = cljs.core.nth.call(null, vec__20076, 0, null);
      var o2 = cljs.core.nth.call(null, vec__20076, 1, null);
      var G__20072__$1 = G__20072;
      var G__20073__$1 = G__20073;
      while (true) {
        var vec__20077 = G__20072__$1;
        var i1__$1 = cljs.core.nth.call(null, vec__20077, 0, null);
        var o1__$1 = cljs.core.nth.call(null, vec__20077, 1, null);
        var vec__20078 = G__20073__$1;
        var k__$1 = cljs.core.nth.call(null, vec__20078, 0, null);
        var vec__20079 = cljs.core.nth.call(null, vec__20078, 1, null);
        var i2__$1 = cljs.core.nth.call(null, vec__20079, 0, null);
        var o2__$1 = cljs.core.nth.call(null, vec__20079, 1, null);
        if (cljs.core.not.call(null, plumbing.fnk.schema.possibly_contains_QMARK_.call(null, i1__$1, k__$1))) {
        } else {
          throw new Error(schema.utils.format_STAR_.call(null, "Duplicate key output (possibly due to a misordered graph) %s for input %s from input %s", k__$1, schema.core.explain.call(null, i2__$1), schema.core.explain.call(null, i1__$1)));
        }
        if (cljs.core.not.call(null, plumbing.fnk.schema.possibly_contains_QMARK_.call(null, i2__$1, k__$1))) {
        } else {
          throw new Error(schema.utils.format_STAR_.call(null, "Node outputs a key %s in its inputs %s", k__$1, schema.core.explain.call(null, i2__$1)));
        }
        if (cljs.core.not.call(null, plumbing.fnk.schema.possibly_contains_QMARK_.call(null, o1__$1, k__$1))) {
        } else {
          throw new Error(schema.utils.format_STAR_.call(null, "Node outputs a duplicate key %s given inputs %s", k__$1, schema.core.explain.call(null, i1__$1)));
        }
        var vec__20080 = plumbing.fnk.schema.split_schema.call(null, i2__$1, cljs.core.keys.call(null, o1__$1));
        var used = cljs.core.nth.call(null, vec__20080, 0, null);
        var unused = cljs.core.nth.call(null, vec__20080, 1, null);
        plumbing.fnk.schema.assert_satisfies_schema.call(null, used, o1__$1);
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [plumbing.fnk.schema.union_input_schemata.call(null, unused, i1__$1), cljs.core.assoc.call(null, o1__$1, k__$1, o2__$1)], null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var temp__4425__auto___20089 = output_checker20054_20085.call(null, o__6956__auto__);
      if (cljs.core.truth_(temp__4425__auto___20089)) {
        var error__6955__auto___20090 = temp__4425__auto___20089;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "sequence-schemata", "sequence-schemata", -2061205313, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol(null, "GraphIOSchemata", "GraphIOSchemata", -2137701253, null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Given pairs of input and output schemata for fnks f1 and f2, and a keyword k,\n   return a pair of input and output schemata for #(let [v1 (f1 %)] (assoc v1 k (f2 (merge-disjoint % v1))))"], 
        null)), cljs.core.pr_str.call(null, error__6955__auto___20090)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema20051_20082, new cljs.core.Keyword(null, "value", "value", 305978217), o__6956__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___20090], 
        null));
      } else {
      }
    } else {
    }
    return o__6956__auto__;
  };
}(ufv___20081, output_schema20051_20082, input_schema20052_20083, input_checker20053_20084, output_checker20054_20085);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, plumbing.fnk.schema.sequence_schemata), schema.core.make_fn_schema.call(null, output_schema20051_20082, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema20052_20083], null)));
goog.provide("plumbing.core");
goog.require("cljs.core");
goog.require("schema.utils");
goog.require("plumbing.fnk.schema");
plumbing.core._PLUS_none_PLUS_ = new cljs.core.Keyword("plumbing.core", "missing", "plumbing.core/missing", 1721767298);
plumbing.core.update = function plumbing$core$update() {
  var args20093 = [];
  var len__5565__auto___20102 = arguments.length;
  var i__5566__auto___20103 = 0;
  while (true) {
    if (i__5566__auto___20103 < len__5565__auto___20102) {
      args20093.push(arguments[i__5566__auto___20103]);
      var G__20104 = i__5566__auto___20103 + 1;
      i__5566__auto___20103 = G__20104;
      continue;
    } else {
    }
    break;
  }
  var G__20101 = args20093.length;
  switch(G__20101) {
    case 3:
      return plumbing.core.update.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return plumbing.core.update.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return plumbing.core.update.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args20093.slice(5), 0);
      return plumbing.core.update.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], argseq__5584__auto__);
  }
};
plumbing.core.update.cljs$core$IFn$_invoke$arity$3 = function(m, k, f) {
  return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)));
};
plumbing.core.update.cljs$core$IFn$_invoke$arity$4 = function(m, k, f, x1) {
  return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), x1));
};
plumbing.core.update.cljs$core$IFn$_invoke$arity$5 = function(m, k, f, x1, x2) {
  return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), x1, x2));
};
plumbing.core.update.cljs$core$IFn$_invoke$arity$variadic = function(m, k, f, x1, x2, xs) {
  return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), x1, x2, xs));
};
plumbing.core.update.cljs$lang$applyTo = function(seq20094) {
  var G__20095 = cljs.core.first.call(null, seq20094);
  var seq20094__$1 = cljs.core.next.call(null, seq20094);
  var G__20096 = cljs.core.first.call(null, seq20094__$1);
  var seq20094__$2 = cljs.core.next.call(null, seq20094__$1);
  var G__20097 = cljs.core.first.call(null, seq20094__$2);
  var seq20094__$3 = cljs.core.next.call(null, seq20094__$2);
  var G__20098 = cljs.core.first.call(null, seq20094__$3);
  var seq20094__$4 = cljs.core.next.call(null, seq20094__$3);
  var G__20099 = cljs.core.first.call(null, seq20094__$4);
  var seq20094__$5 = cljs.core.next.call(null, seq20094__$4);
  return plumbing.core.update.cljs$core$IFn$_invoke$arity$variadic(G__20095, G__20096, G__20097, G__20098, G__20099, seq20094__$5);
};
plumbing.core.update.cljs$lang$maxFixedArity = 5;
plumbing.core.map_vals = function plumbing$core$map_vals(f, m) {
  if (cljs.core.sorted_QMARK_.call(null, m)) {
    return cljs.core.reduce_kv.call(null, function(out_m, k, v) {
      return cljs.core.assoc.call(null, out_m, k, f.call(null, v));
    }, cljs.core.sorted_map.call(null), m);
  } else {
    if (cljs.core.map_QMARK_.call(null, m)) {
      return cljs.core.persistent_BANG_.call(null, cljs.core.reduce_kv.call(null, function(out_m, k, v) {
        return cljs.core.assoc_BANG_.call(null, out_m, k, f.call(null, v));
      }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), m));
    } else {
      var m_atom__12156__auto__ = cljs.core.atom.call(null, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY));
      var seq__20114_20120 = cljs.core.seq.call(null, m);
      var chunk__20115_20121 = null;
      var count__20116_20122 = 0;
      var i__20117_20123 = 0;
      while (true) {
        if (i__20117_20123 < count__20116_20122) {
          var vec__20118_20124 = cljs.core._nth.call(null, chunk__20115_20121, i__20117_20123);
          var k_20125 = cljs.core.nth.call(null, vec__20118_20124, 0, null);
          var v_20126 = cljs.core.nth.call(null, vec__20118_20124, 1, null);
          var m20113_20127 = cljs.core.deref.call(null, m_atom__12156__auto__);
          cljs.core.reset_BANG_.call(null, m_atom__12156__auto__, cljs.core.assoc_BANG_.call(null, m20113_20127, k_20125, f.call(null, v_20126)));
          var G__20128 = seq__20114_20120;
          var G__20129 = chunk__20115_20121;
          var G__20130 = count__20116_20122;
          var G__20131 = i__20117_20123 + 1;
          seq__20114_20120 = G__20128;
          chunk__20115_20121 = G__20129;
          count__20116_20122 = G__20130;
          i__20117_20123 = G__20131;
          continue;
        } else {
          var temp__4425__auto___20132 = cljs.core.seq.call(null, seq__20114_20120);
          if (temp__4425__auto___20132) {
            var seq__20114_20133__$1 = temp__4425__auto___20132;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__20114_20133__$1)) {
              var c__5310__auto___20134 = cljs.core.chunk_first.call(null, seq__20114_20133__$1);
              var G__20135 = cljs.core.chunk_rest.call(null, seq__20114_20133__$1);
              var G__20136 = c__5310__auto___20134;
              var G__20137 = cljs.core.count.call(null, c__5310__auto___20134);
              var G__20138 = 0;
              seq__20114_20120 = G__20135;
              chunk__20115_20121 = G__20136;
              count__20116_20122 = G__20137;
              i__20117_20123 = G__20138;
              continue;
            } else {
              var vec__20119_20139 = cljs.core.first.call(null, seq__20114_20133__$1);
              var k_20140 = cljs.core.nth.call(null, vec__20119_20139, 0, null);
              var v_20141 = cljs.core.nth.call(null, vec__20119_20139, 1, null);
              var m20113_20142 = cljs.core.deref.call(null, m_atom__12156__auto__);
              cljs.core.reset_BANG_.call(null, m_atom__12156__auto__, cljs.core.assoc_BANG_.call(null, m20113_20142, k_20140, f.call(null, v_20141)));
              var G__20143 = cljs.core.next.call(null, seq__20114_20133__$1);
              var G__20144 = null;
              var G__20145 = 0;
              var G__20146 = 0;
              seq__20114_20120 = G__20143;
              chunk__20115_20121 = G__20144;
              count__20116_20122 = G__20145;
              i__20117_20123 = G__20146;
              continue;
            }
          } else {
          }
        }
        break;
      }
      return cljs.core.persistent_BANG_.call(null, cljs.core.deref.call(null, m_atom__12156__auto__));
    }
  }
};
plumbing.core.map_keys = function plumbing$core$map_keys(f, m) {
  if (cljs.core.map_QMARK_.call(null, m)) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce_kv.call(null, function(out_m, k, v) {
      return cljs.core.assoc_BANG_.call(null, out_m, f.call(null, k), v);
    }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), m));
  } else {
    var m_atom__12156__auto__ = cljs.core.atom.call(null, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY));
    var seq__20155_20161 = cljs.core.seq.call(null, m);
    var chunk__20156_20162 = null;
    var count__20157_20163 = 0;
    var i__20158_20164 = 0;
    while (true) {
      if (i__20158_20164 < count__20157_20163) {
        var vec__20159_20165 = cljs.core._nth.call(null, chunk__20156_20162, i__20158_20164);
        var k_20166 = cljs.core.nth.call(null, vec__20159_20165, 0, null);
        var v_20167 = cljs.core.nth.call(null, vec__20159_20165, 1, null);
        var m20154_20168 = cljs.core.deref.call(null, m_atom__12156__auto__);
        cljs.core.reset_BANG_.call(null, m_atom__12156__auto__, cljs.core.assoc_BANG_.call(null, m20154_20168, f.call(null, k_20166), v_20167));
        var G__20169 = seq__20155_20161;
        var G__20170 = chunk__20156_20162;
        var G__20171 = count__20157_20163;
        var G__20172 = i__20158_20164 + 1;
        seq__20155_20161 = G__20169;
        chunk__20156_20162 = G__20170;
        count__20157_20163 = G__20171;
        i__20158_20164 = G__20172;
        continue;
      } else {
        var temp__4425__auto___20173 = cljs.core.seq.call(null, seq__20155_20161);
        if (temp__4425__auto___20173) {
          var seq__20155_20174__$1 = temp__4425__auto___20173;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__20155_20174__$1)) {
            var c__5310__auto___20175 = cljs.core.chunk_first.call(null, seq__20155_20174__$1);
            var G__20176 = cljs.core.chunk_rest.call(null, seq__20155_20174__$1);
            var G__20177 = c__5310__auto___20175;
            var G__20178 = cljs.core.count.call(null, c__5310__auto___20175);
            var G__20179 = 0;
            seq__20155_20161 = G__20176;
            chunk__20156_20162 = G__20177;
            count__20157_20163 = G__20178;
            i__20158_20164 = G__20179;
            continue;
          } else {
            var vec__20160_20180 = cljs.core.first.call(null, seq__20155_20174__$1);
            var k_20181 = cljs.core.nth.call(null, vec__20160_20180, 0, null);
            var v_20182 = cljs.core.nth.call(null, vec__20160_20180, 1, null);
            var m20154_20183 = cljs.core.deref.call(null, m_atom__12156__auto__);
            cljs.core.reset_BANG_.call(null, m_atom__12156__auto__, cljs.core.assoc_BANG_.call(null, m20154_20183, f.call(null, k_20181), v_20182));
            var G__20184 = cljs.core.next.call(null, seq__20155_20174__$1);
            var G__20185 = null;
            var G__20186 = 0;
            var G__20187 = 0;
            seq__20155_20161 = G__20184;
            chunk__20156_20162 = G__20185;
            count__20157_20163 = G__20186;
            i__20158_20164 = G__20187;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return cljs.core.persistent_BANG_.call(null, cljs.core.deref.call(null, m_atom__12156__auto__));
  }
};
plumbing.core.map_from_keys = function plumbing$core$map_from_keys(f, ks) {
  var m_atom__12156__auto__ = cljs.core.atom.call(null, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY));
  var seq__20194_20198 = cljs.core.seq.call(null, ks);
  var chunk__20195_20199 = null;
  var count__20196_20200 = 0;
  var i__20197_20201 = 0;
  while (true) {
    if (i__20197_20201 < count__20196_20200) {
      var k_20202 = cljs.core._nth.call(null, chunk__20195_20199, i__20197_20201);
      var m20193_20203 = cljs.core.deref.call(null, m_atom__12156__auto__);
      cljs.core.reset_BANG_.call(null, m_atom__12156__auto__, cljs.core.assoc_BANG_.call(null, m20193_20203, k_20202, f.call(null, k_20202)));
      var G__20204 = seq__20194_20198;
      var G__20205 = chunk__20195_20199;
      var G__20206 = count__20196_20200;
      var G__20207 = i__20197_20201 + 1;
      seq__20194_20198 = G__20204;
      chunk__20195_20199 = G__20205;
      count__20196_20200 = G__20206;
      i__20197_20201 = G__20207;
      continue;
    } else {
      var temp__4425__auto___20208 = cljs.core.seq.call(null, seq__20194_20198);
      if (temp__4425__auto___20208) {
        var seq__20194_20209__$1 = temp__4425__auto___20208;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__20194_20209__$1)) {
          var c__5310__auto___20210 = cljs.core.chunk_first.call(null, seq__20194_20209__$1);
          var G__20211 = cljs.core.chunk_rest.call(null, seq__20194_20209__$1);
          var G__20212 = c__5310__auto___20210;
          var G__20213 = cljs.core.count.call(null, c__5310__auto___20210);
          var G__20214 = 0;
          seq__20194_20198 = G__20211;
          chunk__20195_20199 = G__20212;
          count__20196_20200 = G__20213;
          i__20197_20201 = G__20214;
          continue;
        } else {
          var k_20215 = cljs.core.first.call(null, seq__20194_20209__$1);
          var m20193_20216 = cljs.core.deref.call(null, m_atom__12156__auto__);
          cljs.core.reset_BANG_.call(null, m_atom__12156__auto__, cljs.core.assoc_BANG_.call(null, m20193_20216, k_20215, f.call(null, k_20215)));
          var G__20217 = cljs.core.next.call(null, seq__20194_20209__$1);
          var G__20218 = null;
          var G__20219 = 0;
          var G__20220 = 0;
          seq__20194_20198 = G__20217;
          chunk__20195_20199 = G__20218;
          count__20196_20200 = G__20219;
          i__20197_20201 = G__20220;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return cljs.core.persistent_BANG_.call(null, cljs.core.deref.call(null, m_atom__12156__auto__));
};
plumbing.core.map_from_vals = function plumbing$core$map_from_vals(f, vs) {
  var m_atom__12156__auto__ = cljs.core.atom.call(null, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY));
  var seq__20227_20231 = cljs.core.seq.call(null, vs);
  var chunk__20228_20232 = null;
  var count__20229_20233 = 0;
  var i__20230_20234 = 0;
  while (true) {
    if (i__20230_20234 < count__20229_20233) {
      var v_20235 = cljs.core._nth.call(null, chunk__20228_20232, i__20230_20234);
      var m20226_20236 = cljs.core.deref.call(null, m_atom__12156__auto__);
      cljs.core.reset_BANG_.call(null, m_atom__12156__auto__, cljs.core.assoc_BANG_.call(null, m20226_20236, f.call(null, v_20235), v_20235));
      var G__20237 = seq__20227_20231;
      var G__20238 = chunk__20228_20232;
      var G__20239 = count__20229_20233;
      var G__20240 = i__20230_20234 + 1;
      seq__20227_20231 = G__20237;
      chunk__20228_20232 = G__20238;
      count__20229_20233 = G__20239;
      i__20230_20234 = G__20240;
      continue;
    } else {
      var temp__4425__auto___20241 = cljs.core.seq.call(null, seq__20227_20231);
      if (temp__4425__auto___20241) {
        var seq__20227_20242__$1 = temp__4425__auto___20241;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__20227_20242__$1)) {
          var c__5310__auto___20243 = cljs.core.chunk_first.call(null, seq__20227_20242__$1);
          var G__20244 = cljs.core.chunk_rest.call(null, seq__20227_20242__$1);
          var G__20245 = c__5310__auto___20243;
          var G__20246 = cljs.core.count.call(null, c__5310__auto___20243);
          var G__20247 = 0;
          seq__20227_20231 = G__20244;
          chunk__20228_20232 = G__20245;
          count__20229_20233 = G__20246;
          i__20230_20234 = G__20247;
          continue;
        } else {
          var v_20248 = cljs.core.first.call(null, seq__20227_20242__$1);
          var m20226_20249 = cljs.core.deref.call(null, m_atom__12156__auto__);
          cljs.core.reset_BANG_.call(null, m_atom__12156__auto__, cljs.core.assoc_BANG_.call(null, m20226_20249, f.call(null, v_20248), v_20248));
          var G__20250 = cljs.core.next.call(null, seq__20227_20242__$1);
          var G__20251 = null;
          var G__20252 = 0;
          var G__20253 = 0;
          seq__20227_20231 = G__20250;
          chunk__20228_20232 = G__20251;
          count__20229_20233 = G__20252;
          i__20230_20234 = G__20253;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return cljs.core.persistent_BANG_.call(null, cljs.core.deref.call(null, m_atom__12156__auto__));
};
plumbing.core.dissoc_in = function plumbing$core$dissoc_in(m, p__20254) {
  var vec__20256 = p__20254;
  var k = cljs.core.nth.call(null, vec__20256, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__20256, 1);
  if (cljs.core.truth_(m)) {
    var temp__4423__auto__ = function() {
      var and__4514__auto__ = ks;
      if (cljs.core.truth_(and__4514__auto__)) {
        return plumbing$core$dissoc_in.call(null, cljs.core.get.call(null, m, k), ks);
      } else {
        return and__4514__auto__;
      }
    }();
    if (cljs.core.truth_(temp__4423__auto__)) {
      var res = temp__4423__auto__;
      return cljs.core.assoc.call(null, m, k, res);
    } else {
      var res = cljs.core.dissoc.call(null, m, k);
      if (cljs.core.empty_QMARK_.call(null, res)) {
        return null;
      } else {
        return res;
      }
    }
  } else {
    return null;
  }
};
plumbing.core.keywordize_map = function plumbing$core$keywordize_map(x) {
  if (cljs.core.map_QMARK_.call(null, x)) {
    var m_atom__12156__auto__ = cljs.core.atom.call(null, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY));
    var seq__20265_20271 = cljs.core.seq.call(null, x);
    var chunk__20266_20272 = null;
    var count__20267_20273 = 0;
    var i__20268_20274 = 0;
    while (true) {
      if (i__20268_20274 < count__20267_20273) {
        var vec__20269_20275 = cljs.core._nth.call(null, chunk__20266_20272, i__20268_20274);
        var k_20276 = cljs.core.nth.call(null, vec__20269_20275, 0, null);
        var v_20277 = cljs.core.nth.call(null, vec__20269_20275, 1, null);
        var m20264_20278 = cljs.core.deref.call(null, m_atom__12156__auto__);
        cljs.core.reset_BANG_.call(null, m_atom__12156__auto__, cljs.core.assoc_BANG_.call(null, m20264_20278, typeof k_20276 === "string" ? cljs.core.keyword.call(null, k_20276) : k_20276, plumbing$core$keywordize_map.call(null, v_20277)));
        var G__20279 = seq__20265_20271;
        var G__20280 = chunk__20266_20272;
        var G__20281 = count__20267_20273;
        var G__20282 = i__20268_20274 + 1;
        seq__20265_20271 = G__20279;
        chunk__20266_20272 = G__20280;
        count__20267_20273 = G__20281;
        i__20268_20274 = G__20282;
        continue;
      } else {
        var temp__4425__auto___20283 = cljs.core.seq.call(null, seq__20265_20271);
        if (temp__4425__auto___20283) {
          var seq__20265_20284__$1 = temp__4425__auto___20283;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__20265_20284__$1)) {
            var c__5310__auto___20285 = cljs.core.chunk_first.call(null, seq__20265_20284__$1);
            var G__20286 = cljs.core.chunk_rest.call(null, seq__20265_20284__$1);
            var G__20287 = c__5310__auto___20285;
            var G__20288 = cljs.core.count.call(null, c__5310__auto___20285);
            var G__20289 = 0;
            seq__20265_20271 = G__20286;
            chunk__20266_20272 = G__20287;
            count__20267_20273 = G__20288;
            i__20268_20274 = G__20289;
            continue;
          } else {
            var vec__20270_20290 = cljs.core.first.call(null, seq__20265_20284__$1);
            var k_20291 = cljs.core.nth.call(null, vec__20270_20290, 0, null);
            var v_20292 = cljs.core.nth.call(null, vec__20270_20290, 1, null);
            var m20264_20293 = cljs.core.deref.call(null, m_atom__12156__auto__);
            cljs.core.reset_BANG_.call(null, m_atom__12156__auto__, cljs.core.assoc_BANG_.call(null, m20264_20293, typeof k_20291 === "string" ? cljs.core.keyword.call(null, k_20291) : k_20291, plumbing$core$keywordize_map.call(null, v_20292)));
            var G__20294 = cljs.core.next.call(null, seq__20265_20284__$1);
            var G__20295 = null;
            var G__20296 = 0;
            var G__20297 = 0;
            seq__20265_20271 = G__20294;
            chunk__20266_20272 = G__20295;
            count__20267_20273 = G__20296;
            i__20268_20274 = G__20297;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return cljs.core.persistent_BANG_.call(null, cljs.core.deref.call(null, m_atom__12156__auto__));
  } else {
    if (cljs.core.seq_QMARK_.call(null, x)) {
      return cljs.core.map.call(null, plumbing$core$keywordize_map, x);
    } else {
      if (cljs.core.vector_QMARK_.call(null, x)) {
        return cljs.core.mapv.call(null, plumbing$core$keywordize_map, x);
      } else {
        return x;
      }
    }
  }
};
plumbing.core.safe_get = function plumbing$core$safe_get(m, k) {
  var temp__4423__auto__ = cljs.core.find.call(null, m, k);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var pair__12232__auto__ = temp__4423__auto__;
    return cljs.core.val.call(null, pair__12232__auto__);
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Key %s not found in %s", k, cljs.core.mapv.call(null, cljs.core.key, m)));
  }
};
plumbing.core.safe_get_in = function plumbing$core$safe_get_in(m, ks) {
  while (true) {
    if (cljs.core.seq.call(null, ks)) {
      var G__20298 = plumbing.core.safe_get.call(null, m, cljs.core.first.call(null, ks));
      var G__20299 = cljs.core.next.call(null, ks);
      m = G__20298;
      ks = G__20299;
      continue;
    } else {
      return m;
    }
    break;
  }
};
plumbing.core.assoc_when = function plumbing$core$assoc_when() {
  var args__5572__auto__ = [];
  var len__5565__auto___20310 = arguments.length;
  var i__5566__auto___20311 = 0;
  while (true) {
    if (i__5566__auto___20311 < len__5565__auto___20310) {
      args__5572__auto__.push(arguments[i__5566__auto___20311]);
      var G__20312 = i__5566__auto___20311 + 1;
      i__5566__auto___20311 = G__20312;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return plumbing.core.assoc_when.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
plumbing.core.assoc_when.cljs$core$IFn$_invoke$arity$variadic = function(m, kvs) {
  if (cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, kvs))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1827825394, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "kvs", "kvs", -1695980277, null)))))].join(""));
  }
  return cljs.core.into.call(null, function() {
    var or__4526__auto__ = m;
    if (cljs.core.truth_(or__4526__auto__)) {
      return or__4526__auto__;
    } else {
      return cljs.core.PersistentArrayMap.EMPTY;
    }
  }(), function() {
    var iter__5279__auto__ = function plumbing$core$iter__20302(s__20303) {
      return new cljs.core.LazySeq(null, function() {
        var s__20303__$1 = s__20303;
        while (true) {
          var temp__4425__auto__ = cljs.core.seq.call(null, s__20303__$1);
          if (temp__4425__auto__) {
            var s__20303__$2 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__20303__$2)) {
              var c__5277__auto__ = cljs.core.chunk_first.call(null, s__20303__$2);
              var size__5278__auto__ = cljs.core.count.call(null, c__5277__auto__);
              var b__20305 = cljs.core.chunk_buffer.call(null, size__5278__auto__);
              if (function() {
                var i__20304 = 0;
                while (true) {
                  if (i__20304 < size__5278__auto__) {
                    var vec__20308 = cljs.core._nth.call(null, c__5277__auto__, i__20304);
                    var k = cljs.core.nth.call(null, vec__20308, 0, null);
                    var v = cljs.core.nth.call(null, vec__20308, 1, null);
                    if (cljs.core.truth_(v)) {
                      cljs.core.chunk_append.call(null, b__20305, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null));
                      var G__20313 = i__20304 + 1;
                      i__20304 = G__20313;
                      continue;
                    } else {
                      var G__20314 = i__20304 + 1;
                      i__20304 = G__20314;
                      continue;
                    }
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20305), plumbing$core$iter__20302.call(null, cljs.core.chunk_rest.call(null, s__20303__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20305), null);
              }
            } else {
              var vec__20309 = cljs.core.first.call(null, s__20303__$2);
              var k = cljs.core.nth.call(null, vec__20309, 0, null);
              var v = cljs.core.nth.call(null, vec__20309, 1, null);
              if (cljs.core.truth_(v)) {
                return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null), plumbing$core$iter__20302.call(null, cljs.core.rest.call(null, s__20303__$2)));
              } else {
                var G__20315 = cljs.core.rest.call(null, s__20303__$2);
                s__20303__$1 = G__20315;
                continue;
              }
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__5279__auto__.call(null, cljs.core.partition.call(null, 2, kvs));
  }());
};
plumbing.core.assoc_when.cljs$lang$maxFixedArity = 1;
plumbing.core.assoc_when.cljs$lang$applyTo = function(seq20300) {
  var G__20301 = cljs.core.first.call(null, seq20300);
  var seq20300__$1 = cljs.core.next.call(null, seq20300);
  return plumbing.core.assoc_when.cljs$core$IFn$_invoke$arity$variadic(G__20301, seq20300__$1);
};
plumbing.core.update_in_when = function plumbing$core$update_in_when() {
  var args__5572__auto__ = [];
  var len__5565__auto___20320 = arguments.length;
  var i__5566__auto___20321 = 0;
  while (true) {
    if (i__5566__auto___20321 < len__5565__auto___20320) {
      args__5572__auto__.push(arguments[i__5566__auto___20321]);
      var G__20322 = i__5566__auto___20321 + 1;
      i__5566__auto___20321 = G__20322;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 3 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(3), 0) : null;
  return plumbing.core.update_in_when.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5573__auto__);
};
plumbing.core.update_in_when.cljs$core$IFn$_invoke$arity$variadic = function(m, key_seq, f, args) {
  var found = cljs.core.get_in.call(null, m, key_seq, plumbing.core._PLUS_none_PLUS_);
  if (!(plumbing.core._PLUS_none_PLUS_ === found)) {
    return cljs.core.assoc_in.call(null, m, key_seq, cljs.core.apply.call(null, f, found, args));
  } else {
    return m;
  }
};
plumbing.core.update_in_when.cljs$lang$maxFixedArity = 3;
plumbing.core.update_in_when.cljs$lang$applyTo = function(seq20316) {
  var G__20317 = cljs.core.first.call(null, seq20316);
  var seq20316__$1 = cljs.core.next.call(null, seq20316);
  var G__20318 = cljs.core.first.call(null, seq20316__$1);
  var seq20316__$2 = cljs.core.next.call(null, seq20316__$1);
  var G__20319 = cljs.core.first.call(null, seq20316__$2);
  var seq20316__$3 = cljs.core.next.call(null, seq20316__$2);
  return plumbing.core.update_in_when.cljs$core$IFn$_invoke$arity$variadic(G__20317, G__20318, G__20319, seq20316__$3);
};
plumbing.core.grouped_map = function plumbing$core$grouped_map(key_fn, map_fn, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(ret, x) {
    var k = key_fn.call(null, x);
    return cljs.core.assoc_BANG_.call(null, ret, k, cljs.core.conj.call(null, cljs.core.get.call(null, ret, k, cljs.core.PersistentVector.EMPTY), map_fn.call(null, x)));
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll));
};
plumbing.core.aconcat = function plumbing$core$aconcat(s) {
  return cljs.core.concat.call(null, new cljs.core.LazySeq(null, function() {
    return cljs.core.first.call(null, s);
  }, null, null), new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.next.call(null, s);
    if (temp__4425__auto__) {
      var n = temp__4425__auto__;
      return plumbing$core$aconcat.call(null, n);
    } else {
      return null;
    }
  }, null, null));
};
plumbing.core.unchunk = function plumbing$core$unchunk(s) {
  if (cljs.core.seq.call(null, s)) {
    return cljs.core.cons.call(null, cljs.core.first.call(null, s), new cljs.core.LazySeq(null, function() {
      return plumbing$core$unchunk.call(null, cljs.core.rest.call(null, s));
    }, null, null));
  } else {
    return null;
  }
};
plumbing.core.sum = function plumbing$core$sum() {
  var args20323 = [];
  var len__5565__auto___20326 = arguments.length;
  var i__5566__auto___20327 = 0;
  while (true) {
    if (i__5566__auto___20327 < len__5565__auto___20326) {
      args20323.push(arguments[i__5566__auto___20327]);
      var G__20328 = i__5566__auto___20327 + 1;
      i__5566__auto___20327 = G__20328;
      continue;
    } else {
    }
    break;
  }
  var G__20325 = args20323.length;
  switch(G__20325) {
    case 2:
      return plumbing.core.sum.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 1:
      return plumbing.core.sum.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20323.length)].join(""));;
  }
};
plumbing.core.sum.cljs$core$IFn$_invoke$arity$2 = function(f, xs) {
  return cljs.core.reduce.call(null, cljs.core._PLUS_, cljs.core.map.call(null, f, xs));
};
plumbing.core.sum.cljs$core$IFn$_invoke$arity$1 = function(xs) {
  return cljs.core.reduce.call(null, cljs.core._PLUS_, xs);
};
plumbing.core.sum.cljs$lang$maxFixedArity = 2;
plumbing.core.singleton = function plumbing$core$singleton(xs) {
  var temp__4425__auto__ = cljs.core.seq.call(null, xs);
  if (temp__4425__auto__) {
    var xs__$1 = temp__4425__auto__;
    if (cljs.core.next.call(null, xs__$1)) {
      return null;
    } else {
      return cljs.core.first.call(null, xs__$1);
    }
  } else {
    return null;
  }
};
plumbing.core.indexed = function plumbing$core$indexed(s) {
  return cljs.core.map_indexed.call(null, cljs.core.vector, s);
};
plumbing.core.positions = function plumbing$core$positions(f, s) {
  return cljs.core.keep_indexed.call(null, function(i, x) {
    if (cljs.core.truth_(f.call(null, x))) {
      return i;
    } else {
      return null;
    }
  }, s);
};
plumbing.core.distinct_by = function plumbing$core$distinct_by(f, xs) {
  var s = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
  var iter__5279__auto__ = function(s) {
    return function plumbing$core$distinct_by_$_iter__20334(s__20335) {
      return new cljs.core.LazySeq(null, function(s) {
        return function() {
          var s__20335__$1 = s__20335;
          while (true) {
            var temp__4425__auto__ = cljs.core.seq.call(null, s__20335__$1);
            if (temp__4425__auto__) {
              var s__20335__$2 = temp__4425__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, s__20335__$2)) {
                var c__5277__auto__ = cljs.core.chunk_first.call(null, s__20335__$2);
                var size__5278__auto__ = cljs.core.count.call(null, c__5277__auto__);
                var b__20337 = cljs.core.chunk_buffer.call(null, size__5278__auto__);
                if (function() {
                  var i__20336 = 0;
                  while (true) {
                    if (i__20336 < size__5278__auto__) {
                      var x = cljs.core._nth.call(null, c__5277__auto__, i__20336);
                      var id = f.call(null, x);
                      if (!cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, s), id)) {
                        cljs.core.chunk_append.call(null, b__20337, function() {
                          cljs.core.swap_BANG_.call(null, s, cljs.core.conj, id);
                          return x;
                        }());
                        var G__20338 = i__20336 + 1;
                        i__20336 = G__20338;
                        continue;
                      } else {
                        var G__20339 = i__20336 + 1;
                        i__20336 = G__20339;
                        continue;
                      }
                    } else {
                      return true;
                    }
                    break;
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20337), plumbing$core$distinct_by_$_iter__20334.call(null, cljs.core.chunk_rest.call(null, s__20335__$2)));
                } else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20337), null);
                }
              } else {
                var x = cljs.core.first.call(null, s__20335__$2);
                var id = f.call(null, x);
                if (!cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, s), id)) {
                  return cljs.core.cons.call(null, function() {
                    cljs.core.swap_BANG_.call(null, s, cljs.core.conj, id);
                    return x;
                  }(), plumbing$core$distinct_by_$_iter__20334.call(null, cljs.core.rest.call(null, s__20335__$2)));
                } else {
                  var G__20340 = cljs.core.rest.call(null, s__20335__$2);
                  s__20335__$1 = G__20340;
                  continue;
                }
              }
            } else {
              return null;
            }
            break;
          }
        };
      }(s), null, null);
    };
  }(s);
  return iter__5279__auto__.call(null, xs);
};
plumbing.core.interleave_all = function plumbing$core$interleave_all() {
  var args__5572__auto__ = [];
  var len__5565__auto___20342 = arguments.length;
  var i__5566__auto___20343 = 0;
  while (true) {
    if (i__5566__auto___20343 < len__5565__auto___20342) {
      args__5572__auto__.push(arguments[i__5566__auto___20343]);
      var G__20344 = i__5566__auto___20343 + 1;
      i__5566__auto___20343 = G__20344;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return plumbing.core.interleave_all.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
plumbing.core.interleave_all.cljs$core$IFn$_invoke$arity$variadic = function(colls) {
  return new cljs.core.LazySeq(null, function() {
    return function plumbing$core$helper(seqs) {
      if (cljs.core.seq.call(null, seqs)) {
        return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, seqs), new cljs.core.LazySeq(null, function() {
          return plumbing$core$helper.call(null, cljs.core.keep.call(null, cljs.core.next, seqs));
        }, null, null));
      } else {
        return null;
      }
    }.call(null, cljs.core.keep.call(null, cljs.core.seq, colls));
  }, null, null);
};
plumbing.core.interleave_all.cljs$lang$maxFixedArity = 0;
plumbing.core.interleave_all.cljs$lang$applyTo = function(seq20341) {
  return plumbing.core.interleave_all.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq20341));
};
plumbing.core.count_when = function plumbing$core$count_when(pred, xs) {
  return cljs.core.count.call(null, cljs.core.filter.call(null, pred, xs));
};
plumbing.core.conj_when = function plumbing$core$conj_when() {
  var args20345 = [];
  var len__5565__auto___20351 = arguments.length;
  var i__5566__auto___20352 = 0;
  while (true) {
    if (i__5566__auto___20352 < len__5565__auto___20351) {
      args20345.push(arguments[i__5566__auto___20352]);
      var G__20353 = i__5566__auto___20352 + 1;
      i__5566__auto___20352 = G__20353;
      continue;
    } else {
    }
    break;
  }
  var G__20350 = args20345.length;
  switch(G__20350) {
    case 2:
      return plumbing.core.conj_when.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args20345.slice(2), 0);
      return plumbing.core.conj_when.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
plumbing.core.conj_when.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  if (cljs.core.truth_(x)) {
    return cljs.core.conj.call(null, coll, x);
  } else {
    return coll;
  }
};
plumbing.core.conj_when.cljs$core$IFn$_invoke$arity$variadic = function(coll, x, xs) {
  while (true) {
    if (cljs.core.truth_(xs)) {
      var G__20355 = plumbing.core.conj_when.call(null, coll, x);
      var G__20356 = cljs.core.first.call(null, xs);
      var G__20357 = cljs.core.next.call(null, xs);
      coll = G__20355;
      x = G__20356;
      xs = G__20357;
      continue;
    } else {
      return plumbing.core.conj_when.call(null, coll, x);
    }
    break;
  }
};
plumbing.core.conj_when.cljs$lang$applyTo = function(seq20346) {
  var G__20347 = cljs.core.first.call(null, seq20346);
  var seq20346__$1 = cljs.core.next.call(null, seq20346);
  var G__20348 = cljs.core.first.call(null, seq20346__$1);
  var seq20346__$2 = cljs.core.next.call(null, seq20346__$1);
  return plumbing.core.conj_when.cljs$core$IFn$_invoke$arity$variadic(G__20347, G__20348, seq20346__$2);
};
plumbing.core.conj_when.cljs$lang$maxFixedArity = 2;
plumbing.core.cons_when = function plumbing$core$cons_when(x, s) {
  if (cljs.core.truth_(x)) {
    return cljs.core.cons.call(null, x, s);
  } else {
    return s;
  }
};
plumbing.core.rsort_by = cljs.core.comp.call(null, cljs.core.reverse, cljs.core.sort_by);
plumbing.core.swap_pair_BANG_ = function plumbing$core$swap_pair_BANG_() {
  var args20359 = [];
  var len__5565__auto___20365 = arguments.length;
  var i__5566__auto___20366 = 0;
  while (true) {
    if (i__5566__auto___20366 < len__5565__auto___20365) {
      args20359.push(arguments[i__5566__auto___20366]);
      var G__20367 = i__5566__auto___20366 + 1;
      i__5566__auto___20366 = G__20367;
      continue;
    } else {
    }
    break;
  }
  var G__20364 = args20359.length;
  switch(G__20364) {
    case 2:
      return plumbing.core.swap_pair_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args20359.slice(2), 0);
      return plumbing.core.swap_pair_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
plumbing.core.swap_pair_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, f) {
  while (true) {
    var old_val = cljs.core.deref.call(null, a);
    var new_val = f.call(null, old_val);
    if (cljs.core.truth_(cljs.core.compare_and_set_BANG_.call(null, a, old_val, new_val))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [old_val, new_val], null);
    } else {
      continue;
    }
    break;
  }
};
plumbing.core.swap_pair_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, f, args) {
  return plumbing.core.swap_pair_BANG_.call(null, a, function(p1__20358_SHARP_) {
    return cljs.core.apply.call(null, f, p1__20358_SHARP_, args);
  });
};
plumbing.core.swap_pair_BANG_.cljs$lang$applyTo = function(seq20360) {
  var G__20361 = cljs.core.first.call(null, seq20360);
  var seq20360__$1 = cljs.core.next.call(null, seq20360);
  var G__20362 = cljs.core.first.call(null, seq20360__$1);
  var seq20360__$2 = cljs.core.next.call(null, seq20360__$1);
  return plumbing.core.swap_pair_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__20361, G__20362, seq20360__$2);
};
plumbing.core.swap_pair_BANG_.cljs$lang$maxFixedArity = 2;
plumbing.core.get_and_set_BANG_ = function plumbing$core$get_and_set_BANG_(a, new_val) {
  return cljs.core.first.call(null, plumbing.core.swap_pair_BANG_.call(null, a, cljs.core.constantly.call(null, new_val)));
};
plumbing.core.millis = function plumbing$core$millis() {
  return (new Date).getTime();
};
plumbing.core.mapply = function plumbing$core$mapply() {
  var args20369 = [];
  var len__5565__auto___20375 = arguments.length;
  var i__5566__auto___20376 = 0;
  while (true) {
    if (i__5566__auto___20376 < len__5565__auto___20375) {
      args20369.push(arguments[i__5566__auto___20376]);
      var G__20377 = i__5566__auto___20376 + 1;
      i__5566__auto___20376 = G__20377;
      continue;
    } else {
    }
    break;
  }
  var G__20374 = args20369.length;
  switch(G__20374) {
    case 2:
      return plumbing.core.mapply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args20369.slice(2), 0);
      return plumbing.core.mapply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
plumbing.core.mapply.cljs$core$IFn$_invoke$arity$2 = function(f, m) {
  return cljs.core.apply.call(null, f, cljs.core.apply.call(null, cljs.core.concat, m));
};
plumbing.core.mapply.cljs$core$IFn$_invoke$arity$variadic = function(f, arg, args) {
  return cljs.core.apply.call(null, f, arg, cljs.core.concat.call(null, cljs.core.butlast.call(null, args), cljs.core.apply.call(null, cljs.core.concat, cljs.core.last.call(null, args))));
};
plumbing.core.mapply.cljs$lang$applyTo = function(seq20370) {
  var G__20371 = cljs.core.first.call(null, seq20370);
  var seq20370__$1 = cljs.core.next.call(null, seq20370);
  var G__20372 = cljs.core.first.call(null, seq20370__$1);
  var seq20370__$2 = cljs.core.next.call(null, seq20370__$1);
  return plumbing.core.mapply.cljs$core$IFn$_invoke$arity$variadic(G__20371, G__20372, seq20370__$2);
};
plumbing.core.mapply.cljs$lang$maxFixedArity = 2;
goog.provide("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.util.getNativeUserAgentString_ = function() {
  var navigator = goog.labs.userAgent.util.getNavigator_();
  if (navigator) {
    var userAgent = navigator.userAgent;
    if (userAgent) {
      return userAgent;
    }
  }
  return "";
};
goog.labs.userAgent.util.getNavigator_ = function() {
  return goog.global.navigator;
};
goog.labs.userAgent.util.userAgent_ = goog.labs.userAgent.util.getNativeUserAgentString_();
goog.labs.userAgent.util.setUserAgent = function(opt_userAgent) {
  goog.labs.userAgent.util.userAgent_ = opt_userAgent || goog.labs.userAgent.util.getNativeUserAgentString_();
};
goog.labs.userAgent.util.getUserAgent = function() {
  return goog.labs.userAgent.util.userAgent_;
};
goog.labs.userAgent.util.matchUserAgent = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.contains(userAgent, str);
};
goog.labs.userAgent.util.matchUserAgentIgnoreCase = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.caseInsensitiveContains(userAgent, str);
};
goog.labs.userAgent.util.extractVersionTuples = function(userAgent) {
  var versionRegExp = new RegExp("(\\w[\\w ]+)" + "/" + "([^\\s]+)" + "\\s*" + "(?:\\((.*?)\\))?", "g");
  var data = [];
  var match;
  while (match = versionRegExp.exec(userAgent)) {
    data.push([match[1], match[2], match[3] || undefined]);
  }
  return data;
};
goog.provide("goog.labs.userAgent.browser");
goog.require("goog.array");
goog.require("goog.labs.userAgent.util");
goog.require("goog.object");
goog.require("goog.string");
goog.labs.userAgent.browser.matchOpera_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Opera") || goog.labs.userAgent.util.matchUserAgent("OPR");
};
goog.labs.userAgent.browser.matchIE_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.browser.matchEdge_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Edge");
};
goog.labs.userAgent.browser.matchFirefox_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Firefox");
};
goog.labs.userAgent.browser.matchSafari_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Safari") && !(goog.labs.userAgent.browser.matchChrome_() || goog.labs.userAgent.browser.matchCoast_() || goog.labs.userAgent.browser.matchOpera_() || goog.labs.userAgent.browser.matchEdge_() || goog.labs.userAgent.browser.isSilk() || goog.labs.userAgent.util.matchUserAgent("Android"));
};
goog.labs.userAgent.browser.matchCoast_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Coast");
};
goog.labs.userAgent.browser.matchIosWebview_ = function() {
  return (goog.labs.userAgent.util.matchUserAgent("iPad") || goog.labs.userAgent.util.matchUserAgent("iPhone")) && !goog.labs.userAgent.browser.matchSafari_() && !goog.labs.userAgent.browser.matchChrome_() && !goog.labs.userAgent.browser.matchCoast_() && goog.labs.userAgent.util.matchUserAgent("AppleWebKit");
};
goog.labs.userAgent.browser.matchChrome_ = function() {
  return (goog.labs.userAgent.util.matchUserAgent("Chrome") || goog.labs.userAgent.util.matchUserAgent("CriOS")) && !goog.labs.userAgent.browser.matchOpera_() && !goog.labs.userAgent.browser.matchEdge_();
};
goog.labs.userAgent.browser.matchAndroidBrowser_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android") && !(goog.labs.userAgent.browser.isChrome() || goog.labs.userAgent.browser.isFirefox() || goog.labs.userAgent.browser.isOpera() || goog.labs.userAgent.browser.isSilk());
};
goog.labs.userAgent.browser.isOpera = goog.labs.userAgent.browser.matchOpera_;
goog.labs.userAgent.browser.isIE = goog.labs.userAgent.browser.matchIE_;
goog.labs.userAgent.browser.isEdge = goog.labs.userAgent.browser.matchEdge_;
goog.labs.userAgent.browser.isFirefox = goog.labs.userAgent.browser.matchFirefox_;
goog.labs.userAgent.browser.isSafari = goog.labs.userAgent.browser.matchSafari_;
goog.labs.userAgent.browser.isCoast = goog.labs.userAgent.browser.matchCoast_;
goog.labs.userAgent.browser.isIosWebview = goog.labs.userAgent.browser.matchIosWebview_;
goog.labs.userAgent.browser.isChrome = goog.labs.userAgent.browser.matchChrome_;
goog.labs.userAgent.browser.isAndroidBrowser = goog.labs.userAgent.browser.matchAndroidBrowser_;
goog.labs.userAgent.browser.isSilk = function() {
  return goog.labs.userAgent.util.matchUserAgent("Silk");
};
goog.labs.userAgent.browser.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (goog.labs.userAgent.browser.isIE()) {
    return goog.labs.userAgent.browser.getIEVersion_(userAgentString);
  }
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
  var versionMap = {};
  goog.array.forEach(versionTuples, function(tuple) {
    var key = tuple[0];
    var value = tuple[1];
    versionMap[key] = value;
  });
  var versionMapHasKey = goog.partial(goog.object.containsKey, versionMap);
  function lookUpValueWithKeys(keys) {
    var key = goog.array.find(keys, versionMapHasKey);
    return versionMap[key] || "";
  }
  if (goog.labs.userAgent.browser.isOpera()) {
    return lookUpValueWithKeys(["Version", "Opera", "OPR"]);
  }
  if (goog.labs.userAgent.browser.isEdge()) {
    return lookUpValueWithKeys(["Edge"]);
  }
  if (goog.labs.userAgent.browser.isChrome()) {
    return lookUpValueWithKeys(["Chrome", "CriOS"]);
  }
  var tuple = versionTuples[2];
  return tuple && tuple[1] || "";
};
goog.labs.userAgent.browser.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.browser.getVersion(), version) >= 0;
};
goog.labs.userAgent.browser.getIEVersion_ = function(userAgent) {
  var rv = /rv: *([\d\.]*)/.exec(userAgent);
  if (rv && rv[1]) {
    return rv[1];
  }
  var version = "";
  var msie = /MSIE +([\d\.]+)/.exec(userAgent);
  if (msie && msie[1]) {
    var tridentVersion = /Trident\/(\d.\d)/.exec(userAgent);
    if (msie[1] == "7.0") {
      if (tridentVersion && tridentVersion[1]) {
        switch(tridentVersion[1]) {
          case "4.0":
            version = "8.0";
            break;
          case "5.0":
            version = "9.0";
            break;
          case "6.0":
            version = "10.0";
            break;
          case "7.0":
            version = "11.0";
            break;
        }
      } else {
        version = "7.0";
      }
    } else {
      version = msie[1];
    }
  }
  return version;
};
goog.provide("goog.labs.userAgent.engine");
goog.require("goog.array");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.engine.isPresto = function() {
  return goog.labs.userAgent.util.matchUserAgent("Presto");
};
goog.labs.userAgent.engine.isTrident = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.engine.isEdge = function() {
  return goog.labs.userAgent.util.matchUserAgent("Edge");
};
goog.labs.userAgent.engine.isWebKit = function() {
  return goog.labs.userAgent.util.matchUserAgentIgnoreCase("WebKit") && !goog.labs.userAgent.engine.isEdge();
};
goog.labs.userAgent.engine.isGecko = function() {
  return goog.labs.userAgent.util.matchUserAgent("Gecko") && !goog.labs.userAgent.engine.isWebKit() && !goog.labs.userAgent.engine.isTrident() && !goog.labs.userAgent.engine.isEdge();
};
goog.labs.userAgent.engine.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (userAgentString) {
    var tuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
    var engineTuple = goog.labs.userAgent.engine.getEngineTuple_(tuples);
    if (engineTuple) {
      if (engineTuple[0] == "Gecko") {
        return goog.labs.userAgent.engine.getVersionForKey_(tuples, "Firefox");
      }
      return engineTuple[1];
    }
    var browserTuple = tuples[0];
    var info;
    if (browserTuple && (info = browserTuple[2])) {
      var match = /Trident\/([^\s;]+)/.exec(info);
      if (match) {
        return match[1];
      }
    }
  }
  return "";
};
goog.labs.userAgent.engine.getEngineTuple_ = function(tuples) {
  if (!goog.labs.userAgent.engine.isEdge()) {
    return tuples[1];
  }
  for (var i = 0;i < tuples.length;i++) {
    var tuple = tuples[i];
    if (tuple[0] == "Edge") {
      return tuple;
    }
  }
};
goog.labs.userAgent.engine.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(), version) >= 0;
};
goog.labs.userAgent.engine.getVersionForKey_ = function(tuples, key) {
  var pair = goog.array.find(tuples, function(pair) {
    return key == pair[0];
  });
  return pair && pair[1] || "";
};
goog.provide("goog.labs.userAgent.platform");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.platform.isAndroid = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android");
};
goog.labs.userAgent.platform.isIpod = function() {
  return goog.labs.userAgent.util.matchUserAgent("iPod");
};
goog.labs.userAgent.platform.isIphone = function() {
  return goog.labs.userAgent.util.matchUserAgent("iPhone") && !goog.labs.userAgent.util.matchUserAgent("iPod") && !goog.labs.userAgent.util.matchUserAgent("iPad");
};
goog.labs.userAgent.platform.isIpad = function() {
  return goog.labs.userAgent.util.matchUserAgent("iPad");
};
goog.labs.userAgent.platform.isIos = function() {
  return goog.labs.userAgent.platform.isIphone() || goog.labs.userAgent.platform.isIpad() || goog.labs.userAgent.platform.isIpod();
};
goog.labs.userAgent.platform.isMacintosh = function() {
  return goog.labs.userAgent.util.matchUserAgent("Macintosh");
};
goog.labs.userAgent.platform.isLinux = function() {
  return goog.labs.userAgent.util.matchUserAgent("Linux");
};
goog.labs.userAgent.platform.isWindows = function() {
  return goog.labs.userAgent.util.matchUserAgent("Windows");
};
goog.labs.userAgent.platform.isChromeOS = function() {
  return goog.labs.userAgent.util.matchUserAgent("CrOS");
};
goog.labs.userAgent.platform.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  var version = "", re;
  if (goog.labs.userAgent.platform.isWindows()) {
    re = /Windows (?:NT|Phone) ([0-9.]+)/;
    var match = re.exec(userAgentString);
    if (match) {
      version = match[1];
    } else {
      version = "0.0";
    }
  } else {
    if (goog.labs.userAgent.platform.isIos()) {
      re = /(?:iPhone|iPod|iPad|CPU)\s+OS\s+(\S+)/;
      var match = re.exec(userAgentString);
      version = match && match[1].replace(/_/g, ".");
    } else {
      if (goog.labs.userAgent.platform.isMacintosh()) {
        re = /Mac OS X ([0-9_.]+)/;
        var match = re.exec(userAgentString);
        version = match ? match[1].replace(/_/g, ".") : "10";
      } else {
        if (goog.labs.userAgent.platform.isAndroid()) {
          re = /Android\s+([^\);]+)(\)|;)/;
          var match = re.exec(userAgentString);
          version = match && match[1];
        } else {
          if (goog.labs.userAgent.platform.isChromeOS()) {
            re = /(?:CrOS\s+(?:i686|x86_64)\s+([0-9.]+))/;
            var match = re.exec(userAgentString);
            version = match && match[1];
          }
        }
      }
    }
  }
  return version || "";
};
goog.labs.userAgent.platform.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.platform.getVersion(), version) >= 0;
};
goog.provide("goog.userAgent");
goog.require("goog.labs.userAgent.browser");
goog.require("goog.labs.userAgent.engine");
goog.require("goog.labs.userAgent.platform");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.define("goog.userAgent.ASSUME_IE", false);
goog.define("goog.userAgent.ASSUME_EDGE", false);
goog.define("goog.userAgent.ASSUME_GECKO", false);
goog.define("goog.userAgent.ASSUME_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_MOBILE_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_OPERA", false);
goog.define("goog.userAgent.ASSUME_ANY_VERSION", false);
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_EDGE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.labs.userAgent.util.getUserAgent();
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"] || null;
};
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.labs.userAgent.browser.isOpera();
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.labs.userAgent.browser.isIE();
goog.userAgent.EDGE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_EDGE : goog.labs.userAgent.engine.isEdge();
goog.userAgent.EDGE_OR_IE = goog.userAgent.EDGE || goog.userAgent.IE;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.labs.userAgent.engine.isGecko();
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.labs.userAgent.engine.isWebKit();
goog.userAgent.isMobile_ = function() {
  return goog.userAgent.WEBKIT && goog.labs.userAgent.util.matchUserAgent("Mobile");
};
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.isMobile_();
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || "";
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.define("goog.userAgent.ASSUME_MAC", false);
goog.define("goog.userAgent.ASSUME_WINDOWS", false);
goog.define("goog.userAgent.ASSUME_LINUX", false);
goog.define("goog.userAgent.ASSUME_X11", false);
goog.define("goog.userAgent.ASSUME_ANDROID", false);
goog.define("goog.userAgent.ASSUME_IPHONE", false);
goog.define("goog.userAgent.ASSUME_IPAD", false);
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID || goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD;
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.labs.userAgent.platform.isMacintosh();
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.labs.userAgent.platform.isWindows();
goog.userAgent.isLegacyLinux_ = function() {
  return goog.labs.userAgent.platform.isLinux() || goog.labs.userAgent.platform.isChromeOS();
};
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.isLegacyLinux_();
goog.userAgent.isX11_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return !!navigator && goog.string.contains(navigator["appVersion"] || "", "X11");
};
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.isX11_();
goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.labs.userAgent.platform.isAndroid();
goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.labs.userAgent.platform.isIphone();
goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.labs.userAgent.platform.isIpad();
goog.userAgent.determineVersion_ = function() {
  if (goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    return goog.isFunction(operaVersion) ? operaVersion() : operaVersion;
  }
  var version = "";
  var arr = goog.userAgent.getVersionRegexResult_();
  if (arr) {
    version = arr ? arr[1] : "";
  }
  if (goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if (docMode > parseFloat(version)) {
      return String(docMode);
    }
  }
  return version;
};
goog.userAgent.getVersionRegexResult_ = function() {
  var userAgent = goog.userAgent.getUserAgentString();
  if (goog.userAgent.GECKO) {
    return /rv\:([^\);]+)(\)|;)/.exec(userAgent);
  }
  if (goog.userAgent.EDGE) {
    return /Edge\/([\d\.]+)/.exec(userAgent);
  }
  if (goog.userAgent.IE) {
    return /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(userAgent);
  }
  if (goog.userAgent.WEBKIT) {
    return /WebKit\/(\S+)/.exec(userAgent);
  }
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined;
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2);
};
goog.userAgent.isVersionOrHigherCache_ = {};
goog.userAgent.isVersionOrHigher = function(version) {
  return goog.userAgent.ASSUME_ANY_VERSION || goog.userAgent.isVersionOrHigherCache_[version] || (goog.userAgent.isVersionOrHigherCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0);
};
goog.userAgent.isVersion = goog.userAgent.isVersionOrHigher;
goog.userAgent.isDocumentModeOrHigher = function(documentMode) {
  return goog.userAgent.DOCUMENT_MODE >= documentMode;
};
goog.userAgent.isDocumentMode = goog.userAgent.isDocumentModeOrHigher;
goog.userAgent.DOCUMENT_MODE = function() {
  var doc = goog.global["document"];
  var mode = goog.userAgent.getDocumentMode_();
  if (!doc || !goog.userAgent.IE) {
    return undefined;
  }
  return mode || (doc["compatMode"] == "CSS1Compat" ? parseInt(goog.userAgent.VERSION, 10) : 5);
}();
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isDocumentModeOrHigher(9) || goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), CAN_USE_PARENT_ELEMENT_PROPERTY:goog.userAgent.IE || goog.userAgent.OPERA || goog.userAgent.WEBKIT, 
INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE, LEGACY_IE_RANGES:goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", ARTICLE:"ARTICLE", ASIDE:"ASIDE", AUDIO:"AUDIO", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDI:"BDI", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", COMMAND:"COMMAND", DATA:"DATA", DATALIST:"DATALIST", DD:"DD", DEL:"DEL", DETAILS:"DETAILS", DFN:"DFN", 
DIALOG:"DIALOG", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", EMBED:"EMBED", FIELDSET:"FIELDSET", FIGCAPTION:"FIGCAPTION", FIGURE:"FIGURE", FONT:"FONT", FOOTER:"FOOTER", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HEADER:"HEADER", HGROUP:"HGROUP", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", KEYGEN:"KEYGEN", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", 
MAP:"MAP", MARK:"MARK", MATH:"MATH", MENU:"MENU", META:"META", METER:"METER", NAV:"NAV", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", OUTPUT:"OUTPUT", P:"P", PARAM:"PARAM", PRE:"PRE", PROGRESS:"PROGRESS", Q:"Q", RP:"RP", RT:"RT", RUBY:"RUBY", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SECTION:"SECTION", SELECT:"SELECT", SMALL:"SMALL", SOURCE:"SOURCE", SPAN:"SPAN", STRIKE:"STRIKE", STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUMMARY:"SUMMARY", 
SUP:"SUP", SVG:"SVG", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEMPLATE:"TEMPLATE", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TIME:"TIME", TITLE:"TITLE", TR:"TR", TRACK:"TRACK", TT:"TT", U:"U", UL:"UL", VAR:"VAR", VIDEO:"VIDEO", WBR:"WBR"};
goog.provide("goog.dom.tags");
goog.require("goog.object");
goog.dom.tags.VOID_TAGS_ = goog.object.createSet(("area,base,br,col,command," + "embed,hr,img,input,keygen,link,meta,param,source,track,wbr").split(","));
goog.dom.tags.isVoidTag = function(tagName) {
  return goog.dom.tags.VOID_TAGS_[tagName] === true;
};
goog.provide("goog.string.TypedString");
goog.string.TypedString = function() {
};
goog.string.TypedString.prototype.implementsGoogStringTypedString;
goog.string.TypedString.prototype.getTypedStringValue;
goog.provide("goog.string.Const");
goog.require("goog.asserts");
goog.require("goog.string.TypedString");
goog.string.Const = function() {
  this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ = "";
  this.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ = goog.string.Const.TYPE_MARKER_;
};
goog.string.Const.prototype.implementsGoogStringTypedString = true;
goog.string.Const.prototype.getTypedStringValue = function() {
  return this.stringConstValueWithSecurityContract__googStringSecurityPrivate_;
};
goog.string.Const.prototype.toString = function() {
  return "Const{" + this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ + "}";
};
goog.string.Const.unwrap = function(stringConst) {
  if (stringConst instanceof goog.string.Const && stringConst.constructor === goog.string.Const && stringConst.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ === goog.string.Const.TYPE_MARKER_) {
    return stringConst.stringConstValueWithSecurityContract__googStringSecurityPrivate_;
  } else {
    goog.asserts.fail("expected object of type Const, got '" + stringConst + "'");
    return "type_error:Const";
  }
};
goog.string.Const.from = function(s) {
  return goog.string.Const.create__googStringSecurityPrivate_(s);
};
goog.string.Const.TYPE_MARKER_ = {};
goog.string.Const.create__googStringSecurityPrivate_ = function(s) {
  var stringConst = new goog.string.Const;
  stringConst.stringConstValueWithSecurityContract__googStringSecurityPrivate_ = s;
  return stringConst;
};
goog.provide("goog.html.SafeStyle");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeStyle = function() {
  this.privateDoNotAccessOrElseSafeStyleWrappedValue_ = "";
  this.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeStyle.prototype.implementsGoogStringTypedString = true;
goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeStyle.fromConstant = function(style) {
  var styleString = goog.string.Const.unwrap(style);
  if (styleString.length === 0) {
    return goog.html.SafeStyle.EMPTY;
  }
  goog.html.SafeStyle.checkStyle_(styleString);
  goog.asserts.assert(goog.string.endsWith(styleString, ";"), "Last character of style string is not ';': " + styleString);
  goog.asserts.assert(goog.string.contains(styleString, ":"), "Style string must contain at least one ':', to " + 'specify a "name: value" pair: ' + styleString);
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(styleString);
};
goog.html.SafeStyle.checkStyle_ = function(style) {
  goog.asserts.assert(!/[<>]/.test(style), "Forbidden characters in style string: " + style);
};
goog.html.SafeStyle.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeStyleWrappedValue_;
};
if (goog.DEBUG) {
  goog.html.SafeStyle.prototype.toString = function() {
    return "SafeStyle{" + this.privateDoNotAccessOrElseSafeStyleWrappedValue_ + "}";
  };
}
goog.html.SafeStyle.unwrap = function(safeStyle) {
  if (safeStyle instanceof goog.html.SafeStyle && safeStyle.constructor === goog.html.SafeStyle && safeStyle.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeStyle.privateDoNotAccessOrElseSafeStyleWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeStyle, got '" + safeStyle + "'");
    return "type_error:SafeStyle";
  }
};
goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse = function(style) {
  return (new goog.html.SafeStyle).initSecurityPrivateDoNotAccessOrElse_(style);
};
goog.html.SafeStyle.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(style) {
  this.privateDoNotAccessOrElseSafeStyleWrappedValue_ = style;
  return this;
};
goog.html.SafeStyle.EMPTY = goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse("");
goog.html.SafeStyle.INNOCUOUS_STRING = "zClosurez";
goog.html.SafeStyle.PropertyMap;
goog.html.SafeStyle.create = function(map) {
  var style = "";
  for (var name in map) {
    if (!/^[-_a-zA-Z0-9]+$/.test(name)) {
      throw Error("Name allows only [-_a-zA-Z0-9], got: " + name);
    }
    var value = map[name];
    if (value == null) {
      continue;
    }
    if (value instanceof goog.string.Const) {
      value = goog.string.Const.unwrap(value);
      goog.asserts.assert(!/[{;}]/.test(value), "Value does not allow [{;}].");
    } else {
      if (!goog.html.SafeStyle.VALUE_RE_.test(value)) {
        goog.asserts.fail("String value allows only [-,.\"'%_!# a-zA-Z0-9], got: " + value);
        value = goog.html.SafeStyle.INNOCUOUS_STRING;
      } else {
        if (!goog.html.SafeStyle.hasBalancedQuotes_(value)) {
          goog.asserts.fail("String value requires balanced quotes, got: " + value);
          value = goog.html.SafeStyle.INNOCUOUS_STRING;
        }
      }
    }
    style += name + ":" + value + ";";
  }
  if (!style) {
    return goog.html.SafeStyle.EMPTY;
  }
  goog.html.SafeStyle.checkStyle_(style);
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);
};
goog.html.SafeStyle.hasBalancedQuotes_ = function(value) {
  var outsideSingle = true;
  var outsideDouble = true;
  for (var i = 0;i < value.length;i++) {
    var c = value.charAt(i);
    if (c == "'" && outsideDouble) {
      outsideSingle = !outsideSingle;
    } else {
      if (c == '"' && outsideSingle) {
        outsideDouble = !outsideDouble;
      }
    }
  }
  return outsideSingle && outsideDouble;
};
goog.html.SafeStyle.VALUE_RE_ = /^[-,."'%_!# a-zA-Z0-9]+$/;
goog.html.SafeStyle.concat = function(var_args) {
  var style = "";
  var addArgument = function(argument) {
    if (goog.isArray(argument)) {
      goog.array.forEach(argument, addArgument);
    } else {
      style += goog.html.SafeStyle.unwrap(argument);
    }
  };
  goog.array.forEach(arguments, addArgument);
  if (!style) {
    return goog.html.SafeStyle.EMPTY;
  }
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);
};
goog.provide("goog.html.SafeStyleSheet");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeStyleSheet = function() {
  this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ = "";
  this.SAFE_SCRIPT_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeStyleSheet.prototype.implementsGoogStringTypedString = true;
goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeStyleSheet.concat = function(var_args) {
  var result = "";
  var addArgument = function(argument) {
    if (goog.isArray(argument)) {
      goog.array.forEach(argument, addArgument);
    } else {
      result += goog.html.SafeStyleSheet.unwrap(argument);
    }
  };
  goog.array.forEach(arguments, addArgument);
  return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(result);
};
goog.html.SafeStyleSheet.fromConstant = function(styleSheet) {
  var styleSheetString = goog.string.Const.unwrap(styleSheet);
  if (styleSheetString.length === 0) {
    return goog.html.SafeStyleSheet.EMPTY;
  }
  goog.asserts.assert(!goog.string.contains(styleSheetString, "\x3c"), "Forbidden '\x3c' character in style sheet string: " + styleSheetString);
  return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(styleSheetString);
};
goog.html.SafeStyleSheet.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;
};
if (goog.DEBUG) {
  goog.html.SafeStyleSheet.prototype.toString = function() {
    return "SafeStyleSheet{" + this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ + "}";
  };
}
goog.html.SafeStyleSheet.unwrap = function(safeStyleSheet) {
  if (safeStyleSheet instanceof goog.html.SafeStyleSheet && safeStyleSheet.constructor === goog.html.SafeStyleSheet && safeStyleSheet.SAFE_SCRIPT_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeStyleSheet.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeStyleSheet, got '" + safeStyleSheet + "'");
    return "type_error:SafeStyleSheet";
  }
};
goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse = function(styleSheet) {
  return (new goog.html.SafeStyleSheet).initSecurityPrivateDoNotAccessOrElse_(styleSheet);
};
goog.html.SafeStyleSheet.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(styleSheet) {
  this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ = styleSheet;
  return this;
};
goog.html.SafeStyleSheet.EMPTY = goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse("");
goog.provide("goog.fs.url");
goog.fs.url.createObjectUrl = function(blob) {
  return goog.fs.url.getUrlObject_().createObjectURL(blob);
};
goog.fs.url.revokeObjectUrl = function(url) {
  goog.fs.url.getUrlObject_().revokeObjectURL(url);
};
goog.fs.url.UrlObject_;
goog.fs.url.getUrlObject_ = function() {
  var urlObject = goog.fs.url.findUrlObject_();
  if (urlObject != null) {
    return urlObject;
  } else {
    throw Error("This browser doesn't seem to support blob URLs");
  }
};
goog.fs.url.findUrlObject_ = function() {
  if (goog.isDef(goog.global.URL) && goog.isDef(goog.global.URL.createObjectURL)) {
    return (goog.global.URL);
  } else {
    if (goog.isDef(goog.global.webkitURL) && goog.isDef(goog.global.webkitURL.createObjectURL)) {
      return (goog.global.webkitURL);
    } else {
      if (goog.isDef(goog.global.createObjectURL)) {
        return (goog.global);
      } else {
        return null;
      }
    }
  }
};
goog.fs.url.browserSupportsObjectUrls = function() {
  return goog.fs.url.findUrlObject_() != null;
};
goog.provide("goog.i18n.bidi");
goog.provide("goog.i18n.bidi.Dir");
goog.provide("goog.i18n.bidi.DirectionalString");
goog.provide("goog.i18n.bidi.Format");
goog.define("goog.i18n.bidi.FORCE_RTL", false);
goog.i18n.bidi.IS_RTL = goog.i18n.bidi.FORCE_RTL || (goog.LOCALE.substring(0, 2).toLowerCase() == "ar" || goog.LOCALE.substring(0, 2).toLowerCase() == "fa" || goog.LOCALE.substring(0, 2).toLowerCase() == "he" || goog.LOCALE.substring(0, 2).toLowerCase() == "iw" || goog.LOCALE.substring(0, 2).toLowerCase() == "ps" || goog.LOCALE.substring(0, 2).toLowerCase() == "sd" || goog.LOCALE.substring(0, 2).toLowerCase() == "ug" || goog.LOCALE.substring(0, 2).toLowerCase() == "ur" || goog.LOCALE.substring(0, 
2).toLowerCase() == "yi") && (goog.LOCALE.length == 2 || goog.LOCALE.substring(2, 3) == "-" || goog.LOCALE.substring(2, 3) == "_") || goog.LOCALE.length >= 3 && goog.LOCALE.substring(0, 3).toLowerCase() == "ckb" && (goog.LOCALE.length == 3 || goog.LOCALE.substring(3, 4) == "-" || goog.LOCALE.substring(3, 4) == "_");
goog.i18n.bidi.Format = {LRE:"\u202a", RLE:"\u202b", PDF:"\u202c", LRM:"\u200e", RLM:"\u200f"};
goog.i18n.bidi.Dir = {LTR:1, RTL:-1, NEUTRAL:0};
goog.i18n.bidi.RIGHT = "right";
goog.i18n.bidi.LEFT = "left";
goog.i18n.bidi.I18N_RIGHT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.LEFT : goog.i18n.bidi.RIGHT;
goog.i18n.bidi.I18N_LEFT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT;
goog.i18n.bidi.toDir = function(givenDir, opt_noNeutral) {
  if (typeof givenDir == "number") {
    return givenDir > 0 ? goog.i18n.bidi.Dir.LTR : givenDir < 0 ? goog.i18n.bidi.Dir.RTL : opt_noNeutral ? null : goog.i18n.bidi.Dir.NEUTRAL;
  } else {
    if (givenDir == null) {
      return null;
    } else {
      return givenDir ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;
    }
  }
};
goog.i18n.bidi.ltrChars_ = "A-Za-z\u00c0-\u00d6\u00d8-\u00f6\u00f8-\u02b8\u0300-\u0590\u0800-\u1fff" + "\u200e\u2c00-\ufb1c\ufe00-\ufe6f\ufefd-\uffff";
goog.i18n.bidi.rtlChars_ = "\u0591-\u06ef\u06fa-\u07ff\u200f\ufb1d-\ufdff\ufe70-\ufefc";
goog.i18n.bidi.htmlSkipReg_ = /<[^>]*>|&[^;]+;/g;
goog.i18n.bidi.stripHtmlIfNeeded_ = function(str, opt_isStripNeeded) {
  return opt_isStripNeeded ? str.replace(goog.i18n.bidi.htmlSkipReg_, "") : str;
};
goog.i18n.bidi.rtlCharReg_ = new RegExp("[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.ltrCharReg_ = new RegExp("[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.hasAnyRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.hasRtlChar = goog.i18n.bidi.hasAnyRtl;
goog.i18n.bidi.hasAnyLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.ltrRe_ = new RegExp("^[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.rtlRe_ = new RegExp("^[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.isRtlChar = function(str) {
  return goog.i18n.bidi.rtlRe_.test(str);
};
goog.i18n.bidi.isLtrChar = function(str) {
  return goog.i18n.bidi.ltrRe_.test(str);
};
goog.i18n.bidi.isNeutralChar = function(str) {
  return !goog.i18n.bidi.isLtrChar(str) && !goog.i18n.bidi.isRtlChar(str);
};
goog.i18n.bidi.ltrDirCheckRe_ = new RegExp("^[^" + goog.i18n.bidi.rtlChars_ + "]*[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.rtlDirCheckRe_ = new RegExp("^[^" + goog.i18n.bidi.ltrChars_ + "]*[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.startsWithRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isRtlText = goog.i18n.bidi.startsWithRtl;
goog.i18n.bidi.startsWithLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isLtrText = goog.i18n.bidi.startsWithLtr;
goog.i18n.bidi.isRequiredLtrRe_ = /^http:\/\/.*/;
goog.i18n.bidi.isNeutralText = function(str, opt_isHtml) {
  str = goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml);
  return goog.i18n.bidi.isRequiredLtrRe_.test(str) || !goog.i18n.bidi.hasAnyLtr(str) && !goog.i18n.bidi.hasAnyRtl(str);
};
goog.i18n.bidi.ltrExitDirCheckRe_ = new RegExp("[" + goog.i18n.bidi.ltrChars_ + "][^" + goog.i18n.bidi.rtlChars_ + "]*$");
goog.i18n.bidi.rtlExitDirCheckRe_ = new RegExp("[" + goog.i18n.bidi.rtlChars_ + "][^" + goog.i18n.bidi.ltrChars_ + "]*$");
goog.i18n.bidi.endsWithLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isLtrExitText = goog.i18n.bidi.endsWithLtr;
goog.i18n.bidi.endsWithRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isRtlExitText = goog.i18n.bidi.endsWithRtl;
goog.i18n.bidi.rtlLocalesRe_ = new RegExp("^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|" + ".*[-_](Arab|Hebr|Thaa|Nkoo|Tfng))" + "(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)", "i");
goog.i18n.bidi.isRtlLanguage = function(lang) {
  return goog.i18n.bidi.rtlLocalesRe_.test(lang);
};
goog.i18n.bidi.bracketGuardHtmlRe_ = /(\(.*?\)+)|(\[.*?\]+)|(\{.*?\}+)|(&lt;.*?(&gt;)+)/g;
goog.i18n.bidi.bracketGuardTextRe_ = /(\(.*?\)+)|(\[.*?\]+)|(\{.*?\}+)|(<.*?>+)/g;
goog.i18n.bidi.guardBracketInHtml = function(s, opt_isRtlContext) {
  var useRtl = opt_isRtlContext === undefined ? goog.i18n.bidi.hasAnyRtl(s) : opt_isRtlContext;
  if (useRtl) {
    return s.replace(goog.i18n.bidi.bracketGuardHtmlRe_, "\x3cspan dir\x3drtl\x3e$\x26\x3c/span\x3e");
  }
  return s.replace(goog.i18n.bidi.bracketGuardHtmlRe_, "\x3cspan dir\x3dltr\x3e$\x26\x3c/span\x3e");
};
goog.i18n.bidi.guardBracketInText = function(s, opt_isRtlContext) {
  var useRtl = opt_isRtlContext === undefined ? goog.i18n.bidi.hasAnyRtl(s) : opt_isRtlContext;
  var mark = useRtl ? goog.i18n.bidi.Format.RLM : goog.i18n.bidi.Format.LRM;
  return s.replace(goog.i18n.bidi.bracketGuardTextRe_, mark + "$\x26" + mark);
};
goog.i18n.bidi.enforceRtlInHtml = function(html) {
  if (html.charAt(0) == "\x3c") {
    return html.replace(/<\w+/, "$\x26 dir\x3drtl");
  }
  return "\n\x3cspan dir\x3drtl\x3e" + html + "\x3c/span\x3e";
};
goog.i18n.bidi.enforceRtlInText = function(text) {
  return goog.i18n.bidi.Format.RLE + text + goog.i18n.bidi.Format.PDF;
};
goog.i18n.bidi.enforceLtrInHtml = function(html) {
  if (html.charAt(0) == "\x3c") {
    return html.replace(/<\w+/, "$\x26 dir\x3dltr");
  }
  return "\n\x3cspan dir\x3dltr\x3e" + html + "\x3c/span\x3e";
};
goog.i18n.bidi.enforceLtrInText = function(text) {
  return goog.i18n.bidi.Format.LRE + text + goog.i18n.bidi.Format.PDF;
};
goog.i18n.bidi.dimensionsRe_ = /:\s*([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)/g;
goog.i18n.bidi.leftRe_ = /left/gi;
goog.i18n.bidi.rightRe_ = /right/gi;
goog.i18n.bidi.tempRe_ = /%%%%/g;
goog.i18n.bidi.mirrorCSS = function(cssStr) {
  return cssStr.replace(goog.i18n.bidi.dimensionsRe_, ":$1 $4 $3 $2").replace(goog.i18n.bidi.leftRe_, "%%%%").replace(goog.i18n.bidi.rightRe_, goog.i18n.bidi.LEFT).replace(goog.i18n.bidi.tempRe_, goog.i18n.bidi.RIGHT);
};
goog.i18n.bidi.doubleQuoteSubstituteRe_ = /([\u0591-\u05f2])"/g;
goog.i18n.bidi.singleQuoteSubstituteRe_ = /([\u0591-\u05f2])'/g;
goog.i18n.bidi.normalizeHebrewQuote = function(str) {
  return str.replace(goog.i18n.bidi.doubleQuoteSubstituteRe_, "$1\u05f4").replace(goog.i18n.bidi.singleQuoteSubstituteRe_, "$1\u05f3");
};
goog.i18n.bidi.wordSeparatorRe_ = /\s+/;
goog.i18n.bidi.hasNumeralsRe_ = /[\d\u06f0-\u06f9]/;
goog.i18n.bidi.rtlDetectionThreshold_ = .4;
goog.i18n.bidi.estimateDirection = function(str, opt_isHtml) {
  var rtlCount = 0;
  var totalCount = 0;
  var hasWeaklyLtr = false;
  var tokens = goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml).split(goog.i18n.bidi.wordSeparatorRe_);
  for (var i = 0;i < tokens.length;i++) {
    var token = tokens[i];
    if (goog.i18n.bidi.startsWithRtl(token)) {
      rtlCount++;
      totalCount++;
    } else {
      if (goog.i18n.bidi.isRequiredLtrRe_.test(token)) {
        hasWeaklyLtr = true;
      } else {
        if (goog.i18n.bidi.hasAnyLtr(token)) {
          totalCount++;
        } else {
          if (goog.i18n.bidi.hasNumeralsRe_.test(token)) {
            hasWeaklyLtr = true;
          }
        }
      }
    }
  }
  return totalCount == 0 ? hasWeaklyLtr ? goog.i18n.bidi.Dir.LTR : goog.i18n.bidi.Dir.NEUTRAL : rtlCount / totalCount > goog.i18n.bidi.rtlDetectionThreshold_ ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;
};
goog.i18n.bidi.detectRtlDirectionality = function(str, opt_isHtml) {
  return goog.i18n.bidi.estimateDirection(str, opt_isHtml) == goog.i18n.bidi.Dir.RTL;
};
goog.i18n.bidi.setElementDirAndAlign = function(element, dir) {
  if (element) {
    dir = goog.i18n.bidi.toDir(dir);
    if (dir) {
      element.style.textAlign = dir == goog.i18n.bidi.Dir.RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT;
      element.dir = dir == goog.i18n.bidi.Dir.RTL ? "rtl" : "ltr";
    }
  }
};
goog.i18n.bidi.setElementDirByTextDirectionality = function(element, text) {
  switch(goog.i18n.bidi.estimateDirection(text)) {
    case goog.i18n.bidi.Dir.LTR:
      element.dir = "ltr";
      break;
    case goog.i18n.bidi.Dir.RTL:
      element.dir = "rtl";
      break;
    default:
      element.removeAttribute("dir");
  }
};
goog.i18n.bidi.DirectionalString = function() {
};
goog.i18n.bidi.DirectionalString.prototype.implementsGoogI18nBidiDirectionalString;
goog.i18n.bidi.DirectionalString.prototype.getDirection;
goog.provide("goog.html.SafeUrl");
goog.require("goog.asserts");
goog.require("goog.fs.url");
goog.require("goog.i18n.bidi.Dir");
goog.require("goog.i18n.bidi.DirectionalString");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeUrl = function() {
  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = "";
  this.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeUrl.INNOCUOUS_STRING = "about:invalid#zClosurez";
goog.html.SafeUrl.prototype.implementsGoogStringTypedString = true;
goog.html.SafeUrl.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
};
goog.html.SafeUrl.prototype.implementsGoogI18nBidiDirectionalString = true;
goog.html.SafeUrl.prototype.getDirection = function() {
  return goog.i18n.bidi.Dir.LTR;
};
if (goog.DEBUG) {
  goog.html.SafeUrl.prototype.toString = function() {
    return "SafeUrl{" + this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ + "}";
  };
}
goog.html.SafeUrl.unwrap = function(safeUrl) {
  if (safeUrl instanceof goog.html.SafeUrl && safeUrl.constructor === goog.html.SafeUrl && safeUrl.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeUrl.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeUrl, got '" + safeUrl + "'");
    return "type_error:SafeUrl";
  }
};
goog.html.SafeUrl.fromConstant = function(url) {
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(url));
};
goog.html.SAFE_MIME_TYPE_PATTERN_ = /^(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm))$/i;
goog.html.SafeUrl.fromBlob = function(blob) {
  var url = goog.html.SAFE_MIME_TYPE_PATTERN_.test(blob.type) ? goog.fs.url.createObjectUrl(blob) : goog.html.SafeUrl.INNOCUOUS_STRING;
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.DATA_URL_PATTERN_ = /^data:([^;,]*);base64,[a-z0-9+\/]+=*$/i;
goog.html.SafeUrl.fromDataUrl = function(dataUrl) {
  var match = dataUrl.match(goog.html.DATA_URL_PATTERN_);
  var valid = match && goog.html.SAFE_MIME_TYPE_PATTERN_.test(match[1]);
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(valid ? dataUrl : goog.html.SafeUrl.INNOCUOUS_STRING);
};
goog.html.SAFE_URL_PATTERN_ = /^(?:(?:https?|mailto|ftp):|[^&:/?#]*(?:[/?#]|$))/i;
goog.html.SafeUrl.sanitize = function(url) {
  if (url instanceof goog.html.SafeUrl) {
    return url;
  } else {
    if (url.implementsGoogStringTypedString) {
      url = url.getTypedStringValue();
    } else {
      url = String(url);
    }
  }
  if (!goog.html.SAFE_URL_PATTERN_.test(url)) {
    url = goog.html.SafeUrl.INNOCUOUS_STRING;
  }
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse = function(url) {
  var safeUrl = new goog.html.SafeUrl;
  safeUrl.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = url;
  return safeUrl;
};
goog.provide("goog.html.TrustedResourceUrl");
goog.require("goog.asserts");
goog.require("goog.i18n.bidi.Dir");
goog.require("goog.i18n.bidi.DirectionalString");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.TrustedResourceUrl = function() {
  this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ = "";
  this.TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.TrustedResourceUrl.prototype.implementsGoogStringTypedString = true;
goog.html.TrustedResourceUrl.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_;
};
goog.html.TrustedResourceUrl.prototype.implementsGoogI18nBidiDirectionalString = true;
goog.html.TrustedResourceUrl.prototype.getDirection = function() {
  return goog.i18n.bidi.Dir.LTR;
};
if (goog.DEBUG) {
  goog.html.TrustedResourceUrl.prototype.toString = function() {
    return "TrustedResourceUrl{" + this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ + "}";
  };
}
goog.html.TrustedResourceUrl.unwrap = function(trustedResourceUrl) {
  if (trustedResourceUrl instanceof goog.html.TrustedResourceUrl && trustedResourceUrl.constructor === goog.html.TrustedResourceUrl && trustedResourceUrl.TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return trustedResourceUrl.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type TrustedResourceUrl, got '" + trustedResourceUrl + "'");
    return "type_error:TrustedResourceUrl";
  }
};
goog.html.TrustedResourceUrl.fromConstant = function(url) {
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(url));
};
goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse = function(url) {
  var trustedResourceUrl = new goog.html.TrustedResourceUrl;
  trustedResourceUrl.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ = url;
  return trustedResourceUrl;
};
goog.provide("goog.html.SafeHtml");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.dom.TagName");
goog.require("goog.dom.tags");
goog.require("goog.html.SafeStyle");
goog.require("goog.html.SafeStyleSheet");
goog.require("goog.html.SafeUrl");
goog.require("goog.html.TrustedResourceUrl");
goog.require("goog.i18n.bidi.Dir");
goog.require("goog.i18n.bidi.DirectionalString");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeHtml = function() {
  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = "";
  this.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
  this.dir_ = null;
};
goog.html.SafeHtml.prototype.implementsGoogI18nBidiDirectionalString = true;
goog.html.SafeHtml.prototype.getDirection = function() {
  return this.dir_;
};
goog.html.SafeHtml.prototype.implementsGoogStringTypedString = true;
goog.html.SafeHtml.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
};
if (goog.DEBUG) {
  goog.html.SafeHtml.prototype.toString = function() {
    return "SafeHtml{" + this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ + "}";
  };
}
goog.html.SafeHtml.unwrap = function(safeHtml) {
  if (safeHtml instanceof goog.html.SafeHtml && safeHtml.constructor === goog.html.SafeHtml && safeHtml.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeHtml.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeHtml, got '" + safeHtml + "'");
    return "type_error:SafeHtml";
  }
};
goog.html.SafeHtml.TextOrHtml_;
goog.html.SafeHtml.htmlEscape = function(textOrHtml) {
  if (textOrHtml instanceof goog.html.SafeHtml) {
    return textOrHtml;
  }
  var dir = null;
  if (textOrHtml.implementsGoogI18nBidiDirectionalString) {
    dir = textOrHtml.getDirection();
  }
  var textAsString;
  if (textOrHtml.implementsGoogStringTypedString) {
    textAsString = textOrHtml.getTypedStringValue();
  } else {
    textAsString = String(textOrHtml);
  }
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.htmlEscape(textAsString), dir);
};
goog.html.SafeHtml.htmlEscapePreservingNewlines = function(textOrHtml) {
  if (textOrHtml instanceof goog.html.SafeHtml) {
    return textOrHtml;
  }
  var html = goog.html.SafeHtml.htmlEscape(textOrHtml);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.newLineToBr(goog.html.SafeHtml.unwrap(html)), html.getDirection());
};
goog.html.SafeHtml.htmlEscapePreservingNewlinesAndSpaces = function(textOrHtml) {
  if (textOrHtml instanceof goog.html.SafeHtml) {
    return textOrHtml;
  }
  var html = goog.html.SafeHtml.htmlEscape(textOrHtml);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.whitespaceEscape(goog.html.SafeHtml.unwrap(html)), html.getDirection());
};
goog.html.SafeHtml.from = goog.html.SafeHtml.htmlEscape;
goog.html.SafeHtml.VALID_NAMES_IN_TAG_ = /^[a-zA-Z0-9-]+$/;
goog.html.SafeHtml.URL_ATTRIBUTES_ = goog.object.createSet("action", "cite", "data", "formaction", "href", "manifest", "poster", "src");
goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_ = goog.object.createSet(goog.dom.TagName.EMBED, goog.dom.TagName.IFRAME, goog.dom.TagName.LINK, goog.dom.TagName.OBJECT, goog.dom.TagName.SCRIPT, goog.dom.TagName.STYLE, goog.dom.TagName.TEMPLATE);
goog.html.SafeHtml.AttributeValue_;
goog.html.SafeHtml.create = function(tagName, opt_attributes, opt_content) {
  if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(tagName)) {
    throw Error("Invalid tag name \x3c" + tagName + "\x3e.");
  }
  if (tagName.toUpperCase() in goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_) {
    throw Error("Tag name \x3c" + tagName + "\x3e is not allowed for SafeHtml.");
  }
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(tagName, opt_attributes, opt_content);
};
goog.html.SafeHtml.createIframe = function(opt_src, opt_srcdoc, opt_attributes, opt_content) {
  var fixedAttributes = {};
  fixedAttributes["src"] = opt_src || null;
  fixedAttributes["srcdoc"] = opt_srcdoc || null;
  var defaultAttributes = {"sandbox":""};
  var attributes = goog.html.SafeHtml.combineAttributes(fixedAttributes, defaultAttributes, opt_attributes);
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe", attributes, opt_content);
};
goog.html.SafeHtml.createStyle = function(styleSheet, opt_attributes) {
  var fixedAttributes = {"type":"text/css"};
  var defaultAttributes = {};
  var attributes = goog.html.SafeHtml.combineAttributes(fixedAttributes, defaultAttributes, opt_attributes);
  var content = "";
  styleSheet = goog.array.concat(styleSheet);
  for (var i = 0;i < styleSheet.length;i++) {
    content += goog.html.SafeStyleSheet.unwrap(styleSheet[i]);
  }
  var htmlContent = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(content, goog.i18n.bidi.Dir.NEUTRAL);
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("style", attributes, htmlContent);
};
goog.html.SafeHtml.getAttrNameAndValue_ = function(tagName, name, value) {
  if (value instanceof goog.string.Const) {
    value = goog.string.Const.unwrap(value);
  } else {
    if (name.toLowerCase() == "style") {
      value = goog.html.SafeHtml.getStyleValue_(value);
    } else {
      if (/^on/i.test(name)) {
        throw Error('Attribute "' + name + '" requires goog.string.Const value, "' + value + '" given.');
      } else {
        if (name.toLowerCase() in goog.html.SafeHtml.URL_ATTRIBUTES_) {
          if (value instanceof goog.html.TrustedResourceUrl) {
            value = goog.html.TrustedResourceUrl.unwrap(value);
          } else {
            if (value instanceof goog.html.SafeUrl) {
              value = goog.html.SafeUrl.unwrap(value);
            } else {
              if (goog.isString(value)) {
                value = goog.html.SafeUrl.sanitize(value).getTypedStringValue();
              } else {
                throw Error('Attribute "' + name + '" on tag "' + tagName + '" requires goog.html.SafeUrl, goog.string.Const, or string,' + ' value "' + value + '" given.');
              }
            }
          }
        }
      }
    }
  }
  if (value.implementsGoogStringTypedString) {
    value = value.getTypedStringValue();
  }
  goog.asserts.assert(goog.isString(value) || goog.isNumber(value), "String or number value expected, got " + typeof value + " with value: " + value);
  return name + '\x3d"' + goog.string.htmlEscape(String(value)) + '"';
};
goog.html.SafeHtml.getStyleValue_ = function(value) {
  if (!goog.isObject(value)) {
    throw Error('The "style" attribute requires goog.html.SafeStyle or map ' + "of style properties, " + typeof value + " given: " + value);
  }
  if (!(value instanceof goog.html.SafeStyle)) {
    value = goog.html.SafeStyle.create(value);
  }
  return goog.html.SafeStyle.unwrap(value);
};
goog.html.SafeHtml.createWithDir = function(dir, tagName, opt_attributes, opt_content) {
  var html = goog.html.SafeHtml.create(tagName, opt_attributes, opt_content);
  html.dir_ = dir;
  return html;
};
goog.html.SafeHtml.concat = function(var_args) {
  var dir = goog.i18n.bidi.Dir.NEUTRAL;
  var content = "";
  var addArgument = function(argument) {
    if (goog.isArray(argument)) {
      goog.array.forEach(argument, addArgument);
    } else {
      var html = goog.html.SafeHtml.htmlEscape(argument);
      content += goog.html.SafeHtml.unwrap(html);
      var htmlDir = html.getDirection();
      if (dir == goog.i18n.bidi.Dir.NEUTRAL) {
        dir = htmlDir;
      } else {
        if (htmlDir != goog.i18n.bidi.Dir.NEUTRAL && dir != htmlDir) {
          dir = null;
        }
      }
    }
  };
  goog.array.forEach(arguments, addArgument);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(content, dir);
};
goog.html.SafeHtml.concatWithDir = function(dir, var_args) {
  var html = goog.html.SafeHtml.concat(goog.array.slice(arguments, 1));
  html.dir_ = dir;
  return html;
};
goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse = function(html, dir) {
  return (new goog.html.SafeHtml).initSecurityPrivateDoNotAccessOrElse_(html, dir);
};
goog.html.SafeHtml.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(html, dir) {
  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = html;
  this.dir_ = dir;
  return this;
};
goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse = function(tagName, opt_attributes, opt_content) {
  var dir = null;
  var result = "\x3c" + tagName;
  if (opt_attributes) {
    for (var name in opt_attributes) {
      if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(name)) {
        throw Error('Invalid attribute name "' + name + '".');
      }
      var value = opt_attributes[name];
      if (!goog.isDefAndNotNull(value)) {
        continue;
      }
      result += " " + goog.html.SafeHtml.getAttrNameAndValue_(tagName, name, value);
    }
  }
  var content = opt_content;
  if (!goog.isDefAndNotNull(content)) {
    content = [];
  } else {
    if (!goog.isArray(content)) {
      content = [content];
    }
  }
  if (goog.dom.tags.isVoidTag(tagName.toLowerCase())) {
    goog.asserts.assert(!content.length, "Void tag \x3c" + tagName + "\x3e does not allow content.");
    result += "\x3e";
  } else {
    var html = goog.html.SafeHtml.concat(content);
    result += "\x3e" + goog.html.SafeHtml.unwrap(html) + "\x3c/" + tagName + "\x3e";
    dir = html.getDirection();
  }
  var dirAttribute = opt_attributes && opt_attributes["dir"];
  if (dirAttribute) {
    if (/^(ltr|rtl|auto)$/i.test(dirAttribute)) {
      dir = goog.i18n.bidi.Dir.NEUTRAL;
    } else {
      dir = null;
    }
  }
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(result, dir);
};
goog.html.SafeHtml.combineAttributes = function(fixedAttributes, defaultAttributes, opt_attributes) {
  var combinedAttributes = {};
  var name;
  for (name in fixedAttributes) {
    goog.asserts.assert(name.toLowerCase() == name, "Must be lower case");
    combinedAttributes[name] = fixedAttributes[name];
  }
  for (name in defaultAttributes) {
    goog.asserts.assert(name.toLowerCase() == name, "Must be lower case");
    combinedAttributes[name] = defaultAttributes[name];
  }
  for (name in opt_attributes) {
    var nameLower = name.toLowerCase();
    if (nameLower in fixedAttributes) {
      throw Error('Cannot override "' + nameLower + '" attribute, got "' + name + '" with value "' + opt_attributes[name] + '"');
    }
    if (nameLower in defaultAttributes) {
      delete combinedAttributes[nameLower];
    }
    combinedAttributes[name] = opt_attributes[name];
  }
  return combinedAttributes;
};
goog.html.SafeHtml.DOCTYPE_HTML = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("\x3c!DOCTYPE html\x3e", goog.i18n.bidi.Dir.NEUTRAL);
goog.html.SafeHtml.EMPTY = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("", goog.i18n.bidi.Dir.NEUTRAL);
goog.provide("goog.dom.safe");
goog.provide("goog.dom.safe.InsertAdjacentHtmlPosition");
goog.require("goog.asserts");
goog.require("goog.html.SafeHtml");
goog.require("goog.html.SafeUrl");
goog.require("goog.html.TrustedResourceUrl");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.dom.safe.InsertAdjacentHtmlPosition = {AFTERBEGIN:"afterbegin", AFTEREND:"afterend", BEFOREBEGIN:"beforebegin", BEFOREEND:"beforeend"};
goog.dom.safe.insertAdjacentHtml = function(node, position, html) {
  node.insertAdjacentHTML(position, goog.html.SafeHtml.unwrap(html));
};
goog.dom.safe.setInnerHtml = function(elem, html) {
  elem.innerHTML = goog.html.SafeHtml.unwrap(html);
};
goog.dom.safe.setOuterHtml = function(elem, html) {
  elem.outerHTML = goog.html.SafeHtml.unwrap(html);
};
goog.dom.safe.documentWrite = function(doc, html) {
  doc.write(goog.html.SafeHtml.unwrap(html));
};
goog.dom.safe.setAnchorHref = function(anchor, url) {
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitize(url);
  }
  anchor.href = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.setEmbedSrc = function(embed, url) {
  embed.src = goog.html.TrustedResourceUrl.unwrap(url);
};
goog.dom.safe.setFrameSrc = function(frame, url) {
  frame.src = goog.html.TrustedResourceUrl.unwrap(url);
};
goog.dom.safe.setIframeSrc = function(iframe, url) {
  iframe.src = goog.html.TrustedResourceUrl.unwrap(url);
};
goog.dom.safe.setLinkHrefAndRel = function(link, url, rel) {
  link.rel = rel;
  if (goog.string.caseInsensitiveContains(rel, "stylesheet")) {
    goog.asserts.assert(url instanceof goog.html.TrustedResourceUrl, 'URL must be TrustedResourceUrl because "rel" contains "stylesheet"');
    link.href = goog.html.TrustedResourceUrl.unwrap(url);
  } else {
    if (url instanceof goog.html.TrustedResourceUrl) {
      link.href = goog.html.TrustedResourceUrl.unwrap(url);
    } else {
      if (url instanceof goog.html.SafeUrl) {
        link.href = goog.html.SafeUrl.unwrap(url);
      } else {
        link.href = goog.html.SafeUrl.sanitize(url).getTypedStringValue();
      }
    }
  }
};
goog.dom.safe.setObjectData = function(object, url) {
  object.data = goog.html.TrustedResourceUrl.unwrap(url);
};
goog.dom.safe.setScriptSrc = function(script, url) {
  script.src = goog.html.TrustedResourceUrl.unwrap(url);
};
goog.dom.safe.setLocationHref = function(loc, url) {
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitize(url);
  }
  loc.href = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.openInWindow = function(url, opt_openerWin, opt_name, opt_specs, opt_replace) {
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitize(url);
  }
  var win = opt_openerWin || window;
  return win.open(goog.html.SafeUrl.unwrap(safeUrl), opt_name ? goog.string.Const.unwrap(opt_name) : "", opt_specs, opt_replace);
};
goog.provide("goog.math");
goog.require("goog.array");
goog.require("goog.asserts");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a);
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a);
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max);
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r;
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a);
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 1E-6);
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360);
};
goog.math.standardAngleInRadians = function(angle) {
  return goog.math.modulo(angle, 2 * Math.PI);
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180;
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI;
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees));
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees));
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)));
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if (d > 180) {
    d = d - 360;
  } else {
    if (d <= -180) {
      d = 360 + d;
    }
  }
  return d;
};
goog.math.sign = Math.sign || function(x) {
  if (x > 0) {
    return 1;
  }
  if (x < 0) {
    return -1;
  }
  return x;
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b;
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1];
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for (var i = 0;i < length1 + 1;i++) {
    arr[i] = [];
    arr[i][0] = 0;
  }
  for (var j = 0;j < length2 + 1;j++) {
    arr[0][j] = 0;
  }
  for (i = 1;i <= length1;i++) {
    for (j = 1;j <= length2;j++) {
      if (compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1;
      } else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1]);
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while (i > 0 && j > 0) {
    if (compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--;
    } else {
      if (arr[i - 1][j] > arr[i][j - 1]) {
        i--;
      } else {
        j--;
      }
    }
  }
  return result;
};
goog.math.sum = function(var_args) {
  return (goog.array.reduce(arguments, function(sum, value) {
    return sum + value;
  }, 0));
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length;
};
goog.math.sampleVariance = function(var_args) {
  var sampleSize = arguments.length;
  if (sampleSize < 2) {
    return 0;
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2);
  })) / (sampleSize - 1);
  return variance;
};
goog.math.standardDeviation = function(var_args) {
  return Math.sqrt(goog.math.sampleVariance.apply(null, arguments));
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0;
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num) && !isNaN(num);
};
goog.math.isNegativeZero = function(num) {
  return num == 0 && 1 / num < 0;
};
goog.math.log10Floor = function(num) {
  if (num > 0) {
    var x = Math.round(Math.log(num) * Math.LOG10E);
    return x - (parseFloat("1e" + x) > num);
  }
  return num == 0 ? -Infinity : NaN;
};
goog.math.safeFloor = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.floor(num + (opt_epsilon || 2E-15));
};
goog.math.safeCeil = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.ceil(num - (opt_epsilon || 2E-15));
};
goog.provide("goog.math.Coordinate");
goog.require("goog.math");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0;
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y);
};
if (goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return "(" + this.x + ", " + this.y + ")";
  };
}
goog.math.Coordinate.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.x == b.x && a.y == b.y;
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy);
};
goog.math.Coordinate.magnitude = function(a) {
  return Math.sqrt(a.x * a.x + a.y * a.y);
};
goog.math.Coordinate.azimuth = function(a) {
  return goog.math.angle(0, 0, a.x, a.y);
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy;
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y);
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y);
};
goog.math.Coordinate.prototype.ceil = function() {
  this.x = Math.ceil(this.x);
  this.y = Math.ceil(this.y);
  return this;
};
goog.math.Coordinate.prototype.floor = function() {
  this.x = Math.floor(this.x);
  this.y = Math.floor(this.y);
  return this;
};
goog.math.Coordinate.prototype.round = function() {
  this.x = Math.round(this.x);
  this.y = Math.round(this.y);
  return this;
};
goog.math.Coordinate.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.x += tx.x;
    this.y += tx.y;
  } else {
    this.x += tx;
    if (goog.isNumber(opt_ty)) {
      this.y += opt_ty;
    }
  }
  return this;
};
goog.math.Coordinate.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.x *= sx;
  this.y *= sy;
  return this;
};
goog.math.Coordinate.prototype.rotateRadians = function(radians, opt_center) {
  var center = opt_center || new goog.math.Coordinate(0, 0);
  var x = this.x;
  var y = this.y;
  var cos = Math.cos(radians);
  var sin = Math.sin(radians);
  this.x = (x - center.x) * cos - (y - center.y) * sin + center.x;
  this.y = (x - center.x) * sin + (y - center.y) * cos + center.y;
};
goog.math.Coordinate.prototype.rotateDegrees = function(degrees, opt_center) {
  this.rotateRadians(goog.math.toRadians(degrees), opt_center);
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height;
};
goog.math.Size.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.width == b.width && a.height == b.height;
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height);
};
if (goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return "(" + this.width + " x " + this.height + ")";
  };
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height);
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height);
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height;
};
goog.math.Size.prototype.perimeter = function() {
  return (this.width + this.height) * 2;
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height;
};
goog.math.Size.prototype.isEmpty = function() {
  return !this.area();
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this;
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height;
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this;
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this;
};
goog.math.Size.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.width *= sx;
  this.height *= sy;
  return this;
};
goog.math.Size.prototype.scaleToCover = function(target) {
  var s = this.aspectRatio() <= target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s);
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s);
};
goog.provide("goog.dom");
goog.provide("goog.dom.Appendable");
goog.provide("goog.dom.DomHelper");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.NodeType");
goog.require("goog.dom.TagName");
goog.require("goog.dom.safe");
goog.require("goog.html.SafeHtml");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.string.Unicode");
goog.require("goog.userAgent");
goog.define("goog.dom.ASSUME_QUIRKS_MODE", false);
goog.define("goog.dom.ASSUME_STANDARDS_MODE", false);
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper);
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document;
};
goog.dom.getElement = function(element) {
  return goog.dom.getElementHelper_(document, element);
};
goog.dom.getElementHelper_ = function(doc, element) {
  return goog.isString(element) ? doc.getElementById(element) : element;
};
goog.dom.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(document, id);
};
goog.dom.getRequiredElementHelper_ = function(doc, id) {
  goog.asserts.assertString(id);
  var element = goog.dom.getElementHelper_(doc, id);
  element = goog.asserts.assertElement(element, "No element found with id: " + id);
  return element;
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el);
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if (goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className);
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el);
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if (parent.getElementsByClassName) {
    retVal = parent.getElementsByClassName(className)[0];
  } else {
    if (goog.dom.canUseQuerySelector_(parent)) {
      retVal = parent.querySelector("." + className);
    } else {
      retVal = goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)[0];
    }
  }
  return retVal || null;
};
goog.dom.getRequiredElementByClass = function(className, opt_root) {
  var retValue = goog.dom.getElementByClass(className, opt_root);
  return goog.asserts.assert(retValue, "No element found with className: " + className);
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return !!(parent.querySelectorAll && parent.querySelector);
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if (goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query);
  }
  if (opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if (tagName) {
      var arrayLike = {};
      var len = 0;
      for (var i = 0, el;el = els[i];i++) {
        if (tagName == el.nodeName) {
          arrayLike[len++] = el;
        }
      }
      arrayLike.length = len;
      return arrayLike;
    } else {
      return els;
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if (opt_class) {
    var arrayLike = {};
    var len = 0;
    for (var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if (typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el;
      }
    }
    arrayLike.length = len;
    return arrayLike;
  } else {
    return els;
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if (key == "style") {
      element.style.cssText = val;
    } else {
      if (key == "class") {
        element.className = val;
      } else {
        if (key == "for") {
          element.htmlFor = val;
        } else {
          if (goog.dom.DIRECT_ATTRIBUTE_MAP_.hasOwnProperty(key)) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val);
          } else {
            if (goog.string.startsWith(key, "aria-") || goog.string.startsWith(key, "data-")) {
              element.setAttribute(key, val);
            } else {
              element[key] = val;
            }
          }
        }
      }
    }
  });
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "frameborder":"frameBorder", "height":"height", "maxlength":"maxLength", "role":"role", "rowspan":"rowSpan", "type":"type", "usemap":"useMap", "valign":"vAlign", "width":"width"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window);
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight);
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window);
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if (doc) {
    var body = doc.body;
    var docEl = (doc.documentElement);
    if (!(docEl && body)) {
      return 0;
    }
    var vh = goog.dom.getViewportSize_(win).height;
    if (goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight;
    } else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if (docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight;
      }
      if (sh > vh) {
        height = sh > oh ? sh : oh;
      } else {
        height = sh < oh ? sh : oh;
      }
    }
  }
  return height;
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll();
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document);
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  if (goog.userAgent.IE && goog.userAgent.isVersionOrHigher("10") && win.pageYOffset != el.scrollTop) {
    return new goog.math.Coordinate(el.scrollLeft, el.scrollTop);
  }
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop);
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document);
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  if (doc.scrollingElement) {
    return doc.scrollingElement;
  }
  if (!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc)) {
    return doc.documentElement;
  }
  return doc.body || doc.documentElement;
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window;
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView;
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments);
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if (!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["\x3c", tagName];
    if (attributes.name) {
      tagNameArr.push(' name\x3d"', goog.string.htmlEscape(attributes.name), '"');
    }
    if (attributes.type) {
      tagNameArr.push(' type\x3d"', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      delete clone["type"];
      attributes = clone;
    }
    tagNameArr.push("\x3e");
    tagName = tagNameArr.join("");
  }
  var element = doc.createElement(tagName);
  if (attributes) {
    if (goog.isString(attributes)) {
      element.className = attributes;
    } else {
      if (goog.isArray(attributes)) {
        element.className = attributes.join(" ");
      } else {
        goog.dom.setProperties(element, attributes);
      }
    }
  }
  if (args.length > 2) {
    goog.dom.append_(doc, element, args, 2);
  }
  return element;
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if (child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child);
    }
  }
  for (var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if (goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.toArray(arg) : arg, childHandler);
    } else {
      childHandler(arg);
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name);
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(String(content));
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var table = (doc.createElement(goog.dom.TagName.TABLE));
  var tbody = table.appendChild(doc.createElement(goog.dom.TagName.TBODY));
  for (var i = 0;i < rows;i++) {
    var tr = doc.createElement(goog.dom.TagName.TR);
    for (var j = 0;j < columns;j++) {
      var td = doc.createElement(goog.dom.TagName.TD);
      if (fillWithNbsp) {
        goog.dom.setTextContent(td, goog.string.Unicode.NBSP);
      }
      tr.appendChild(td);
    }
    tbody.appendChild(tr);
  }
  return table;
};
goog.dom.safeHtmlToNode = function(html) {
  return goog.dom.safeHtmlToNode_(document, html);
};
goog.dom.safeHtmlToNode_ = function(doc, html) {
  var tempDiv = doc.createElement(goog.dom.TagName.DIV);
  if (goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    goog.dom.safe.setInnerHtml(tempDiv, goog.html.SafeHtml.concat(goog.html.SafeHtml.create("br"), html));
    tempDiv.removeChild(tempDiv.firstChild);
  } else {
    goog.dom.safe.setInnerHtml(tempDiv, html);
  }
  return goog.dom.childrenToNode_(doc, tempDiv);
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString);
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement(goog.dom.TagName.DIV);
  if (goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "\x3cbr\x3e" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild);
  } else {
    tempDiv.innerHTML = htmlString;
  }
  return goog.dom.childrenToNode_(doc, tempDiv);
};
goog.dom.childrenToNode_ = function(doc, tempDiv) {
  if (tempDiv.childNodes.length == 1) {
    return tempDiv.removeChild(tempDiv.firstChild);
  } else {
    var fragment = doc.createDocumentFragment();
    while (tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild);
    }
    return fragment;
  }
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document);
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if (goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE;
  }
  return doc.compatMode == "CSS1Compat";
};
goog.dom.canHaveChildren = function(node) {
  if (node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false;
  }
  switch((node).tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.COMMAND:
    ;
    case goog.dom.TagName.EMBED:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.KEYGEN:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.SOURCE:
    ;
    case goog.dom.TagName.STYLE:
    ;
    case goog.dom.TagName.TRACK:
    ;
    case goog.dom.TagName.WBR:
      return false;
  }
  return true;
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child);
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1);
};
goog.dom.removeChildren = function(node) {
  var child;
  while (child = node.firstChild) {
    node.removeChild(child);
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode);
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling);
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null);
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null;
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if (parent) {
    parent.replaceChild(newNode, oldNode);
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if (parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if (element.removeNode) {
      return (element.removeNode(false));
    } else {
      while (child = element.firstChild) {
        parent.insertBefore(child, element);
      }
      return (goog.dom.removeNode(element));
    }
  }
};
goog.dom.getChildren = function(element) {
  if (goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children;
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT;
  });
};
goog.dom.getFirstElementChild = function(node) {
  if (goog.isDef(node.firstElementChild)) {
    return (node).firstElementChild;
  }
  return goog.dom.getNextElementNode_(node.firstChild, true);
};
goog.dom.getLastElementChild = function(node) {
  if (goog.isDef(node.lastElementChild)) {
    return (node).lastElementChild;
  }
  return goog.dom.getNextElementNode_(node.lastChild, false);
};
goog.dom.getNextElementSibling = function(node) {
  if (goog.isDef(node.nextElementSibling)) {
    return (node).nextElementSibling;
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true);
};
goog.dom.getPreviousElementSibling = function(node) {
  if (goog.isDef(node.previousElementSibling)) {
    return (node).previousElementSibling;
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false);
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while (node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling;
  }
  return (node);
};
goog.dom.getNextNode = function(node) {
  if (!node) {
    return null;
  }
  if (node.firstChild) {
    return node.firstChild;
  }
  while (node && !node.nextSibling) {
    node = node.parentNode;
  }
  return node ? node.nextSibling : null;
};
goog.dom.getPreviousNode = function(node) {
  if (!node) {
    return null;
  }
  if (!node.previousSibling) {
    return node.parentNode;
  }
  node = node.previousSibling;
  while (node && node.lastChild) {
    node = node.lastChild;
  }
  return node;
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0;
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT;
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj;
};
goog.dom.getParentElement = function(element) {
  var parent;
  if (goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY) {
    var isIe9 = goog.userAgent.IE && goog.userAgent.isVersionOrHigher("9") && !goog.userAgent.isVersionOrHigher("10");
    if (!(isIe9 && goog.global["SVGElement"] && element instanceof goog.global["SVGElement"])) {
      parent = element.parentElement;
      if (parent) {
        return parent;
      }
    }
  }
  parent = element.parentNode;
  return goog.dom.isElement(parent) ? (parent) : null;
};
goog.dom.contains = function(parent, descendant) {
  if (parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant);
  }
  if (typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16);
  }
  while (descendant && parent != descendant) {
    descendant = descendant.parentNode;
  }
  return descendant == parent;
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if (node1 == node2) {
    return 0;
  }
  if (node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1;
  }
  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)) {
    if (node1.nodeType == goog.dom.NodeType.DOCUMENT) {
      return -1;
    }
    if (node2.nodeType == goog.dom.NodeType.DOCUMENT) {
      return 1;
    }
  }
  if ("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if (isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex;
    } else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if (parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2);
      }
      if (!isElement1 && goog.dom.contains(parent1, node2)) {
        return -1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2);
      }
      if (!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1);
      }
      return (isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex);
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2);
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if (parent == node) {
    return -1;
  }
  var sibling = node;
  while (sibling.parentNode != parent) {
    sibling = sibling.parentNode;
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode);
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while (s = s.previousSibling) {
    if (s == node1) {
      return -1;
    }
  }
  return 1;
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if (!count) {
    return null;
  } else {
    if (count == 1) {
      return arguments[0];
    }
  }
  var paths = [];
  var minLength = Infinity;
  for (i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while (node) {
      ancestors.unshift(node);
      node = node.parentNode;
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length);
  }
  var output = null;
  for (i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for (var j = 1;j < count;j++) {
      if (first != paths[j][i]) {
        return output;
      }
    }
    output = first;
  }
  return output;
};
goog.dom.getOwnerDocument = function(node) {
  goog.asserts.assert(node, "Node cannot be null or undefined.");
  return (node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document);
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc = frame.contentDocument || frame.contentWindow.document;
  return doc;
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow(goog.dom.getFrameContentDocument(frame));
};
goog.dom.setTextContent = function(node, text) {
  goog.asserts.assert(node != null, "goog.dom.setTextContent expects a non-null value for node");
  if ("textContent" in node) {
    node.textContent = text;
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      node.data = text;
    } else {
      if (node.firstChild && node.firstChild.nodeType == goog.dom.NodeType.TEXT) {
        while (node.lastChild != node.firstChild) {
          node.removeChild(node.lastChild);
        }
        node.firstChild.data = text;
      } else {
        goog.dom.removeChildren(node);
        var doc = goog.dom.getOwnerDocument(node);
        node.appendChild(doc.createTextNode(String(text)));
      }
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if ("outerHTML" in element) {
    return element.outerHTML;
  } else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement(goog.dom.TagName.DIV);
    div.appendChild(element.cloneNode(true));
    return div.innerHTML;
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined;
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv;
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if (root != null) {
    var child = root.firstChild;
    while (child) {
      if (p(child)) {
        rv.push(child);
        if (findOne) {
          return true;
        }
      }
      if (goog.dom.findNodes_(child, p, rv, findOne)) {
        return true;
      }
      child = child.nextSibling;
    }
  }
  return false;
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  return goog.dom.hasSpecifiedTabIndex_(element) && goog.dom.isTabIndexFocusable_(element);
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if (enable) {
    element.tabIndex = 0;
  } else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex");
  }
};
goog.dom.isFocusable = function(element) {
  var focusable;
  if (goog.dom.nativelySupportsFocus_(element)) {
    focusable = !element.disabled && (!goog.dom.hasSpecifiedTabIndex_(element) || goog.dom.isTabIndexFocusable_(element));
  } else {
    focusable = goog.dom.isFocusableTabIndex(element);
  }
  return focusable && goog.userAgent.IE ? goog.dom.hasNonZeroBoundingRect_(element) : focusable;
};
goog.dom.hasSpecifiedTabIndex_ = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  return goog.isDefAndNotNull(attrNode) && attrNode.specified;
};
goog.dom.isTabIndexFocusable_ = function(element) {
  var index = element.tabIndex;
  return goog.isNumber(index) && index >= 0 && index < 32768;
};
goog.dom.nativelySupportsFocus_ = function(element) {
  return element.tagName == goog.dom.TagName.A || element.tagName == goog.dom.TagName.INPUT || element.tagName == goog.dom.TagName.TEXTAREA || element.tagName == goog.dom.TagName.SELECT || element.tagName == goog.dom.TagName.BUTTON;
};
goog.dom.hasNonZeroBoundingRect_ = function(element) {
  var rect = goog.isFunction(element["getBoundingClientRect"]) ? element.getBoundingClientRect() : {"height":element.offsetHeight, "width":element.offsetWidth};
  return goog.isDefAndNotNull(rect) && rect.height > 0 && rect.width > 0;
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if (goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText);
  } else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("");
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if (!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ");
  }
  if (textContent != " ") {
    textContent = textContent.replace(/^\s*/, "");
  }
  return textContent;
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("");
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if (node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      if (normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""));
      } else {
        buf.push(node.nodeValue);
      }
    } else {
      if (node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName]);
      } else {
        var child = node.firstChild;
        while (child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling;
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length;
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while (node && node != root) {
    var cur = node;
    while (cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur));
    }
    node = node.parentNode;
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length;
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur = null;
  while (stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if (cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    } else {
      if (cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length;
      } else {
        if (cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length;
        } else {
          for (var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i]);
          }
        }
      }
    }
  }
  if (goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur;
  }
  return cur;
};
goog.dom.isNodeList = function(val) {
  if (val && typeof val.length == "number") {
    if (goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string";
    } else {
      if (goog.isFunction(val)) {
        return typeof val.item == "function";
      }
    }
  }
  return false;
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class, opt_maxSearchSteps) {
  if (!opt_tag && !opt_class) {
    return null;
  }
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return (goog.dom.getAncestor(element, function(node) {
    return (!tagName || node.nodeName == tagName) && (!opt_class || goog.isString(node.className) && goog.array.contains(node.className.split(/\s+/), opt_class));
  }, true, opt_maxSearchSteps));
};
goog.dom.getAncestorByClass = function(element, className, opt_maxSearchSteps) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, className, opt_maxSearchSteps);
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if (!opt_includeNode) {
    element = element.parentNode;
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while (element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    goog.asserts.assert(element.name != "parentNode");
    if (matcher(element)) {
      return element;
    }
    element = element.parentNode;
    steps++;
  }
  return null;
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement;
  } catch (e) {
  }
  return null;
};
goog.dom.getPixelRatio = function() {
  var win = goog.dom.getWindow();
  if (goog.isDef(win.devicePixelRatio)) {
    return win.devicePixelRatio;
  } else {
    if (win.matchMedia) {
      return goog.dom.matchesPixelRatio_(.75) || goog.dom.matchesPixelRatio_(1.5) || goog.dom.matchesPixelRatio_(2) || goog.dom.matchesPixelRatio_(3) || 1;
    }
  }
  return 1;
};
goog.dom.matchesPixelRatio_ = function(pixelRatio) {
  var win = goog.dom.getWindow();
  var query = "(-webkit-min-device-pixel-ratio: " + pixelRatio + ")," + "(min--moz-device-pixel-ratio: " + pixelRatio + ")," + "(min-resolution: " + pixelRatio + "dppx)";
  return win.matchMedia(query).matches ? pixelRatio : 0;
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document;
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document;
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_;
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  return goog.dom.getElementHelper_(this.document_, element);
};
goog.dom.DomHelper.prototype.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(this.document_, id);
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el);
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc);
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc);
};
goog.dom.DomHelper.prototype.getRequiredElementByClass = function(className, opt_root) {
  var root = opt_root || this.document_;
  return goog.dom.getRequiredElementByClass(className, root);
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow());
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow());
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments);
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name);
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(String(content));
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.DomHelper.prototype.safeHtmlToNode = function(html) {
  return goog.dom.safeHtmlToNode_(this.document_, html);
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString);
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_);
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_);
};
goog.dom.DomHelper.prototype.getActiveElement = function(opt_doc) {
  return goog.dom.getActiveElement(opt_doc || this.document_);
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.canHaveChildren = goog.dom.canHaveChildren;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.insertChildAt = goog.dom.insertChildAt;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getChildren = goog.dom.getChildren;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.isElement = goog.dom.isElement;
goog.dom.DomHelper.prototype.isWindow = goog.dom.isWindow;
goog.dom.DomHelper.prototype.getParentElement = goog.dom.getParentElement;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.compareNodeOrder = goog.dom.compareNodeOrder;
goog.dom.DomHelper.prototype.findCommonAncestor = goog.dom.findCommonAncestor;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.getOuterHtml = goog.dom.getOuterHtml;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.isFocusableTabIndex = goog.dom.isFocusableTabIndex;
goog.dom.DomHelper.prototype.setFocusableTabIndex = goog.dom.setFocusableTabIndex;
goog.dom.DomHelper.prototype.isFocusable = goog.dom.isFocusable;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getNodeAtOffset = goog.dom.getNodeAtOffset;
goog.dom.DomHelper.prototype.isNodeList = goog.dom.isNodeList;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("goog.userAgent.product");
goog.require("goog.labs.userAgent.browser");
goog.require("goog.labs.userAgent.platform");
goog.require("goog.userAgent");
goog.define("goog.userAgent.product.ASSUME_FIREFOX", false);
goog.define("goog.userAgent.product.ASSUME_IPHONE", false);
goog.define("goog.userAgent.product.ASSUME_IPAD", false);
goog.define("goog.userAgent.product.ASSUME_ANDROID", false);
goog.define("goog.userAgent.product.ASSUME_CHROME", false);
goog.define("goog.userAgent.product.ASSUME_SAFARI", false);
goog.userAgent.product.PRODUCT_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_OPERA || goog.userAgent.product.ASSUME_FIREFOX || goog.userAgent.product.ASSUME_IPHONE || goog.userAgent.product.ASSUME_IPAD || goog.userAgent.product.ASSUME_ANDROID || goog.userAgent.product.ASSUME_CHROME || goog.userAgent.product.ASSUME_SAFARI;
goog.userAgent.product.OPERA = goog.userAgent.OPERA;
goog.userAgent.product.IE = goog.userAgent.IE;
goog.userAgent.product.FIREFOX = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_FIREFOX : goog.labs.userAgent.browser.isFirefox();
goog.userAgent.product.isIphoneOrIpod_ = function() {
  return goog.labs.userAgent.platform.isIphone() || goog.labs.userAgent.platform.isIpod();
};
goog.userAgent.product.IPHONE = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_IPHONE : goog.userAgent.product.isIphoneOrIpod_();
goog.userAgent.product.IPAD = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_IPAD : goog.labs.userAgent.platform.isIpad();
goog.userAgent.product.ANDROID = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_ANDROID : goog.labs.userAgent.browser.isAndroidBrowser();
goog.userAgent.product.CHROME = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_CHROME : goog.labs.userAgent.browser.isChrome();
goog.userAgent.product.isSafariDesktop_ = function() {
  return goog.labs.userAgent.browser.isSafari() && !goog.labs.userAgent.platform.isIos();
};
goog.userAgent.product.SAFARI = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_SAFARI : goog.userAgent.product.isSafariDesktop_();
goog.provide("goog.dom.dataset");
goog.require("goog.string");
goog.require("goog.userAgent.product");
goog.dom.dataset.ALLOWED_ = !goog.userAgent.product.IE;
goog.dom.dataset.PREFIX_ = "data-";
goog.dom.dataset.set = function(element, key, value) {
  if (goog.dom.dataset.ALLOWED_ && element.dataset) {
    element.dataset[key] = value;
  } else {
    element.setAttribute(goog.dom.dataset.PREFIX_ + goog.string.toSelectorCase(key), value);
  }
};
goog.dom.dataset.get = function(element, key) {
  if (goog.dom.dataset.ALLOWED_ && element.dataset) {
    if (!(key in element.dataset)) {
      return null;
    }
    return element.dataset[key];
  } else {
    return element.getAttribute(goog.dom.dataset.PREFIX_ + goog.string.toSelectorCase(key));
  }
};
goog.dom.dataset.remove = function(element, key) {
  if (goog.dom.dataset.ALLOWED_ && element.dataset) {
    delete element.dataset[key];
  } else {
    element.removeAttribute(goog.dom.dataset.PREFIX_ + goog.string.toSelectorCase(key));
  }
};
goog.dom.dataset.has = function(element, key) {
  if (goog.dom.dataset.ALLOWED_ && element.dataset) {
    return key in element.dataset;
  } else {
    if (element.hasAttribute) {
      return element.hasAttribute(goog.dom.dataset.PREFIX_ + goog.string.toSelectorCase(key));
    } else {
      return !!element.getAttribute(goog.dom.dataset.PREFIX_ + goog.string.toSelectorCase(key));
    }
  }
};
goog.dom.dataset.getAll = function(element) {
  if (goog.dom.dataset.ALLOWED_ && element.dataset) {
    return element.dataset;
  } else {
    var dataset = {};
    var attributes = element.attributes;
    for (var i = 0;i < attributes.length;++i) {
      var attribute = attributes[i];
      if (goog.string.startsWith(attribute.name, goog.dom.dataset.PREFIX_)) {
        var key = goog.string.toCamelCase(attribute.name.substr(5));
        dataset[key] = attribute.value;
      }
    }
    return dataset;
  }
};
goog.provide("goog.ui.IdGenerator");
goog.ui.IdGenerator = function() {
};
goog.addSingletonGetter(goog.ui.IdGenerator);
goog.ui.IdGenerator.prototype.nextId_ = 0;
goog.ui.IdGenerator.prototype.getNextUniqueId = function() {
  return ":" + (this.nextId_++).toString(36);
};
goog.provide("om.core");
goog.require("cljs.core");
goog.require("goog.dom");
goog.require("om.dom");
goog.require("goog.dom.dataset");
goog.require("goog.object");
goog.require("goog.ui.IdGenerator");
om.core._STAR_parent_STAR_ = null;
om.core._STAR_instrument_STAR_ = null;
om.core._STAR_descriptor_STAR_ = null;
om.core._STAR_state_STAR_ = null;
om.core._STAR_root_key_STAR_ = null;
om.core.IDisplayName = {};
om.core.display_name = function om$core$display_name(this$) {
  if (!(this$ == null) && !(this$.om$core$IDisplayName$display_name$arity$1 == null)) {
    return this$.om$core$IDisplayName$display_name$arity$1(this$);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = om.core.display_name[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, this$);
    } else {
      var m__5163__auto____$1 = om.core.display_name["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "IDisplayName.display-name", this$);
      }
    }
  }
};
om.core.IInitState = {};
om.core.init_state = function om$core$init_state(this$) {
  if (!(this$ == null) && !(this$.om$core$IInitState$init_state$arity$1 == null)) {
    return this$.om$core$IInitState$init_state$arity$1(this$);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = om.core.init_state[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, this$);
    } else {
      var m__5163__auto____$1 = om.core.init_state["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "IInitState.init-state", this$);
      }
    }
  }
};
om.core.IShouldUpdate = {};
om.core.should_update = function om$core$should_update(this$, next_props, next_state) {
  if (!(this$ == null) && !(this$.om$core$IShouldUpdate$should_update$arity$3 == null)) {
    return this$.om$core$IShouldUpdate$should_update$arity$3(this$, next_props, next_state);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = om.core.should_update[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, this$, next_props, next_state);
    } else {
      var m__5163__auto____$1 = om.core.should_update["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, this$, next_props, next_state);
      } else {
        throw cljs.core.missing_protocol.call(null, "IShouldUpdate.should-update", this$);
      }
    }
  }
};
om.core.IWillMount = {};
om.core.will_mount = function om$core$will_mount(this$) {
  if (!(this$ == null) && !(this$.om$core$IWillMount$will_mount$arity$1 == null)) {
    return this$.om$core$IWillMount$will_mount$arity$1(this$);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = om.core.will_mount[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, this$);
    } else {
      var m__5163__auto____$1 = om.core.will_mount["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "IWillMount.will-mount", this$);
      }
    }
  }
};
om.core.IDidMount = {};
om.core.did_mount = function om$core$did_mount(this$) {
  if (!(this$ == null) && !(this$.om$core$IDidMount$did_mount$arity$1 == null)) {
    return this$.om$core$IDidMount$did_mount$arity$1(this$);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = om.core.did_mount[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, this$);
    } else {
      var m__5163__auto____$1 = om.core.did_mount["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "IDidMount.did-mount", this$);
      }
    }
  }
};
om.core.IWillUnmount = {};
om.core.will_unmount = function om$core$will_unmount(this$) {
  if (!(this$ == null) && !(this$.om$core$IWillUnmount$will_unmount$arity$1 == null)) {
    return this$.om$core$IWillUnmount$will_unmount$arity$1(this$);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = om.core.will_unmount[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, this$);
    } else {
      var m__5163__auto____$1 = om.core.will_unmount["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "IWillUnmount.will-unmount", this$);
      }
    }
  }
};
om.core.IWillUpdate = {};
om.core.will_update = function om$core$will_update(this$, next_props, next_state) {
  if (!(this$ == null) && !(this$.om$core$IWillUpdate$will_update$arity$3 == null)) {
    return this$.om$core$IWillUpdate$will_update$arity$3(this$, next_props, next_state);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = om.core.will_update[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, this$, next_props, next_state);
    } else {
      var m__5163__auto____$1 = om.core.will_update["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, this$, next_props, next_state);
      } else {
        throw cljs.core.missing_protocol.call(null, "IWillUpdate.will-update", this$);
      }
    }
  }
};
om.core.IDidUpdate = {};
om.core.did_update = function om$core$did_update(this$, prev_props, prev_state) {
  if (!(this$ == null) && !(this$.om$core$IDidUpdate$did_update$arity$3 == null)) {
    return this$.om$core$IDidUpdate$did_update$arity$3(this$, prev_props, prev_state);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = om.core.did_update[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, this$, prev_props, prev_state);
    } else {
      var m__5163__auto____$1 = om.core.did_update["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, this$, prev_props, prev_state);
      } else {
        throw cljs.core.missing_protocol.call(null, "IDidUpdate.did-update", this$);
      }
    }
  }
};
om.core.IWillReceiveProps = {};
om.core.will_receive_props = function om$core$will_receive_props(this$, next_props) {
  if (!(this$ == null) && !(this$.om$core$IWillReceiveProps$will_receive_props$arity$2 == null)) {
    return this$.om$core$IWillReceiveProps$will_receive_props$arity$2(this$, next_props);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = om.core.will_receive_props[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, this$, next_props);
    } else {
      var m__5163__auto____$1 = om.core.will_receive_props["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, this$, next_props);
      } else {
        throw cljs.core.missing_protocol.call(null, "IWillReceiveProps.will-receive-props", this$);
      }
    }
  }
};
om.core.IRender = {};
om.core.render = function om$core$render(this$) {
  if (!(this$ == null) && !(this$.om$core$IRender$render$arity$1 == null)) {
    return this$.om$core$IRender$render$arity$1(this$);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = om.core.render[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, this$);
    } else {
      var m__5163__auto____$1 = om.core.render["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "IRender.render", this$);
      }
    }
  }
};
om.core.IRenderProps = {};
om.core.render_props = function om$core$render_props(this$, props, state) {
  if (!(this$ == null) && !(this$.om$core$IRenderProps$render_props$arity$3 == null)) {
    return this$.om$core$IRenderProps$render_props$arity$3(this$, props, state);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = om.core.render_props[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, this$, props, state);
    } else {
      var m__5163__auto____$1 = om.core.render_props["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, this$, props, state);
      } else {
        throw cljs.core.missing_protocol.call(null, "IRenderProps.render-props", this$);
      }
    }
  }
};
om.core.IRenderState = {};
om.core.render_state = function om$core$render_state(this$, state) {
  if (!(this$ == null) && !(this$.om$core$IRenderState$render_state$arity$2 == null)) {
    return this$.om$core$IRenderState$render_state$arity$2(this$, state);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = om.core.render_state[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, this$, state);
    } else {
      var m__5163__auto____$1 = om.core.render_state["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, this$, state);
      } else {
        throw cljs.core.missing_protocol.call(null, "IRenderState.render-state", this$);
      }
    }
  }
};
om.core.ICheckState = {};
om.core.IOmSwap = {};
om.core._om_swap_BANG_ = function om$core$_om_swap_BANG_(this$, cursor, korks, f, tag) {
  if (!(this$ == null) && !(this$.om$core$IOmSwap$_om_swap_BANG_$arity$5 == null)) {
    return this$.om$core$IOmSwap$_om_swap_BANG_$arity$5(this$, cursor, korks, f, tag);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = om.core._om_swap_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, this$, cursor, korks, f, tag);
    } else {
      var m__5163__auto____$1 = om.core._om_swap_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, this$, cursor, korks, f, tag);
      } else {
        throw cljs.core.missing_protocol.call(null, "IOmSwap.-om-swap!", this$);
      }
    }
  }
};
om.core.IGetState = {};
om.core._get_state = function om$core$_get_state() {
  var args20476 = [];
  var len__5565__auto___20479 = arguments.length;
  var i__5566__auto___20480 = 0;
  while (true) {
    if (i__5566__auto___20480 < len__5565__auto___20479) {
      args20476.push(arguments[i__5566__auto___20480]);
      var G__20481 = i__5566__auto___20480 + 1;
      i__5566__auto___20480 = G__20481;
      continue;
    } else {
    }
    break;
  }
  var G__20478 = args20476.length;
  switch(G__20478) {
    case 1:
      return om.core._get_state.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return om.core._get_state.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20476.length)].join(""));;
  }
};
om.core._get_state.cljs$core$IFn$_invoke$arity$1 = function(this$) {
  if (!(this$ == null) && !(this$.om$core$IGetState$_get_state$arity$1 == null)) {
    return this$.om$core$IGetState$_get_state$arity$1(this$);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = om.core._get_state[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, this$);
    } else {
      var m__5163__auto____$1 = om.core._get_state["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "IGetState.-get-state", this$);
      }
    }
  }
};
om.core._get_state.cljs$core$IFn$_invoke$arity$2 = function(this$, ks) {
  if (!(this$ == null) && !(this$.om$core$IGetState$_get_state$arity$2 == null)) {
    return this$.om$core$IGetState$_get_state$arity$2(this$, ks);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = om.core._get_state[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, this$, ks);
    } else {
      var m__5163__auto____$1 = om.core._get_state["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, this$, ks);
      } else {
        throw cljs.core.missing_protocol.call(null, "IGetState.-get-state", this$);
      }
    }
  }
};
om.core._get_state.cljs$lang$maxFixedArity = 2;
om.core.IGetRenderState = {};
om.core._get_render_state = function om$core$_get_render_state() {
  var args20485 = [];
  var len__5565__auto___20488 = arguments.length;
  var i__5566__auto___20489 = 0;
  while (true) {
    if (i__5566__auto___20489 < len__5565__auto___20488) {
      args20485.push(arguments[i__5566__auto___20489]);
      var G__20490 = i__5566__auto___20489 + 1;
      i__5566__auto___20489 = G__20490;
      continue;
    } else {
    }
    break;
  }
  var G__20487 = args20485.length;
  switch(G__20487) {
    case 1:
      return om.core._get_render_state.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return om.core._get_render_state.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20485.length)].join(""));;
  }
};
om.core._get_render_state.cljs$core$IFn$_invoke$arity$1 = function(this$) {
  if (!(this$ == null) && !(this$.om$core$IGetRenderState$_get_render_state$arity$1 == null)) {
    return this$.om$core$IGetRenderState$_get_render_state$arity$1(this$);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = om.core._get_render_state[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, this$);
    } else {
      var m__5163__auto____$1 = om.core._get_render_state["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "IGetRenderState.-get-render-state", this$);
      }
    }
  }
};
om.core._get_render_state.cljs$core$IFn$_invoke$arity$2 = function(this$, ks) {
  if (!(this$ == null) && !(this$.om$core$IGetRenderState$_get_render_state$arity$2 == null)) {
    return this$.om$core$IGetRenderState$_get_render_state$arity$2(this$, ks);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = om.core._get_render_state[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, this$, ks);
    } else {
      var m__5163__auto____$1 = om.core._get_render_state["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, this$, ks);
      } else {
        throw cljs.core.missing_protocol.call(null, "IGetRenderState.-get-render-state", this$);
      }
    }
  }
};
om.core._get_render_state.cljs$lang$maxFixedArity = 2;
om.core.ISetState = {};
om.core._set_state_BANG_ = function om$core$_set_state_BANG_() {
  var args20494 = [];
  var len__5565__auto___20497 = arguments.length;
  var i__5566__auto___20498 = 0;
  while (true) {
    if (i__5566__auto___20498 < len__5565__auto___20497) {
      args20494.push(arguments[i__5566__auto___20498]);
      var G__20499 = i__5566__auto___20498 + 1;
      i__5566__auto___20498 = G__20499;
      continue;
    } else {
    }
    break;
  }
  var G__20496 = args20494.length;
  switch(G__20496) {
    case 3:
      return om.core._set_state_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return om.core._set_state_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20494.length)].join(""));;
  }
};
om.core._set_state_BANG_.cljs$core$IFn$_invoke$arity$3 = function(this$, val, render) {
  if (!(this$ == null) && !(this$.om$core$ISetState$_set_state_BANG_$arity$3 == null)) {
    return this$.om$core$ISetState$_set_state_BANG_$arity$3(this$, val, render);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = om.core._set_state_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, this$, val, render);
    } else {
      var m__5163__auto____$1 = om.core._set_state_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, this$, val, render);
      } else {
        throw cljs.core.missing_protocol.call(null, "ISetState.-set-state!", this$);
      }
    }
  }
};
om.core._set_state_BANG_.cljs$core$IFn$_invoke$arity$4 = function(this$, ks, val, render) {
  if (!(this$ == null) && !(this$.om$core$ISetState$_set_state_BANG_$arity$4 == null)) {
    return this$.om$core$ISetState$_set_state_BANG_$arity$4(this$, ks, val, render);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = om.core._set_state_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, this$, ks, val, render);
    } else {
      var m__5163__auto____$1 = om.core._set_state_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, this$, ks, val, render);
      } else {
        throw cljs.core.missing_protocol.call(null, "ISetState.-set-state!", this$);
      }
    }
  }
};
om.core._set_state_BANG_.cljs$lang$maxFixedArity = 4;
om.core.IRenderQueue = {};
om.core._get_queue = function om$core$_get_queue(this$) {
  if (!(this$ == null) && !(this$.om$core$IRenderQueue$_get_queue$arity$1 == null)) {
    return this$.om$core$IRenderQueue$_get_queue$arity$1(this$);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = om.core._get_queue[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, this$);
    } else {
      var m__5163__auto____$1 = om.core._get_queue["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "IRenderQueue.-get-queue", this$);
      }
    }
  }
};
om.core._queue_render_BANG_ = function om$core$_queue_render_BANG_(this$, c) {
  if (!(this$ == null) && !(this$.om$core$IRenderQueue$_queue_render_BANG_$arity$2 == null)) {
    return this$.om$core$IRenderQueue$_queue_render_BANG_$arity$2(this$, c);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = om.core._queue_render_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, this$, c);
    } else {
      var m__5163__auto____$1 = om.core._queue_render_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, this$, c);
      } else {
        throw cljs.core.missing_protocol.call(null, "IRenderQueue.-queue-render!", this$);
      }
    }
  }
};
om.core._empty_queue_BANG_ = function om$core$_empty_queue_BANG_(this$) {
  if (!(this$ == null) && !(this$.om$core$IRenderQueue$_empty_queue_BANG_$arity$1 == null)) {
    return this$.om$core$IRenderQueue$_empty_queue_BANG_$arity$1(this$);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = om.core._empty_queue_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, this$);
    } else {
      var m__5163__auto____$1 = om.core._empty_queue_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "IRenderQueue.-empty-queue!", this$);
      }
    }
  }
};
om.core.IValue = {};
om.core._value = function om$core$_value(x) {
  if (!(x == null) && !(x.om$core$IValue$_value$arity$1 == null)) {
    return x.om$core$IValue$_value$arity$1(x);
  } else {
    var x__5162__auto__ = x == null ? null : x;
    var m__5163__auto__ = om.core._value[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, x);
    } else {
      var m__5163__auto____$1 = om.core._value["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol.call(null, "IValue.-value", x);
      }
    }
  }
};
om.core.IValue["_"] = true;
om.core._value["_"] = function(x) {
  return x;
};
om.core.ICursor = {};
om.core._path = function om$core$_path(cursor) {
  if (!(cursor == null) && !(cursor.om$core$ICursor$_path$arity$1 == null)) {
    return cursor.om$core$ICursor$_path$arity$1(cursor);
  } else {
    var x__5162__auto__ = cursor == null ? null : cursor;
    var m__5163__auto__ = om.core._path[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, cursor);
    } else {
      var m__5163__auto____$1 = om.core._path["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, cursor);
      } else {
        throw cljs.core.missing_protocol.call(null, "ICursor.-path", cursor);
      }
    }
  }
};
om.core._state = function om$core$_state(cursor) {
  if (!(cursor == null) && !(cursor.om$core$ICursor$_state$arity$1 == null)) {
    return cursor.om$core$ICursor$_state$arity$1(cursor);
  } else {
    var x__5162__auto__ = cursor == null ? null : cursor;
    var m__5163__auto__ = om.core._state[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, cursor);
    } else {
      var m__5163__auto____$1 = om.core._state["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, cursor);
      } else {
        throw cljs.core.missing_protocol.call(null, "ICursor.-state", cursor);
      }
    }
  }
};
om.core.IToCursor = {};
om.core._to_cursor = function om$core$_to_cursor() {
  var args20509 = [];
  var len__5565__auto___20512 = arguments.length;
  var i__5566__auto___20513 = 0;
  while (true) {
    if (i__5566__auto___20513 < len__5565__auto___20512) {
      args20509.push(arguments[i__5566__auto___20513]);
      var G__20514 = i__5566__auto___20513 + 1;
      i__5566__auto___20513 = G__20514;
      continue;
    } else {
    }
    break;
  }
  var G__20511 = args20509.length;
  switch(G__20511) {
    case 2:
      return om.core._to_cursor.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return om.core._to_cursor.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20509.length)].join(""));;
  }
};
om.core._to_cursor.cljs$core$IFn$_invoke$arity$2 = function(value, state) {
  if (!(value == null) && !(value.om$core$IToCursor$_to_cursor$arity$2 == null)) {
    return value.om$core$IToCursor$_to_cursor$arity$2(value, state);
  } else {
    var x__5162__auto__ = value == null ? null : value;
    var m__5163__auto__ = om.core._to_cursor[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, value, state);
    } else {
      var m__5163__auto____$1 = om.core._to_cursor["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, value, state);
      } else {
        throw cljs.core.missing_protocol.call(null, "IToCursor.-to-cursor", value);
      }
    }
  }
};
om.core._to_cursor.cljs$core$IFn$_invoke$arity$3 = function(value, state, path) {
  if (!(value == null) && !(value.om$core$IToCursor$_to_cursor$arity$3 == null)) {
    return value.om$core$IToCursor$_to_cursor$arity$3(value, state, path);
  } else {
    var x__5162__auto__ = value == null ? null : value;
    var m__5163__auto__ = om.core._to_cursor[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, value, state, path);
    } else {
      var m__5163__auto____$1 = om.core._to_cursor["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, value, state, path);
      } else {
        throw cljs.core.missing_protocol.call(null, "IToCursor.-to-cursor", value);
      }
    }
  }
};
om.core._to_cursor.cljs$lang$maxFixedArity = 3;
om.core.ICursorDerive = {};
om.core._derive = function om$core$_derive(cursor, derived, state, path) {
  if (!(cursor == null) && !(cursor.om$core$ICursorDerive$_derive$arity$4 == null)) {
    return cursor.om$core$ICursorDerive$_derive$arity$4(cursor, derived, state, path);
  } else {
    var x__5162__auto__ = cursor == null ? null : cursor;
    var m__5163__auto__ = om.core._derive[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, cursor, derived, state, path);
    } else {
      var m__5163__auto____$1 = om.core._derive["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, cursor, derived, state, path);
      } else {
        throw cljs.core.missing_protocol.call(null, "ICursorDerive.-derive", cursor);
      }
    }
  }
};
om.core.ICursorDerive["_"] = true;
om.core._derive["_"] = function(this$, derived, state, path) {
  return om.core.to_cursor.call(null, derived, state, path);
};
om.core.path = function om$core$path(cursor) {
  return om.core._path.call(null, cursor);
};
om.core.value = function om$core$value(cursor) {
  return om.core._value.call(null, cursor);
};
om.core.state = function om$core$state(cursor) {
  return om.core._state.call(null, cursor);
};
om.core.ITransact = {};
om.core._transact_BANG_ = function om$core$_transact_BANG_(cursor, korks, f, tag) {
  if (!(cursor == null) && !(cursor.om$core$ITransact$_transact_BANG_$arity$4 == null)) {
    return cursor.om$core$ITransact$_transact_BANG_$arity$4(cursor, korks, f, tag);
  } else {
    var x__5162__auto__ = cursor == null ? null : cursor;
    var m__5163__auto__ = om.core._transact_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, cursor, korks, f, tag);
    } else {
      var m__5163__auto____$1 = om.core._transact_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, cursor, korks, f, tag);
      } else {
        throw cljs.core.missing_protocol.call(null, "ITransact.-transact!", cursor);
      }
    }
  }
};
om.core.INotify = {};
om.core._listen_BANG_ = function om$core$_listen_BANG_(x, key, tx_listen) {
  if (!(x == null) && !(x.om$core$INotify$_listen_BANG_$arity$3 == null)) {
    return x.om$core$INotify$_listen_BANG_$arity$3(x, key, tx_listen);
  } else {
    var x__5162__auto__ = x == null ? null : x;
    var m__5163__auto__ = om.core._listen_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, x, key, tx_listen);
    } else {
      var m__5163__auto____$1 = om.core._listen_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, x, key, tx_listen);
      } else {
        throw cljs.core.missing_protocol.call(null, "INotify.-listen!", x);
      }
    }
  }
};
om.core._unlisten_BANG_ = function om$core$_unlisten_BANG_(x, key) {
  if (!(x == null) && !(x.om$core$INotify$_unlisten_BANG_$arity$2 == null)) {
    return x.om$core$INotify$_unlisten_BANG_$arity$2(x, key);
  } else {
    var x__5162__auto__ = x == null ? null : x;
    var m__5163__auto__ = om.core._unlisten_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, x, key);
    } else {
      var m__5163__auto____$1 = om.core._unlisten_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, x, key);
      } else {
        throw cljs.core.missing_protocol.call(null, "INotify.-unlisten!", x);
      }
    }
  }
};
om.core._notify_BANG_ = function om$core$_notify_BANG_(x, tx_data, root_cursor) {
  if (!(x == null) && !(x.om$core$INotify$_notify_BANG_$arity$3 == null)) {
    return x.om$core$INotify$_notify_BANG_$arity$3(x, tx_data, root_cursor);
  } else {
    var x__5162__auto__ = x == null ? null : x;
    var m__5163__auto__ = om.core._notify_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, x, tx_data, root_cursor);
    } else {
      var m__5163__auto____$1 = om.core._notify_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, x, tx_data, root_cursor);
      } else {
        throw cljs.core.missing_protocol.call(null, "INotify.-notify!", x);
      }
    }
  }
};
om.core.IRootProperties = {};
om.core._set_property_BANG_ = function om$core$_set_property_BANG_(this$, id, p, val) {
  if (!(this$ == null) && !(this$.om$core$IRootProperties$_set_property_BANG_$arity$4 == null)) {
    return this$.om$core$IRootProperties$_set_property_BANG_$arity$4(this$, id, p, val);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = om.core._set_property_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, this$, id, p, val);
    } else {
      var m__5163__auto____$1 = om.core._set_property_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, this$, id, p, val);
      } else {
        throw cljs.core.missing_protocol.call(null, "IRootProperties.-set-property!", this$);
      }
    }
  }
};
om.core._remove_property_BANG_ = function om$core$_remove_property_BANG_(this$, id, p) {
  if (!(this$ == null) && !(this$.om$core$IRootProperties$_remove_property_BANG_$arity$3 == null)) {
    return this$.om$core$IRootProperties$_remove_property_BANG_$arity$3(this$, id, p);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = om.core._remove_property_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, this$, id, p);
    } else {
      var m__5163__auto____$1 = om.core._remove_property_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, this$, id, p);
      } else {
        throw cljs.core.missing_protocol.call(null, "IRootProperties.-remove-property!", this$);
      }
    }
  }
};
om.core._remove_properties_BANG_ = function om$core$_remove_properties_BANG_(this$, id) {
  if (!(this$ == null) && !(this$.om$core$IRootProperties$_remove_properties_BANG_$arity$2 == null)) {
    return this$.om$core$IRootProperties$_remove_properties_BANG_$arity$2(this$, id);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = om.core._remove_properties_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, this$, id);
    } else {
      var m__5163__auto____$1 = om.core._remove_properties_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, this$, id);
      } else {
        throw cljs.core.missing_protocol.call(null, "IRootProperties.-remove-properties!", this$);
      }
    }
  }
};
om.core._get_property = function om$core$_get_property(this$, id, p) {
  if (!(this$ == null) && !(this$.om$core$IRootProperties$_get_property$arity$3 == null)) {
    return this$.om$core$IRootProperties$_get_property$arity$3(this$, id, p);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = om.core._get_property[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, this$, id, p);
    } else {
      var m__5163__auto____$1 = om.core._get_property["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, this$, id, p);
      } else {
        throw cljs.core.missing_protocol.call(null, "IRootProperties.-get-property", this$);
      }
    }
  }
};
om.core.IRootKey = {};
om.core._root_key = function om$core$_root_key(cursor) {
  if (!(cursor == null) && !(cursor.om$core$IRootKey$_root_key$arity$1 == null)) {
    return cursor.om$core$IRootKey$_root_key$arity$1(cursor);
  } else {
    var x__5162__auto__ = cursor == null ? null : cursor;
    var m__5163__auto__ = om.core._root_key[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, cursor);
    } else {
      var m__5163__auto____$1 = om.core._root_key["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, cursor);
      } else {
        throw cljs.core.missing_protocol.call(null, "IRootKey.-root-key", cursor);
      }
    }
  }
};
om.core.IAdapt = {};
om.core._adapt = function om$core$_adapt(this$, other) {
  if (!(this$ == null) && !(this$.om$core$IAdapt$_adapt$arity$2 == null)) {
    return this$.om$core$IAdapt$_adapt$arity$2(this$, other);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = om.core._adapt[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, this$, other);
    } else {
      var m__5163__auto____$1 = om.core._adapt["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, this$, other);
      } else {
        throw cljs.core.missing_protocol.call(null, "IAdapt.-adapt", this$);
      }
    }
  }
};
om.core.IAdapt["_"] = true;
om.core._adapt["_"] = function(_, other) {
  return other;
};
om.core.adapt = function om$core$adapt(x, other) {
  return om.core._adapt.call(null, x, other);
};
om.core.IOmRef = {};
om.core._add_dep_BANG_ = function om$core$_add_dep_BANG_(this$, c) {
  if (!(this$ == null) && !(this$.om$core$IOmRef$_add_dep_BANG_$arity$2 == null)) {
    return this$.om$core$IOmRef$_add_dep_BANG_$arity$2(this$, c);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = om.core._add_dep_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, this$, c);
    } else {
      var m__5163__auto____$1 = om.core._add_dep_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, this$, c);
      } else {
        throw cljs.core.missing_protocol.call(null, "IOmRef.-add-dep!", this$);
      }
    }
  }
};
om.core._remove_dep_BANG_ = function om$core$_remove_dep_BANG_(this$, c) {
  if (!(this$ == null) && !(this$.om$core$IOmRef$_remove_dep_BANG_$arity$2 == null)) {
    return this$.om$core$IOmRef$_remove_dep_BANG_$arity$2(this$, c);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = om.core._remove_dep_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, this$, c);
    } else {
      var m__5163__auto____$1 = om.core._remove_dep_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, this$, c);
      } else {
        throw cljs.core.missing_protocol.call(null, "IOmRef.-remove-dep!", this$);
      }
    }
  }
};
om.core._refresh_deps_BANG_ = function om$core$_refresh_deps_BANG_(this$) {
  if (!(this$ == null) && !(this$.om$core$IOmRef$_refresh_deps_BANG_$arity$1 == null)) {
    return this$.om$core$IOmRef$_refresh_deps_BANG_$arity$1(this$);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = om.core._refresh_deps_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, this$);
    } else {
      var m__5163__auto____$1 = om.core._refresh_deps_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "IOmRef.-refresh-deps!", this$);
      }
    }
  }
};
om.core._get_deps = function om$core$_get_deps(this$) {
  if (!(this$ == null) && !(this$.om$core$IOmRef$_get_deps$arity$1 == null)) {
    return this$.om$core$IOmRef$_get_deps$arity$1(this$);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = om.core._get_deps[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, this$);
    } else {
      var m__5163__auto____$1 = om.core._get_deps["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "IOmRef.-get-deps", this$);
      }
    }
  }
};
om.core.transact_STAR_ = function om$core$transact_STAR_(state, cursor, korks, f, tag) {
  var old_state = cljs.core.deref.call(null, state);
  var path = cljs.core.into.call(null, om.core.path.call(null, cursor), korks);
  var ret = (!(state == null) ? false || state.om$core$IOmSwap$ ? true : !state.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmSwap, state) : false : cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmSwap, state)) ? om.core._om_swap_BANG_.call(null, state, cursor, korks, f, tag) : cljs.core.empty_QMARK_.call(null, path) ? cljs.core.swap_BANG_.call(null, state, f) : cljs.core.swap_BANG_.call(null, state, cljs.core.update_in, path, f);
  if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("om.core", "defer", "om.core/defer", -1038866178))) {
    return null;
  } else {
    var tx_data = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "old-value", "old-value", 862546795), cljs.core.get_in.call(null, old_state, path), new cljs.core.Keyword(null, "new-value", "new-value", 1087038368), cljs.core.get_in.call(null, cljs.core.deref.call(null, state), path), new cljs.core.Keyword(null, "old-state", "old-state", 1039580704), old_state, new cljs.core.Keyword(null, "new-state", "new-state", 
    -490349212), cljs.core.deref.call(null, state)], null);
    if (!(tag == null)) {
      return om.core.notify_STAR_.call(null, cursor, cljs.core.assoc.call(null, tx_data, new cljs.core.Keyword(null, "tag", "tag", -1290361223), tag));
    } else {
      return om.core.notify_STAR_.call(null, cursor, tx_data);
    }
  }
};
om.core.cursor_QMARK_ = function om$core$cursor_QMARK_(x) {
  if (!(x == null)) {
    if (false || x.om$core$ICursor$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, x);
  }
};
om.core.component_QMARK_ = function om$core$component_QMARK_(x) {
  return x["isOmComponent"];
};
om.core.children = function om$core$children(node) {
  var c = node.props.children;
  if (cljs.core.ifn_QMARK_.call(null, c)) {
    return node.props.children = c.call(null, node);
  } else {
    return c;
  }
};
om.core.get_props = function om$core$get_props() {
  var args20534 = [];
  var len__5565__auto___20538 = arguments.length;
  var i__5566__auto___20539 = 0;
  while (true) {
    if (i__5566__auto___20539 < len__5565__auto___20538) {
      args20534.push(arguments[i__5566__auto___20539]);
      var G__20540 = i__5566__auto___20539 + 1;
      i__5566__auto___20539 = G__20540;
      continue;
    } else {
    }
    break;
  }
  var G__20536 = args20534.length;
  switch(G__20536) {
    case 1:
      return om.core.get_props.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return om.core.get_props.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20534.length)].join(""));;
  }
};
om.core.get_props.cljs$core$IFn$_invoke$arity$1 = function(x) {
  if (cljs.core.truth_(om.core.component_QMARK_.call(null, x))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))))].join(""));
  }
  return x.props["__om_cursor"];
};
om.core.get_props.cljs$core$IFn$_invoke$arity$2 = function(x, korks) {
  if (cljs.core.truth_(om.core.component_QMARK_.call(null, x))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))))].join(""));
  }
  var korks__$1 = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
  var G__20537 = x.props["__om_cursor"];
  var G__20537__$1 = cljs.core.seq.call(null, korks__$1) ? cljs.core.get_in.call(null, G__20537, korks__$1) : G__20537;
  return G__20537__$1;
};
om.core.get_props.cljs$lang$maxFixedArity = 2;
om.core.get_state = function om$core$get_state() {
  var args20542 = [];
  var len__5565__auto___20545 = arguments.length;
  var i__5566__auto___20546 = 0;
  while (true) {
    if (i__5566__auto___20546 < len__5565__auto___20545) {
      args20542.push(arguments[i__5566__auto___20546]);
      var G__20547 = i__5566__auto___20546 + 1;
      i__5566__auto___20546 = G__20547;
      continue;
    } else {
    }
    break;
  }
  var G__20544 = args20542.length;
  switch(G__20544) {
    case 1:
      return om.core.get_state.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return om.core.get_state.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20542.length)].join(""));;
  }
};
om.core.get_state.cljs$core$IFn$_invoke$arity$1 = function(owner) {
  if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
  }
  return om.core._get_state.call(null, owner);
};
om.core.get_state.cljs$core$IFn$_invoke$arity$2 = function(owner, korks) {
  if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
  }
  var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
  return om.core._get_state.call(null, owner, ks);
};
om.core.get_state.cljs$lang$maxFixedArity = 2;
om.core.get_shared = function om$core$get_shared() {
  var args20549 = [];
  var len__5565__auto___20552 = arguments.length;
  var i__5566__auto___20553 = 0;
  while (true) {
    if (i__5566__auto___20553 < len__5565__auto___20552) {
      args20549.push(arguments[i__5566__auto___20553]);
      var G__20554 = i__5566__auto___20553 + 1;
      i__5566__auto___20553 = G__20554;
      continue;
    } else {
    }
    break;
  }
  var G__20551 = args20549.length;
  switch(G__20551) {
    case 1:
      return om.core.get_shared.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return om.core.get_shared.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20549.length)].join(""));;
  }
};
om.core.get_shared.cljs$core$IFn$_invoke$arity$1 = function(owner) {
  if (owner == null) {
    return null;
  } else {
    return owner.props["__om_shared"];
  }
};
om.core.get_shared.cljs$core$IFn$_invoke$arity$2 = function(owner, korks) {
  if (!cljs.core.sequential_QMARK_.call(null, korks)) {
    return cljs.core.get.call(null, om.core.get_shared.call(null, owner), korks);
  } else {
    if (cljs.core.empty_QMARK_.call(null, korks)) {
      return om.core.get_shared.call(null, owner);
    } else {
      return cljs.core.get_in.call(null, om.core.get_shared.call(null, owner), korks);
    }
  }
};
om.core.get_shared.cljs$lang$maxFixedArity = 2;
om.core.merge_pending_state = function om$core$merge_pending_state(owner) {
  var state = owner.state;
  var temp__4425__auto__ = state["__om_pending_state"];
  if (cljs.core.truth_(temp__4425__auto__)) {
    var pending_state = temp__4425__auto__;
    var G__20557 = state;
    G__20557["__om_prev_state"] = state["__om_state"];
    G__20557["__om_state"] = pending_state;
    G__20557["__om_pending_state"] = null;
    return G__20557;
  } else {
    return null;
  }
};
om.core.merge_props_state = function om$core$merge_props_state() {
  var args20558 = [];
  var len__5565__auto___20561 = arguments.length;
  var i__5566__auto___20562 = 0;
  while (true) {
    if (i__5566__auto___20562 < len__5565__auto___20561) {
      args20558.push(arguments[i__5566__auto___20562]);
      var G__20563 = i__5566__auto___20562 + 1;
      i__5566__auto___20562 = G__20563;
      continue;
    } else {
    }
    break;
  }
  var G__20560 = args20558.length;
  switch(G__20560) {
    case 1:
      return om.core.merge_props_state.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return om.core.merge_props_state.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20558.length)].join(""));;
  }
};
om.core.merge_props_state.cljs$core$IFn$_invoke$arity$1 = function(owner) {
  return om.core.merge_props_state.call(null, owner, null);
};
om.core.merge_props_state.cljs$core$IFn$_invoke$arity$2 = function(owner, props) {
  var props__$1 = function() {
    var or__4526__auto__ = props;
    if (cljs.core.truth_(or__4526__auto__)) {
      return or__4526__auto__;
    } else {
      return owner.props;
    }
  }();
  var temp__4425__auto__ = props__$1["__om_state"];
  if (cljs.core.truth_(temp__4425__auto__)) {
    var props_state = temp__4425__auto__;
    var state = owner.state;
    state["__om_pending_state"] = cljs.core.merge.call(null, function() {
      var or__4526__auto__ = state["__om_pending_state"];
      if (cljs.core.truth_(or__4526__auto__)) {
        return or__4526__auto__;
      } else {
        return state["__om_state"];
      }
    }(), props_state);
    return props__$1["__om_state"] = null;
  } else {
    return null;
  }
};
om.core.merge_props_state.cljs$lang$maxFixedArity = 2;
om.core.ref_changed_QMARK_ = function om$core$ref_changed_QMARK_(ref) {
  var val = om.core.value.call(null, ref);
  var val_SINGLEQUOTE_ = cljs.core.get_in.call(null, cljs.core.deref.call(null, om.core.state.call(null, ref)), om.core.path.call(null, ref), new cljs.core.Keyword("om.core", "not-found", "om.core/not-found", 1869894275));
  return cljs.core.not_EQ_.call(null, val, val_SINGLEQUOTE_);
};
om.core.update_refs = function om$core$update_refs(c) {
  var cstate = c.state;
  var refs = cstate["__om_refs"];
  if (cljs.core.count.call(null, refs) === 0) {
    return null;
  } else {
    return cstate["__om_refs"] = cljs.core.into.call(null, cljs.core.PersistentHashSet.EMPTY, cljs.core.filter.call(null, cljs.core.nil_QMARK_, cljs.core.map.call(null, function(cstate, refs) {
      return function(ref) {
        var ref_val = om.core.value.call(null, ref);
        var ref_state = om.core.state.call(null, ref);
        var ref_path = om.core.path.call(null, ref);
        var ref_val_SINGLEQUOTE_ = cljs.core.get_in.call(null, cljs.core.deref.call(null, ref_state), ref_path, new cljs.core.Keyword("om.core", "not-found", "om.core/not-found", 1869894275));
        if (cljs.core.not_EQ_.call(null, ref_val, new cljs.core.Keyword("om.core", "not-found", "om.core/not-found", 1869894275))) {
          if (cljs.core.not_EQ_.call(null, ref_val, ref_val_SINGLEQUOTE_)) {
            return om.core.adapt.call(null, ref, om.core.to_cursor.call(null, ref_val_SINGLEQUOTE_, ref_state, ref_path));
          } else {
            return ref;
          }
        } else {
          return null;
        }
      };
    }(cstate, refs), refs)));
  }
};
om.core.pure_methods = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "componentDidUpdate", "componentDidUpdate", -1983477981), new cljs.core.Keyword(null, "isOmComponent", "isOmComponent", -2070015162), new cljs.core.Keyword(null, "componentWillUnmount", "componentWillUnmount", 1573788814), new cljs.core.Keyword(null, "componentWillReceiveProps", "componentWillReceiveProps", 559988974), new cljs.core.Keyword(null, "shouldComponentUpdate", "shouldComponentUpdate", 1795750960), 
new cljs.core.Keyword(null, "render", "render", -1408033454), new cljs.core.Keyword(null, "componentWillUpdate", "componentWillUpdate", 657390932), new cljs.core.Keyword(null, "getInitialState", "getInitialState", 1541760916), new cljs.core.Keyword(null, "componentDidMount", "componentDidMount", 955710936), new cljs.core.Keyword(null, "getDisplayName", "getDisplayName", 1324429466), new cljs.core.Keyword(null, "componentWillMount", "componentWillMount", -285327619)], [function(prev_props, prev_state) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (!(c == null) ? false || c.om$core$IDidUpdate$ ? true : !c.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, c) : false : cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, c)) {
    var state_20587 = this$.state;
    om.core.did_update.call(null, c, om.core.get_props.call(null, {"props":prev_props, "isOmComponent":true}), function() {
      var or__4526__auto__ = state_20587["__om_prev_state"];
      if (cljs.core.truth_(or__4526__auto__)) {
        return or__4526__auto__;
      } else {
        return state_20587["__om_state"];
      }
    }());
  } else {
  }
  return this$.state["__om_prev_state"] = null;
}, true, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var cursor = this$.props["__om_cursor"];
  if (!(c == null) ? false || c.om$core$IWillUnmount$ ? true : !c.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, c) : false : cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, c)) {
    om.core.will_unmount.call(null, c);
  } else {
  }
  var temp__4425__auto__ = cljs.core.seq.call(null, this$.state["__om_refs"]);
  if (temp__4425__auto__) {
    var refs = temp__4425__auto__;
    var seq__20568 = cljs.core.seq.call(null, refs);
    var chunk__20569 = null;
    var count__20570 = 0;
    var i__20571 = 0;
    while (true) {
      if (i__20571 < count__20570) {
        var ref = cljs.core._nth.call(null, chunk__20569, i__20571);
        om.core.unobserve.call(null, this$, ref);
        var G__20588 = seq__20568;
        var G__20589 = chunk__20569;
        var G__20590 = count__20570;
        var G__20591 = i__20571 + 1;
        seq__20568 = G__20588;
        chunk__20569 = G__20589;
        count__20570 = G__20590;
        i__20571 = G__20591;
        continue;
      } else {
        var temp__4425__auto____$1 = cljs.core.seq.call(null, seq__20568);
        if (temp__4425__auto____$1) {
          var seq__20568__$1 = temp__4425__auto____$1;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__20568__$1)) {
            var c__5310__auto__ = cljs.core.chunk_first.call(null, seq__20568__$1);
            var G__20592 = cljs.core.chunk_rest.call(null, seq__20568__$1);
            var G__20593 = c__5310__auto__;
            var G__20594 = cljs.core.count.call(null, c__5310__auto__);
            var G__20595 = 0;
            seq__20568 = G__20592;
            chunk__20569 = G__20593;
            count__20570 = G__20594;
            i__20571 = G__20595;
            continue;
          } else {
            var ref = cljs.core.first.call(null, seq__20568__$1);
            om.core.unobserve.call(null, this$, ref);
            var G__20596 = cljs.core.next.call(null, seq__20568__$1);
            var G__20597 = null;
            var G__20598 = 0;
            var G__20599 = 0;
            seq__20568 = G__20596;
            chunk__20569 = G__20597;
            count__20570 = G__20598;
            i__20571 = G__20599;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  } else {
    return null;
  }
}, function(next_props) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (!(c == null) ? false || c.om$core$IWillReceiveProps$ ? true : !c.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillReceiveProps, c) : false : cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillReceiveProps, c)) {
    return om.core.will_receive_props.call(null, c, om.core.get_props.call(null, {"props":next_props, "isOmComponent":true}));
  } else {
    return null;
  }
}, function(next_props, next_state) {
  var this$ = this;
  var props = this$.props;
  var state = this$.state;
  var c = om.core.children.call(null, this$);
  om.core.merge_props_state.call(null, this$, next_props);
  if (!(c == null) ? false || c.om$core$IShouldUpdate$ ? true : !c.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_.call(null, om.core.IShouldUpdate, c) : false : cljs.core.native_satisfies_QMARK_.call(null, om.core.IShouldUpdate, c)) {
    return om.core.should_update.call(null, c, om.core.get_props.call(null, {"props":next_props, "isOmComponent":true}), om.core._get_state.call(null, this$));
  } else {
    var cursor = props["__om_cursor"];
    var next_cursor = next_props["__om_cursor"];
    if (cljs.core.not_EQ_.call(null, om.core._value.call(null, cursor), om.core._value.call(null, next_cursor))) {
      return true;
    } else {
      if (cljs.core.truth_(function() {
        var and__4514__auto__ = om.core.cursor_QMARK_.call(null, cursor);
        if (cljs.core.truth_(and__4514__auto__)) {
          var and__4514__auto____$1 = om.core.cursor_QMARK_.call(null, next_cursor);
          if (cljs.core.truth_(and__4514__auto____$1)) {
            return cljs.core.not_EQ_.call(null, om.core._path.call(null, cursor), om.core._path.call(null, next_cursor));
          } else {
            return and__4514__auto____$1;
          }
        } else {
          return and__4514__auto__;
        }
      }())) {
        return true;
      } else {
        if (cljs.core.not_EQ_.call(null, om.core._get_state.call(null, this$), om.core._get_render_state.call(null, this$))) {
          return true;
        } else {
          if (cljs.core.truth_(function() {
            var and__4514__auto__ = !(cljs.core.count.call(null, state["__om_refs"]) === 0);
            if (and__4514__auto__) {
              return cljs.core.some.call(null, function(and__4514__auto__, cursor, next_cursor, props, state, c, this$) {
                return function(p1__20565_SHARP_) {
                  return om.core.ref_changed_QMARK_.call(null, p1__20565_SHARP_);
                };
              }(and__4514__auto__, cursor, next_cursor, props, state, c, this$), state["__om_refs"]);
            } else {
              return and__4514__auto__;
            }
          }())) {
            return true;
          } else {
            if (!(props["__om_index"] === next_props["__om_index"])) {
              return true;
            } else {
              return false;
            }
          }
        }
      }
    }
  }
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var _STAR_parent_STAR_20574 = om.core._STAR_parent_STAR_;
  var _STAR_state_STAR_20575 = om.core._STAR_state_STAR_;
  var _STAR_instrument_STAR_20576 = om.core._STAR_instrument_STAR_;
  var _STAR_descriptor_STAR_20577 = om.core._STAR_descriptor_STAR_;
  var _STAR_root_key_STAR_20578 = om.core._STAR_root_key_STAR_;
  om.core._STAR_parent_STAR_ = this$;
  om.core._STAR_state_STAR_ = props["__om_app_state"];
  om.core._STAR_instrument_STAR_ = props["__om_instrument"];
  om.core._STAR_descriptor_STAR_ = props["__om_descriptor"];
  om.core._STAR_root_key_STAR_ = props["__om_root_key"];
  try {
    if (!(c == null) ? false || c.om$core$IRender$ ? true : !c.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, c) : false : cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, c)) {
      return om.core.render.call(null, c);
    } else {
      if (!(c == null) ? false || c.om$core$IRenderProps$ ? true : !c.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderProps, c) : false : cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderProps, c)) {
        return om.core.render_props.call(null, c, props["__om_cursor"], om.core.get_state.call(null, this$));
      } else {
        if (!(c == null) ? false || c.om$core$IRenderState$ ? true : !c.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, c) : false : cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, c)) {
          return om.core.render_state.call(null, c, om.core.get_state.call(null, this$));
        } else {
          return c;
        }
      }
    }
  } finally {
    om.core._STAR_root_key_STAR_ = _STAR_root_key_STAR_20578;
    om.core._STAR_descriptor_STAR_ = _STAR_descriptor_STAR_20577;
    om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_20576;
    om.core._STAR_state_STAR_ = _STAR_state_STAR_20575;
    om.core._STAR_parent_STAR_ = _STAR_parent_STAR_20574;
  }
}, function(next_props, next_state) {
  var this$ = this;
  var c_20600 = om.core.children.call(null, this$);
  if (!(c_20600 == null) ? false || c_20600.om$core$IWillUpdate$ ? true : !c_20600.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, c_20600) : false : cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, c_20600)) {
    var state_20601 = this$.state;
    om.core.will_update.call(null, c_20600, om.core.get_props.call(null, {"props":next_props, "isOmComponent":true}), om.core._get_state.call(null, this$));
  } else {
  }
  om.core.merge_pending_state.call(null, this$);
  return om.core.update_refs.call(null, this$);
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var istate = function() {
    var or__4526__auto__ = props["__om_init_state"];
    if (cljs.core.truth_(or__4526__auto__)) {
      return or__4526__auto__;
    } else {
      return cljs.core.PersistentArrayMap.EMPTY;
    }
  }();
  var id = (new cljs.core.Keyword("om.core", "id", "om.core/id", 299074693)).cljs$core$IFn$_invoke$arity$1(istate);
  var ret = {"__om_id":function() {
    var or__4526__auto__ = id;
    if (cljs.core.truth_(or__4526__auto__)) {
      return or__4526__auto__;
    } else {
      return goog.ui.IdGenerator.getInstance().getNextUniqueId();
    }
  }(), "__om_state":cljs.core.merge.call(null, (!(c == null) ? false || c.om$core$IInitState$ ? true : !c.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, c) : false : cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, c)) ? om.core.init_state.call(null, c) : null, cljs.core.dissoc.call(null, istate, new cljs.core.Keyword("om.core", "id", "om.core/id", 299074693)))};
  props["__om_init_state"] = null;
  return ret;
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var cursor = this$.props["__om_cursor"];
  if (!(c == null) ? false || c.om$core$IDidMount$ ? true : !c.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidMount, c) : false : cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidMount, c)) {
    return om.core.did_mount.call(null, c);
  } else {
    return null;
  }
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (!(c == null) ? false || c.om$core$IDisplayName$ ? true : !c.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_.call(null, om.core.IDisplayName, c) : false : cljs.core.native_satisfies_QMARK_.call(null, om.core.IDisplayName, c)) {
    return om.core.display_name.call(null, c);
  } else {
    return null;
  }
}, function() {
  var this$ = this;
  om.core.merge_props_state.call(null, this$);
  var c_20602 = om.core.children.call(null, this$);
  if (!(c_20602 == null) ? false || c_20602.om$core$IWillMount$ ? true : !c_20602.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, c_20602) : false : cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, c_20602)) {
    om.core.will_mount.call(null, c_20602);
  } else {
  }
  return om.core.merge_pending_state.call(null, this$);
}]);
om.core.specify_state_methods_BANG_ = function om$core$specify_state_methods_BANG_(obj) {
  var x20604 = obj;
  x20604.om$core$ISetState$ = true;
  x20604.om$core$ISetState$_set_state_BANG_$arity$3 = function(x20604) {
    return function(this$, val, render) {
      var this$__$1 = this;
      var props = this$__$1.props;
      var app_state = props["__om_app_state"];
      this$__$1.state["__om_pending_state"] = val;
      if (cljs.core.truth_(function() {
        var and__4514__auto__ = !(app_state == null);
        if (and__4514__auto__) {
          return render;
        } else {
          return and__4514__auto__;
        }
      }())) {
        return om.core._queue_render_BANG_.call(null, app_state, this$__$1);
      } else {
        return null;
      }
    };
  }(x20604);
  x20604.om$core$ISetState$_set_state_BANG_$arity$4 = function(x20604) {
    return function(this$, ks, val, render) {
      var this$__$1 = this;
      var props = this$__$1.props;
      var state = this$__$1.state;
      var pstate = om.core._get_state.call(null, this$__$1);
      var app_state = props["__om_app_state"];
      state["__om_pending_state"] = cljs.core.assoc_in.call(null, pstate, ks, val);
      if (cljs.core.truth_(function() {
        var and__4514__auto__ = !(app_state == null);
        if (and__4514__auto__) {
          return render;
        } else {
          return and__4514__auto__;
        }
      }())) {
        return om.core._queue_render_BANG_.call(null, app_state, this$__$1);
      } else {
        return null;
      }
    };
  }(x20604);
  x20604.om$core$IGetRenderState$ = true;
  x20604.om$core$IGetRenderState$_get_render_state$arity$1 = function(x20604) {
    return function(this$) {
      var this$__$1 = this;
      return this$__$1.state["__om_state"];
    };
  }(x20604);
  x20604.om$core$IGetRenderState$_get_render_state$arity$2 = function(x20604) {
    return function(this$, ks) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, om.core._get_render_state.call(null, this$__$1), ks);
    };
  }(x20604);
  x20604.om$core$IGetState$ = true;
  x20604.om$core$IGetState$_get_state$arity$1 = function(x20604) {
    return function(this$) {
      var this$__$1 = this;
      var state = this$__$1.state;
      var or__4526__auto__ = state["__om_pending_state"];
      if (cljs.core.truth_(or__4526__auto__)) {
        return or__4526__auto__;
      } else {
        return state["__om_state"];
      }
    };
  }(x20604);
  x20604.om$core$IGetState$_get_state$arity$2 = function(x20604) {
    return function(this$, ks) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, om.core._get_state.call(null, this$__$1), ks);
    };
  }(x20604);
  return x20604;
};
om.core.pure_descriptor = om.core.specify_state_methods_BANG_.call(null, cljs.core.clj__GT_js.call(null, om.core.pure_methods));
om.core.react_id = function om$core$react_id(x) {
  var id = goog.dom.dataset.get(om.core.get_node.call(null, x), "reactid");
  if (cljs.core.truth_(id)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "id", "id", 252129435, null)))].join(""));
  }
  return id;
};
om.core.get_gstate = function om$core$get_gstate(owner) {
  return owner.props["__om_app_state"];
};
om.core.no_local_merge_pending_state = function om$core$no_local_merge_pending_state(owner) {
  var gstate = om.core.get_gstate.call(null, owner);
  var spath = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state-map", "state-map", -1313872128), om.core.react_id.call(null, owner)], null);
  var states = cljs.core.get_in.call(null, cljs.core.deref.call(null, gstate), spath);
  if (cljs.core.truth_((new cljs.core.Keyword(null, "pending-state", "pending-state", 1525896973)).cljs$core$IFn$_invoke$arity$1(states))) {
    return cljs.core.swap_BANG_.call(null, gstate, cljs.core.update_in, spath, function(gstate, spath, states) {
      return function(states__$1) {
        return cljs.core.dissoc.call(null, cljs.core.assoc.call(null, cljs.core.assoc.call(null, states__$1, new cljs.core.Keyword(null, "previous-state", "previous-state", 1888227923), (new cljs.core.Keyword(null, "render-state", "render-state", 2053902270)).cljs$core$IFn$_invoke$arity$1(states__$1)), new cljs.core.Keyword(null, "render-state", "render-state", 2053902270), cljs.core.merge.call(null, (new cljs.core.Keyword(null, "render-state", "render-state", 2053902270)).cljs$core$IFn$_invoke$arity$1(states__$1), 
        (new cljs.core.Keyword(null, "pending-state", "pending-state", 1525896973)).cljs$core$IFn$_invoke$arity$1(states__$1))), new cljs.core.Keyword(null, "pending-state", "pending-state", 1525896973));
      };
    }(gstate, spath, states));
  } else {
    return null;
  }
};
om.core.no_local_state_methods = cljs.core.assoc.call(null, om.core.pure_methods, new cljs.core.Keyword(null, "getInitialState", "getInitialState", 1541760916), function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var istate = function() {
    var or__4526__auto__ = props["__om_init_state"];
    if (cljs.core.truth_(or__4526__auto__)) {
      return or__4526__auto__;
    } else {
      return cljs.core.PersistentArrayMap.EMPTY;
    }
  }();
  var om_id = function() {
    var or__4526__auto__ = (new cljs.core.Keyword("om.core", "id", "om.core/id", 299074693)).cljs$core$IFn$_invoke$arity$1(istate);
    if (cljs.core.truth_(or__4526__auto__)) {
      return or__4526__auto__;
    } else {
      return goog.ui.IdGenerator.getInstance().getNextUniqueId();
    }
  }();
  var state = cljs.core.merge.call(null, cljs.core.dissoc.call(null, istate, new cljs.core.Keyword("om.core", "id", "om.core/id", 299074693)), (!(c == null) ? false || c.om$core$IInitState$ ? true : !c.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, c) : false : cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, c)) ? om.core.init_state.call(null, c) : null);
  props["__om_init_state"] = null;
  return {"__om_id":om_id};
}, new cljs.core.Keyword(null, "componentDidMount", "componentDidMount", 955710936), function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var cursor = this$.props["__om_cursor"];
  var spath = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state-map", "state-map", -1313872128), om.core.react_id.call(null, this$), new cljs.core.Keyword(null, "render-state", "render-state", 2053902270)], null);
  cljs.core.swap_BANG_.call(null, om.core.get_gstate.call(null, this$), cljs.core.assoc_in, spath, om.core.state);
  if (!(c == null) ? false || c.om$core$IDidMount$ ? true : !c.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidMount, c) : false : cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidMount, c)) {
    return om.core.did_mount.call(null, c);
  } else {
    return null;
  }
}, new cljs.core.Keyword(null, "componentWillMount", "componentWillMount", -285327619), function() {
  var this$ = this;
  om.core.merge_props_state.call(null, this$);
  var c_20615 = om.core.children.call(null, this$);
  if (!(c_20615 == null) ? false || c_20615.om$core$IWillMount$ ? true : !c_20615.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, c_20615) : false : cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, c_20615)) {
    om.core.will_mount.call(null, c_20615);
  } else {
  }
  if (cljs.core.truth_(om.core.mounted_QMARK_.call(null, this$))) {
    return om.core.no_local_merge_pending_state.call(null, this$);
  } else {
    return null;
  }
}, new cljs.core.Keyword(null, "componentWillUnmount", "componentWillUnmount", 1573788814), function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (!(c == null) ? false || c.om$core$IWillUnmount$ ? true : !c.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, c) : false : cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, c)) {
    om.core.will_unmount.call(null, c);
  } else {
  }
  cljs.core.swap_BANG_.call(null, om.core.get_gstate.call(null, this$), cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state-map", "state-map", -1313872128)], null), cljs.core.dissoc, om.core.react_id.call(null, this$));
  var temp__4425__auto__ = cljs.core.seq.call(null, this$.state["__om_refs"]);
  if (temp__4425__auto__) {
    var refs = temp__4425__auto__;
    var seq__20609 = cljs.core.seq.call(null, refs);
    var chunk__20610 = null;
    var count__20611 = 0;
    var i__20612 = 0;
    while (true) {
      if (i__20612 < count__20611) {
        var ref = cljs.core._nth.call(null, chunk__20610, i__20612);
        om.core.unobserve.call(null, this$, ref);
        var G__20616 = seq__20609;
        var G__20617 = chunk__20610;
        var G__20618 = count__20611;
        var G__20619 = i__20612 + 1;
        seq__20609 = G__20616;
        chunk__20610 = G__20617;
        count__20611 = G__20618;
        i__20612 = G__20619;
        continue;
      } else {
        var temp__4425__auto____$1 = cljs.core.seq.call(null, seq__20609);
        if (temp__4425__auto____$1) {
          var seq__20609__$1 = temp__4425__auto____$1;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__20609__$1)) {
            var c__5310__auto__ = cljs.core.chunk_first.call(null, seq__20609__$1);
            var G__20620 = cljs.core.chunk_rest.call(null, seq__20609__$1);
            var G__20621 = c__5310__auto__;
            var G__20622 = cljs.core.count.call(null, c__5310__auto__);
            var G__20623 = 0;
            seq__20609 = G__20620;
            chunk__20610 = G__20621;
            count__20611 = G__20622;
            i__20612 = G__20623;
            continue;
          } else {
            var ref = cljs.core.first.call(null, seq__20609__$1);
            om.core.unobserve.call(null, this$, ref);
            var G__20624 = cljs.core.next.call(null, seq__20609__$1);
            var G__20625 = null;
            var G__20626 = 0;
            var G__20627 = 0;
            seq__20609 = G__20624;
            chunk__20610 = G__20625;
            count__20611 = G__20626;
            i__20612 = G__20627;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  } else {
    return null;
  }
}, new cljs.core.Keyword(null, "componentWillUpdate", "componentWillUpdate", 657390932), function(next_props, next_state) {
  var this$ = this;
  var props_20628 = this$.props;
  var c_20629 = om.core.children.call(null, this$);
  if (!(c_20629 == null) ? false || c_20629.om$core$IWillUpdate$ ? true : !c_20629.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, c_20629) : false : cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, c_20629)) {
    var state_20630 = this$.state;
    om.core.will_update.call(null, c_20629, om.core.get_props.call(null, {"props":next_props, "isOmComponent":true}), om.core._get_state.call(null, this$));
  } else {
  }
  om.core.no_local_merge_pending_state.call(null, this$);
  return om.core.update_refs.call(null, this$);
}, new cljs.core.Keyword(null, "componentDidUpdate", "componentDidUpdate", -1983477981), function(prev_props, prev_state) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var gstate = om.core.get_gstate.call(null, this$);
  var states = cljs.core.get_in.call(null, cljs.core.deref.call(null, gstate), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state-map", "state-map", -1313872128), om.core.react_id.call(null, this$)], null));
  var spath = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state-map", "state-map", -1313872128), om.core.react_id.call(null, this$)], null);
  if (!(c == null) ? false || c.om$core$IDidUpdate$ ? true : !c.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, c) : false : cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, c)) {
    var state_20631 = this$.state;
    om.core.did_update.call(null, c, om.core.get_props.call(null, {"props":prev_props, "isOmComponent":true}), function() {
      var or__4526__auto__ = (new cljs.core.Keyword(null, "previous-state", "previous-state", 1888227923)).cljs$core$IFn$_invoke$arity$1(states);
      if (cljs.core.truth_(or__4526__auto__)) {
        return or__4526__auto__;
      } else {
        return (new cljs.core.Keyword(null, "render-state", "render-state", 2053902270)).cljs$core$IFn$_invoke$arity$1(states);
      }
    }());
  } else {
  }
  if (cljs.core.truth_((new cljs.core.Keyword(null, "previous-state", "previous-state", 1888227923)).cljs$core$IFn$_invoke$arity$1(states))) {
    return cljs.core.swap_BANG_.call(null, gstate, cljs.core.update_in, spath, cljs.core.dissoc, new cljs.core.Keyword(null, "previous-state", "previous-state", 1888227923));
  } else {
    return null;
  }
});
om.core.no_local_descriptor = function om$core$no_local_descriptor(methods$) {
  var x20633 = cljs.core.clj__GT_js.call(null, methods$);
  x20633.om$core$ISetState$ = true;
  x20633.om$core$ISetState$_set_state_BANG_$arity$3 = function(x20633) {
    return function(this$, val, render) {
      var this$__$1 = this;
      var gstate = om.core.get_gstate.call(null, this$__$1);
      var spath = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state-map", "state-map", -1313872128), om.core.react_id.call(null, this$__$1), new cljs.core.Keyword(null, "pending-state", "pending-state", 1525896973)], null);
      cljs.core.swap_BANG_.call(null, om.core.get_gstate.call(null, this$__$1), cljs.core.assoc_in, spath, val);
      if (cljs.core.truth_(function() {
        var and__4514__auto__ = !(gstate == null);
        if (and__4514__auto__) {
          return render;
        } else {
          return and__4514__auto__;
        }
      }())) {
        return om.core._queue_render_BANG_.call(null, gstate, this$__$1);
      } else {
        return null;
      }
    };
  }(x20633);
  x20633.om$core$ISetState$_set_state_BANG_$arity$4 = function(x20633) {
    return function(this$, ks, val, render) {
      var this$__$1 = this;
      return om.core._set_state_BANG_.call(null, this$__$1, cljs.core.assoc_in.call(null, om.core._get_state.call(null, this$__$1), ks, val), render);
    };
  }(x20633);
  x20633.om$core$IGetRenderState$ = true;
  x20633.om$core$IGetRenderState$_get_render_state$arity$1 = function(x20633) {
    return function(this$) {
      var this$__$1 = this;
      var spath = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state-map", "state-map", -1313872128), om.core.react_id.call(null, this$__$1), new cljs.core.Keyword(null, "render-state", "render-state", 2053902270)], null);
      return cljs.core.get_in.call(null, cljs.core.deref.call(null, om.core.get_gstate.call(null, this$__$1)), spath);
    };
  }(x20633);
  x20633.om$core$IGetRenderState$_get_render_state$arity$2 = function(x20633) {
    return function(this$, ks) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, om.core._get_render_state.call(null, this$__$1), ks);
    };
  }(x20633);
  x20633.om$core$IGetState$ = true;
  x20633.om$core$IGetState$_get_state$arity$1 = function(x20633) {
    return function(this$) {
      var this$__$1 = this;
      if (cljs.core.truth_(om.core.mounted_QMARK_.call(null, this$__$1))) {
        var spath = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state-map", "state-map", -1313872128), om.core.react_id.call(null, this$__$1)], null);
        var states = cljs.core.get_in.call(null, cljs.core.deref.call(null, om.core.get_gstate.call(null, this$__$1)), spath);
        var or__4526__auto__ = (new cljs.core.Keyword(null, "pending-state", "pending-state", 1525896973)).cljs$core$IFn$_invoke$arity$1(states);
        if (cljs.core.truth_(or__4526__auto__)) {
          return or__4526__auto__;
        } else {
          return (new cljs.core.Keyword(null, "render-state", "render-state", 2053902270)).cljs$core$IFn$_invoke$arity$1(states);
        }
      } else {
        return this$__$1.props["__om_init_state"];
      }
    };
  }(x20633);
  x20633.om$core$IGetState$_get_state$arity$2 = function(x20633) {
    return function(this$, ks) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, om.core._get_state.call(null, this$__$1), ks);
    };
  }(x20633);
  return x20633;
};
om.core.valid_QMARK_ = function om$core$valid_QMARK_(x) {
  if (!(x == null) ? false || x.om$core$ICursor$ ? true : !x.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, x) : false : cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, x)) {
    return !cljs.core.keyword_identical_QMARK_.call(null, cljs.core.deref.call(null, x), new cljs.core.Keyword("om.core", "invalid", "om.core/invalid", 1948827993));
  } else {
    return true;
  }
};
om.core.MapCursor = function(value, state, path) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.cljs$lang$protocol_mask$partition0$ = 2163640079;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
om.core.MapCursor.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.call(null, this$__$1, k, null);
};
om.core.MapCursor.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, k, not_found) {
  var self__ = this;
  var this$__$1 = this;
  var v = cljs.core._lookup.call(null, self__.value, k, new cljs.core.Keyword("om.core", "not-found", "om.core/not-found", 1869894275));
  if (!cljs.core._EQ_.call(null, v, new cljs.core.Keyword("om.core", "not-found", "om.core/not-found", 1869894275))) {
    return om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, k));
  } else {
    return not_found;
  }
};
om.core.MapCursor.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._kv_reduce.call(null, self__.value, f, init);
};
om.core.MapCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._pr_writer.call(null, self__.value, writer, opts);
};
om.core.MapCursor.prototype.om$core$ICursor$ = true;
om.core.MapCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.path;
};
om.core.MapCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
om.core.MapCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.meta.call(null, self__.value);
};
om.core.MapCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(self__.value, self__.state, self__.path);
};
om.core.MapCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._count.call(null, self__.value);
};
om.core.MapCursor.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash.call(null, self__.value);
};
om.core.MapCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(om.core.cursor_QMARK_.call(null, other))) {
    return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
  } else {
    return cljs.core._EQ_.call(null, self__.value, other);
  }
};
om.core.MapCursor.prototype.om$core$IValue$ = true;
om.core.MapCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
om.core.MapCursor.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(cljs.core.empty.call(null, self__.value), self__.state, self__.path);
};
om.core.MapCursor.prototype.cljs$core$IMap$_dissoc$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(cljs.core._dissoc.call(null, self__.value, k), self__.state, self__.path);
};
om.core.MapCursor.prototype.om$core$ITransact$ = true;
om.core.MapCursor.prototype.om$core$ITransact$_transact_BANG_$arity$4 = function(this$, korks, f, tag) {
  var self__ = this;
  var this$__$1 = this;
  return om.core.transact_STAR_.call(null, self__.state, this$__$1, korks, f, tag);
};
om.core.MapCursor.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._contains_key_QMARK_.call(null, self__.value, k);
};
om.core.MapCursor.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(_, k, v) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(cljs.core._assoc.call(null, self__.value, k, v), self__.state, self__.path);
};
om.core.MapCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.count.call(null, self__.value) > 0) {
    return cljs.core.map.call(null, function(this$__$1) {
      return function(p__20637) {
        var vec__20638 = p__20637;
        var k = cljs.core.nth.call(null, vec__20638, 0, null);
        var v = cljs.core.nth.call(null, vec__20638, 1, null);
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, k))], null);
      };
    }(this$__$1), self__.value);
  } else {
    return null;
  }
};
om.core.MapCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path);
};
om.core.MapCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path);
};
om.core.MapCursor.prototype.call = function() {
  var G__20639 = null;
  var G__20639__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core._lookup.call(null, this$, k);
  };
  var G__20639__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core._lookup.call(null, this$, k, not_found);
  };
  G__20639 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20639__2.call(this, self__, k);
      case 3:
        return G__20639__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20639.cljs$core$IFn$_invoke$arity$2 = G__20639__2;
  G__20639.cljs$core$IFn$_invoke$arity$3 = G__20639__3;
  return G__20639;
}();
om.core.MapCursor.prototype.apply = function(self__, args20636) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args20636)));
};
om.core.MapCursor.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return cljs.core._lookup.call(null, this$, k);
};
om.core.MapCursor.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return cljs.core._lookup.call(null, this$, k, not_found);
};
om.core.MapCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path, new cljs.core.Keyword("om.core", "invalid", "om.core/invalid", 1948827993));
};
om.core.MapCursor.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.Symbol(null, "path", "path", 1452340359, null)], null);
};
om.core.MapCursor.cljs$lang$type = true;
om.core.MapCursor.cljs$lang$ctorStr = "om.core/MapCursor";
om.core.MapCursor.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write.call(null, writer__5106__auto__, "om.core/MapCursor");
};
om.core.__GT_MapCursor = function om$core$__GT_MapCursor(value, state, path) {
  return new om.core.MapCursor(value, state, path);
};
om.core.IndexedCursor = function(value, state, path) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.cljs$lang$protocol_mask$partition0$ = 2180424479;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
om.core.IndexedCursor.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, n) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._nth.call(null, this$__$1, n, null);
};
om.core.IndexedCursor.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, n, not_found) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._nth.call(null, this$__$1, n, not_found);
};
om.core.IndexedCursor.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._kv_reduce.call(null, self__.value, f, init);
};
om.core.IndexedCursor.prototype.cljs$core$IIndexed$_nth$arity$2 = function(this$, n) {
  var self__ = this;
  var this$__$1 = this;
  return om.core._derive.call(null, this$__$1, cljs.core._nth.call(null, self__.value, n), self__.state, cljs.core.conj.call(null, self__.path, n));
};
om.core.IndexedCursor.prototype.cljs$core$IIndexed$_nth$arity$3 = function(this$, n, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (n < cljs.core._count.call(null, self__.value)) {
    return om.core._derive.call(null, this$__$1, cljs.core._nth.call(null, self__.value, n, not_found), self__.state, cljs.core.conj.call(null, self__.path, n));
  } else {
    return not_found;
  }
};
om.core.IndexedCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._pr_writer.call(null, self__.value, writer, opts);
};
om.core.IndexedCursor.prototype.om$core$ICursor$ = true;
om.core.IndexedCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.path;
};
om.core.IndexedCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
om.core.IndexedCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.meta.call(null, self__.value);
};
om.core.IndexedCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.IndexedCursor(self__.value, self__.state, self__.path);
};
om.core.IndexedCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._count.call(null, self__.value);
};
om.core.IndexedCursor.prototype.cljs$core$IStack$_peek$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return om.core._derive.call(null, this$__$1, cljs.core._peek.call(null, self__.value), self__.state, self__.path);
};
om.core.IndexedCursor.prototype.cljs$core$IStack$_pop$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return om.core._derive.call(null, this$__$1, cljs.core._pop.call(null, self__.value), self__.state, self__.path);
};
om.core.IndexedCursor.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash.call(null, self__.value);
};
om.core.IndexedCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(om.core.cursor_QMARK_.call(null, other))) {
    return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
  } else {
    return cljs.core._EQ_.call(null, self__.value, other);
  }
};
om.core.IndexedCursor.prototype.om$core$IValue$ = true;
om.core.IndexedCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
om.core.IndexedCursor.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.IndexedCursor(cljs.core.empty.call(null, self__.value), self__.state, self__.path);
};
om.core.IndexedCursor.prototype.om$core$ITransact$ = true;
om.core.IndexedCursor.prototype.om$core$ITransact$_transact_BANG_$arity$4 = function(this$, korks, f, tag) {
  var self__ = this;
  var this$__$1 = this;
  return om.core.transact_STAR_.call(null, self__.state, this$__$1, korks, f, tag);
};
om.core.IndexedCursor.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._contains_key_QMARK_.call(null, self__.value, k);
};
om.core.IndexedCursor.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this$, n, v) {
  var self__ = this;
  var this$__$1 = this;
  return om.core._derive.call(null, this$__$1, cljs.core._assoc_n.call(null, self__.value, n, v), self__.state, self__.path);
};
om.core.IndexedCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.count.call(null, self__.value) > 0) {
    return cljs.core.map.call(null, function(this$__$1) {
      return function(v, i) {
        return om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, i));
      };
    }(this$__$1), self__.value, cljs.core.range.call(null));
  } else {
    return null;
  }
};
om.core.IndexedCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.IndexedCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path);
};
om.core.IndexedCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.IndexedCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path);
};
om.core.IndexedCursor.prototype.call = function() {
  var G__20641 = null;
  var G__20641__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core._lookup.call(null, this$, k);
  };
  var G__20641__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core._lookup.call(null, this$, k, not_found);
  };
  G__20641 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20641__2.call(this, self__, k);
      case 3:
        return G__20641__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20641.cljs$core$IFn$_invoke$arity$2 = G__20641__2;
  G__20641.cljs$core$IFn$_invoke$arity$3 = G__20641__3;
  return G__20641;
}();
om.core.IndexedCursor.prototype.apply = function(self__, args20640) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args20640)));
};
om.core.IndexedCursor.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return cljs.core._lookup.call(null, this$, k);
};
om.core.IndexedCursor.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return cljs.core._lookup.call(null, this$, k, not_found);
};
om.core.IndexedCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path, new cljs.core.Keyword("om.core", "invalid", "om.core/invalid", 1948827993));
};
om.core.IndexedCursor.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.Symbol(null, "path", "path", 1452340359, null)], null);
};
om.core.IndexedCursor.cljs$lang$type = true;
om.core.IndexedCursor.cljs$lang$ctorStr = "om.core/IndexedCursor";
om.core.IndexedCursor.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write.call(null, writer__5106__auto__, "om.core/IndexedCursor");
};
om.core.__GT_IndexedCursor = function om$core$__GT_IndexedCursor(value, state, path) {
  return new om.core.IndexedCursor(value, state, path);
};
om.core.to_cursor_STAR_ = function om$core$to_cursor_STAR_(val, state, path) {
  var x20643 = cljs.core.clone.call(null, val);
  x20643.cljs$core$IDeref$ = true;
  x20643.cljs$core$IDeref$_deref$arity$1 = function(x20643) {
    return function(this$) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, cljs.core.deref.call(null, state), path, new cljs.core.Keyword("om.core", "invalid", "om.core/invalid", 1948827993));
    };
  }(x20643);
  x20643.om$core$ICursor$ = true;
  x20643.om$core$ICursor$_path$arity$1 = function(x20643) {
    return function(_) {
      var ___$1 = this;
      return path;
    };
  }(x20643);
  x20643.om$core$ICursor$_state$arity$1 = function(x20643) {
    return function(_) {
      var ___$1 = this;
      return state;
    };
  }(x20643);
  x20643.om$core$ITransact$ = true;
  x20643.om$core$ITransact$_transact_BANG_$arity$4 = function(x20643) {
    return function(this$, korks, f, tag) {
      var this$__$1 = this;
      return om.core.transact_STAR_.call(null, state, this$__$1, korks, f, tag);
    };
  }(x20643);
  x20643.cljs$core$IEquiv$ = true;
  x20643.cljs$core$IEquiv$_equiv$arity$2 = function(x20643) {
    return function(_, other) {
      var ___$1 = this;
      if (cljs.core.truth_(om.core.cursor_QMARK_.call(null, other))) {
        return cljs.core._EQ_.call(null, val, om.core._value.call(null, other));
      } else {
        return cljs.core._EQ_.call(null, val, other);
      }
    };
  }(x20643);
  return x20643;
};
om.core.to_cursor = function om$core$to_cursor() {
  var args20644 = [];
  var len__5565__auto___20649 = arguments.length;
  var i__5566__auto___20650 = 0;
  while (true) {
    if (i__5566__auto___20650 < len__5565__auto___20649) {
      args20644.push(arguments[i__5566__auto___20650]);
      var G__20651 = i__5566__auto___20650 + 1;
      i__5566__auto___20650 = G__20651;
      continue;
    } else {
    }
    break;
  }
  var G__20646 = args20644.length;
  switch(G__20646) {
    case 1:
      return om.core.to_cursor.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return om.core.to_cursor.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return om.core.to_cursor.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20644.length)].join(""));;
  }
};
om.core.to_cursor.cljs$core$IFn$_invoke$arity$1 = function(val) {
  return om.core.to_cursor.call(null, val, null, cljs.core.PersistentVector.EMPTY);
};
om.core.to_cursor.cljs$core$IFn$_invoke$arity$2 = function(val, state) {
  return om.core.to_cursor.call(null, val, state, cljs.core.PersistentVector.EMPTY);
};
om.core.to_cursor.cljs$core$IFn$_invoke$arity$3 = function(val, state, path) {
  if (cljs.core.truth_(om.core.cursor_QMARK_.call(null, val))) {
    return val;
  } else {
    if (!(val == null) ? false || val.om$core$IToCursor$ ? true : !val.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_.call(null, om.core.IToCursor, val) : false : cljs.core.native_satisfies_QMARK_.call(null, om.core.IToCursor, val)) {
      return om.core._to_cursor.call(null, val, state, path);
    } else {
      if (cljs.core.indexed_QMARK_.call(null, val)) {
        return new om.core.IndexedCursor(val, state, path);
      } else {
        if (cljs.core.map_QMARK_.call(null, val)) {
          return new om.core.MapCursor(val, state, path);
        } else {
          if (!(val == null) ? val.cljs$lang$protocol_mask$partition1$ & 8192 || val.cljs$core$ICloneable$ ? true : !val.cljs$lang$protocol_mask$partition1$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, val) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, val)) {
            return om.core.to_cursor_STAR_.call(null, val, state, path);
          } else {
            return val;
          }
        }
      }
    }
  }
};
om.core.to_cursor.cljs$lang$maxFixedArity = 3;
om.core.notify_STAR_ = function om$core$notify_STAR_(cursor, tx_data) {
  var state = om.core._state.call(null, cursor);
  return om.core._notify_BANG_.call(null, state, tx_data, om.core.to_cursor.call(null, cljs.core.deref.call(null, state), state));
};
om.core.root_cursor = function om$core$root_cursor(atom) {
  if (!(atom == null) ? atom.cljs$lang$protocol_mask$partition0$ & 32768 || atom.cljs$core$IDeref$ ? true : !atom.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, atom) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, atom)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IDeref", "IDeref", 1738423197, null), new cljs.core.Symbol(null, "atom", "atom", 1243487874, null))))].join(""));
  }
  return om.core.to_cursor.call(null, cljs.core.deref.call(null, atom), atom, cljs.core.PersistentVector.EMPTY);
};
om.core._refs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
om.core.ref_sub_cursor = function om$core$ref_sub_cursor(x, parent) {
  var x20656 = cljs.core.clone.call(null, x);
  x20656.cljs$core$ICloneable$ = true;
  x20656.cljs$core$ICloneable$_clone$arity$1 = function(x20656) {
    return function(this$) {
      var this$__$1 = this;
      return om$core$ref_sub_cursor.call(null, cljs.core.clone.call(null, x), parent);
    };
  }(x20656);
  x20656.om$core$IAdapt$ = true;
  x20656.om$core$IAdapt$_adapt$arity$2 = function(x20656) {
    return function(this$, other) {
      var this$__$1 = this;
      return om$core$ref_sub_cursor.call(null, om.core.adapt.call(null, x, other), parent);
    };
  }(x20656);
  x20656.om$core$ICursorDerive$ = true;
  x20656.om$core$ICursorDerive$_derive$arity$4 = function(x20656) {
    return function(this$, derived, state, path) {
      var this$__$1 = this;
      var cursor_SINGLEQUOTE_ = om.core.to_cursor.call(null, derived, state, path);
      if (cljs.core.truth_(om.core.cursor_QMARK_.call(null, cursor_SINGLEQUOTE_))) {
        return om.core.adapt.call(null, this$__$1, cursor_SINGLEQUOTE_);
      } else {
        return cursor_SINGLEQUOTE_;
      }
    };
  }(x20656);
  x20656.om$core$ITransact$ = true;
  x20656.om$core$ITransact$_transact_BANG_$arity$4 = function(x20656) {
    return function(cursor, korks, f, tag) {
      var cursor__$1 = this;
      om.core.commit_BANG_.call(null, cursor__$1, korks, f);
      return om.core._refresh_deps_BANG_.call(null, parent);
    };
  }(x20656);
  return x20656;
};
om.core.ref_cursor_QMARK_ = function om$core$ref_cursor_QMARK_(x) {
  if (!(x == null)) {
    if (false || x.om$core$IOmRef$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmRef, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmRef, x);
  }
};
om.core.ref_cursor = function om$core$ref_cursor(cursor) {
  if (cljs.core.truth_(om.core.cursor_QMARK_.call(null, cursor))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "cursor?", "cursor?", -648342688, null), new cljs.core.Symbol(null, "cursor", "cursor", -1642498285, null))))].join(""));
  }
  if (cljs.core.truth_(om.core.ref_cursor_QMARK_.call(null, cursor))) {
    return cursor;
  } else {
    var path = om.core.path.call(null, cursor);
    var storage = cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, om.core._refs, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [path], null), cljs.core.fnil.call(null, cljs.core.identity, cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY))), path);
    var x20664 = cljs.core.clone.call(null, cursor);
    x20664.om$core$ICursorDerive$ = true;
    x20664.om$core$ICursorDerive$_derive$arity$4 = function(x20664, path, storage) {
      return function(this$, derived, state, path__$1) {
        var this$__$1 = this;
        var cursor_SINGLEQUOTE_ = om.core.to_cursor.call(null, derived, state, path__$1);
        if (cljs.core.truth_(om.core.cursor_QMARK_.call(null, cursor_SINGLEQUOTE_))) {
          return om.core.ref_sub_cursor.call(null, cursor_SINGLEQUOTE_, this$__$1);
        } else {
          return cursor_SINGLEQUOTE_;
        }
      };
    }(x20664, path, storage);
    x20664.om$core$IOmRef$ = true;
    x20664.om$core$IOmRef$_add_dep_BANG_$arity$2 = function(x20664, path, storage) {
      return function(_, c) {
        var ___$1 = this;
        return cljs.core.swap_BANG_.call(null, storage, cljs.core.assoc, om.core.id.call(null, c), c);
      };
    }(x20664, path, storage);
    x20664.om$core$IOmRef$_remove_dep_BANG_$arity$2 = function(x20664, path, storage) {
      return function(_, c) {
        var ___$1 = this;
        var m = cljs.core.swap_BANG_.call(null, storage, cljs.core.dissoc, om.core.id.call(null, c));
        if (cljs.core.count.call(null, m) === 0) {
          return cljs.core.swap_BANG_.call(null, om.core._refs, cljs.core.dissoc, path);
        } else {
          return null;
        }
      };
    }(x20664, path, storage);
    x20664.om$core$IOmRef$_refresh_deps_BANG_$arity$1 = function(x20664, path, storage) {
      return function(_) {
        var ___$1 = this;
        var seq__20665 = cljs.core.seq.call(null, cljs.core.vals.call(null, cljs.core.deref.call(null, storage)));
        var chunk__20666 = null;
        var count__20667 = 0;
        var i__20668 = 0;
        while (true) {
          if (i__20668 < count__20667) {
            var c = cljs.core._nth.call(null, chunk__20666, i__20668);
            om.core._queue_render_BANG_.call(null, om.core.state.call(null, cursor), c);
            var G__20669 = seq__20665;
            var G__20670 = chunk__20666;
            var G__20671 = count__20667;
            var G__20672 = i__20668 + 1;
            seq__20665 = G__20669;
            chunk__20666 = G__20670;
            count__20667 = G__20671;
            i__20668 = G__20672;
            continue;
          } else {
            var temp__4425__auto__ = cljs.core.seq.call(null, seq__20665);
            if (temp__4425__auto__) {
              var seq__20665__$1 = temp__4425__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__20665__$1)) {
                var c__5310__auto__ = cljs.core.chunk_first.call(null, seq__20665__$1);
                var G__20673 = cljs.core.chunk_rest.call(null, seq__20665__$1);
                var G__20674 = c__5310__auto__;
                var G__20675 = cljs.core.count.call(null, c__5310__auto__);
                var G__20676 = 0;
                seq__20665 = G__20673;
                chunk__20666 = G__20674;
                count__20667 = G__20675;
                i__20668 = G__20676;
                continue;
              } else {
                var c = cljs.core.first.call(null, seq__20665__$1);
                om.core._queue_render_BANG_.call(null, om.core.state.call(null, cursor), c);
                var G__20677 = cljs.core.next.call(null, seq__20665__$1);
                var G__20678 = null;
                var G__20679 = 0;
                var G__20680 = 0;
                seq__20665 = G__20677;
                chunk__20666 = G__20678;
                count__20667 = G__20679;
                i__20668 = G__20680;
                continue;
              }
            } else {
              return null;
            }
          }
          break;
        }
      };
    }(x20664, path, storage);
    x20664.om$core$IOmRef$_get_deps$arity$1 = function(x20664, path, storage) {
      return function(_) {
        var ___$1 = this;
        return cljs.core.deref.call(null, storage);
      };
    }(x20664, path, storage);
    x20664.om$core$ITransact$ = true;
    x20664.om$core$ITransact$_transact_BANG_$arity$4 = function(x20664, path, storage) {
      return function(cursor__$1, korks, f, tag) {
        var cursor__$2 = this;
        om.core.commit_BANG_.call(null, cursor__$2, korks, f);
        return om.core._refresh_deps_BANG_.call(null, cursor__$2);
      };
    }(x20664, path, storage);
    return x20664;
  }
};
om.core.add_ref_to_component_BANG_ = function om$core$add_ref_to_component_BANG_(c, ref) {
  var state = c.state;
  var refs = function() {
    var or__4526__auto__ = state["__om_refs"];
    if (cljs.core.truth_(or__4526__auto__)) {
      return or__4526__auto__;
    } else {
      return cljs.core.PersistentHashSet.EMPTY;
    }
  }();
  if (cljs.core.contains_QMARK_.call(null, refs, ref)) {
    return null;
  } else {
    return state["__om_refs"] = cljs.core.conj.call(null, refs, ref);
  }
};
om.core.remove_ref_from_component_BANG_ = function om$core$remove_ref_from_component_BANG_(c, ref) {
  var state = c.state;
  var refs = state["__om_refs"];
  if (cljs.core.contains_QMARK_.call(null, refs, ref)) {
    return state["__om_refs"] = cljs.core.disj.call(null, refs, ref);
  } else {
    return null;
  }
};
om.core.observe = function om$core$observe(c, ref) {
  if (cljs.core.truth_(om.core.component_QMARK_.call(null, c))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))))].join(""));
  }
  if (cljs.core.truth_(om.core.cursor_QMARK_.call(null, ref))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "cursor?", "cursor?", -648342688, null), new cljs.core.Symbol(null, "ref", "ref", -1364538802, null))))].join(""));
  }
  if (cljs.core.truth_(om.core.ref_cursor_QMARK_.call(null, ref))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ref-cursor?", "ref-cursor?", 1026875459, null), new cljs.core.Symbol(null, "ref", "ref", -1364538802, null))))].join(""));
  }
  om.core.add_ref_to_component_BANG_.call(null, c, ref);
  om.core._add_dep_BANG_.call(null, ref, c);
  return ref;
};
om.core.unobserve = function om$core$unobserve(c, ref) {
  om.core.remove_ref_from_component_BANG_.call(null, c, ref);
  om.core._remove_dep_BANG_.call(null, ref, c);
  return ref;
};
om.core.refresh_queued = false;
om.core.refresh_set = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
om.core.get_renderT = function om$core$get_renderT(state) {
  var or__4526__auto__ = state.om$render$T;
  if (cljs.core.truth_(or__4526__auto__)) {
    return or__4526__auto__;
  } else {
    return 0;
  }
};
om.core.render_all = function om$core$render_all() {
  var args20681 = [];
  var len__5565__auto___20688 = arguments.length;
  var i__5566__auto___20689 = 0;
  while (true) {
    if (i__5566__auto___20689 < len__5565__auto___20688) {
      args20681.push(arguments[i__5566__auto___20689]);
      var G__20690 = i__5566__auto___20689 + 1;
      i__5566__auto___20689 = G__20690;
      continue;
    } else {
    }
    break;
  }
  var G__20683 = args20681.length;
  switch(G__20683) {
    case 0:
      return om.core.render_all.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return om.core.render_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20681.length)].join(""));;
  }
};
om.core.render_all.cljs$core$IFn$_invoke$arity$0 = function() {
  return om.core.render_all.call(null, null);
};
om.core.render_all.cljs$core$IFn$_invoke$arity$1 = function(state) {
  om.core.refresh_queued = false;
  var seq__20684_20692 = cljs.core.seq.call(null, cljs.core.deref.call(null, om.core.refresh_set));
  var chunk__20685_20693 = null;
  var count__20686_20694 = 0;
  var i__20687_20695 = 0;
  while (true) {
    if (i__20687_20695 < count__20686_20694) {
      var f_20696 = cljs.core._nth.call(null, chunk__20685_20693, i__20687_20695);
      f_20696.call(null);
      var G__20697 = seq__20684_20692;
      var G__20698 = chunk__20685_20693;
      var G__20699 = count__20686_20694;
      var G__20700 = i__20687_20695 + 1;
      seq__20684_20692 = G__20697;
      chunk__20685_20693 = G__20698;
      count__20686_20694 = G__20699;
      i__20687_20695 = G__20700;
      continue;
    } else {
      var temp__4425__auto___20701 = cljs.core.seq.call(null, seq__20684_20692);
      if (temp__4425__auto___20701) {
        var seq__20684_20702__$1 = temp__4425__auto___20701;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__20684_20702__$1)) {
          var c__5310__auto___20703 = cljs.core.chunk_first.call(null, seq__20684_20702__$1);
          var G__20704 = cljs.core.chunk_rest.call(null, seq__20684_20702__$1);
          var G__20705 = c__5310__auto___20703;
          var G__20706 = cljs.core.count.call(null, c__5310__auto___20703);
          var G__20707 = 0;
          seq__20684_20692 = G__20704;
          chunk__20685_20693 = G__20705;
          count__20686_20694 = G__20706;
          i__20687_20695 = G__20707;
          continue;
        } else {
          var f_20708 = cljs.core.first.call(null, seq__20684_20702__$1);
          f_20708.call(null);
          var G__20709 = cljs.core.next.call(null, seq__20684_20702__$1);
          var G__20710 = null;
          var G__20711 = 0;
          var G__20712 = 0;
          seq__20684_20692 = G__20709;
          chunk__20685_20693 = G__20710;
          count__20686_20694 = G__20711;
          i__20687_20695 = G__20712;
          continue;
        }
      } else {
      }
    }
    break;
  }
  if (state == null) {
    return null;
  } else {
    return state.om$render$T = om.core.get_renderT.call(null, state) + 1;
  }
};
om.core.render_all.cljs$lang$maxFixedArity = 1;
om.core.roots = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
om.core.valid_component_QMARK_ = function om$core$valid_component_QMARK_(x, f) {
  if (function() {
    var or__4526__auto__ = !(x == null) ? false || x.om$core$IRender$ ? true : !x.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, x) : false : cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, x);
    if (or__4526__auto__) {
      return or__4526__auto__;
    } else {
      var or__4526__auto____$1 = !(x == null) ? false || x.om$core$IRenderProps$ ? true : !x.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderProps, x) : false : cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderProps, x);
      if (or__4526__auto____$1) {
        return or__4526__auto____$1;
      } else {
        if (!(x == null)) {
          if (false || x.om$core$IRenderState$) {
            return true;
          } else {
            if (!x.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, x);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, x);
        }
      }
    }
  }()) {
    return null;
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Invalid Om component fn, "), cljs.core.str(f.name), cljs.core.str(" does not return valid instance")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IRender", "IRender", 590822196, null), new cljs.core.Symbol(null, 
    "x", "x", -555367584, null)), cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IRenderProps", "IRenderProps", 2115139472, null), new cljs.core.Symbol(null, "x", "x", -555367584, null)), cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IRenderState", "IRenderState", -897673898, null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))))].join(""));
  }
};
om.core.valid_opts_QMARK_ = function om$core$valid_opts_QMARK_(m) {
  return cljs.core.every_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 11, [new cljs.core.Keyword(null, "descriptor", "descriptor", 76122018), null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), null, new cljs.core.Keyword(null, "instrument", "instrument", -960698844), null, new cljs.core.Keyword(null, "react-key", "react-key", 1337881348), null, new cljs.core.Keyword(null, "key", "key", -1516042587), null, new cljs.core.Keyword(null, "init-state", 
  "init-state", 1450863212), null, new cljs.core.Keyword(null, "state", "state", -1988618099), null, new cljs.core.Keyword(null, "key-fn", "key-fn", -636154479), null, new cljs.core.Keyword(null, "opts", "opts", 155075701), null, new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434), null, new cljs.core.Keyword(null, "shared", "shared", -384145993), null], null), null), cljs.core.keys.call(null, m));
};
om.core.id = function om$core$id(owner) {
  return owner.state["__om_id"];
};
om.core.get_descriptor = function om$core$get_descriptor() {
  var args20723 = [];
  var len__5565__auto___20726 = arguments.length;
  var i__5566__auto___20727 = 0;
  while (true) {
    if (i__5566__auto___20727 < len__5565__auto___20726) {
      args20723.push(arguments[i__5566__auto___20727]);
      var G__20728 = i__5566__auto___20727 + 1;
      i__5566__auto___20727 = G__20728;
      continue;
    } else {
    }
    break;
  }
  var G__20725 = args20723.length;
  switch(G__20725) {
    case 1:
      return om.core.get_descriptor.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return om.core.get_descriptor.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20723.length)].join(""));;
  }
};
om.core.get_descriptor.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return om.core.get_descriptor.call(null, f, null);
};
om.core.get_descriptor.cljs$core$IFn$_invoke$arity$2 = function(f, descriptor) {
  var rdesc_20730 = function() {
    var or__4526__auto__ = descriptor;
    if (cljs.core.truth_(or__4526__auto__)) {
      return or__4526__auto__;
    } else {
      var or__4526__auto____$1 = om.core._STAR_descriptor_STAR_;
      if (cljs.core.truth_(or__4526__auto____$1)) {
        return or__4526__auto____$1;
      } else {
        return om.core.pure_descriptor;
      }
    }
  }();
  if (goog.object.get(f, "om$descriptor") == null || !(rdesc_20730 === goog.object.get(f, "om$tag"))) {
    var factory_20731 = React.createFactory(React.createClass(rdesc_20730));
    goog.object.set(f, "om$descriptor", factory_20731);
    goog.object.set(f, "om$tag", rdesc_20730);
  } else {
  }
  return goog.object.get(f, "om$descriptor");
};
om.core.get_descriptor.cljs$lang$maxFixedArity = 2;
om.core.getf = function om$core$getf() {
  var args20732 = [];
  var len__5565__auto___20735 = arguments.length;
  var i__5566__auto___20736 = 0;
  while (true) {
    if (i__5566__auto___20736 < len__5565__auto___20735) {
      args20732.push(arguments[i__5566__auto___20736]);
      var G__20737 = i__5566__auto___20736 + 1;
      i__5566__auto___20736 = G__20737;
      continue;
    } else {
    }
    break;
  }
  var G__20734 = args20732.length;
  switch(G__20734) {
    case 2:
      return om.core.getf.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return om.core.getf.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20732.length)].join(""));;
  }
};
om.core.getf.cljs$core$IFn$_invoke$arity$2 = function(f, cursor) {
  if (f instanceof cljs.core.MultiFn) {
    var dv = f.dispatch_fn.call(null, cursor, null);
    return cljs.core.get_method.call(null, f, dv);
  } else {
    return f;
  }
};
om.core.getf.cljs$core$IFn$_invoke$arity$3 = function(f, cursor, opts) {
  if (f instanceof cljs.core.MultiFn) {
    var dv = f.dispatch_fn.call(null, cursor, null, opts);
    return cljs.core.get_method.call(null, f, dv);
  } else {
    return f;
  }
};
om.core.getf.cljs$lang$maxFixedArity = 3;
om.core.build_STAR_ = function om$core$build_STAR_() {
  var args20739 = [];
  var len__5565__auto___20744 = arguments.length;
  var i__5566__auto___20745 = 0;
  while (true) {
    if (i__5566__auto___20745 < len__5565__auto___20744) {
      args20739.push(arguments[i__5566__auto___20745]);
      var G__20746 = i__5566__auto___20745 + 1;
      i__5566__auto___20745 = G__20746;
      continue;
    } else {
    }
    break;
  }
  var G__20741 = args20739.length;
  switch(G__20741) {
    case 2:
      return om.core.build_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return om.core.build_STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20739.length)].join(""));;
  }
};
om.core.build_STAR_.cljs$core$IFn$_invoke$arity$2 = function(f, cursor) {
  return om.core.build_STAR_.call(null, f, cursor, null);
};
om.core.build_STAR_.cljs$core$IFn$_invoke$arity$3 = function(f, cursor, m) {
  if (cljs.core.ifn_QMARK_.call(null, f)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
  }
  if (m == null || cljs.core.map_QMARK_.call(null, m)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "m", "m", -1021758608, null)), cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "m", "m", -1021758608, null)))))].join(""));
  }
  if (cljs.core.truth_(om.core.valid_opts_QMARK_.call(null, m))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, "build options contains invalid keys, only :key, :key-fn :react-key, ", ":fn, :init-state, :state, and :opts allowed, given ", cljs.core.interpose.call(null, ", ", cljs.core.keys.call(null, m)))), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "valid-opts?", "valid-opts?", 1000038576, null), new cljs.core.Symbol(null, "m", "m", -1021758608, 
    null))))].join(""));
  }
  if (m == null) {
    var shared = om.core.get_shared.call(null, om.core._STAR_parent_STAR_);
    var ctor = om.core.get_descriptor.call(null, om.core.getf.call(null, f, cursor));
    return ctor.call(null, {"__om_cursor":cursor, "__om_shared":shared, "__om_root_key":om.core._STAR_root_key_STAR_, "__om_app_state":om.core._STAR_state_STAR_, "__om_descriptor":om.core._STAR_descriptor_STAR_, "__om_instrument":om.core._STAR_instrument_STAR_, "children":function(shared, ctor) {
      return function(this$) {
        var ret = f.call(null, cursor, this$);
        om.core.valid_component_QMARK_.call(null, ret, f);
        return ret;
      };
    }(shared, ctor)});
  } else {
    var map__20742 = m;
    var map__20742__$1 = (!(map__20742 == null) ? map__20742.cljs$lang$protocol_mask$partition0$ & 64 || map__20742.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__20742) : map__20742;
    var key = cljs.core.get.call(null, map__20742__$1, new cljs.core.Keyword(null, "key", "key", -1516042587));
    var key_fn = cljs.core.get.call(null, map__20742__$1, new cljs.core.Keyword(null, "key-fn", "key-fn", -636154479));
    var state = cljs.core.get.call(null, map__20742__$1, new cljs.core.Keyword(null, "state", "state", -1988618099));
    var init_state = cljs.core.get.call(null, map__20742__$1, new cljs.core.Keyword(null, "init-state", "init-state", 1450863212));
    var opts = cljs.core.get.call(null, map__20742__$1, new cljs.core.Keyword(null, "opts", "opts", 155075701));
    var dataf = cljs.core.get.call(null, m, new cljs.core.Keyword(null, "fn", "fn", -1175266204));
    var cursor_SINGLEQUOTE_ = !(dataf == null) ? function() {
      var temp__4423__auto__ = (new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434)).cljs$core$IFn$_invoke$arity$1(m);
      if (cljs.core.truth_(temp__4423__auto__)) {
        var i = temp__4423__auto__;
        return dataf.call(null, cursor, i);
      } else {
        return dataf.call(null, cursor);
      }
    }() : cursor;
    var rkey = !(key == null) ? cljs.core.get.call(null, cursor_SINGLEQUOTE_, key) : !(key_fn == null) ? key_fn.call(null, cursor_SINGLEQUOTE_) : cljs.core.get.call(null, m, new cljs.core.Keyword(null, "react-key", "react-key", 1337881348));
    var shared = function() {
      var or__4526__auto__ = (new cljs.core.Keyword(null, "shared", "shared", -384145993)).cljs$core$IFn$_invoke$arity$1(m);
      if (cljs.core.truth_(or__4526__auto__)) {
        return or__4526__auto__;
      } else {
        return om.core.get_shared.call(null, om.core._STAR_parent_STAR_);
      }
    }();
    var ctor = om.core.get_descriptor.call(null, om.core.getf.call(null, f, cursor_SINGLEQUOTE_, opts), (new cljs.core.Keyword(null, "descriptor", "descriptor", 76122018)).cljs$core$IFn$_invoke$arity$1(m));
    return ctor.call(null, {"__om_state":state, "__om_instrument":om.core._STAR_instrument_STAR_, "children":opts == null ? function(map__20742, map__20742__$1, key, key_fn, state, init_state, opts, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) {
      return function(this$) {
        var ret = f.call(null, cursor_SINGLEQUOTE_, this$);
        om.core.valid_component_QMARK_.call(null, ret, f);
        return ret;
      };
    }(map__20742, map__20742__$1, key, key_fn, state, init_state, opts, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) : function(map__20742, map__20742__$1, key, key_fn, state, init_state, opts, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) {
      return function(this$) {
        var ret = f.call(null, cursor_SINGLEQUOTE_, this$, opts);
        om.core.valid_component_QMARK_.call(null, ret, f);
        return ret;
      };
    }(map__20742, map__20742__$1, key, key_fn, state, init_state, opts, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor), "__om_init_state":init_state, "key":function() {
      var or__4526__auto__ = rkey;
      if (cljs.core.truth_(or__4526__auto__)) {
        return or__4526__auto__;
      } else {
        return undefined;
      }
    }(), "__om_app_state":om.core._STAR_state_STAR_, "__om_cursor":cursor_SINGLEQUOTE_, "__om_index":(new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434)).cljs$core$IFn$_invoke$arity$1(m), "__om_shared":shared, "__om_descriptor":om.core._STAR_descriptor_STAR_, "__om_root_key":om.core._STAR_root_key_STAR_});
  }
};
om.core.build_STAR_.cljs$lang$maxFixedArity = 3;
om.core.build = function om$core$build() {
  var args20748 = [];
  var len__5565__auto___20751 = arguments.length;
  var i__5566__auto___20752 = 0;
  while (true) {
    if (i__5566__auto___20752 < len__5565__auto___20751) {
      args20748.push(arguments[i__5566__auto___20752]);
      var G__20753 = i__5566__auto___20752 + 1;
      i__5566__auto___20752 = G__20753;
      continue;
    } else {
    }
    break;
  }
  var G__20750 = args20748.length;
  switch(G__20750) {
    case 2:
      return om.core.build.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return om.core.build.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20748.length)].join(""));;
  }
};
om.core.build.cljs$core$IFn$_invoke$arity$2 = function(f, x) {
  return om.core.build.call(null, f, x, null);
};
om.core.build.cljs$core$IFn$_invoke$arity$3 = function(f, x, m) {
  if (cljs.core.ifn_QMARK_.call(null, f)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
  }
  if (m == null || cljs.core.map_QMARK_.call(null, m)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "m", "m", -1021758608, null)), cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "m", "m", -1021758608, null)))))].join(""));
  }
  if (!(om.core._STAR_instrument_STAR_ == null)) {
    var ret = om.core._STAR_instrument_STAR_.call(null, f, x, m);
    if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("om.core", "pass", "om.core/pass", -1453289268))) {
      return om.core.build_STAR_.call(null, f, x, m);
    } else {
      return ret;
    }
  } else {
    return om.core.build_STAR_.call(null, f, x, m);
  }
};
om.core.build.cljs$lang$maxFixedArity = 3;
om.core.build_all = function om$core$build_all() {
  var args20755 = [];
  var len__5565__auto___20758 = arguments.length;
  var i__5566__auto___20759 = 0;
  while (true) {
    if (i__5566__auto___20759 < len__5565__auto___20758) {
      args20755.push(arguments[i__5566__auto___20759]);
      var G__20760 = i__5566__auto___20759 + 1;
      i__5566__auto___20759 = G__20760;
      continue;
    } else {
    }
    break;
  }
  var G__20757 = args20755.length;
  switch(G__20757) {
    case 2:
      return om.core.build_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return om.core.build_all.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20755.length)].join(""));;
  }
};
om.core.build_all.cljs$core$IFn$_invoke$arity$2 = function(f, xs) {
  return om.core.build_all.call(null, f, xs, null);
};
om.core.build_all.cljs$core$IFn$_invoke$arity$3 = function(f, xs, m) {
  if (cljs.core.ifn_QMARK_.call(null, f)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
  }
  if (m == null || cljs.core.map_QMARK_.call(null, m)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "m", "m", -1021758608, null)), cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "m", "m", -1021758608, null)))))].join(""));
  }
  return cljs.core.map.call(null, function(x, i) {
    return om.core.build.call(null, f, x, cljs.core.assoc.call(null, m, new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434), i));
  }, xs, cljs.core.range.call(null));
};
om.core.build_all.cljs$lang$maxFixedArity = 3;
om.core.setup = function om$core$setup(state, key, tx_listen) {
  if (!(state == null) ? false || state.om$core$INotify$ ? true : !state.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_.call(null, om.core.INotify, state) : false : cljs.core.native_satisfies_QMARK_.call(null, om.core.INotify, state)) {
  } else {
    var properties_20778 = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var listeners_20779 = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var render_queue_20780 = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
    var x20771_20781 = state;
    x20771_20781.om$core$IRootProperties$ = true;
    x20771_20781.om$core$IRootProperties$_set_property_BANG_$arity$4 = function(x20771_20781, properties_20778, listeners_20779, render_queue_20780) {
      return function(_, id, k, v) {
        var ___$1 = this;
        return cljs.core.swap_BANG_.call(null, properties_20778, cljs.core.assoc_in, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [id, k], null), v);
      };
    }(x20771_20781, properties_20778, listeners_20779, render_queue_20780);
    x20771_20781.om$core$IRootProperties$_remove_property_BANG_$arity$3 = function(x20771_20781, properties_20778, listeners_20779, render_queue_20780) {
      return function(_, id, k) {
        var ___$1 = this;
        return cljs.core.swap_BANG_.call(null, properties_20778, cljs.core.dissoc, id, k);
      };
    }(x20771_20781, properties_20778, listeners_20779, render_queue_20780);
    x20771_20781.om$core$IRootProperties$_remove_properties_BANG_$arity$2 = function(x20771_20781, properties_20778, listeners_20779, render_queue_20780) {
      return function(_, id) {
        var ___$1 = this;
        return cljs.core.swap_BANG_.call(null, properties_20778, cljs.core.dissoc, id);
      };
    }(x20771_20781, properties_20778, listeners_20779, render_queue_20780);
    x20771_20781.om$core$IRootProperties$_get_property$arity$3 = function(x20771_20781, properties_20778, listeners_20779, render_queue_20780) {
      return function(_, id, k) {
        var ___$1 = this;
        return cljs.core.get_in.call(null, cljs.core.deref.call(null, properties_20778), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [id, k], null));
      };
    }(x20771_20781, properties_20778, listeners_20779, render_queue_20780);
    x20771_20781.om$core$INotify$ = true;
    x20771_20781.om$core$INotify$_listen_BANG_$arity$3 = function(x20771_20781, properties_20778, listeners_20779, render_queue_20780) {
      return function(this$, key__$1, tx_listen__$1) {
        var this$__$1 = this;
        if (tx_listen__$1 == null) {
        } else {
          cljs.core.swap_BANG_.call(null, listeners_20779, cljs.core.assoc, key__$1, tx_listen__$1);
        }
        return this$__$1;
      };
    }(x20771_20781, properties_20778, listeners_20779, render_queue_20780);
    x20771_20781.om$core$INotify$_unlisten_BANG_$arity$2 = function(x20771_20781, properties_20778, listeners_20779, render_queue_20780) {
      return function(this$, key__$1) {
        var this$__$1 = this;
        cljs.core.swap_BANG_.call(null, listeners_20779, cljs.core.dissoc, key__$1);
        return this$__$1;
      };
    }(x20771_20781, properties_20778, listeners_20779, render_queue_20780);
    x20771_20781.om$core$INotify$_notify_BANG_$arity$3 = function(x20771_20781, properties_20778, listeners_20779, render_queue_20780) {
      return function(this$, tx_data, root_cursor) {
        var this$__$1 = this;
        var seq__20772_20782 = cljs.core.seq.call(null, cljs.core.deref.call(null, listeners_20779));
        var chunk__20773_20783 = null;
        var count__20774_20784 = 0;
        var i__20775_20785 = 0;
        while (true) {
          if (i__20775_20785 < count__20774_20784) {
            var vec__20776_20786 = cljs.core._nth.call(null, chunk__20773_20783, i__20775_20785);
            var __20787 = cljs.core.nth.call(null, vec__20776_20786, 0, null);
            var f_20788 = cljs.core.nth.call(null, vec__20776_20786, 1, null);
            f_20788.call(null, tx_data, root_cursor);
            var G__20789 = seq__20772_20782;
            var G__20790 = chunk__20773_20783;
            var G__20791 = count__20774_20784;
            var G__20792 = i__20775_20785 + 1;
            seq__20772_20782 = G__20789;
            chunk__20773_20783 = G__20790;
            count__20774_20784 = G__20791;
            i__20775_20785 = G__20792;
            continue;
          } else {
            var temp__4425__auto___20793 = cljs.core.seq.call(null, seq__20772_20782);
            if (temp__4425__auto___20793) {
              var seq__20772_20794__$1 = temp__4425__auto___20793;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__20772_20794__$1)) {
                var c__5310__auto___20795 = cljs.core.chunk_first.call(null, seq__20772_20794__$1);
                var G__20796 = cljs.core.chunk_rest.call(null, seq__20772_20794__$1);
                var G__20797 = c__5310__auto___20795;
                var G__20798 = cljs.core.count.call(null, c__5310__auto___20795);
                var G__20799 = 0;
                seq__20772_20782 = G__20796;
                chunk__20773_20783 = G__20797;
                count__20774_20784 = G__20798;
                i__20775_20785 = G__20799;
                continue;
              } else {
                var vec__20777_20800 = cljs.core.first.call(null, seq__20772_20794__$1);
                var __20801 = cljs.core.nth.call(null, vec__20777_20800, 0, null);
                var f_20802 = cljs.core.nth.call(null, vec__20777_20800, 1, null);
                f_20802.call(null, tx_data, root_cursor);
                var G__20803 = cljs.core.next.call(null, seq__20772_20794__$1);
                var G__20804 = null;
                var G__20805 = 0;
                var G__20806 = 0;
                seq__20772_20782 = G__20803;
                chunk__20773_20783 = G__20804;
                count__20774_20784 = G__20805;
                i__20775_20785 = G__20806;
                continue;
              }
            } else {
            }
          }
          break;
        }
        return this$__$1;
      };
    }(x20771_20781, properties_20778, listeners_20779, render_queue_20780);
    x20771_20781.om$core$IRenderQueue$ = true;
    x20771_20781.om$core$IRenderQueue$_get_queue$arity$1 = function(x20771_20781, properties_20778, listeners_20779, render_queue_20780) {
      return function(this$) {
        var this$__$1 = this;
        return cljs.core.deref.call(null, render_queue_20780);
      };
    }(x20771_20781, properties_20778, listeners_20779, render_queue_20780);
    x20771_20781.om$core$IRenderQueue$_queue_render_BANG_$arity$2 = function(x20771_20781, properties_20778, listeners_20779, render_queue_20780) {
      return function(this$, c) {
        var this$__$1 = this;
        if (cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, render_queue_20780), c)) {
          return null;
        } else {
          cljs.core.swap_BANG_.call(null, render_queue_20780, cljs.core.conj, c);
          return cljs.core.swap_BANG_.call(null, this$__$1, cljs.core.identity);
        }
      };
    }(x20771_20781, properties_20778, listeners_20779, render_queue_20780);
    x20771_20781.om$core$IRenderQueue$_empty_queue_BANG_$arity$1 = function(x20771_20781, properties_20778, listeners_20779, render_queue_20780) {
      return function(this$) {
        var this$__$1 = this;
        return cljs.core.swap_BANG_.call(null, render_queue_20780, cljs.core.empty);
      };
    }(x20771_20781, properties_20778, listeners_20779, render_queue_20780);
  }
  return om.core._listen_BANG_.call(null, state, key, tx_listen);
};
om.core.tear_down = function om$core$tear_down(state, key) {
  return om.core._unlisten_BANG_.call(null, state, key);
};
om.core.tag_root_key = function om$core$tag_root_key(cursor, root_key) {
  if (cljs.core.truth_(om.core.cursor_QMARK_.call(null, cursor))) {
    var x20808 = cljs.core.clone.call(null, cursor);
    x20808.cljs$core$ICloneable$ = true;
    x20808.cljs$core$ICloneable$_clone$arity$1 = function(x20808) {
      return function(this$) {
        var this$__$1 = this;
        return om$core$tag_root_key.call(null, cljs.core.clone.call(null, cursor), root_key);
      };
    }(x20808);
    x20808.om$core$IAdapt$ = true;
    x20808.om$core$IAdapt$_adapt$arity$2 = function(x20808) {
      return function(this$, other) {
        var this$__$1 = this;
        return om$core$tag_root_key.call(null, om.core.adapt.call(null, cursor, other), root_key);
      };
    }(x20808);
    x20808.om$core$IRootKey$ = true;
    x20808.om$core$IRootKey$_root_key$arity$1 = function(x20808) {
      return function(this$) {
        var this$__$1 = this;
        return root_key;
      };
    }(x20808);
    return x20808;
  } else {
    return cursor;
  }
};
om.core.root = function om$core$root(f, value, p__20809) {
  var map__20873 = p__20809;
  var map__20873__$1 = (!(map__20873 == null) ? map__20873.cljs$lang$protocol_mask$partition0$ & 64 || map__20873.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__20873) : map__20873;
  var options = map__20873__$1;
  var target = cljs.core.get.call(null, map__20873__$1, new cljs.core.Keyword(null, "target", "target", 253001721));
  var tx_listen = cljs.core.get.call(null, map__20873__$1, new cljs.core.Keyword(null, "tx-listen", "tx-listen", 119130367));
  var path = cljs.core.get.call(null, map__20873__$1, new cljs.core.Keyword(null, "path", "path", -188191168));
  var instrument = cljs.core.get.call(null, map__20873__$1, new cljs.core.Keyword(null, "instrument", "instrument", -960698844));
  var descriptor = cljs.core.get.call(null, map__20873__$1, new cljs.core.Keyword(null, "descriptor", "descriptor", 76122018));
  var adapt = cljs.core.get.call(null, map__20873__$1, new cljs.core.Keyword(null, "adapt", "adapt", -1817022327));
  var raf = cljs.core.get.call(null, map__20873__$1, new cljs.core.Keyword(null, "raf", "raf", -1295410152));
  if (cljs.core.ifn_QMARK_.call(null, f)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("First argument must be a function"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
  }
  if (!(target == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("No target specified to om.core/root"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "target", "target", 1893533248, null)))))].join(""));
  }
  var roots_SINGLEQUOTE__20936 = cljs.core.deref.call(null, om.core.roots);
  if (cljs.core.contains_QMARK_.call(null, roots_SINGLEQUOTE__20936, target)) {
    cljs.core.get.call(null, roots_SINGLEQUOTE__20936, target).call(null);
  } else {
  }
  var watch_key = cljs.core.gensym.call(null);
  var state = (!(value == null) ? value.cljs$lang$protocol_mask$partition1$ & 16384 || value.cljs$core$IAtom$ ? true : !value.cljs$lang$protocol_mask$partition1$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAtom, value) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAtom, value)) ? value : cljs.core.atom.call(null, value);
  var state__$1 = om.core.setup.call(null, state, watch_key, tx_listen);
  var adapt__$1 = function() {
    var or__4526__auto__ = adapt;
    if (cljs.core.truth_(or__4526__auto__)) {
      return or__4526__auto__;
    } else {
      return cljs.core.identity;
    }
  }();
  var m = cljs.core.dissoc.call(null, options, new cljs.core.Keyword(null, "target", "target", 253001721), new cljs.core.Keyword(null, "tx-listen", "tx-listen", 119130367), new cljs.core.Keyword(null, "path", "path", -188191168), new cljs.core.Keyword(null, "adapt", "adapt", -1817022327), new cljs.core.Keyword(null, "raf", "raf", -1295410152));
  var ret = cljs.core.atom.call(null, null);
  var rootf = function(watch_key, state, state__$1, adapt__$1, m, ret, map__20873, map__20873__$1, options, target, tx_listen, path, instrument, descriptor, adapt, raf) {
    return function om$core$root_$_rootf() {
      cljs.core.swap_BANG_.call(null, om.core.refresh_set, cljs.core.disj, om$core$root_$_rootf);
      var value__$1 = cljs.core.deref.call(null, state__$1);
      var cursor = adapt__$1.call(null, om.core.tag_root_key.call(null, path == null ? om.core.to_cursor.call(null, value__$1, state__$1, cljs.core.PersistentVector.EMPTY) : om.core.to_cursor.call(null, cljs.core.get_in.call(null, value__$1, path), state__$1, path), watch_key));
      if (cljs.core.truth_(om.core._get_property.call(null, state__$1, watch_key, new cljs.core.Keyword(null, "skip-render-root", "skip-render-root", -5219643)))) {
      } else {
        om.core._set_property_BANG_.call(null, state__$1, watch_key, new cljs.core.Keyword(null, "skip-render-root", "skip-render-root", -5219643), true);
        var c_20937 = om.dom.render.call(null, function() {
          var _STAR_descriptor_STAR_20906 = om.core._STAR_descriptor_STAR_;
          var _STAR_instrument_STAR_20907 = om.core._STAR_instrument_STAR_;
          var _STAR_state_STAR_20908 = om.core._STAR_state_STAR_;
          var _STAR_root_key_STAR_20909 = om.core._STAR_root_key_STAR_;
          om.core._STAR_descriptor_STAR_ = descriptor;
          om.core._STAR_instrument_STAR_ = instrument;
          om.core._STAR_state_STAR_ = state__$1;
          om.core._STAR_root_key_STAR_ = watch_key;
          try {
            return om.core.build.call(null, f, cursor, m);
          } finally {
            om.core._STAR_root_key_STAR_ = _STAR_root_key_STAR_20909;
            om.core._STAR_state_STAR_ = _STAR_state_STAR_20908;
            om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_20907;
            om.core._STAR_descriptor_STAR_ = _STAR_descriptor_STAR_20906;
          }
        }(), target);
        if (cljs.core.deref.call(null, ret) == null) {
          cljs.core.reset_BANG_.call(null, ret, c_20937);
        } else {
        }
      }
      var queue_20938 = om.core._get_queue.call(null, state__$1);
      om.core._empty_queue_BANG_.call(null, state__$1);
      if (cljs.core.empty_QMARK_.call(null, queue_20938)) {
      } else {
        var seq__20910_20939 = cljs.core.seq.call(null, queue_20938);
        var chunk__20911_20940 = null;
        var count__20912_20941 = 0;
        var i__20913_20942 = 0;
        while (true) {
          if (i__20913_20942 < count__20912_20941) {
            var c_20943 = cljs.core._nth.call(null, chunk__20911_20940, i__20913_20942);
            if (cljs.core.truth_(c_20943.isMounted())) {
              var temp__4425__auto___20944 = c_20943.state["__om_next_cursor"];
              if (cljs.core.truth_(temp__4425__auto___20944)) {
                var next_props_20945 = temp__4425__auto___20944;
                c_20943.props["__om_cursor"] = next_props_20945;
                c_20943.state["__om_next_cursor"] = null;
              } else {
              }
              if (cljs.core.truth_(function() {
                var or__4526__auto__ = !function() {
                  var G__20915 = om.core.children.call(null, c_20943);
                  if (!(G__20915 == null)) {
                    if (false || G__20915.om$core$ICheckState$) {
                      return true;
                    } else {
                      if (!G__20915.cljs$lang$protocol_mask$partition$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICheckState, G__20915);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICheckState, G__20915);
                  }
                }();
                if (or__4526__auto__) {
                  return or__4526__auto__;
                } else {
                  return c_20943.shouldComponentUpdate(c_20943.props, c_20943.state);
                }
              }())) {
                c_20943.forceUpdate();
              } else {
              }
            } else {
            }
            var G__20946 = seq__20910_20939;
            var G__20947 = chunk__20911_20940;
            var G__20948 = count__20912_20941;
            var G__20949 = i__20913_20942 + 1;
            seq__20910_20939 = G__20946;
            chunk__20911_20940 = G__20947;
            count__20912_20941 = G__20948;
            i__20913_20942 = G__20949;
            continue;
          } else {
            var temp__4425__auto___20950 = cljs.core.seq.call(null, seq__20910_20939);
            if (temp__4425__auto___20950) {
              var seq__20910_20951__$1 = temp__4425__auto___20950;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__20910_20951__$1)) {
                var c__5310__auto___20952 = cljs.core.chunk_first.call(null, seq__20910_20951__$1);
                var G__20953 = cljs.core.chunk_rest.call(null, seq__20910_20951__$1);
                var G__20954 = c__5310__auto___20952;
                var G__20955 = cljs.core.count.call(null, c__5310__auto___20952);
                var G__20956 = 0;
                seq__20910_20939 = G__20953;
                chunk__20911_20940 = G__20954;
                count__20912_20941 = G__20955;
                i__20913_20942 = G__20956;
                continue;
              } else {
                var c_20957 = cljs.core.first.call(null, seq__20910_20951__$1);
                if (cljs.core.truth_(c_20957.isMounted())) {
                  var temp__4425__auto___20958__$1 = c_20957.state["__om_next_cursor"];
                  if (cljs.core.truth_(temp__4425__auto___20958__$1)) {
                    var next_props_20959 = temp__4425__auto___20958__$1;
                    c_20957.props["__om_cursor"] = next_props_20959;
                    c_20957.state["__om_next_cursor"] = null;
                  } else {
                  }
                  if (cljs.core.truth_(function() {
                    var or__4526__auto__ = !function() {
                      var G__20917 = om.core.children.call(null, c_20957);
                      if (!(G__20917 == null)) {
                        if (false || G__20917.om$core$ICheckState$) {
                          return true;
                        } else {
                          if (!G__20917.cljs$lang$protocol_mask$partition$) {
                            return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICheckState, G__20917);
                          } else {
                            return false;
                          }
                        }
                      } else {
                        return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICheckState, G__20917);
                      }
                    }();
                    if (or__4526__auto__) {
                      return or__4526__auto__;
                    } else {
                      return c_20957.shouldComponentUpdate(c_20957.props, c_20957.state);
                    }
                  }())) {
                    c_20957.forceUpdate();
                  } else {
                  }
                } else {
                }
                var G__20960 = cljs.core.next.call(null, seq__20910_20951__$1);
                var G__20961 = null;
                var G__20962 = 0;
                var G__20963 = 0;
                seq__20910_20939 = G__20960;
                chunk__20911_20940 = G__20961;
                count__20912_20941 = G__20962;
                i__20913_20942 = G__20963;
                continue;
              }
            } else {
            }
          }
          break;
        }
      }
      var _refs_20964 = cljs.core.deref.call(null, om.core._refs);
      if (cljs.core.empty_QMARK_.call(null, _refs_20964)) {
      } else {
        var seq__20918_20965 = cljs.core.seq.call(null, _refs_20964);
        var chunk__20919_20966 = null;
        var count__20920_20967 = 0;
        var i__20921_20968 = 0;
        while (true) {
          if (i__20921_20968 < count__20920_20967) {
            var vec__20922_20969 = cljs.core._nth.call(null, chunk__20919_20966, i__20921_20968);
            var path_20970__$1 = cljs.core.nth.call(null, vec__20922_20969, 0, null);
            var cs_20971 = cljs.core.nth.call(null, vec__20922_20969, 1, null);
            var cs_20972__$1 = cljs.core.deref.call(null, cs_20971);
            var seq__20923_20973 = cljs.core.seq.call(null, cs_20972__$1);
            var chunk__20924_20974 = null;
            var count__20925_20975 = 0;
            var i__20926_20976 = 0;
            while (true) {
              if (i__20926_20976 < count__20925_20975) {
                var vec__20927_20977 = cljs.core._nth.call(null, chunk__20924_20974, i__20926_20976);
                var id_20978 = cljs.core.nth.call(null, vec__20927_20977, 0, null);
                var c_20979 = cljs.core.nth.call(null, vec__20927_20977, 1, null);
                if (cljs.core.truth_(c_20979.shouldComponentUpdate(c_20979.props, c_20979.state))) {
                  c_20979.forceUpdate();
                } else {
                }
                var G__20980 = seq__20923_20973;
                var G__20981 = chunk__20924_20974;
                var G__20982 = count__20925_20975;
                var G__20983 = i__20926_20976 + 1;
                seq__20923_20973 = G__20980;
                chunk__20924_20974 = G__20981;
                count__20925_20975 = G__20982;
                i__20926_20976 = G__20983;
                continue;
              } else {
                var temp__4425__auto___20984 = cljs.core.seq.call(null, seq__20923_20973);
                if (temp__4425__auto___20984) {
                  var seq__20923_20985__$1 = temp__4425__auto___20984;
                  if (cljs.core.chunked_seq_QMARK_.call(null, seq__20923_20985__$1)) {
                    var c__5310__auto___20986 = cljs.core.chunk_first.call(null, seq__20923_20985__$1);
                    var G__20987 = cljs.core.chunk_rest.call(null, seq__20923_20985__$1);
                    var G__20988 = c__5310__auto___20986;
                    var G__20989 = cljs.core.count.call(null, c__5310__auto___20986);
                    var G__20990 = 0;
                    seq__20923_20973 = G__20987;
                    chunk__20924_20974 = G__20988;
                    count__20925_20975 = G__20989;
                    i__20926_20976 = G__20990;
                    continue;
                  } else {
                    var vec__20928_20991 = cljs.core.first.call(null, seq__20923_20985__$1);
                    var id_20992 = cljs.core.nth.call(null, vec__20928_20991, 0, null);
                    var c_20993 = cljs.core.nth.call(null, vec__20928_20991, 1, null);
                    if (cljs.core.truth_(c_20993.shouldComponentUpdate(c_20993.props, c_20993.state))) {
                      c_20993.forceUpdate();
                    } else {
                    }
                    var G__20994 = cljs.core.next.call(null, seq__20923_20985__$1);
                    var G__20995 = null;
                    var G__20996 = 0;
                    var G__20997 = 0;
                    seq__20923_20973 = G__20994;
                    chunk__20924_20974 = G__20995;
                    count__20925_20975 = G__20996;
                    i__20926_20976 = G__20997;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            var G__20998 = seq__20918_20965;
            var G__20999 = chunk__20919_20966;
            var G__21000 = count__20920_20967;
            var G__21001 = i__20921_20968 + 1;
            seq__20918_20965 = G__20998;
            chunk__20919_20966 = G__20999;
            count__20920_20967 = G__21000;
            i__20921_20968 = G__21001;
            continue;
          } else {
            var temp__4425__auto___21002 = cljs.core.seq.call(null, seq__20918_20965);
            if (temp__4425__auto___21002) {
              var seq__20918_21003__$1 = temp__4425__auto___21002;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__20918_21003__$1)) {
                var c__5310__auto___21004 = cljs.core.chunk_first.call(null, seq__20918_21003__$1);
                var G__21005 = cljs.core.chunk_rest.call(null, seq__20918_21003__$1);
                var G__21006 = c__5310__auto___21004;
                var G__21007 = cljs.core.count.call(null, c__5310__auto___21004);
                var G__21008 = 0;
                seq__20918_20965 = G__21005;
                chunk__20919_20966 = G__21006;
                count__20920_20967 = G__21007;
                i__20921_20968 = G__21008;
                continue;
              } else {
                var vec__20929_21009 = cljs.core.first.call(null, seq__20918_21003__$1);
                var path_21010__$1 = cljs.core.nth.call(null, vec__20929_21009, 0, null);
                var cs_21011 = cljs.core.nth.call(null, vec__20929_21009, 1, null);
                var cs_21012__$1 = cljs.core.deref.call(null, cs_21011);
                var seq__20930_21013 = cljs.core.seq.call(null, cs_21012__$1);
                var chunk__20931_21014 = null;
                var count__20932_21015 = 0;
                var i__20933_21016 = 0;
                while (true) {
                  if (i__20933_21016 < count__20932_21015) {
                    var vec__20934_21017 = cljs.core._nth.call(null, chunk__20931_21014, i__20933_21016);
                    var id_21018 = cljs.core.nth.call(null, vec__20934_21017, 0, null);
                    var c_21019 = cljs.core.nth.call(null, vec__20934_21017, 1, null);
                    if (cljs.core.truth_(c_21019.shouldComponentUpdate(c_21019.props, c_21019.state))) {
                      c_21019.forceUpdate();
                    } else {
                    }
                    var G__21020 = seq__20930_21013;
                    var G__21021 = chunk__20931_21014;
                    var G__21022 = count__20932_21015;
                    var G__21023 = i__20933_21016 + 1;
                    seq__20930_21013 = G__21020;
                    chunk__20931_21014 = G__21021;
                    count__20932_21015 = G__21022;
                    i__20933_21016 = G__21023;
                    continue;
                  } else {
                    var temp__4425__auto___21024__$1 = cljs.core.seq.call(null, seq__20930_21013);
                    if (temp__4425__auto___21024__$1) {
                      var seq__20930_21025__$1 = temp__4425__auto___21024__$1;
                      if (cljs.core.chunked_seq_QMARK_.call(null, seq__20930_21025__$1)) {
                        var c__5310__auto___21026 = cljs.core.chunk_first.call(null, seq__20930_21025__$1);
                        var G__21027 = cljs.core.chunk_rest.call(null, seq__20930_21025__$1);
                        var G__21028 = c__5310__auto___21026;
                        var G__21029 = cljs.core.count.call(null, c__5310__auto___21026);
                        var G__21030 = 0;
                        seq__20930_21013 = G__21027;
                        chunk__20931_21014 = G__21028;
                        count__20932_21015 = G__21029;
                        i__20933_21016 = G__21030;
                        continue;
                      } else {
                        var vec__20935_21031 = cljs.core.first.call(null, seq__20930_21025__$1);
                        var id_21032 = cljs.core.nth.call(null, vec__20935_21031, 0, null);
                        var c_21033 = cljs.core.nth.call(null, vec__20935_21031, 1, null);
                        if (cljs.core.truth_(c_21033.shouldComponentUpdate(c_21033.props, c_21033.state))) {
                          c_21033.forceUpdate();
                        } else {
                        }
                        var G__21034 = cljs.core.next.call(null, seq__20930_21025__$1);
                        var G__21035 = null;
                        var G__21036 = 0;
                        var G__21037 = 0;
                        seq__20930_21013 = G__21034;
                        chunk__20931_21014 = G__21035;
                        count__20932_21015 = G__21036;
                        i__20933_21016 = G__21037;
                        continue;
                      }
                    } else {
                    }
                  }
                  break;
                }
                var G__21038 = cljs.core.next.call(null, seq__20918_21003__$1);
                var G__21039 = null;
                var G__21040 = 0;
                var G__21041 = 0;
                seq__20918_20965 = G__21038;
                chunk__20919_20966 = G__21039;
                count__20920_20967 = G__21040;
                i__20921_20968 = G__21041;
                continue;
              }
            } else {
            }
          }
          break;
        }
      }
      return cljs.core.deref.call(null, ret);
    };
  }(watch_key, state, state__$1, adapt__$1, m, ret, map__20873, map__20873__$1, options, target, tx_listen, path, instrument, descriptor, adapt, raf);
  cljs.core.add_watch.call(null, state__$1, watch_key, function(watch_key, state, state__$1, adapt__$1, m, ret, rootf, map__20873, map__20873__$1, options, target, tx_listen, path, instrument, descriptor, adapt, raf) {
    return function(_, ___$1, o, n) {
      if (cljs.core.not.call(null, om.core._get_property.call(null, state__$1, watch_key, new cljs.core.Keyword(null, "ignore", "ignore", -1631542033))) && !(o === n)) {
        om.core._set_property_BANG_.call(null, state__$1, watch_key, new cljs.core.Keyword(null, "skip-render-root", "skip-render-root", -5219643), false);
      } else {
      }
      om.core._set_property_BANG_.call(null, state__$1, watch_key, new cljs.core.Keyword(null, "ignore", "ignore", -1631542033), false);
      if (cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, om.core.refresh_set), rootf)) {
      } else {
        cljs.core.swap_BANG_.call(null, om.core.refresh_set, cljs.core.conj, rootf);
      }
      if (cljs.core.truth_(om.core.refresh_queued)) {
        return null;
      } else {
        om.core.refresh_queued = true;
        if (cljs.core.fn_QMARK_.call(null, raf)) {
          return raf.call(null);
        } else {
          if (raf === false || !(typeof requestAnimationFrame !== "undefined")) {
            return setTimeout(function(watch_key, state, state__$1, adapt__$1, m, ret, rootf, map__20873, map__20873__$1, options, target, tx_listen, path, instrument, descriptor, adapt, raf) {
              return function() {
                return om.core.render_all.call(null, state__$1);
              };
            }(watch_key, state, state__$1, adapt__$1, m, ret, rootf, map__20873, map__20873__$1, options, target, tx_listen, path, instrument, descriptor, adapt, raf), 16);
          } else {
            return requestAnimationFrame(function(watch_key, state, state__$1, adapt__$1, m, ret, rootf, map__20873, map__20873__$1, options, target, tx_listen, path, instrument, descriptor, adapt, raf) {
              return function() {
                return om.core.render_all.call(null, state__$1);
              };
            }(watch_key, state, state__$1, adapt__$1, m, ret, rootf, map__20873, map__20873__$1, options, target, tx_listen, path, instrument, descriptor, adapt, raf));
          }
        }
      }
    };
  }(watch_key, state, state__$1, adapt__$1, m, ret, rootf, map__20873, map__20873__$1, options, target, tx_listen, path, instrument, descriptor, adapt, raf));
  cljs.core.swap_BANG_.call(null, om.core.roots, cljs.core.assoc, target, function(watch_key, state, state__$1, adapt__$1, m, ret, rootf, map__20873, map__20873__$1, options, target, tx_listen, path, instrument, descriptor, adapt, raf) {
    return function() {
      om.core._remove_properties_BANG_.call(null, state__$1, watch_key);
      cljs.core.remove_watch.call(null, state__$1, watch_key);
      om.core.tear_down.call(null, state__$1, watch_key);
      cljs.core.swap_BANG_.call(null, om.core.refresh_set, cljs.core.disj, rootf);
      cljs.core.swap_BANG_.call(null, om.core.roots, cljs.core.dissoc, target);
      return React.unmountComponentAtNode(target);
    };
  }(watch_key, state, state__$1, adapt__$1, m, ret, rootf, map__20873, map__20873__$1, options, target, tx_listen, path, instrument, descriptor, adapt, raf));
  return rootf.call(null);
};
om.core.detach_root = function om$core$detach_root(target) {
  if (cljs.core.truth_(goog.dom.isElement(target))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("gdom", "isElement", "gdom/isElement", 465934354, null), new cljs.core.Symbol(null, "target", "target", 1893533248, null))))].join(""));
  }
  var temp__4425__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, om.core.roots), target);
  if (cljs.core.truth_(temp__4425__auto__)) {
    var f = temp__4425__auto__;
    return f.call(null);
  } else {
    return null;
  }
};
om.core.transactable_QMARK_ = function om$core$transactable_QMARK_(x) {
  if (!(x == null)) {
    if (false || x.om$core$ITransact$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.ITransact, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, om.core.ITransact, x);
  }
};
om.core.transact_BANG_ = function om$core$transact_BANG_() {
  var args21044 = [];
  var len__5565__auto___21047 = arguments.length;
  var i__5566__auto___21048 = 0;
  while (true) {
    if (i__5566__auto___21048 < len__5565__auto___21047) {
      args21044.push(arguments[i__5566__auto___21048]);
      var G__21049 = i__5566__auto___21048 + 1;
      i__5566__auto___21048 = G__21049;
      continue;
    } else {
    }
    break;
  }
  var G__21046 = args21044.length;
  switch(G__21046) {
    case 2:
      return om.core.transact_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return om.core.transact_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return om.core.transact_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21044.length)].join(""));;
  }
};
om.core.transact_BANG_.cljs$core$IFn$_invoke$arity$2 = function(cursor, f) {
  return om.core.transact_BANG_.call(null, cursor, cljs.core.PersistentVector.EMPTY, f, null);
};
om.core.transact_BANG_.cljs$core$IFn$_invoke$arity$3 = function(cursor, korks, f) {
  return om.core.transact_BANG_.call(null, cursor, korks, f, null);
};
om.core.transact_BANG_.cljs$core$IFn$_invoke$arity$4 = function(cursor, korks, f, tag) {
  if (cljs.core.truth_(om.core.transactable_QMARK_.call(null, cursor))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "transactable?", "transactable?", 780536292, null), new cljs.core.Symbol(null, "cursor", "cursor", -1642498285, null))))].join(""));
  }
  if (cljs.core.ifn_QMARK_.call(null, f)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
  }
  var korks__$1 = korks == null ? cljs.core.PersistentVector.EMPTY : cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
  return om.core._transact_BANG_.call(null, cursor, korks__$1, f, tag);
};
om.core.transact_BANG_.cljs$lang$maxFixedArity = 4;
om.core.update_BANG_ = function om$core$update_BANG_() {
  var args21051 = [];
  var len__5565__auto___21054 = arguments.length;
  var i__5566__auto___21055 = 0;
  while (true) {
    if (i__5566__auto___21055 < len__5565__auto___21054) {
      args21051.push(arguments[i__5566__auto___21055]);
      var G__21056 = i__5566__auto___21055 + 1;
      i__5566__auto___21055 = G__21056;
      continue;
    } else {
    }
    break;
  }
  var G__21053 = args21051.length;
  switch(G__21053) {
    case 2:
      return om.core.update_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return om.core.update_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return om.core.update_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21051.length)].join(""));;
  }
};
om.core.update_BANG_.cljs$core$IFn$_invoke$arity$2 = function(cursor, v) {
  if (cljs.core.truth_(om.core.cursor_QMARK_.call(null, cursor))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "cursor?", "cursor?", -648342688, null), new cljs.core.Symbol(null, "cursor", "cursor", -1642498285, null))))].join(""));
  }
  return om.core.transact_BANG_.call(null, cursor, cljs.core.PersistentVector.EMPTY, function(_) {
    return v;
  }, null);
};
om.core.update_BANG_.cljs$core$IFn$_invoke$arity$3 = function(cursor, korks, v) {
  if (cljs.core.truth_(om.core.cursor_QMARK_.call(null, cursor))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "cursor?", "cursor?", -648342688, null), new cljs.core.Symbol(null, "cursor", "cursor", -1642498285, null))))].join(""));
  }
  return om.core.transact_BANG_.call(null, cursor, korks, function(_) {
    return v;
  }, null);
};
om.core.update_BANG_.cljs$core$IFn$_invoke$arity$4 = function(cursor, korks, v, tag) {
  if (cljs.core.truth_(om.core.cursor_QMARK_.call(null, cursor))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "cursor?", "cursor?", -648342688, null), new cljs.core.Symbol(null, "cursor", "cursor", -1642498285, null))))].join(""));
  }
  return om.core.transact_BANG_.call(null, cursor, korks, function(_) {
    return v;
  }, tag);
};
om.core.update_BANG_.cljs$lang$maxFixedArity = 4;
om.core.commit_BANG_ = function om$core$commit_BANG_(cursor, korks, f) {
  if (cljs.core.truth_(om.core.cursor_QMARK_.call(null, cursor))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "cursor?", "cursor?", -648342688, null), new cljs.core.Symbol(null, "cursor", "cursor", -1642498285, null))))].join(""));
  }
  if (cljs.core.ifn_QMARK_.call(null, f)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
  }
  var key = (!(cursor == null) ? false || cursor.om$core$IRootKey$ ? true : !cursor.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_.call(null, om.core.IRootKey, cursor) : false : cljs.core.native_satisfies_QMARK_.call(null, om.core.IRootKey, cursor)) ? om.core._root_key.call(null, cursor) : null;
  var app_state = om.core.state.call(null, cursor);
  var korks__$1 = korks == null ? cljs.core.PersistentVector.EMPTY : cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
  var cpath = om.core.path.call(null, cursor);
  var rpath = cljs.core.into.call(null, cpath, korks__$1);
  if (cljs.core.truth_(key)) {
    om.core._set_property_BANG_.call(null, app_state, key, new cljs.core.Keyword(null, "ignore", "ignore", -1631542033), true);
  } else {
  }
  if (cljs.core.empty_QMARK_.call(null, rpath)) {
    return cljs.core.swap_BANG_.call(null, app_state, f);
  } else {
    return cljs.core.swap_BANG_.call(null, app_state, cljs.core.update_in, rpath, f);
  }
};
om.core.get_node = function om$core$get_node() {
  var args21060 = [];
  var len__5565__auto___21064 = arguments.length;
  var i__5566__auto___21065 = 0;
  while (true) {
    if (i__5566__auto___21065 < len__5565__auto___21064) {
      args21060.push(arguments[i__5566__auto___21065]);
      var G__21066 = i__5566__auto___21065 + 1;
      i__5566__auto___21065 = G__21066;
      continue;
    } else {
    }
    break;
  }
  var G__21062 = args21060.length;
  switch(G__21062) {
    case 1:
      return om.core.get_node.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return om.core.get_node.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21060.length)].join(""));;
  }
};
om.core.get_node.cljs$core$IFn$_invoke$arity$1 = function(owner) {
  return owner.getDOMNode();
};
om.core.get_node.cljs$core$IFn$_invoke$arity$2 = function(owner, name) {
  if (typeof name === "string") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "string?", "string?", -1129175764, null), new cljs.core.Symbol(null, "name", "name", -810760592, null))))].join(""));
  }
  var G__21063 = owner.refs;
  var G__21063__$1 = G__21063 == null ? null : G__21063[name];
  var G__21063__$2 = G__21063__$1 == null ? null : G__21063__$1.getDOMNode();
  return G__21063__$2;
};
om.core.get_node.cljs$lang$maxFixedArity = 2;
om.core.get_ref = function om$core$get_ref(owner, name) {
  if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
  }
  if (typeof name === "string") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "string?", "string?", -1129175764, null), new cljs.core.Symbol(null, "name", "name", -810760592, null))))].join(""));
  }
  var G__21069 = owner.refs;
  var G__21069__$1 = G__21069 == null ? null : goog.object.get(G__21069, name);
  return G__21069__$1;
};
om.core.mounted_QMARK_ = function om$core$mounted_QMARK_(owner) {
  return owner.isMounted();
};
om.core.set_state_BANG_ = function om$core$set_state_BANG_() {
  var args21070 = [];
  var len__5565__auto___21073 = arguments.length;
  var i__5566__auto___21074 = 0;
  while (true) {
    if (i__5566__auto___21074 < len__5565__auto___21073) {
      args21070.push(arguments[i__5566__auto___21074]);
      var G__21075 = i__5566__auto___21074 + 1;
      i__5566__auto___21074 = G__21075;
      continue;
    } else {
    }
    break;
  }
  var G__21072 = args21070.length;
  switch(G__21072) {
    case 2:
      return om.core.set_state_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return om.core.set_state_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21070.length)].join(""));;
  }
};
om.core.set_state_BANG_.cljs$core$IFn$_invoke$arity$2 = function(owner, v) {
  if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
  }
  return om.core._set_state_BANG_.call(null, owner, v, true);
};
om.core.set_state_BANG_.cljs$core$IFn$_invoke$arity$3 = function(owner, korks, v) {
  if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
  }
  var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
  return om.core._set_state_BANG_.call(null, owner, ks, v, true);
};
om.core.set_state_BANG_.cljs$lang$maxFixedArity = 3;
om.core.set_state_nr_BANG_ = function om$core$set_state_nr_BANG_() {
  var args21077 = [];
  var len__5565__auto___21080 = arguments.length;
  var i__5566__auto___21081 = 0;
  while (true) {
    if (i__5566__auto___21081 < len__5565__auto___21080) {
      args21077.push(arguments[i__5566__auto___21081]);
      var G__21082 = i__5566__auto___21081 + 1;
      i__5566__auto___21081 = G__21082;
      continue;
    } else {
    }
    break;
  }
  var G__21079 = args21077.length;
  switch(G__21079) {
    case 2:
      return om.core.set_state_nr_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return om.core.set_state_nr_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21077.length)].join(""));;
  }
};
om.core.set_state_nr_BANG_.cljs$core$IFn$_invoke$arity$2 = function(owner, v) {
  if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
  }
  return om.core._set_state_BANG_.call(null, owner, v, false);
};
om.core.set_state_nr_BANG_.cljs$core$IFn$_invoke$arity$3 = function(owner, korks, v) {
  if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
  }
  var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
  return om.core._set_state_BANG_.call(null, owner, ks, v, false);
};
om.core.set_state_nr_BANG_.cljs$lang$maxFixedArity = 3;
om.core.update_state_BANG_ = function om$core$update_state_BANG_() {
  var args21084 = [];
  var len__5565__auto___21087 = arguments.length;
  var i__5566__auto___21088 = 0;
  while (true) {
    if (i__5566__auto___21088 < len__5565__auto___21087) {
      args21084.push(arguments[i__5566__auto___21088]);
      var G__21089 = i__5566__auto___21088 + 1;
      i__5566__auto___21088 = G__21089;
      continue;
    } else {
    }
    break;
  }
  var G__21086 = args21084.length;
  switch(G__21086) {
    case 2:
      return om.core.update_state_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return om.core.update_state_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21084.length)].join(""));;
  }
};
om.core.update_state_BANG_.cljs$core$IFn$_invoke$arity$2 = function(owner, f) {
  if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
  }
  if (cljs.core.ifn_QMARK_.call(null, f)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
  }
  return om.core.set_state_BANG_.call(null, owner, f.call(null, om.core.get_state.call(null, owner)));
};
om.core.update_state_BANG_.cljs$core$IFn$_invoke$arity$3 = function(owner, korks, f) {
  if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
  }
  if (cljs.core.ifn_QMARK_.call(null, f)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
  }
  return om.core.set_state_BANG_.call(null, owner, korks, f.call(null, om.core.get_state.call(null, owner, korks)));
};
om.core.update_state_BANG_.cljs$lang$maxFixedArity = 3;
om.core.update_state_nr_BANG_ = function om$core$update_state_nr_BANG_() {
  var args21091 = [];
  var len__5565__auto___21094 = arguments.length;
  var i__5566__auto___21095 = 0;
  while (true) {
    if (i__5566__auto___21095 < len__5565__auto___21094) {
      args21091.push(arguments[i__5566__auto___21095]);
      var G__21096 = i__5566__auto___21095 + 1;
      i__5566__auto___21095 = G__21096;
      continue;
    } else {
    }
    break;
  }
  var G__21093 = args21091.length;
  switch(G__21093) {
    case 2:
      return om.core.update_state_nr_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return om.core.update_state_nr_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21091.length)].join(""));;
  }
};
om.core.update_state_nr_BANG_.cljs$core$IFn$_invoke$arity$2 = function(owner, f) {
  if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
  }
  if (cljs.core.ifn_QMARK_.call(null, f)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
  }
  return om.core.set_state_nr_BANG_.call(null, owner, f.call(null, om.core.get_state.call(null, owner)));
};
om.core.update_state_nr_BANG_.cljs$core$IFn$_invoke$arity$3 = function(owner, korks, f) {
  if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
  }
  if (cljs.core.ifn_QMARK_.call(null, f)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
  }
  return om.core.set_state_nr_BANG_.call(null, owner, korks, f.call(null, om.core.get_state.call(null, owner, korks)));
};
om.core.update_state_nr_BANG_.cljs$lang$maxFixedArity = 3;
om.core.refresh_BANG_ = function om$core$refresh_BANG_(owner) {
  if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
  }
  return om.core.update_state_BANG_.call(null, owner, cljs.core.identity);
};
om.core.get_render_state = function om$core$get_render_state() {
  var args21098 = [];
  var len__5565__auto___21101 = arguments.length;
  var i__5566__auto___21102 = 0;
  while (true) {
    if (i__5566__auto___21102 < len__5565__auto___21101) {
      args21098.push(arguments[i__5566__auto___21102]);
      var G__21103 = i__5566__auto___21102 + 1;
      i__5566__auto___21102 = G__21103;
      continue;
    } else {
    }
    break;
  }
  var G__21100 = args21098.length;
  switch(G__21100) {
    case 1:
      return om.core.get_render_state.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return om.core.get_render_state.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21098.length)].join(""));;
  }
};
om.core.get_render_state.cljs$core$IFn$_invoke$arity$1 = function(owner) {
  if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
  }
  return om.core._get_render_state.call(null, owner);
};
om.core.get_render_state.cljs$core$IFn$_invoke$arity$2 = function(owner, korks) {
  if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
  }
  var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
  return om.core._get_render_state.call(null, owner, ks);
};
om.core.get_render_state.cljs$lang$maxFixedArity = 2;
goog.provide("om_tools.core");
goog.require("cljs.core");
goog.require("om.core");
goog.require("plumbing.fnk.schema");
goog.require("plumbing.core");
goog.require("schema.core");
om_tools.core.state_proxy = function om_tools$core$state_proxy(owner) {
  if (cljs.core.truth_(owner)) {
    var get_state = function() {
      return om.core.get_state.call(null, owner);
    };
    if (typeof om_tools.core.t19781 !== "undefined") {
    } else {
      om_tools.core.t19781 = function(state_proxy, owner, get_state, meta19782) {
        this.state_proxy = state_proxy;
        this.owner = owner;
        this.get_state = get_state;
        this.meta19782 = meta19782;
        this.cljs$lang$protocol_mask$partition0$ = 425984;
        this.cljs$lang$protocol_mask$partition1$ = 98304;
      };
      om_tools.core.t19781.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(get_state) {
        return function(_19783, meta19782__$1) {
          var self__ = this;
          var _19783__$1 = this;
          return new om_tools.core.t19781(self__.state_proxy, self__.owner, self__.get_state, meta19782__$1);
        };
      }(get_state);
      om_tools.core.t19781.prototype.cljs$core$IMeta$_meta$arity$1 = function(get_state) {
        return function(_19783) {
          var self__ = this;
          var _19783__$1 = this;
          return self__.meta19782;
        };
      }(get_state);
      om_tools.core.t19781.prototype.cljs$core$IDeref$_deref$arity$1 = function(get_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.get_state.call(null);
        };
      }(get_state);
      om_tools.core.t19781.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = function(get_state) {
        return function(_, v) {
          var self__ = this;
          var ___$1 = this;
          return om.core.set_state_BANG_.call(null, self__.owner, v);
        };
      }(get_state);
      om_tools.core.t19781.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = function(get_state) {
        return function(s, f) {
          var self__ = this;
          var s__$1 = this;
          return cljs.core._reset_BANG_.call(null, s__$1, f.call(null, self__.get_state.call(null)));
        };
      }(get_state);
      om_tools.core.t19781.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = function(get_state) {
        return function(s, f, x) {
          var self__ = this;
          var s__$1 = this;
          return cljs.core._reset_BANG_.call(null, s__$1, f.call(null, self__.get_state.call(null), x));
        };
      }(get_state);
      om_tools.core.t19781.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = function(get_state) {
        return function(s, f, x, y) {
          var self__ = this;
          var s__$1 = this;
          return cljs.core._reset_BANG_.call(null, s__$1, f.call(null, self__.get_state.call(null), x, y));
        };
      }(get_state);
      om_tools.core.t19781.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = function(get_state) {
        return function(s, f, x, y, more) {
          var self__ = this;
          var s__$1 = this;
          return cljs.core._reset_BANG_.call(null, s__$1, cljs.core.apply.call(null, f, self__.get_state.call(null), x, y, more));
        };
      }(get_state);
      om_tools.core.t19781.getBasis = function(get_state) {
        return function() {
          return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "state-proxy", "state-proxy", 1999831324, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
          "owner", "owner", 1247919588, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns an atom-like object for reading and writing Om component\n   state.\n\n   Note: Behavior may exactly not match atoms when deref'ing\n   immediately following a reset!/swap! because Om processes state\n   changes asynchronously in separate render phases."], null)), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null), new cljs.core.Symbol(null, "get-state", "get-state", 
          -1081972112, null), new cljs.core.Symbol(null, "meta19782", "meta19782", -2121435557, null)], null);
        };
      }(get_state);
      om_tools.core.t19781.cljs$lang$type = true;
      om_tools.core.t19781.cljs$lang$ctorStr = "om-tools.core/t19781";
      om_tools.core.t19781.cljs$lang$ctorPrWriter = function(get_state) {
        return function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
          return cljs.core._write.call(null, writer__5106__auto__, "om-tools.core/t19781");
        };
      }(get_state);
      om_tools.core.__GT_t19781 = function(get_state) {
        return function om_tools$core$state_proxy_$___GT_t19781(state_proxy__$1, owner__$1, get_state__$1, meta19782) {
          return new om_tools.core.t19781(state_proxy__$1, owner__$1, get_state__$1, meta19782);
        };
      }(get_state);
    }
    return new om_tools.core.t19781(om_tools$core$state_proxy, owner, get_state, cljs.core.PersistentArrayMap.EMPTY);
  } else {
    return null;
  }
};
om_tools.core.set_state_QMARK__BANG_ = function om_tools$core$set_state_QMARK__BANG_() {
  var args19784 = [];
  var len__5565__auto___19787 = arguments.length;
  var i__5566__auto___19788 = 0;
  while (true) {
    if (i__5566__auto___19788 < len__5565__auto___19787) {
      args19784.push(arguments[i__5566__auto___19788]);
      var G__19789 = i__5566__auto___19788 + 1;
      i__5566__auto___19788 = G__19789;
      continue;
    } else {
    }
    break;
  }
  var G__19786 = args19784.length;
  switch(G__19786) {
    case 2:
      return om_tools.core.set_state_QMARK__BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return om_tools.core.set_state_QMARK__BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args19784.length)].join(""));;
  }
};
om_tools.core.set_state_QMARK__BANG_.cljs$core$IFn$_invoke$arity$2 = function(owner, v) {
  if (cljs.core._EQ_.call(null, v, om.core.get_state.call(null, owner))) {
    return null;
  } else {
    return om.core.set_state_BANG_.call(null, owner, v);
  }
};
om_tools.core.set_state_QMARK__BANG_.cljs$core$IFn$_invoke$arity$3 = function(owner, korks, v) {
  if (cljs.core._EQ_.call(null, v, om.core.get_state.call(null, owner, korks))) {
    return null;
  } else {
    return om.core.set_state_BANG_.call(null, owner, korks, v);
  }
};
om_tools.core.set_state_QMARK__BANG_.cljs$lang$maxFixedArity = 3;
goog.provide("om_bootstrap.util");
goog.require("cljs.core");
goog.require("goog.object");
goog.require("om.core");
goog.require("schema.core");
om_bootstrap.util.merge_with_fns = function om_bootstrap$util$merge_with_fns(k__GT_fn, maps) {
  var merge_entry = function om_bootstrap$util$merge_with_fns_$_merge_entry(m, e) {
    var k = cljs.core.key.call(null, e);
    var v = cljs.core.val.call(null, e);
    var temp__4423__auto__ = function() {
      var and__4514__auto__ = cljs.core.contains_QMARK_.call(null, m, k);
      if (and__4514__auto__) {
        return k__GT_fn.call(null, k);
      } else {
        return and__4514__auto__;
      }
    }();
    if (cljs.core.truth_(temp__4423__auto__)) {
      var f = temp__4423__auto__;
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), v));
    } else {
      return cljs.core.assoc.call(null, m, k, v);
    }
  };
  var merge = function om_bootstrap$util$merge_with_fns_$_merge(m1, m2) {
    return cljs.core.reduce.call(null, merge_entry, function() {
      var or__4526__auto__ = m1;
      if (cljs.core.truth_(or__4526__auto__)) {
        return or__4526__auto__;
      } else {
        return cljs.core.PersistentArrayMap.EMPTY;
      }
    }(), cljs.core.seq.call(null, m2));
  };
  return cljs.core.reduce.call(null, merge, cljs.core.PersistentArrayMap.EMPTY, maps);
};
var ufv___19249 = schema.utils.use_fn_validation;
var output_schema19244_19250 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.Any], null);
var input_schema19245_19251 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, cljs.core.with_meta(new cljs.core.Symbol(null, "x", "x", -555367584, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("s", "Any", "s/Any", 1277490110, null)], null)))], null);
var input_checker19246_19252 = schema.core.checker.call(null, input_schema19245_19251);
var output_checker19247_19253 = schema.core.checker.call(null, output_schema19244_19250);
om_bootstrap.util.collectify = function(ufv___19249, output_schema19244_19250, input_schema19245_19251, input_checker19246_19252, output_checker19247_19253) {
  return function om_bootstrap$util$collectify(G__19248) {
    var validate__6953__auto__ = ufv___19249.get_cell();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var args__6954__auto___19254 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__19248], null);
      var temp__4425__auto___19255 = input_checker19246_19252.call(null, args__6954__auto___19254);
      if (cljs.core.truth_(temp__4425__auto___19255)) {
        var error__6955__auto___19256 = temp__4425__auto___19255;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "collectify", "collectify", -1779603030, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol("s", "Any", "s/Any", 1277490110, null)], null)], null)), cljs.core.pr_str.call(null, 
        error__6955__auto___19256)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema19245_19251, new cljs.core.Keyword(null, "value", "value", 305978217), args__6954__auto___19254, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___19256], null));
      } else {
      }
    } else {
    }
    var o__6956__auto__ = function() {
      var x = G__19248;
      while (true) {
        if (cljs.core.sequential_QMARK_.call(null, x)) {
          return x;
        } else {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [x], null);
        }
        break;
      }
    }();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var temp__4425__auto___19257 = output_checker19247_19253.call(null, o__6956__auto__);
      if (cljs.core.truth_(temp__4425__auto___19257)) {
        var error__6955__auto___19258 = temp__4425__auto___19257;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "collectify", "collectify", -1779603030, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol("s", "Any", "s/Any", 1277490110, null)], null)], null)), cljs.core.pr_str.call(null, 
        error__6955__auto___19258)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema19244_19250, new cljs.core.Keyword(null, "value", "value", 305978217), o__6956__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___19258], null));
      } else {
      }
    } else {
    }
    return o__6956__auto__;
  };
}(ufv___19249, output_schema19244_19250, input_schema19245_19251, input_checker19246_19252, output_checker19247_19253);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, om_bootstrap.util.collectify), schema.core.make_fn_schema.call(null, output_schema19244_19250, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema19245_19251], null)));
om_bootstrap.util.get_props = function om_bootstrap$util$get_props(x) {
  return x.props["__om_cursor"];
};
var ufv___19264 = schema.utils.use_fn_validation;
var output_schema19259_19265 = schema.core.Bool;
var input_schema19260_19266 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, cljs.core.with_meta(new cljs.core.Symbol(null, "x", "x", -555367584, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)))], null);
var input_checker19261_19267 = schema.core.checker.call(null, input_schema19260_19266);
var output_checker19262_19268 = schema.core.checker.call(null, output_schema19259_19265);
om_bootstrap.util.om_component_QMARK_ = function(ufv___19264, output_schema19259_19265, input_schema19260_19266, input_checker19261_19267, output_checker19262_19268) {
  return function om_bootstrap$util$om_component_QMARK_(G__19263) {
    var validate__6953__auto__ = ufv___19264.get_cell();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var args__6954__auto___19269 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__19263], null);
      var temp__4425__auto___19270 = input_checker19261_19267.call(null, args__6954__auto___19269);
      if (cljs.core.truth_(temp__4425__auto___19270)) {
        var error__6955__auto___19271 = temp__4425__auto___19270;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "om-component?", "om-component?", 534068525, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("s", "Bool", "s/Bool", 195910545, null)], null)), cljs.core.pr_str.call(null, error__6955__auto___19271)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, 
        "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema19260_19266, new cljs.core.Keyword(null, "value", "value", 305978217), args__6954__auto___19269, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___19271], null));
      } else {
      }
    } else {
    }
    var o__6956__auto__ = function() {
      var x = G__19263;
      while (true) {
        return cljs.core.boolean$.call(null, om_bootstrap.util.get_props.call(null, x));
        break;
      }
    }();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var temp__4425__auto___19272 = output_checker19262_19268.call(null, o__6956__auto__);
      if (cljs.core.truth_(temp__4425__auto___19272)) {
        var error__6955__auto___19273 = temp__4425__auto___19272;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "om-component?", "om-component?", 534068525, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("s", "Bool", "s/Bool", 195910545, null)], null)), cljs.core.pr_str.call(null, error__6955__auto___19273)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, 
        "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema19259_19265, new cljs.core.Keyword(null, "value", "value", 305978217), o__6956__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___19273], null));
      } else {
      }
    } else {
    }
    return o__6956__auto__;
  };
}(ufv___19264, output_schema19259_19265, input_schema19260_19266, input_checker19261_19267, output_checker19262_19268);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, om_bootstrap.util.om_component_QMARK_), schema.core.make_fn_schema.call(null, output_schema19259_19265, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema19260_19266], null)));
var ufv___19279 = schema.utils.use_fn_validation;
var output_schema19274_19280 = schema.core.Bool;
var input_schema19275_19281 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, cljs.core.with_meta(new cljs.core.Symbol(null, "child", "child", -2030468224, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)))], null);
var input_checker19276_19282 = schema.core.checker.call(null, input_schema19275_19281);
var output_checker19277_19283 = schema.core.checker.call(null, output_schema19274_19280);
om_bootstrap.util.strict_valid_component_QMARK_ = function(ufv___19279, output_schema19274_19280, input_schema19275_19281, input_checker19276_19282, output_checker19277_19283) {
  return function om_bootstrap$util$strict_valid_component_QMARK_(G__19278) {
    var validate__6953__auto__ = ufv___19279.get_cell();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var args__6954__auto___19284 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__19278], null);
      var temp__4425__auto___19285 = input_checker19276_19282.call(null, args__6954__auto___19284);
      if (cljs.core.truth_(temp__4425__auto___19285)) {
        var error__6955__auto___19286 = temp__4425__auto___19285;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "strict-valid-component?", "strict-valid-component?", 130165335, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("s", "Bool", "s/Bool", 195910545, null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "TODO: Once Om updates its externs to include this file, we can\n  remove the janky aget call."], 
        null)), cljs.core.pr_str.call(null, error__6955__auto___19286)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema19275_19281, new cljs.core.Keyword(null, "value", "value", 305978217), args__6954__auto___19284, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___19286], 
        null));
      } else {
      }
    } else {
    }
    var o__6956__auto__ = function() {
      var child = G__19278;
      while (true) {
        return React["isValidElement"].call(null, child);
        break;
      }
    }();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var temp__4425__auto___19287 = output_checker19277_19283.call(null, o__6956__auto__);
      if (cljs.core.truth_(temp__4425__auto___19287)) {
        var error__6955__auto___19288 = temp__4425__auto___19287;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "strict-valid-component?", "strict-valid-component?", 130165335, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("s", "Bool", "s/Bool", 195910545, null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "TODO: Once Om updates its externs to include this file, we can\n  remove the janky aget call."], 
        null)), cljs.core.pr_str.call(null, error__6955__auto___19288)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema19274_19280, new cljs.core.Keyword(null, "value", "value", 305978217), o__6956__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___19288], 
        null));
      } else {
      }
    } else {
    }
    return o__6956__auto__;
  };
}(ufv___19279, output_schema19274_19280, input_schema19275_19281, input_checker19276_19282, output_checker19277_19283);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, om_bootstrap.util.strict_valid_component_QMARK_), schema.core.make_fn_schema.call(null, output_schema19274_19280, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema19275_19281], null)));
var ufv___19294 = schema.utils.use_fn_validation;
var output_schema19289_19295 = schema.core.Bool;
var input_schema19290_19296 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, cljs.core.with_meta(new cljs.core.Symbol(null, "child", "child", -2030468224, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)))], null);
var input_checker19291_19297 = schema.core.checker.call(null, input_schema19290_19296);
var output_checker19292_19298 = schema.core.checker.call(null, output_schema19289_19295);
om_bootstrap.util.valid_component_QMARK_ = function(ufv___19294, output_schema19289_19295, input_schema19290_19296, input_checker19291_19297, output_checker19292_19298) {
  return function om_bootstrap$util$valid_component_QMARK_(G__19293) {
    var validate__6953__auto__ = ufv___19294.get_cell();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var args__6954__auto___19299 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__19293], null);
      var temp__4425__auto___19300 = input_checker19291_19297.call(null, args__6954__auto___19299);
      if (cljs.core.truth_(temp__4425__auto___19300)) {
        var error__6955__auto___19301 = temp__4425__auto___19300;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "valid-component?", "valid-component?", -519675438, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("s", "Bool", "s/Bool", 195910545, null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns true if the supplied argument is a valid React component,\n  false otherwise."], 
        null)), cljs.core.pr_str.call(null, error__6955__auto___19301)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema19290_19296, new cljs.core.Keyword(null, "value", "value", 305978217), args__6954__auto___19299, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___19301], 
        null));
      } else {
      }
    } else {
    }
    var o__6956__auto__ = function() {
      var child = G__19293;
      while (true) {
        var or__4526__auto__ = typeof child === "string";
        if (or__4526__auto__) {
          return or__4526__auto__;
        } else {
          var or__4526__auto____$1 = typeof child === "number";
          if (or__4526__auto____$1) {
            return or__4526__auto____$1;
          } else {
            return om_bootstrap.util.strict_valid_component_QMARK_.call(null, child);
          }
        }
        break;
      }
    }();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var temp__4425__auto___19302 = output_checker19292_19298.call(null, o__6956__auto__);
      if (cljs.core.truth_(temp__4425__auto___19302)) {
        var error__6955__auto___19303 = temp__4425__auto___19302;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "valid-component?", "valid-component?", -519675438, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("s", "Bool", "s/Bool", 195910545, null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns true if the supplied argument is a valid React component,\n  false otherwise."], 
        null)), cljs.core.pr_str.call(null, error__6955__auto___19303)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema19289_19295, new cljs.core.Keyword(null, "value", "value", 305978217), o__6956__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___19303], 
        null));
      } else {
      }
    } else {
    }
    return o__6956__auto__;
  };
}(ufv___19294, output_schema19289_19295, input_schema19290_19296, input_checker19291_19297, output_checker19292_19298);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, om_bootstrap.util.valid_component_QMARK_), schema.core.make_fn_schema.call(null, output_schema19289_19295, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema19290_19296], null)));
var ufv___19309 = schema.utils.use_fn_validation;
var output_schema19304_19310 = schema.core.Bool;
var input_schema19305_19311 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, cljs.core.with_meta(new cljs.core.Symbol(null, "children", "children", 699969545, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)))], null);
var input_checker19306_19312 = schema.core.checker.call(null, input_schema19305_19311);
var output_checker19307_19313 = schema.core.checker.call(null, output_schema19304_19310);
om_bootstrap.util.some_valid_component_QMARK_ = function(ufv___19309, output_schema19304_19310, input_schema19305_19311, input_checker19306_19312, output_checker19307_19313) {
  return function om_bootstrap$util$some_valid_component_QMARK_(G__19308) {
    var validate__6953__auto__ = ufv___19309.get_cell();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var args__6954__auto___19314 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__19308], null);
      var temp__4425__auto___19315 = input_checker19306_19312.call(null, args__6954__auto___19314);
      if (cljs.core.truth_(temp__4425__auto___19315)) {
        var error__6955__auto___19316 = temp__4425__auto___19315;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "some-valid-component?", "some-valid-component?", -171767082, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("s", "Bool", "s/Bool", 195910545, null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns true if the supplied sequence contains some valid React component,\n  false otherwise."], 
        null)), cljs.core.pr_str.call(null, error__6955__auto___19316)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema19305_19311, new cljs.core.Keyword(null, "value", "value", 305978217), args__6954__auto___19314, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___19316], 
        null));
      } else {
      }
    } else {
    }
    var o__6956__auto__ = function() {
      var children = G__19308;
      while (true) {
        return cljs.core.boolean$.call(null, cljs.core.some.call(null, om_bootstrap.util.valid_component_QMARK_, children));
        break;
      }
    }();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var temp__4425__auto___19317 = output_checker19307_19313.call(null, o__6956__auto__);
      if (cljs.core.truth_(temp__4425__auto___19317)) {
        var error__6955__auto___19318 = temp__4425__auto___19317;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "some-valid-component?", "some-valid-component?", -171767082, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("s", "Bool", "s/Bool", 195910545, null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns true if the supplied sequence contains some valid React component,\n  false otherwise."], 
        null)), cljs.core.pr_str.call(null, error__6955__auto___19318)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema19304_19310, new cljs.core.Keyword(null, "value", "value", 305978217), o__6956__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___19318], 
        null));
      } else {
      }
    } else {
    }
    return o__6956__auto__;
  };
}(ufv___19309, output_schema19304_19310, input_schema19305_19311, input_checker19306_19312, output_checker19307_19313);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, om_bootstrap.util.some_valid_component_QMARK_), schema.core.make_fn_schema.call(null, output_schema19304_19310, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema19305_19311], null)));
om_bootstrap.util.chain_fns = function om_bootstrap$util$chain_fns(l, r) {
  if (cljs.core.truth_(function() {
    var and__4514__auto__ = l;
    if (cljs.core.truth_(and__4514__auto__)) {
      return r;
    } else {
      return and__4514__auto__;
    }
  }())) {
    return function() {
      var G__19319__delegate = function(args) {
        cljs.core.apply.call(null, l, args);
        return cljs.core.apply.call(null, r, args);
      };
      var G__19319 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__19320__i = 0, G__19320__a = new Array(arguments.length - 0);
          while (G__19320__i < G__19320__a.length) {
            G__19320__a[G__19320__i] = arguments[G__19320__i + 0];
            ++G__19320__i;
          }
          args = new cljs.core.IndexedSeq(G__19320__a, 0);
        }
        return G__19319__delegate.call(this, args);
      };
      G__19319.cljs$lang$maxFixedArity = 0;
      G__19319.cljs$lang$applyTo = function(arglist__19321) {
        var args = cljs.core.seq(arglist__19321);
        return G__19319__delegate(args);
      };
      G__19319.cljs$core$IFn$_invoke$arity$variadic = G__19319__delegate;
      return G__19319;
    }();
  } else {
    var or__4526__auto__ = l;
    if (cljs.core.truth_(or__4526__auto__)) {
      return or__4526__auto__;
    } else {
      return r;
    }
  }
};
om_bootstrap.util.react_merges = function() {
  var merge_class = function(l, r) {
    return [cljs.core.str(l), cljs.core.str(" "), cljs.core.str(r)].join("");
  };
  var orig_fn = function(merge_class) {
    return function(l, r) {
      var or__4526__auto__ = l;
      if (cljs.core.truth_(or__4526__auto__)) {
        return or__4526__auto__;
      } else {
        return r;
      }
    };
  }(merge_class);
  var empty_fn = function(merge_class, orig_fn) {
    return function(_, ___$1) {
      return null;
    };
  }(merge_class, orig_fn);
  return cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "children", "children", -940561982), new cljs.core.Keyword(null, "key", "key", -1516042587), new cljs.core.Keyword(null, "ref", "ref", 1289896967), new cljs.core.Keyword(null, "on-blur", "on-blur", 814300747), new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), new cljs.core.Keyword(null, "className", "className", -1983287057), new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.Keyword(null, 
  "on-select", "on-select", -192407950), new cljs.core.Keyword(null, "class", "class", -2030961996)], [empty_fn, empty_fn, orig_fn, om_bootstrap.util.chain_fns, om_bootstrap.util.chain_fns, merge_class, cljs.core.merge, om_bootstrap.util.chain_fns, merge_class]);
}();
om_bootstrap.util.merge_props = function om_bootstrap$util$merge_props() {
  var args__5572__auto__ = [];
  var len__5565__auto___19323 = arguments.length;
  var i__5566__auto___19324 = 0;
  while (true) {
    if (i__5566__auto___19324 < len__5565__auto___19323) {
      args__5572__auto__.push(arguments[i__5566__auto___19324]);
      var G__19325 = i__5566__auto___19324 + 1;
      i__5566__auto___19324 = G__19325;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return om_bootstrap.util.merge_props.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
om_bootstrap.util.merge_props.cljs$core$IFn$_invoke$arity$variadic = function(prop_maps) {
  var react_merge = function om_bootstrap$util$react_merge(xs) {
    return om_bootstrap.util.merge_with_fns.call(null, om_bootstrap.util.react_merges, xs);
  };
  var normalize_class = function om_bootstrap$util$normalize_class(m) {
    if (cljs.core.contains_QMARK_.call(null, m, new cljs.core.Keyword(null, "class", "class", -2030961996))) {
      return react_merge.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.dissoc.call(null, m, new cljs.core.Keyword(null, "class", "class", -2030961996)), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), (new cljs.core.Keyword(null, "class", "class", -2030961996)).cljs$core$IFn$_invoke$arity$1(m)], null)], null));
    } else {
      return m;
    }
  };
  var ret = react_merge.call(null, cljs.core.map.call(null, normalize_class, prop_maps));
  if (cljs.core.not.call(null, (new cljs.core.Keyword(null, "key", "key", -1516042587)).cljs$core$IFn$_invoke$arity$1(ret))) {
    return cljs.core.dissoc.call(null, ret, new cljs.core.Keyword(null, "key", "key", -1516042587));
  } else {
    return ret;
  }
};
om_bootstrap.util.merge_props.cljs$lang$maxFixedArity = 0;
om_bootstrap.util.merge_props.cljs$lang$applyTo = function(seq19322) {
  return om_bootstrap.util.merge_props.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq19322));
};
om_bootstrap.util.copy_js = function om_bootstrap$util$copy_js(arr) {
  var ret = {};
  var seq__19334_19338 = cljs.core.seq.call(null, cljs.core.js_keys.call(null, arr));
  var chunk__19335_19339 = null;
  var count__19336_19340 = 0;
  var i__19337_19341 = 0;
  while (true) {
    if (i__19337_19341 < count__19336_19340) {
      var k_19342 = cljs.core._nth.call(null, chunk__19335_19339, i__19337_19341);
      if (cljs.core.truth_(arr.hasOwnProperty(k_19342))) {
        ret[k_19342] = arr[k_19342];
      } else {
      }
      var G__19343 = seq__19334_19338;
      var G__19344 = chunk__19335_19339;
      var G__19345 = count__19336_19340;
      var G__19346 = i__19337_19341 + 1;
      seq__19334_19338 = G__19343;
      chunk__19335_19339 = G__19344;
      count__19336_19340 = G__19345;
      i__19337_19341 = G__19346;
      continue;
    } else {
      var temp__4425__auto___19347 = cljs.core.seq.call(null, seq__19334_19338);
      if (temp__4425__auto___19347) {
        var seq__19334_19348__$1 = temp__4425__auto___19347;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__19334_19348__$1)) {
          var c__5310__auto___19349 = cljs.core.chunk_first.call(null, seq__19334_19348__$1);
          var G__19350 = cljs.core.chunk_rest.call(null, seq__19334_19348__$1);
          var G__19351 = c__5310__auto___19349;
          var G__19352 = cljs.core.count.call(null, c__5310__auto___19349);
          var G__19353 = 0;
          seq__19334_19338 = G__19350;
          chunk__19335_19339 = G__19351;
          count__19336_19340 = G__19352;
          i__19337_19341 = G__19353;
          continue;
        } else {
          var k_19354 = cljs.core.first.call(null, seq__19334_19348__$1);
          if (cljs.core.truth_(arr.hasOwnProperty(k_19354))) {
            ret[k_19354] = arr[k_19354];
          } else {
          }
          var G__19355 = cljs.core.next.call(null, seq__19334_19348__$1);
          var G__19356 = null;
          var G__19357 = 0;
          var G__19358 = 0;
          seq__19334_19338 = G__19355;
          chunk__19335_19339 = G__19356;
          count__19336_19340 = G__19357;
          i__19337_19341 = G__19358;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return ret;
};
om_bootstrap.util.create_element = function om_bootstrap$util$create_element() {
  var args19359 = [];
  var len__5565__auto___19362 = arguments.length;
  var i__5566__auto___19363 = 0;
  while (true) {
    if (i__5566__auto___19363 < len__5565__auto___19362) {
      args19359.push(arguments[i__5566__auto___19363]);
      var G__19364 = i__5566__auto___19363 + 1;
      i__5566__auto___19363 = G__19364;
      continue;
    } else {
    }
    break;
  }
  var G__19361 = args19359.length;
  switch(G__19361) {
    case 1:
      return om_bootstrap.util.create_element.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return om_bootstrap.util.create_element.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args19359.length)].join(""));;
  }
};
om_bootstrap.util.create_element.cljs$core$IFn$_invoke$arity$1 = function(child) {
  return om_bootstrap.util.create_element.call(null, child, null);
};
om_bootstrap.util.create_element.cljs$core$IFn$_invoke$arity$2 = function(child, props) {
  return React.createElement(child.type, props);
};
om_bootstrap.util.create_element.cljs$lang$maxFixedArity = 2;
om_bootstrap.util.clone_om = function om_bootstrap$util$clone_om(child, extra_props) {
  var om_props = om_bootstrap.util.get_props.call(null, child);
  var props = {};
  var cloned_child = goog.object.clone(child);
  goog.object.extend(props, child.props, {"__om_cursor":cljs.core.fn_QMARK_.call(null, extra_props) ? extra_props.call(null, om_props) : om_bootstrap.util.merge_props.call(null, om_props, extra_props)});
  goog.object.extend(cloned_child, {"props":props});
  return cloned_child;
};
om_bootstrap.util.clone_basic_react = function om_bootstrap$util$clone_basic_react(child, extra_props) {
  var props = cljs.core.js__GT_clj.call(null, child.props, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), true);
  var new_props = cljs.core.merge.call(null, cljs.core.fn_QMARK_.call(null, extra_props) ? extra_props.call(null, props) : om_bootstrap.util.merge_props.call(null, props, extra_props), function() {
    var temp__4425__auto__ = (new cljs.core.Keyword(null, "children", "children", -940561982)).cljs$core$IFn$_invoke$arity$1(props);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var children = temp__4425__auto__;
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "children", "children", -940561982), children], null);
    } else {
      return null;
    }
  }());
  return om_bootstrap.util.create_element.call(null, child, cljs.core.clj__GT_js.call(null, new_props));
};
om_bootstrap.util.clone_with_props = function om_bootstrap$util$clone_with_props() {
  var args19366 = [];
  var len__5565__auto___19369 = arguments.length;
  var i__5566__auto___19370 = 0;
  while (true) {
    if (i__5566__auto___19370 < len__5565__auto___19369) {
      args19366.push(arguments[i__5566__auto___19370]);
      var G__19371 = i__5566__auto___19370 + 1;
      i__5566__auto___19370 = G__19371;
      continue;
    } else {
    }
    break;
  }
  var G__19368 = args19366.length;
  switch(G__19368) {
    case 1:
      return om_bootstrap.util.clone_with_props.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return om_bootstrap.util.clone_with_props.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args19366.length)].join(""));;
  }
};
om_bootstrap.util.clone_with_props.cljs$core$IFn$_invoke$arity$1 = function(child) {
  return om_bootstrap.util.clone_with_props.call(null, child, cljs.core.PersistentArrayMap.EMPTY);
};
om_bootstrap.util.clone_with_props.cljs$core$IFn$_invoke$arity$2 = function(child, extra_props) {
  if (cljs.core.not.call(null, om_bootstrap.util.strict_valid_component_QMARK_.call(null, child))) {
    return child;
  } else {
    if (cljs.core.truth_(om_bootstrap.util.om_component_QMARK_.call(null, child))) {
      return om_bootstrap.util.clone_om.call(null, child, extra_props);
    } else {
      if (cljs.core.map_QMARK_.call(null, extra_props) && cljs.core.empty_QMARK_.call(null, extra_props)) {
        return om_bootstrap.util.create_element.call(null, child, child.props);
      } else {
        return om_bootstrap.util.clone_basic_react.call(null, child, extra_props);
      }
    }
  }
};
om_bootstrap.util.clone_with_props.cljs$lang$maxFixedArity = 2;
goog.provide("om_bootstrap.types");
goog.require("cljs.core");
goog.require("schema.core");
var ufv___19153 = schema.utils.use_fn_validation;
var output_schema19148_19154 = schema.core.Any;
var input_schema19149_19155 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, new cljs.core.PersistentArrayMap.fromArray([schema.core.Any, schema.core.Any], true, false), cljs.core.with_meta(new cljs.core.Symbol(null, "schema", "schema", 58529736, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol("s", "Any", "s/Any", 
1277490110, null), new cljs.core.Symbol("s", "Any", "s/Any", 1277490110, null)], null)], null)))], null);
var input_checker19150_19156 = schema.core.checker.call(null, input_schema19149_19155);
var output_checker19151_19157 = schema.core.checker.call(null, output_schema19148_19154);
om_bootstrap.types.schema_keys = function(ufv___19153, output_schema19148_19154, input_schema19149_19155, input_checker19150_19156, output_checker19151_19157) {
  return function om_bootstrap$types$schema_keys(G__19152) {
    var validate__6953__auto__ = ufv___19153.get_cell();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var args__6954__auto___19158 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__19152], null);
      var temp__4425__auto___19159 = input_checker19150_19156.call(null, args__6954__auto___19158);
      if (cljs.core.truth_(temp__4425__auto___19159)) {
        var error__6955__auto___19160 = temp__4425__auto___19159;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "schema-keys", "schema-keys", 947810359, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns all keys from a schema."], null)), 
        cljs.core.pr_str.call(null, error__6955__auto___19160)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema19149_19155, new cljs.core.Keyword(null, "value", "value", 305978217), args__6954__auto___19158, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___19160], 
        null));
      } else {
      }
    } else {
    }
    var o__6956__auto__ = function() {
      var schema__$1 = G__19152;
      while (true) {
        return cljs.core.map.call(null, function(validate__6953__auto__, ufv___19153, output_schema19148_19154, input_schema19149_19155, input_checker19150_19156, output_checker19151_19157) {
          return function(k) {
            if (cljs.core.truth_(schema.core.optional_key_QMARK_.call(null, k))) {
              return (new cljs.core.Keyword(null, "k", "k", -2146297393)).cljs$core$IFn$_invoke$arity$1(k);
            } else {
              return k;
            }
          };
        }(validate__6953__auto__, ufv___19153, output_schema19148_19154, input_schema19149_19155, input_checker19150_19156, output_checker19151_19157), cljs.core.keys.call(null, schema__$1));
        break;
      }
    }();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var temp__4425__auto___19161 = output_checker19151_19157.call(null, o__6956__auto__);
      if (cljs.core.truth_(temp__4425__auto___19161)) {
        var error__6955__auto___19162 = temp__4425__auto___19161;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "schema-keys", "schema-keys", 947810359, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns all keys from a schema."], null)), 
        cljs.core.pr_str.call(null, error__6955__auto___19162)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema19148_19154, new cljs.core.Keyword(null, "value", "value", 305978217), o__6956__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___19162], null));
      } else {
      }
    } else {
    }
    return o__6956__auto__;
  };
}(ufv___19153, output_schema19148_19154, input_schema19149_19155, input_checker19150_19156, output_checker19151_19157);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, om_bootstrap.types.schema_keys), schema.core.make_fn_schema.call(null, output_schema19148_19154, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema19149_19155], null)));
var ufv___19168 = schema.utils.use_fn_validation;
var output_schema19163_19169 = schema.core.Any;
var input_schema19164_19170 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, cljs.core.with_meta(new cljs.core.Symbol(null, "schema", "schema", 58529736, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)))], null);
var input_checker19165_19171 = schema.core.checker.call(null, input_schema19164_19170);
var output_checker19166_19172 = schema.core.checker.call(null, output_schema19163_19169);
om_bootstrap.types.at_least = function(ufv___19168, output_schema19163_19169, input_schema19164_19170, input_checker19165_19171, output_checker19166_19172) {
  return function om_bootstrap$types$at_least(G__19167) {
    var validate__6953__auto__ = ufv___19168.get_cell();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var args__6954__auto___19173 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__19167], null);
      var temp__4425__auto___19174 = input_checker19165_19171.call(null, args__6954__auto___19173);
      if (cljs.core.truth_(temp__4425__auto___19174)) {
        var error__6955__auto___19175 = temp__4425__auto___19174;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "at-least", "at-least", 1907728373, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns a map schema that accepts the supplied map schema, plus any\n  other optional keys that show up in the map. Such a schema can only\n  enforce that required keys are missing."], 
        null)), cljs.core.pr_str.call(null, error__6955__auto___19175)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema19164_19170, new cljs.core.Keyword(null, "value", "value", 305978217), args__6954__auto___19173, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___19175], 
        null));
      } else {
      }
    } else {
    }
    var o__6956__auto__ = function() {
      var schema__$1 = G__19167;
      while (true) {
        return cljs.core.assoc.call(null, schema__$1, schema.core.Any, schema.core.Any);
        break;
      }
    }();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var temp__4425__auto___19176 = output_checker19166_19172.call(null, o__6956__auto__);
      if (cljs.core.truth_(temp__4425__auto___19176)) {
        var error__6955__auto___19177 = temp__4425__auto___19176;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "at-least", "at-least", 1907728373, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns a map schema that accepts the supplied map schema, plus any\n  other optional keys that show up in the map. Such a schema can only\n  enforce that required keys are missing."], 
        null)), cljs.core.pr_str.call(null, error__6955__auto___19177)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema19163_19169, new cljs.core.Keyword(null, "value", "value", 305978217), o__6956__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___19177], 
        null));
      } else {
      }
    } else {
    }
    return o__6956__auto__;
  };
}(ufv___19168, output_schema19163_19169, input_schema19164_19170, input_checker19165_19171, output_checker19166_19172);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, om_bootstrap.types.at_least), schema.core.make_fn_schema.call(null, output_schema19163_19169, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema19164_19170], null)));
om_bootstrap.types.Component = schema.core.named.call(null, schema.core.Any, "Alias for an om component, since I don't know what type to put here.");
om_bootstrap.types.Renderable = schema.core.named.call(null, schema.core.Any, "Anything that can get rendered.");
om_bootstrap.types.class_map = cljs.core.PersistentHashMap.fromArrays(["alert", "label", "form", "progress-bar", "modal", "navbar", "button-toolbar", "panel-group", "nav", "column", "row", "input-group", "panel", "well", "button-group", "button", "glyphicon"], ["alert", "label", "form", "progress-bar", "modal", "navbar", "btn-toolbar", "panel-group", "nav", "col", "row", "input-group", "panel", "well", "btn-group", "btn", "glyphicon"]);
om_bootstrap.types.style_map = cljs.core.PersistentHashMap.fromArrays(["success", "warning", "inline", "pills", "info", "tabs", "primary", "danger", "link", "default"], ["success", "warning", "inline", "pills", "info", "tabs", "primary", "danger", "link", "default"]);
om_bootstrap.types.size_map = new cljs.core.PersistentArrayMap(null, 4, ["large", "lg", "medium", "md", "small", "sm", "xsmall", "xs"], null);
om_bootstrap.types.BSClass = cljs.core.apply.call(null, schema.core.enum$, cljs.core.keys.call(null, om_bootstrap.types.class_map));
om_bootstrap.types.BSStyle = cljs.core.apply.call(null, schema.core.enum$, cljs.core.keys.call(null, om_bootstrap.types.style_map));
om_bootstrap.types.BSSize = cljs.core.apply.call(null, schema.core.enum$, cljs.core.keys.call(null, om_bootstrap.types.size_map));
om_bootstrap.types.BootstrapClass = new cljs.core.PersistentArrayMap.fromArray([schema.core.optional_key.call(null, new cljs.core.Keyword(null, "bs-class", "bs-class", 1438130590)), om_bootstrap.types.BSClass, schema.core.optional_key.call(null, new cljs.core.Keyword(null, "bs-style", "bs-style", 1424423998)), om_bootstrap.types.BSStyle, schema.core.optional_key.call(null, new cljs.core.Keyword(null, "bs-size", "bs-size", 1567732754)), om_bootstrap.types.BSSize], true, false);
om_bootstrap.types.bootstrap = function om_bootstrap$types$bootstrap(schema__$1) {
  var bootstrap_schema = cljs.core.apply.call(null, cljs.core.dissoc, om_bootstrap.types.BootstrapClass, cljs.core.map.call(null, schema.core.optional_key, cljs.core.keys.call(null, cljs.core.select_keys.call(null, schema__$1, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "bs-class", "bs-class", 1438130590), new cljs.core.Keyword(null, "bs-style", "bs-style", 1424423998), new cljs.core.Keyword(null, "bs-size", "bs-size", 1567732754)], 
  null)))));
  return om_bootstrap.types.at_least.call(null, cljs.core.merge.call(null, bootstrap_schema, schema__$1));
};
var ufv___19193 = schema.utils.use_fn_validation;
var output_schema19178_19194 = schema.core.pair.call(null, new cljs.core.PersistentArrayMap.fromArray([schema.core.Any, schema.core.Any], true, false), "om-bootstrap options.", new cljs.core.PersistentArrayMap.fromArray([schema.core.Any, schema.core.Any], true, false), "all other props.");
var input_schema19179_19195 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, cljs.core.with_meta(new cljs.core.Symbol(null, "schema", "schema", 58529736, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null))), schema.core.one.call(null, schema.core.Any, cljs.core.with_meta(new cljs.core.Symbol(null, 
"opts", "opts", 1795607228, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)))], null);
var input_schema19184_19196 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, cljs.core.with_meta(new cljs.core.Symbol(null, "schema", "schema", 58529736, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null))), schema.core.one.call(null, schema.core.Any, cljs.core.with_meta(new cljs.core.Symbol(null, 
"opts", "opts", 1795607228, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null))), schema.core.one.call(null, schema.core.Any, cljs.core.with_meta(new cljs.core.Symbol(null, "defaults", "defaults", -1678408555, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", 
"Any", "schema.core/Any", -1891898271, null)], null)))], null);
var input_checker19180_19197 = schema.core.checker.call(null, input_schema19179_19195);
var output_checker19181_19198 = schema.core.checker.call(null, output_schema19178_19194);
var input_checker19185_19199 = schema.core.checker.call(null, input_schema19184_19196);
var output_checker19186_19200 = schema.core.checker.call(null, output_schema19178_19194);
om_bootstrap.types.separate = function(ufv___19193, output_schema19178_19194, input_schema19179_19195, input_schema19184_19196, input_checker19180_19197, output_checker19181_19198, input_checker19185_19199, output_checker19186_19200) {
  return function om_bootstrap$types$separate() {
    var args19190 = [];
    var len__5565__auto___19201 = arguments.length;
    var i__5566__auto___19202 = 0;
    while (true) {
      if (i__5566__auto___19202 < len__5565__auto___19201) {
        args19190.push(arguments[i__5566__auto___19202]);
        var G__19203 = i__5566__auto___19202 + 1;
        i__5566__auto___19202 = G__19203;
        continue;
      } else {
      }
      break;
    }
    var G__19192 = args19190.length;
    switch(G__19192) {
      case 2:
        return om_bootstrap.types.separate.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
        break;
      case 3:
        return om_bootstrap.types.separate.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
        break;
      default:
        throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args19190.length)].join(""));;
    }
  };
}(ufv___19193, output_schema19178_19194, input_schema19179_19195, input_schema19184_19196, input_checker19180_19197, output_checker19181_19198, input_checker19185_19199, output_checker19186_19200);
om_bootstrap.types.separate.cljs$core$IFn$_invoke$arity$2 = function(ufv___19193, output_schema19178_19194, input_schema19179_19195, input_schema19184_19196, input_checker19180_19197, output_checker19181_19198, input_checker19185_19199, output_checker19186_19200) {
  return function(G__19182, G__19183) {
    var validate__6953__auto__ = ufv___19193.get_cell();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var args__6954__auto___19205 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__19182, G__19183], null);
      var temp__4425__auto___19206 = input_checker19180_19197.call(null, args__6954__auto___19205);
      if (cljs.core.truth_(temp__4425__auto___19206)) {
        var error__6955__auto___19207 = temp__4425__auto___19206;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "separate", "separate", 15703118, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), cljs.core.list(new cljs.core.Symbol("s", "pair", "s/pair", 1193014306, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol("s", "Any", "s/Any", 1277490110, null), new cljs.core.Symbol("s", 
        "Any", "s/Any", 1277490110, null)], null), "om-bootstrap options.", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol("s", "Any", "s/Any", 1277490110, null), new cljs.core.Symbol("s", "Any", "s/Any", 1277490110, null)], null), "all other props."), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns two maps; the first is all of the schema options, the\n  second is the REST of the options."], null)), cljs.core.pr_str.call(null, error__6955__auto___19207)), new cljs.core.PersistentArrayMap(null, 
        4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema19179_19195, new cljs.core.Keyword(null, "value", "value", 305978217), args__6954__auto___19205, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___19207], null));
      } else {
      }
    } else {
    }
    var o__6956__auto__ = function() {
      var schema__$1 = G__19182;
      var opts = G__19183;
      while (true) {
        return om_bootstrap.types.separate.call(null, schema__$1, opts, cljs.core.PersistentArrayMap.EMPTY);
        break;
      }
    }();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var temp__4425__auto___19208 = output_checker19181_19198.call(null, o__6956__auto__);
      if (cljs.core.truth_(temp__4425__auto___19208)) {
        var error__6955__auto___19209 = temp__4425__auto___19208;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "separate", "separate", 15703118, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), cljs.core.list(new cljs.core.Symbol("s", "pair", "s/pair", 1193014306, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol("s", "Any", "s/Any", 1277490110, null), new cljs.core.Symbol("s", 
        "Any", "s/Any", 1277490110, null)], null), "om-bootstrap options.", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol("s", "Any", "s/Any", 1277490110, null), new cljs.core.Symbol("s", "Any", "s/Any", 1277490110, null)], null), "all other props."), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns two maps; the first is all of the schema options, the\n  second is the REST of the options."], null)), cljs.core.pr_str.call(null, error__6955__auto___19209)), new cljs.core.PersistentArrayMap(null, 
        4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema19178_19194, new cljs.core.Keyword(null, "value", "value", 305978217), o__6956__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___19209], null));
      } else {
      }
    } else {
    }
    return o__6956__auto__;
  };
}(ufv___19193, output_schema19178_19194, input_schema19179_19195, input_schema19184_19196, input_checker19180_19197, output_checker19181_19198, input_checker19185_19199, output_checker19186_19200);
om_bootstrap.types.separate.cljs$core$IFn$_invoke$arity$3 = function(ufv___19193, output_schema19178_19194, input_schema19179_19195, input_schema19184_19196, input_checker19180_19197, output_checker19181_19198, input_checker19185_19199, output_checker19186_19200) {
  return function(G__19187, G__19188, G__19189) {
    var validate__6953__auto__ = ufv___19193.get_cell();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var args__6954__auto___19210 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__19187, G__19188, G__19189], null);
      var temp__4425__auto___19211 = input_checker19185_19199.call(null, args__6954__auto___19210);
      if (cljs.core.truth_(temp__4425__auto___19211)) {
        var error__6955__auto___19212 = temp__4425__auto___19211;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "separate", "separate", 15703118, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), cljs.core.list(new cljs.core.Symbol("s", "pair", "s/pair", 1193014306, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol("s", "Any", "s/Any", 1277490110, null), new cljs.core.Symbol("s", 
        "Any", "s/Any", 1277490110, null)], null), "om-bootstrap options.", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol("s", "Any", "s/Any", 1277490110, null), new cljs.core.Symbol("s", "Any", "s/Any", 1277490110, null)], null), "all other props."), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns two maps; the first is all of the schema options, the\n  second is the REST of the options."], null)), cljs.core.pr_str.call(null, error__6955__auto___19212)), new cljs.core.PersistentArrayMap(null, 
        4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema19184_19196, new cljs.core.Keyword(null, "value", "value", 305978217), args__6954__auto___19210, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___19212], null));
      } else {
      }
    } else {
    }
    var o__6956__auto__ = function() {
      var schema__$1 = G__19187;
      var opts = G__19188;
      var defaults = G__19189;
      while (true) {
        var ks = cljs.core.set.call(null, om_bootstrap.types.schema_keys.call(null, om_bootstrap.types.bootstrap.call(null, schema__$1)));
        var opts__$1 = cljs.core.merge.call(null, defaults, opts);
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.filter.call(null, cljs.core.comp.call(null, ks, cljs.core.key), opts__$1)), cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.remove.call(null, cljs.core.comp.call(null, ks, cljs.core.key), opts__$1))], null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var temp__4425__auto___19213 = output_checker19186_19200.call(null, o__6956__auto__);
      if (cljs.core.truth_(temp__4425__auto___19213)) {
        var error__6955__auto___19214 = temp__4425__auto___19213;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "separate", "separate", 15703118, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), cljs.core.list(new cljs.core.Symbol("s", "pair", "s/pair", 1193014306, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol("s", "Any", "s/Any", 1277490110, null), new cljs.core.Symbol("s", 
        "Any", "s/Any", 1277490110, null)], null), "om-bootstrap options.", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol("s", "Any", "s/Any", 1277490110, null), new cljs.core.Symbol("s", "Any", "s/Any", 1277490110, null)], null), "all other props."), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns two maps; the first is all of the schema options, the\n  second is the REST of the options."], null)), cljs.core.pr_str.call(null, error__6955__auto___19214)), new cljs.core.PersistentArrayMap(null, 
        4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema19178_19194, new cljs.core.Keyword(null, "value", "value", 305978217), o__6956__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___19214], null));
      } else {
      }
    } else {
    }
    return o__6956__auto__;
  };
}(ufv___19193, output_schema19178_19194, input_schema19179_19195, input_schema19184_19196, input_checker19180_19197, output_checker19181_19198, input_checker19185_19199, output_checker19186_19200);
om_bootstrap.types.separate.cljs$lang$maxFixedArity = 3;
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, om_bootstrap.types.separate), schema.core.make_fn_schema.call(null, output_schema19178_19194, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema19179_19195, input_schema19184_19196], null)));
var ufv___19232 = schema.utils.use_fn_validation;
var output_schema19215_19233 = new cljs.core.PersistentArrayMap.fromArray([schema.core.Str, schema.core.Bool], true, false);
var input_schema19216_19234 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, om_bootstrap.types.at_least.call(null, om_bootstrap.types.BootstrapClass), new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null))], null);
var input_checker19217_19235 = schema.core.checker.call(null, input_schema19216_19234);
var output_checker19218_19236 = schema.core.checker.call(null, output_schema19215_19233);
om_bootstrap.types.bs_class_set = function(ufv___19232, output_schema19215_19233, input_schema19216_19234, input_checker19217_19235, output_checker19218_19236) {
  return function om_bootstrap$types$bs_class_set(G__19219) {
    var validate__6953__auto__ = ufv___19232.get_cell();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var args__6954__auto___19237 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__19219], null);
      var temp__4425__auto___19238 = input_checker19217_19235.call(null, args__6954__auto___19237);
      if (cljs.core.truth_(temp__4425__auto___19238)) {
        var error__6955__auto___19239 = temp__4425__auto___19238;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "bs-class-set", "bs-class-set", 1457832630, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol("s", "Str", "s/Str", 907974338, null), new cljs.core.Symbol("s", "Bool", "s/Bool", 195910545, null)], null), new cljs.core.Keyword(null, 
        "doc", "doc", 1913296891), "Returns input for class-set."], null)), cljs.core.pr_str.call(null, error__6955__auto___19239)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema19216_19234, new cljs.core.Keyword(null, "value", "value", 305978217), args__6954__auto___19237, new cljs.core.Keyword(null, 
        "error", "error", -978969032), error__6955__auto___19239], null));
      } else {
      }
    } else {
    }
    var o__6956__auto__ = function() {
      var G__19227 = G__19219;
      var map__19228 = G__19227;
      var map__19228__$1 = (!(map__19228 == null) ? map__19228.cljs$lang$protocol_mask$partition0$ & 64 || map__19228.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__19228) : map__19228;
      var bs_class = cljs.core.get.call(null, map__19228__$1, new cljs.core.Keyword(null, "bs-class", "bs-class", 1438130590));
      var bs_style = cljs.core.get.call(null, map__19228__$1, new cljs.core.Keyword(null, "bs-style", "bs-style", 1424423998));
      var bs_size = cljs.core.get.call(null, map__19228__$1, new cljs.core.Keyword(null, "bs-size", "bs-size", 1567732754));
      var G__19227__$1 = G__19227;
      while (true) {
        var map__19230 = G__19227__$1;
        var map__19230__$1 = (!(map__19230 == null) ? map__19230.cljs$lang$protocol_mask$partition0$ & 64 || map__19230.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__19230) : map__19230;
        var bs_class__$1 = cljs.core.get.call(null, map__19230__$1, new cljs.core.Keyword(null, "bs-class", "bs-class", 1438130590));
        var bs_style__$1 = cljs.core.get.call(null, map__19230__$1, new cljs.core.Keyword(null, "bs-style", "bs-style", 1424423998));
        var bs_size__$1 = cljs.core.get.call(null, map__19230__$1, new cljs.core.Keyword(null, "bs-size", "bs-size", 1567732754));
        var temp__4423__auto__ = om_bootstrap.types.class_map.call(null, bs_class__$1);
        if (cljs.core.truth_(temp__4423__auto__)) {
          var klass = temp__4423__auto__;
          var prefix = [cljs.core.str(cljs.core.name.call(null, klass)), cljs.core.str("-")].join("");
          return cljs.core.merge.call(null, new cljs.core.PersistentArrayMap.fromArray([klass, true], true, false), function() {
            var temp__4425__auto__ = om_bootstrap.types.size_map.call(null, bs_size__$1);
            if (cljs.core.truth_(temp__4425__auto__)) {
              var size = temp__4425__auto__;
              return new cljs.core.PersistentArrayMap.fromArray([[cljs.core.str(prefix), cljs.core.str(cljs.core.name.call(null, size))].join(""), true], true, false);
            } else {
              return null;
            }
          }(), function() {
            var temp__4425__auto__ = om_bootstrap.types.style_map.call(null, bs_style__$1);
            if (cljs.core.truth_(temp__4425__auto__)) {
              var style = temp__4425__auto__;
              return new cljs.core.PersistentArrayMap.fromArray([[cljs.core.str(prefix), cljs.core.str(cljs.core.name.call(null, style))].join(""), true], true, false);
            } else {
              return null;
            }
          }());
        } else {
          return cljs.core.PersistentArrayMap.EMPTY;
        }
        break;
      }
    }();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var temp__4425__auto___19240 = output_checker19218_19236.call(null, o__6956__auto__);
      if (cljs.core.truth_(temp__4425__auto___19240)) {
        var error__6955__auto___19241 = temp__4425__auto___19240;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "bs-class-set", "bs-class-set", 1457832630, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol("s", "Str", "s/Str", 907974338, null), new cljs.core.Symbol("s", "Bool", "s/Bool", 195910545, null)], null), new cljs.core.Keyword(null, 
        "doc", "doc", 1913296891), "Returns input for class-set."], null)), cljs.core.pr_str.call(null, error__6955__auto___19241)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema19215_19233, new cljs.core.Keyword(null, "value", "value", 305978217), o__6956__auto__, new cljs.core.Keyword(null, 
        "error", "error", -978969032), error__6955__auto___19241], null));
      } else {
      }
    } else {
    }
    return o__6956__auto__;
  };
}(ufv___19232, output_schema19215_19233, input_schema19216_19234, input_checker19217_19235, output_checker19218_19236);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, om_bootstrap.types.bs_class_set), schema.core.make_fn_schema.call(null, output_schema19215_19233, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema19216_19234], null)));
goog.provide("om_bootstrap.modal");
goog.require("cljs.core");
goog.require("om_bootstrap.types");
goog.require("schema.core");
goog.require("om_bootstrap.util");
goog.require("om_tools.dom");
goog.require("om_tools.core");
goog.require("om.core");
om_bootstrap.modal.Modal = new cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "header", "header", 119441134), schema.core.Any, new cljs.core.Keyword(null, "footer", "footer", 1606445390), schema.core.Any, schema.core.optional_key.call(null, new cljs.core.Keyword(null, "keyboard?", "keyboard?", -2034212401)), schema.core.Bool, schema.core.optional_key.call(null, new cljs.core.Keyword(null, "close-button?", "close-button?", -1030817687)), schema.core.Bool, schema.core.optional_key.call(null, 
new cljs.core.Keyword(null, "visible?", "visible?", 2129863715)), schema.core.Bool, schema.core.optional_key.call(null, new cljs.core.Keyword(null, "animate?", "animate?", -1559039739)), schema.core.Bool], true, false);
var component_fnk__13079__auto___20410 = function() {
  var ufv__ = schema.utils.use_fn_validation;
  var output_schema20385 = schema.core.Any;
  var input_schema20386 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, new cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "state", "state", -1988618099), schema.core.Any, new cljs.core.Keyword(null, "owner", "owner", -392611939), schema.core.Any, schema.core.Keyword, schema.core.Any], true, false), cljs.core.with_meta(new cljs.core.Symbol(null, "map20384", "map20384", -1725279092, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "state", "state", -1988618099), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null), new cljs.core.Keyword(null, "owner", "owner", -392611939), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null), new cljs.core.Symbol("schema.core", "Keyword", "schema.core/Keyword", -1941817861, null), new cljs.core.Symbol("schema.core", 
  "Any", "schema.core/Any", -1891898271, null)], null)], null)))], null);
  var input_checker20387 = schema.core.checker.call(null, input_schema20386);
  var output_checker20388 = schema.core.checker.call(null, output_schema20385);
  return schema.core.schematize_fn.call(null, function(ufv__, output_schema20385, input_schema20386, input_checker20387, output_checker20388) {
    return function om_bootstrap$modal$constructor20382(G__20389) {
      var validate__6953__auto__ = ufv__.get_cell();
      if (cljs.core.truth_(validate__6953__auto__)) {
        var args__6954__auto___20411 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__20389], null);
        var temp__4425__auto___20412 = input_checker20387.call(null, args__6954__auto___20411);
        if (cljs.core.truth_(temp__4425__auto___20412)) {
          var error__6955__auto___20413 = temp__4425__auto___20412;
          throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "constructor20382", "constructor20382", -1796231103, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)), cljs.core.pr_str.call(null, error__6955__auto___20413)), new cljs.core.PersistentArrayMap(null, 
          4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema20386, new cljs.core.Keyword(null, "value", "value", 305978217), args__6954__auto___20411, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___20413], null));
        } else {
        }
      } else {
      }
      var o__6956__auto__ = function() {
        var map20384 = G__20389;
        while (true) {
          if (cljs.core.map_QMARK_.call(null, map20384)) {
          } else {
            throw new Error(schema.utils.format_STAR_.call(null, "fnk called on non-map: %s", map20384));
          }
          var owner = plumbing.fnk.schema.safe_get.call(null, map20384, new cljs.core.Keyword(null, "owner", "owner", -392611939), cljs.core.PersistentVector.EMPTY);
          var state = plumbing.fnk.schema.safe_get.call(null, map20384, new cljs.core.Keyword(null, "state", "state", -1988618099), cljs.core.PersistentVector.EMPTY);
          if (typeof om_bootstrap.modal.t20396 !== "undefined") {
          } else {
            om_bootstrap.modal.t20396 = function(constructor20382, owner, input_checker20387, map20384, output_schema20385, output_checker20388, state, input_schema20386, G__20389, ufv__, validate__6953__auto__, meta20397) {
              this.constructor20382 = constructor20382;
              this.owner = owner;
              this.input_checker20387 = input_checker20387;
              this.map20384 = map20384;
              this.output_schema20385 = output_schema20385;
              this.output_checker20388 = output_checker20388;
              this.state = state;
              this.input_schema20386 = input_schema20386;
              this.G__20389 = G__20389;
              this.ufv__ = ufv__;
              this.validate__6953__auto__ = validate__6953__auto__;
              this.meta20397 = meta20397;
              this.cljs$lang$protocol_mask$partition0$ = 393216;
              this.cljs$lang$protocol_mask$partition1$ = 0;
            };
            om_bootstrap.modal.t20396.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(state, owner, validate__6953__auto__, ufv__, output_schema20385, input_schema20386, input_checker20387, output_checker20388) {
              return function(_20398, meta20397__$1) {
                var self__ = this;
                var _20398__$1 = this;
                return new om_bootstrap.modal.t20396(self__.constructor20382, self__.owner, self__.input_checker20387, self__.map20384, self__.output_schema20385, self__.output_checker20388, self__.state, self__.input_schema20386, self__.G__20389, self__.ufv__, self__.validate__6953__auto__, meta20397__$1);
              };
            }(state, owner, validate__6953__auto__, ufv__, output_schema20385, input_schema20386, input_checker20387, output_checker20388);
            om_bootstrap.modal.t20396.prototype.cljs$core$IMeta$_meta$arity$1 = function(state, owner, validate__6953__auto__, ufv__, output_schema20385, input_schema20386, input_checker20387, output_checker20388) {
              return function(_20398) {
                var self__ = this;
                var _20398__$1 = this;
                return self__.meta20397;
              };
            }(state, owner, validate__6953__auto__, ufv__, output_schema20385, input_schema20386, input_checker20387, output_checker20388);
            om_bootstrap.modal.t20396.prototype.om$core$IDisplayName$ = true;
            om_bootstrap.modal.t20396.prototype.om$core$IDisplayName$display_name$arity$1 = function(state, owner, validate__6953__auto__, ufv__, output_schema20385, input_schema20386, input_checker20387, output_checker20388) {
              return function(_) {
                var self__ = this;
                var ___$1 = this;
                return "modal*";
              };
            }(state, owner, validate__6953__auto__, ufv__, output_schema20385, input_schema20386, input_checker20387, output_checker20388);
            om_bootstrap.modal.t20396.prototype.om$core$IInitState$ = true;
            om_bootstrap.modal.t20396.prototype.om$core$IInitState$init_state$arity$1 = function(state, owner, validate__6953__auto__, ufv__, output_schema20385, input_schema20386, input_checker20387, output_checker20388) {
              return function(_) {
                var self__ = this;
                var ___$1 = this;
                return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "visible?", "visible?", 2129863715), cljs.core.get_in.call(null, om.core.get_props.call(null, self__.owner), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "opts", "opts", 155075701), new cljs.core.Keyword(null, "visible?", "visible?", 2129863715)], null))], null);
              };
            }(state, owner, validate__6953__auto__, ufv__, output_schema20385, input_schema20386, input_checker20387, output_checker20388);
            om_bootstrap.modal.t20396.prototype.om$core$IWillReceiveProps$ = true;
            om_bootstrap.modal.t20396.prototype.om$core$IWillReceiveProps$will_receive_props$arity$2 = function(state, owner, validate__6953__auto__, ufv__, output_schema20385, input_schema20386, input_checker20387, output_checker20388) {
              return function(this$, next_props) {
                var self__ = this;
                var this$__$1 = this;
                var last_props = om.core.get_props.call(null, self__.owner);
                var last_visible_QMARK_ = om.core.get_state.call(null, self__.owner, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "visible?", "visible?", 2129863715)], null));
                var next_visible_QMARK_ = cljs.core.get_in.call(null, next_props, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "opts", "opts", 155075701), new cljs.core.Keyword(null, "visible?", "visible?", 2129863715)], null));
                if (cljs.core.not_EQ_.call(null, last_visible_QMARK_, next_visible_QMARK_)) {
                  return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "visible?", "visible?", 2129863715)], null), next_visible_QMARK_);
                } else {
                  return null;
                }
              };
            }(state, owner, validate__6953__auto__, ufv__, output_schema20385, input_schema20386, input_checker20387, output_checker20388);
            om_bootstrap.modal.t20396.prototype.om$core$IRender$ = true;
            om_bootstrap.modal.t20396.prototype.om$core$IRender$render$arity$1 = function(state, owner, validate__6953__auto__, ufv__, output_schema20385, input_schema20386, input_checker20387, output_checker20388) {
              return function(_) {
                var self__ = this;
                var ___$1 = this;
                var map__20399 = om.core.get_props.call(null, self__.owner);
                var map__20399__$1 = (!(map__20399 == null) ? map__20399.cljs$lang$protocol_mask$partition0$ & 64 || map__20399.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__20399) : map__20399;
                var opts = cljs.core.get.call(null, map__20399__$1, new cljs.core.Keyword(null, "opts", "opts", 155075701));
                var children = cljs.core.get.call(null, map__20399__$1, new cljs.core.Keyword(null, "children", "children", -940561982));
                var vec__20400 = om_bootstrap.types.separate.call(null, om_bootstrap.modal.Modal, opts, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "bs-class", "bs-class", 1438130590), "modal"], null));
                var bs = cljs.core.nth.call(null, vec__20400, 0, null);
                var props = cljs.core.nth.call(null, vec__20400, 1, null);
                var classes = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "modal", "modal", -1031880850), true, new cljs.core.Keyword(null, "fade", "fade", 1167694157), true, new cljs.core.Keyword(null, "in", "in", -1531184865), om.core.get_state.call(null, self__.owner, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "visible?", "visible?", 2129863715)], null))], null);
                return om_tools.dom.element.call(null, React.DOM.div, om_bootstrap.util.merge_props.call(null, props, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), om_tools.dom.class_set.call(null, classes)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, React.DOM.div, {"className":"modal-dialog"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, 
                cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, React.DOM.div, {"className":"modal-content"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, React.DOM.div, {"className":"modal-header"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.truth_((new cljs.core.Keyword(null, "close-button?", "close-button?", 
                -1030817687)).cljs$core$IFn$_invoke$arity$1(bs)) ? React.DOM.button({"type":"button", "className":"close", "aria-hidden":true, "onClick":om_tools.dom.format_opts.call(null, function(map__20399, map__20399__$1, opts, children, vec__20400, bs, props, classes, ___$1, state, owner, validate__6953__auto__, ufv__, output_schema20385, input_schema20386, input_checker20387, output_checker20388) {
                  return function(___$2) {
                    return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "visible?", "visible?", 2129863715)], null), false);
                  };
                }(map__20399, map__20399__$1, opts, children, vec__20400, bs, props, classes, ___$1, state, owner, validate__6953__auto__, ufv__, output_schema20385, input_schema20386, input_checker20387, output_checker20388))}, "\u00d7") : null, om_bootstrap.util.clone_with_props.call(null, (new cljs.core.Keyword(null, "header", "header", 119441134)).cljs$core$IFn$_invoke$arity$1(bs), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "modal-title"], 
                null))], null))), cljs.core.apply.call(null, React.DOM.div, {"className":"modal-body"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [children], null))), cljs.core.apply.call(null, React.DOM.div, {"className":"modal-footer"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "footer", "footer", 1606445390)).cljs$core$IFn$_invoke$arity$1(bs)], 
                null)))], null)))], null)))], null));
              };
            }(state, owner, validate__6953__auto__, ufv__, output_schema20385, input_schema20386, input_checker20387, output_checker20388);
            om_bootstrap.modal.t20396.getBasis = function(state, owner, validate__6953__auto__, ufv__, output_schema20385, input_schema20386, input_checker20387, output_checker20388) {
              return function() {
                return new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "constructor20382", "constructor20382", -1796231103, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "owner", "owner", 1247919588, null), new cljs.core.PersistentArrayMap(null, 
                1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)), new cljs.core.Symbol(null, "input-checker20387", "input-checker20387", -38943093, null), new cljs.core.Symbol(null, "map20384", "map20384", -1725279092, null), new cljs.core.Symbol(null, "output-schema20385", "output-schema20385", 604078412, null), new cljs.core.Symbol(null, "output-checker20388", "output-checker20388", 696251728, 
                null), cljs.core.with_meta(new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)), new cljs.core.Symbol(null, "input-schema20386", "input-schema20386", 1553493015, null), cljs.core.with_meta(new cljs.core.Symbol(null, "G__20389", "G__20389", 1790073240, null), new cljs.core.PersistentArrayMap(null, 
                1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "state", "state", -1988618099), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null), new cljs.core.Keyword(null, "owner", "owner", -392611939), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null), new cljs.core.Symbol("schema.core", "Keyword", "schema.core/Keyword", -1941817861, null), new cljs.core.Symbol("schema.core", 
                "Any", "schema.core/Any", -1891898271, null)], null)], null)), new cljs.core.Symbol(null, "ufv__", "ufv__", -2046207459, null), new cljs.core.Symbol(null, "validate__6953__auto__", "validate__6953__auto__", -1776384833, null), new cljs.core.Symbol(null, "meta20397", "meta20397", 1148470782, null)], null);
              };
            }(state, owner, validate__6953__auto__, ufv__, output_schema20385, input_schema20386, input_checker20387, output_checker20388);
            om_bootstrap.modal.t20396.cljs$lang$type = true;
            om_bootstrap.modal.t20396.cljs$lang$ctorStr = "om-bootstrap.modal/t20396";
            om_bootstrap.modal.t20396.cljs$lang$ctorPrWriter = function(state, owner, validate__6953__auto__, ufv__, output_schema20385, input_schema20386, input_checker20387, output_checker20388) {
              return function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
                return cljs.core._write.call(null, writer__5106__auto__, "om-bootstrap.modal/t20396");
              };
            }(state, owner, validate__6953__auto__, ufv__, output_schema20385, input_schema20386, input_checker20387, output_checker20388);
            om_bootstrap.modal.__GT_t20396 = function(state, owner, validate__6953__auto__, ufv__, output_schema20385, input_schema20386, input_checker20387, output_checker20388) {
              return function om_bootstrap$modal$constructor20382_$___GT_t20396(constructor20382__$1, owner__$1, input_checker20387__$1, map20384__$1, output_schema20385__$1, output_checker20388__$1, state__$1, input_schema20386__$1, G__20389__$1, ufv____$1, validate__6953__auto____$1, meta20397) {
                return new om_bootstrap.modal.t20396(constructor20382__$1, owner__$1, input_checker20387__$1, map20384__$1, output_schema20385__$1, output_checker20388__$1, state__$1, input_schema20386__$1, G__20389__$1, ufv____$1, validate__6953__auto____$1, meta20397);
              };
            }(state, owner, validate__6953__auto__, ufv__, output_schema20385, input_schema20386, input_checker20387, output_checker20388);
          }
          return new om_bootstrap.modal.t20396(om_bootstrap$modal$constructor20382, owner, input_checker20387, map20384, output_schema20385, output_checker20388, state, input_schema20386, G__20389, ufv__, validate__6953__auto__, null);
          break;
        }
      }();
      if (cljs.core.truth_(validate__6953__auto__)) {
        var temp__4425__auto___20414 = output_checker20388.call(null, o__6956__auto__);
        if (cljs.core.truth_(temp__4425__auto___20414)) {
          var error__6955__auto___20415 = temp__4425__auto___20414;
          throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "constructor20382", "constructor20382", -1796231103, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)), cljs.core.pr_str.call(null, error__6955__auto___20415)), new cljs.core.PersistentArrayMap(null, 
          4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema20385, new cljs.core.Keyword(null, "value", "value", 305978217), o__6956__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___20415], null));
        } else {
        }
      } else {
      }
      return o__6956__auto__;
    };
  }(ufv__, output_schema20385, input_schema20386, input_checker20387, output_checker20388), schema.core.make_fn_schema.call(null, output_schema20385, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema20386], null)));
}();
om_bootstrap.modal.modal_STAR_ = function(component_fnk__13079__auto___20410) {
  return function om_bootstrap$modal$modal_STAR_() {
    var args__5572__auto__ = [];
    var len__5565__auto___20416 = arguments.length;
    var i__5566__auto___20417 = 0;
    while (true) {
      if (i__5566__auto___20417 < len__5565__auto___20416) {
        args__5572__auto__.push(arguments[i__5566__auto___20417]);
        var G__20418 = i__5566__auto___20417 + 1;
        i__5566__auto___20417 = G__20418;
        continue;
      } else {
      }
      break;
    }
    var argseq__5573__auto__ = 2 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(2), 0) : null;
    return om_bootstrap.modal.modal_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5573__auto__);
  };
}(component_fnk__13079__auto___20410);
om_bootstrap.modal.modal_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(component_fnk__13079__auto___20410) {
  return function(data__13080__auto__, owner20381, p__20405) {
    var vec__20406 = p__20405;
    var opts__13081__auto__ = cljs.core.nth.call(null, vec__20406, 0, null);
    return component_fnk__13079__auto___20410.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "state", "state", -1988618099), om_tools.core.state_proxy.call(null, owner20381), new cljs.core.Keyword(null, "opts", "opts", 155075701), opts__13081__auto__, new cljs.core.Keyword(null, "owner", "owner", -392611939), owner20381, new cljs.core.Keyword(null, "data", "data", -232669377), data__13080__auto__], null));
  };
}(component_fnk__13079__auto___20410);
om_bootstrap.modal.modal_STAR_.cljs$lang$maxFixedArity = 2;
om_bootstrap.modal.modal_STAR_.cljs$lang$applyTo = function(component_fnk__13079__auto___20410) {
  return function(seq20402) {
    var G__20403 = cljs.core.first.call(null, seq20402);
    var seq20402__$1 = cljs.core.next.call(null, seq20402);
    var G__20404 = cljs.core.first.call(null, seq20402__$1);
    var seq20402__$2 = cljs.core.next.call(null, seq20402__$1);
    return om_bootstrap.modal.modal_STAR_.cljs$core$IFn$_invoke$arity$variadic(G__20403, G__20404, seq20402__$2);
  };
}(component_fnk__13079__auto___20410);
om_bootstrap.modal.__GT_modal_STAR_ = function om_bootstrap$modal$__GT_modal_STAR_() {
  var args20407 = [];
  var len__5565__auto___20419 = arguments.length;
  var i__5566__auto___20420 = 0;
  while (true) {
    if (i__5566__auto___20420 < len__5565__auto___20419) {
      args20407.push(arguments[i__5566__auto___20420]);
      var G__20421 = i__5566__auto___20420 + 1;
      i__5566__auto___20420 = G__20421;
      continue;
    } else {
    }
    break;
  }
  var G__20409 = args20407.length;
  switch(G__20409) {
    case 1:
      return om_bootstrap.modal.__GT_modal_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return om_bootstrap.modal.__GT_modal_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20407.length)].join(""));;
  }
};
om_bootstrap.modal.__GT_modal_STAR_.cljs$core$IFn$_invoke$arity$1 = function(cursor__13048__auto__) {
  return om.core.build.call(null, om_bootstrap.modal.modal_STAR_, cursor__13048__auto__);
};
om_bootstrap.modal.__GT_modal_STAR_.cljs$core$IFn$_invoke$arity$2 = function(cursor__13048__auto__, m20383) {
  return om.core.build.call(null, om_bootstrap.modal.modal_STAR_, cursor__13048__auto__, m20383);
};
om_bootstrap.modal.__GT_modal_STAR_.cljs$lang$maxFixedArity = 2;
var ufv___20431 = schema.utils.use_fn_validation;
var output_schema20423_20432 = schema.core.Any;
var input_schema20424_20433 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, om_bootstrap.modal.Modal, cljs.core.with_meta(new cljs.core.Symbol(null, "opts", "opts", 1795607228, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol(null, "Modal", "Modal", -90004031, null)], null))), schema.core.Any], null);
var input_checker20425_20434 = schema.core.checker.call(null, input_schema20424_20433);
var output_checker20426_20435 = schema.core.checker.call(null, output_schema20423_20432);
om_bootstrap.modal.modal = function(ufv___20431, output_schema20423_20432, input_schema20424_20433, input_checker20425_20434, output_checker20426_20435) {
  return function om_bootstrap$modal$modal() {
    var args__5572__auto__ = [];
    var len__5565__auto___20436 = arguments.length;
    var i__5566__auto___20437 = 0;
    while (true) {
      if (i__5566__auto___20437 < len__5565__auto___20436) {
        args__5572__auto__.push(arguments[i__5566__auto___20437]);
        var G__20438 = i__5566__auto___20437 + 1;
        i__5566__auto___20437 = G__20438;
        continue;
      } else {
      }
      break;
    }
    var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
    return om_bootstrap.modal.modal.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
  };
}(ufv___20431, output_schema20423_20432, input_schema20424_20433, input_checker20425_20434, output_checker20426_20435);
om_bootstrap.modal.modal.cljs$core$IFn$_invoke$arity$variadic = function(ufv___20431, output_schema20423_20432, input_schema20424_20433, input_checker20425_20434, output_checker20426_20435) {
  return function(G__20427, rest20428) {
    var validate__6953__auto__ = ufv___20431.get_cell();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var args__6954__auto___20439 = cljs.core.list_STAR_.call(null, G__20427, rest20428);
      var temp__4425__auto___20440 = input_checker20425_20434.call(null, args__6954__auto___20439);
      if (cljs.core.truth_(temp__4425__auto___20440)) {
        var error__6955__auto___20441 = temp__4425__auto___20440;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "modal", "modal", 608650677, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)), cljs.core.pr_str.call(null, error__6955__auto___20441)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, 
        "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema20424_20433, new cljs.core.Keyword(null, "value", "value", 305978217), args__6954__auto___20439, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___20441], null));
      } else {
      }
    } else {
    }
    var o__6956__auto__ = function() {
      var opts = G__20427;
      var children = rest20428;
      while (true) {
        return om_bootstrap.modal.__GT_modal_STAR_.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "opts", "opts", 155075701), opts, new cljs.core.Keyword(null, "children", "children", -940561982), children], null));
        break;
      }
    }();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var temp__4425__auto___20442 = output_checker20426_20435.call(null, o__6956__auto__);
      if (cljs.core.truth_(temp__4425__auto___20442)) {
        var error__6955__auto___20443 = temp__4425__auto___20442;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "modal", "modal", 608650677, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)), cljs.core.pr_str.call(null, error__6955__auto___20443)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, 
        "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema20423_20432, new cljs.core.Keyword(null, "value", "value", 305978217), o__6956__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___20443], null));
      } else {
      }
    } else {
    }
    return o__6956__auto__;
  };
}(ufv___20431, output_schema20423_20432, input_schema20424_20433, input_checker20425_20434, output_checker20426_20435);
om_bootstrap.modal.modal.cljs$lang$maxFixedArity = 1;
om_bootstrap.modal.modal.cljs$lang$applyTo = function(ufv___20431, output_schema20423_20432, input_schema20424_20433, input_checker20425_20434, output_checker20426_20435) {
  return function(seq20429) {
    var G__20430 = cljs.core.first.call(null, seq20429);
    var seq20429__$1 = cljs.core.next.call(null, seq20429);
    return om_bootstrap.modal.modal.cljs$core$IFn$_invoke$arity$variadic(G__20430, seq20429__$1);
  };
}(ufv___20431, output_schema20423_20432, input_schema20424_20433, input_checker20425_20434, output_checker20426_20435);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, om_bootstrap.modal.modal), schema.core.make_fn_schema.call(null, output_schema20423_20432, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema20424_20433], null)));
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = {};
cljs.core.async.impl.protocols.take_BANG_ = function cljs$core$async$impl$protocols$take_BANG_(port, fn1_handler) {
  if (!(port == null) && !(port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 == null)) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler);
  } else {
    var x__5162__auto__ = port == null ? null : port;
    var m__5163__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, port, fn1_handler);
    } else {
      var m__5163__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, port, fn1_handler);
      } else {
        throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
      }
    }
  }
};
cljs.core.async.impl.protocols.WritePort = {};
cljs.core.async.impl.protocols.put_BANG_ = function cljs$core$async$impl$protocols$put_BANG_(port, val, fn1_handler) {
  if (!(port == null) && !(port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 == null)) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn1_handler);
  } else {
    var x__5162__auto__ = port == null ? null : port;
    var m__5163__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, port, val, fn1_handler);
    } else {
      var m__5163__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, port, val, fn1_handler);
      } else {
        throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
      }
    }
  }
};
cljs.core.async.impl.protocols.Channel = {};
cljs.core.async.impl.protocols.close_BANG_ = function cljs$core$async$impl$protocols$close_BANG_(chan) {
  if (!(chan == null) && !(chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 == null)) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan);
  } else {
    var x__5162__auto__ = chan == null ? null : chan;
    var m__5163__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, chan);
    } else {
      var m__5163__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, chan);
      } else {
        throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
      }
    }
  }
};
cljs.core.async.impl.protocols.closed_QMARK_ = function cljs$core$async$impl$protocols$closed_QMARK_(chan) {
  if (!(chan == null) && !(chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 == null)) {
    return chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1(chan);
  } else {
    var x__5162__auto__ = chan == null ? null : chan;
    var m__5163__auto__ = cljs.core.async.impl.protocols.closed_QMARK_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, chan);
    } else {
      var m__5163__auto____$1 = cljs.core.async.impl.protocols.closed_QMARK_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, chan);
      } else {
        throw cljs.core.missing_protocol.call(null, "Channel.closed?", chan);
      }
    }
  }
};
cljs.core.async.impl.protocols.Handler = {};
cljs.core.async.impl.protocols.active_QMARK_ = function cljs$core$async$impl$protocols$active_QMARK_(h) {
  if (!(h == null) && !(h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 == null)) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h);
  } else {
    var x__5162__auto__ = h == null ? null : h;
    var m__5163__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, h);
    } else {
      var m__5163__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, h);
      } else {
        throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
      }
    }
  }
};
cljs.core.async.impl.protocols.commit = function cljs$core$async$impl$protocols$commit(h) {
  if (!(h == null) && !(h.cljs$core$async$impl$protocols$Handler$commit$arity$1 == null)) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h);
  } else {
    var x__5162__auto__ = h == null ? null : h;
    var m__5163__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, h);
    } else {
      var m__5163__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, h);
      } else {
        throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
      }
    }
  }
};
cljs.core.async.impl.protocols.Buffer = {};
cljs.core.async.impl.protocols.full_QMARK_ = function cljs$core$async$impl$protocols$full_QMARK_(b) {
  if (!(b == null) && !(b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 == null)) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b);
  } else {
    var x__5162__auto__ = b == null ? null : b;
    var m__5163__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, b);
    } else {
      var m__5163__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, b);
      } else {
        throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
      }
    }
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function cljs$core$async$impl$protocols$remove_BANG_(b) {
  if (!(b == null) && !(b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 == null)) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b);
  } else {
    var x__5162__auto__ = b == null ? null : b;
    var m__5163__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, b);
    } else {
      var m__5163__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, b);
      } else {
        throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
      }
    }
  }
};
cljs.core.async.impl.protocols.add_BANG__STAR_ = function cljs$core$async$impl$protocols$add_BANG__STAR_(b, itm) {
  if (!(b == null) && !(b.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 == null)) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2(b, itm);
  } else {
    var x__5162__auto__ = b == null ? null : b;
    var m__5163__auto__ = cljs.core.async.impl.protocols.add_BANG__STAR_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, b, itm);
    } else {
      var m__5163__auto____$1 = cljs.core.async.impl.protocols.add_BANG__STAR_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, b, itm);
      } else {
        throw cljs.core.missing_protocol.call(null, "Buffer.add!*", b);
      }
    }
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function cljs$core$async$impl$protocols$add_BANG_() {
  var args23908 = [];
  var len__5565__auto___23911 = arguments.length;
  var i__5566__auto___23912 = 0;
  while (true) {
    if (i__5566__auto___23912 < len__5565__auto___23911) {
      args23908.push(arguments[i__5566__auto___23912]);
      var G__23913 = i__5566__auto___23912 + 1;
      i__5566__auto___23912 = G__23913;
      continue;
    } else {
    }
    break;
  }
  var G__23910 = args23908.length;
  switch(G__23910) {
    case 1:
      return cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23908.length)].join(""));;
  }
};
cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$1 = function(b) {
  return b;
};
cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$2 = function(b, itm) {
  if (!(itm == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "itm", "itm", -713282527, null)))))].join(""));
  }
  return cljs.core.async.impl.protocols.add_BANG__STAR_.call(null, b, itm);
};
cljs.core.async.impl.protocols.add_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.async.impl.protocols.UnblockingBuffer = {};
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function cljs$core$async$impl$buffers$acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while (true) {
    if (cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__23919 = cnt + 1;
      cnt = G__23919;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if (self__.length === 0) {
    return null;
  } else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x;
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if (self__.length + 1 === self__.arr.length) {
    this$.resize();
  } else {
  }
  return this$.unshift(x);
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if (self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr;
  } else {
    if (self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr;
    } else {
      if (self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__5410__auto__ = self__.length;
  var x = 0;
  while (true) {
    if (x < n__5410__auto__) {
      var v_23920 = this$.pop();
      if (keep_QMARK_.call(null, v_23920)) {
        this$.unshift(v_23920);
      } else {
      }
      var G__23921 = x + 1;
      x = G__23921;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "head", "head", 869147608, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "tail", "tail", 494507963, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "length", "length", -2065447907, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write.call(null, writer__5106__auto__, "cljs.core.async.impl.buffers/RingBuffer");
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function cljs$core$async$impl$buffers$__GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr);
};
cljs.core.async.impl.buffers.ring_buffer = function cljs$core$async$impl$buffers$ring_buffer(n) {
  if (n > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't create a ring buffer of size 0"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", 1085014381, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null), 0)))].join(""));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n));
};
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length === self__.n;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  self__.buf.unbounded_unshift(itm);
  return this$__$1;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.FixedBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null)], null);
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write.call(null, writer__5106__auto__, "cljs.core.async.impl.buffers/FixedBuffer");
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function cljs$core$async$impl$buffers$__GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n);
};
cljs.core.async.impl.buffers.fixed_buffer = function cljs$core$async$impl$buffers$fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
  } else {
    self__.buf.unshift(itm);
  }
  return this$__$1;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.DroppingBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null)], null);
};
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write.call(null, writer__5106__auto__, "cljs.core.async.impl.buffers/DroppingBuffer");
};
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function cljs$core$async$impl$buffers$__GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n);
};
cljs.core.async.impl.buffers.dropping_buffer = function cljs$core$async$impl$buffers$dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    cljs.core.async.impl.protocols.remove_BANG_.call(null, this$__$1);
  } else {
  }
  self__.buf.unshift(itm);
  return this$__$1;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.SlidingBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null)], null);
};
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write.call(null, writer__5106__auto__, "cljs.core.async.impl.buffers/SlidingBuffer");
};
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function cljs$core$async$impl$buffers$__GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n);
};
cljs.core.async.impl.buffers.sliding_buffer = function cljs$core$async$impl$buffers$sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if (goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for (var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]));
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor);
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  monitors.length--;
};
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue;
  };
};
goog.functions.FALSE = goog.functions.constant(false);
goog.functions.TRUE = goog.functions.constant(true);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  };
};
goog.functions.fail = function(err) {
  return function() {
    throw err;
  };
};
goog.functions.lock = function(f, opt_numArgs) {
  opt_numArgs = opt_numArgs || 0;
  return function() {
    return f.apply(this, Array.prototype.slice.call(arguments, 0, opt_numArgs));
  };
};
goog.functions.nth = function(n) {
  return function() {
    return arguments[n];
  };
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue));
};
goog.functions.equalTo = function(value, opt_useLooseComparison) {
  return function(other) {
    return opt_useLooseComparison ? value == other : value === other;
  };
};
goog.functions.compose = function(fn, var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    if (length) {
      result = functions[length - 1].apply(this, arguments);
    }
    for (var i = length - 2;i >= 0;i--) {
      result = functions[i].call(this, result);
    }
    return result;
  };
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    for (var i = 0;i < length;i++) {
      result = functions[i].apply(this, arguments);
    }
    return result;
  };
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (!functions[i].apply(this, arguments)) {
        return false;
      }
    }
    return true;
  };
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (functions[i].apply(this, arguments)) {
        return true;
      }
    }
    return false;
  };
};
goog.functions.not = function(f) {
  return function() {
    return !f.apply(this, arguments);
  };
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj;
};
goog.define("goog.functions.CACHE_RETURN_VALUE", true);
goog.functions.cacheReturnValue = function(fn) {
  var called = false;
  var value;
  return function() {
    if (!goog.functions.CACHE_RETURN_VALUE) {
      return fn();
    }
    if (!called) {
      value = fn();
      called = true;
    }
    return value;
  };
};
goog.functions.once = function(f) {
  var inner = f;
  return function() {
    if (inner) {
      var tmp = inner;
      inner = null;
      tmp();
    }
  };
};
goog.provide("goog.async.nextTick");
goog.provide("goog.async.throwException");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.dom.TagName");
goog.require("goog.functions");
goog.require("goog.labs.userAgent.browser");
goog.require("goog.labs.userAgent.engine");
goog.async.throwException = function(exception) {
  goog.global.setTimeout(function() {
    throw exception;
  }, 0);
};
goog.async.nextTick = function(callback, opt_context, opt_useSetImmediate) {
  var cb = callback;
  if (opt_context) {
    cb = goog.bind(callback, opt_context);
  }
  cb = goog.async.nextTick.wrapCallback_(cb);
  if (goog.isFunction(goog.global.setImmediate) && (opt_useSetImmediate || !goog.global.Window || !goog.global.Window.prototype || goog.global.Window.prototype.setImmediate != goog.global.setImmediate)) {
    goog.global.setImmediate(cb);
    return;
  }
  if (!goog.async.nextTick.setImmediate_) {
    goog.async.nextTick.setImmediate_ = goog.async.nextTick.getSetImmediateEmulator_();
  }
  goog.async.nextTick.setImmediate_(cb);
};
goog.async.nextTick.setImmediate_;
goog.async.nextTick.getSetImmediateEmulator_ = function() {
  var Channel = goog.global["MessageChannel"];
  if (typeof Channel === "undefined" && typeof window !== "undefined" && window.postMessage && window.addEventListener && !goog.labs.userAgent.engine.isPresto()) {
    Channel = function() {
      var iframe = document.createElement(goog.dom.TagName.IFRAME);
      iframe.style.display = "none";
      iframe.src = "";
      document.documentElement.appendChild(iframe);
      var win = iframe.contentWindow;
      var doc = win.document;
      doc.open();
      doc.write("");
      doc.close();
      var message = "callImmediate" + Math.random();
      var origin = win.location.protocol == "file:" ? "*" : win.location.protocol + "//" + win.location.host;
      var onmessage = goog.bind(function(e) {
        if (origin != "*" && e.origin != origin || e.data != message) {
          return;
        }
        this["port1"].onmessage();
      }, this);
      win.addEventListener("message", onmessage, false);
      this["port1"] = {};
      this["port2"] = {postMessage:function() {
        win.postMessage(message, origin);
      }};
    };
  }
  if (typeof Channel !== "undefined" && !goog.labs.userAgent.browser.isIE()) {
    var channel = new Channel;
    var head = {};
    var tail = head;
    channel["port1"].onmessage = function() {
      if (goog.isDef(head.next)) {
        head = head.next;
        var cb = head.cb;
        head.cb = null;
        cb();
      }
    };
    return function(cb) {
      tail.next = {cb:cb};
      tail = tail.next;
      channel["port2"].postMessage(0);
    };
  }
  if (typeof document !== "undefined" && "onreadystatechange" in document.createElement(goog.dom.TagName.SCRIPT)) {
    return function(cb) {
      var script = document.createElement(goog.dom.TagName.SCRIPT);
      script.onreadystatechange = function() {
        script.onreadystatechange = null;
        script.parentNode.removeChild(script);
        script = null;
        cb();
        cb = null;
      };
      document.documentElement.appendChild(script);
    };
  }
  return function(cb) {
    goog.global.setTimeout(cb, 0);
  };
};
goog.async.nextTick.wrapCallback_ = goog.functions.identity;
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.async.nextTick.wrapCallback_ = transformer;
});
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("goog.async.nextTick");
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function cljs$core$async$impl$dispatch$process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_23924 = 0;
  while (true) {
    var m_23925 = cljs.core.async.impl.dispatch.tasks.pop();
    if (m_23925 == null) {
    } else {
      m_23925.call(null);
      if (count_23924 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__23926 = count_23924 + 1;
        count_23924 = G__23926;
        continue;
      } else {
      }
    }
    break;
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if (cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
  } else {
    return null;
  }
};
cljs.core.async.impl.dispatch.queue_dispatcher = function cljs$core$async$impl$dispatch$queue_dispatcher() {
  if (cljs.core.truth_(function() {
    var and__4514__auto__ = cljs.core.async.impl.dispatch.queued_QMARK_;
    if (cljs.core.truth_(and__4514__auto__)) {
      return cljs.core.async.impl.dispatch.running_QMARK_;
    } else {
      return and__4514__auto__;
    }
  }())) {
    return null;
  } else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    return goog.async.nextTick(cljs.core.async.impl.dispatch.process_messages);
  }
};
cljs.core.async.impl.dispatch.run = function cljs$core$async$impl$dispatch$run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
};
cljs.core.async.impl.dispatch.queue_delay = function cljs$core$async$impl$dispatch$queue_delay(f, delay) {
  return setTimeout(f, delay);
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.channels.box = function cljs$core$async$impl$channels$box(val) {
  if (typeof cljs.core.async.impl.channels.t23932 !== "undefined") {
  } else {
    cljs.core.async.impl.channels.t23932 = function(box, val, meta23933) {
      this.box = box;
      this.val = val;
      this.meta23933 = meta23933;
      this.cljs$lang$protocol_mask$partition0$ = 425984;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.impl.channels.t23932.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_23934, meta23933__$1) {
      var self__ = this;
      var _23934__$1 = this;
      return new cljs.core.async.impl.channels.t23932(self__.box, self__.val, meta23933__$1);
    };
    cljs.core.async.impl.channels.t23932.prototype.cljs$core$IMeta$_meta$arity$1 = function(_23934) {
      var self__ = this;
      var _23934__$1 = this;
      return self__.meta23933;
    };
    cljs.core.async.impl.channels.t23932.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.val;
    };
    cljs.core.async.impl.channels.t23932.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "box", "box", -1123515375, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 
      1769233139, null)], null)))], null)), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "meta23933", "meta23933", -1973466380, null)], null);
    };
    cljs.core.async.impl.channels.t23932.cljs$lang$type = true;
    cljs.core.async.impl.channels.t23932.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t23932";
    cljs.core.async.impl.channels.t23932.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
      return cljs.core._write.call(null, writer__5106__auto__, "cljs.core.async.impl.channels/t23932");
    };
    cljs.core.async.impl.channels.__GT_t23932 = function cljs$core$async$impl$channels$box_$___GT_t23932(box__$1, val__$1, meta23933) {
      return new cljs.core.async.impl.channels.t23932(box__$1, val__$1, meta23933);
    };
  }
  return new cljs.core.async.impl.channels.t23932(cljs$core$async$impl$channels$box, val, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val;
};
cljs.core.async.impl.channels.PutBox.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "handler", "handler", 1444934915, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write.call(null, writer__5106__auto__, "cljs.core.async.impl.channels/PutBox");
};
cljs.core.async.impl.channels.__GT_PutBox = function cljs$core$async$impl$channels$__GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val);
};
cljs.core.async.impl.channels.put_active_QMARK_ = function cljs$core$async$impl$channels$put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, box.handler);
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
cljs.core.async.impl.channels.MMC = {};
cljs.core.async.impl.channels.abort = function cljs$core$async$impl$channels$abort(this$) {
  if (!(this$ == null) && !(this$.cljs$core$async$impl$channels$MMC$abort$arity$1 == null)) {
    return this$.cljs$core$async$impl$channels$MMC$abort$arity$1(this$);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core.async.impl.channels.abort[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, this$);
    } else {
      var m__5163__auto____$1 = cljs.core.async.impl.channels.abort["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "MMC.abort", this$);
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed;
  this.add_BANG_ = add_BANG_;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$abort$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  while (true) {
    var putter_23937 = self__.puts.pop();
    if (putter_23937 == null) {
    } else {
      var put_handler_23938 = putter_23937.handler;
      var val_23939 = putter_23937.val;
      if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler_23938)) {
        var put_cb_23940 = cljs.core.async.impl.protocols.commit.call(null, put_handler_23938);
        cljs.core.async.impl.dispatch.run.call(null, function(put_cb_23940, put_handler_23938, val_23939, putter_23937, this$__$1) {
          return function() {
            return put_cb_23940.call(null, true);
          };
        }(put_cb_23940, put_handler_23938, val_23939, putter_23937, this$__$1));
      } else {
        continue;
      }
    }
    break;
  }
  self__.puts.cleanup(cljs.core.constantly.call(null, false));
  return cljs.core.async.impl.protocols.close_BANG_.call(null, this$__$1);
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!(val == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't put nil in on a channel"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null)))))].join(""));
  }
  var closed__$1 = self__.closed;
  if (closed__$1 || !cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return cljs.core.async.impl.channels.box.call(null, !closed__$1);
  } else {
    if (cljs.core.truth_(function() {
      var and__4514__auto__ = self__.buf;
      if (cljs.core.truth_(and__4514__auto__)) {
        return cljs.core.not.call(null, cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf));
      } else {
        return and__4514__auto__;
      }
    }())) {
      cljs.core.async.impl.protocols.commit.call(null, handler);
      var done_QMARK_ = cljs.core.reduced_QMARK_.call(null, self__.add_BANG_.call(null, self__.buf, val));
      while (true) {
        if (self__.takes.length > 0 && cljs.core.count.call(null, self__.buf) > 0) {
          var taker_23941 = self__.takes.pop();
          if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_23941)) {
            var take_cb_23942 = cljs.core.async.impl.protocols.commit.call(null, taker_23941);
            var val_23943__$1 = cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf);
            cljs.core.async.impl.dispatch.run.call(null, function(take_cb_23942, val_23943__$1, taker_23941, done_QMARK_, closed__$1, this$__$1) {
              return function() {
                return take_cb_23942.call(null, val_23943__$1);
              };
            }(take_cb_23942, val_23943__$1, taker_23941, done_QMARK_, closed__$1, this$__$1));
          } else {
            continue;
          }
        } else {
        }
        break;
      }
      if (done_QMARK_) {
        cljs.core.async.impl.channels.abort.call(null, this$__$1);
      } else {
      }
      return cljs.core.async.impl.channels.box.call(null, true);
    } else {
      var taker = function() {
        while (true) {
          var taker = self__.takes.pop();
          if (cljs.core.truth_(taker)) {
            if (cljs.core.truth_(cljs.core.async.impl.protocols.active_QMARK_.call(null, taker))) {
              return taker;
            } else {
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(taker)) {
        var take_cb = cljs.core.async.impl.protocols.commit.call(null, taker);
        cljs.core.async.impl.protocols.commit.call(null, handler);
        cljs.core.async.impl.dispatch.run.call(null, function(take_cb, taker, closed__$1, this$__$1) {
          return function() {
            return take_cb.call(null, val);
          };
        }(take_cb, taker, closed__$1, this$__$1));
        return cljs.core.async.impl.channels.box.call(null, true);
      } else {
        if (self__.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY) {
          self__.dirty_puts = 0;
          self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_);
        } else {
          self__.dirty_puts = self__.dirty_puts + 1;
        }
        if (self__.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
        } else {
          throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending puts are allowed on a single channel."), cljs.core.str(" Consider using a windowed buffer.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 
          -280799999, null), new cljs.core.Symbol(null, "puts", "puts", -1883877054, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null))))].join(""));
        }
        self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
        return null;
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return null;
  } else {
    if (!(self__.buf == null) && cljs.core.count.call(null, self__.buf) > 0) {
      var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
      var retval = cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf));
      while (true) {
        if (cljs.core.truth_(cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf))) {
        } else {
          var putter_23944 = self__.puts.pop();
          if (putter_23944 == null) {
          } else {
            var put_handler_23945 = putter_23944.handler;
            var val_23946 = putter_23944.val;
            if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler_23945)) {
              var put_cb_23947 = cljs.core.async.impl.protocols.commit.call(null, put_handler_23945);
              cljs.core.async.impl.protocols.commit.call(null, handler);
              cljs.core.async.impl.dispatch.run.call(null, function(put_cb_23947, put_handler_23945, val_23946, putter_23944, _, retval, this$__$1) {
                return function() {
                  return put_cb_23947.call(null, true);
                };
              }(put_cb_23947, put_handler_23945, val_23946, putter_23944, _, retval, this$__$1));
              if (cljs.core.reduced_QMARK_.call(null, self__.add_BANG_.call(null, self__.buf, val_23946))) {
                cljs.core.async.impl.channels.abort.call(null, this$__$1);
              } else {
              }
            } else {
            }
            continue;
          }
        }
        break;
      }
      return retval;
    } else {
      var putter = function() {
        while (true) {
          var putter = self__.puts.pop();
          if (cljs.core.truth_(putter)) {
            if (cljs.core.async.impl.protocols.active_QMARK_.call(null, putter.handler)) {
              return putter;
            } else {
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(putter)) {
        var put_cb = cljs.core.async.impl.protocols.commit.call(null, putter.handler);
        cljs.core.async.impl.protocols.commit.call(null, handler);
        cljs.core.async.impl.dispatch.run.call(null, function(put_cb, putter, this$__$1) {
          return function() {
            return put_cb.call(null, true);
          };
        }(put_cb, putter, this$__$1));
        return cljs.core.async.impl.channels.box.call(null, putter.val);
      } else {
        if (cljs.core.truth_(self__.closed)) {
          if (cljs.core.truth_(self__.buf)) {
            self__.add_BANG_.call(null, self__.buf);
          } else {
          }
          if (cljs.core.truth_(function() {
            var and__4514__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, handler);
            if (cljs.core.truth_(and__4514__auto__)) {
              return cljs.core.async.impl.protocols.commit.call(null, handler);
            } else {
              return and__4514__auto__;
            }
          }())) {
            var has_val = function() {
              var and__4514__auto__ = self__.buf;
              if (cljs.core.truth_(and__4514__auto__)) {
                return cljs.core.count.call(null, self__.buf) > 0;
              } else {
                return and__4514__auto__;
              }
            }();
            var val = cljs.core.truth_(has_val) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf) : null;
            return cljs.core.async.impl.channels.box.call(null, val);
          } else {
            return null;
          }
        } else {
          if (self__.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY) {
            self__.dirty_takes = 0;
            self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_);
          } else {
            self__.dirty_takes = self__.dirty_takes + 1;
          }
          if (self__.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending takes are allowed on a single channel.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", -280799999, null), new cljs.core.Symbol(null, "takes", 
            "takes", 298247964, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null))))].join(""));
          }
          self__.takes.unbounded_unshift(handler);
          return null;
        }
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.closed;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.closed) {
    return null;
  } else {
    self__.closed = true;
    if (cljs.core.truth_(function() {
      var and__4514__auto__ = self__.buf;
      if (cljs.core.truth_(and__4514__auto__)) {
        return self__.puts.length === 0;
      } else {
        return and__4514__auto__;
      }
    }())) {
      self__.add_BANG_.call(null, self__.buf);
    } else {
    }
    while (true) {
      var taker_23948 = self__.takes.pop();
      if (taker_23948 == null) {
      } else {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_23948)) {
          var take_cb_23949 = cljs.core.async.impl.protocols.commit.call(null, taker_23948);
          var val_23950 = cljs.core.truth_(function() {
            var and__4514__auto__ = self__.buf;
            if (cljs.core.truth_(and__4514__auto__)) {
              return cljs.core.count.call(null, self__.buf) > 0;
            } else {
              return and__4514__auto__;
            }
          }()) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf) : null;
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb_23949, val_23950, taker_23948, this$__$1) {
            return function() {
              return take_cb_23949.call(null, val_23950);
            };
          }(take_cb_23949, val_23950, taker_23948, this$__$1));
        } else {
        }
        continue;
      }
      break;
    }
    return null;
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.getBasis = function() {
  return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "takes", "takes", 298247964, null), cljs.core.with_meta(new cljs.core.Symbol(null, "dirty-takes", "dirty-takes", 575642138, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "puts", "puts", -1883877054, null), cljs.core.with_meta(new cljs.core.Symbol(null, "dirty-puts", "dirty-puts", 
  57041148, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "closed", "closed", 720856168, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "add!", "add!", 2046056845, null)], null);
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write.call(null, writer__5106__auto__, "cljs.core.async.impl.channels/ManyToManyChannel");
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function cljs$core$async$impl$channels$__GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_);
};
cljs.core.async.impl.channels.ex_handler = function cljs$core$async$impl$channels$ex_handler(ex) {
  console.log(ex);
  return null;
};
cljs.core.async.impl.channels.handle = function cljs$core$async$impl$channels$handle(buf, exh, t) {
  var else$ = function() {
    var or__4526__auto__ = exh;
    if (cljs.core.truth_(or__4526__auto__)) {
      return or__4526__auto__;
    } else {
      return cljs.core.async.impl.channels.ex_handler;
    }
  }().call(null, t);
  if (else$ == null) {
    return buf;
  } else {
    return cljs.core.async.impl.protocols.add_BANG_.call(null, buf, else$);
  }
};
cljs.core.async.impl.channels.chan = function cljs$core$async$impl$channels$chan() {
  var args23951 = [];
  var len__5565__auto___23956 = arguments.length;
  var i__5566__auto___23957 = 0;
  while (true) {
    if (i__5566__auto___23957 < len__5565__auto___23956) {
      args23951.push(arguments[i__5566__auto___23957]);
      var G__23958 = i__5566__auto___23957 + 1;
      i__5566__auto___23957 = G__23958;
      continue;
    } else {
    }
    break;
  }
  var G__23953 = args23951.length;
  switch(G__23953) {
    case 1:
      return cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23951.length)].join(""));;
  }
};
cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$1 = function(buf) {
  return cljs.core.async.impl.channels.chan.call(null, buf, null);
};
cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$2 = function(buf, xform) {
  return cljs.core.async.impl.channels.chan.call(null, buf, xform, null);
};
cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$3 = function(buf, xform, exh) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, buf, false, function() {
    var add_BANG_ = cljs.core.truth_(xform) ? xform.call(null, cljs.core.async.impl.protocols.add_BANG_) : cljs.core.async.impl.protocols.add_BANG_;
    return function(add_BANG_) {
      return function() {
        var G__23960 = null;
        var G__23960__1 = function(buf__$1) {
          try {
            return add_BANG_.call(null, buf__$1);
          } catch (e23954) {
            var t = e23954;
            return cljs.core.async.impl.channels.handle.call(null, buf__$1, exh, t);
          }
        };
        var G__23960__2 = function(buf__$1, val) {
          try {
            return add_BANG_.call(null, buf__$1, val);
          } catch (e23955) {
            var t = e23955;
            return cljs.core.async.impl.channels.handle.call(null, buf__$1, exh, t);
          }
        };
        G__23960 = function(buf__$1, val) {
          switch(arguments.length) {
            case 1:
              return G__23960__1.call(this, buf__$1);
            case 2:
              return G__23960__2.call(this, buf__$1, val);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__23960.cljs$core$IFn$_invoke$arity$1 = G__23960__1;
        G__23960.cljs$core$IFn$_invoke$arity$2 = G__23960__2;
        return G__23960;
      }();
    }(add_BANG_);
  }());
};
cljs.core.async.impl.channels.chan.cljs$lang$maxFixedArity = 3;
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES = 4;
cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION = 5;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 6;
cljs.core.async.impl.ioc_helpers.aset_object = function cljs$core$async$impl$ioc_helpers$aset_object(arr, idx, o) {
  return arr[idx][o];
};
cljs.core.async.impl.ioc_helpers.aget_object = function cljs$core$async$impl$ioc_helpers$aget_object(arr, idx) {
  return arr[idx];
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function cljs$core$async$impl$ioc_helpers$finished_QMARK_(state_array) {
  return cljs.core.keyword_identical_QMARK_.call(null, state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX], new cljs.core.Keyword(null, "finished", "finished", -1018867731));
};
cljs.core.async.impl.ioc_helpers.fn_handler = function cljs$core$async$impl$ioc_helpers$fn_handler(f) {
  if (typeof cljs.core.async.impl.ioc_helpers.t23857 !== "undefined") {
  } else {
    cljs.core.async.impl.ioc_helpers.t23857 = function(fn_handler, f, meta23858) {
      this.fn_handler = fn_handler;
      this.f = f;
      this.meta23858 = meta23858;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.impl.ioc_helpers.t23857.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_23859, meta23858__$1) {
      var self__ = this;
      var _23859__$1 = this;
      return new cljs.core.async.impl.ioc_helpers.t23857(self__.fn_handler, self__.f, meta23858__$1);
    };
    cljs.core.async.impl.ioc_helpers.t23857.prototype.cljs$core$IMeta$_meta$arity$1 = function(_23859) {
      var self__ = this;
      var _23859__$1 = this;
      return self__.meta23858;
    };
    cljs.core.async.impl.ioc_helpers.t23857.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.impl.ioc_helpers.t23857.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.impl.ioc_helpers.t23857.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.impl.ioc_helpers.t23857.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "fn-handler", "fn-handler", 648785851, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, 
      cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 43394975, null)], null)))], null)), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "meta23858", "meta23858", 829912195, null)], null);
    };
    cljs.core.async.impl.ioc_helpers.t23857.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t23857.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t23857";
    cljs.core.async.impl.ioc_helpers.t23857.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
      return cljs.core._write.call(null, writer__5106__auto__, "cljs.core.async.impl.ioc-helpers/t23857");
    };
    cljs.core.async.impl.ioc_helpers.__GT_t23857 = function cljs$core$async$impl$ioc_helpers$fn_handler_$___GT_t23857(fn_handler__$1, f__$1, meta23858) {
      return new cljs.core.async.impl.ioc_helpers.t23857(fn_handler__$1, f__$1, meta23858);
    };
  }
  return new cljs.core.async.impl.ioc_helpers.t23857(cljs$core$async$impl$ioc_helpers$fn_handler, f, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function cljs$core$async$impl$ioc_helpers$run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state);
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function cljs$core$async$impl$ioc_helpers$run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state);
  } catch (e23861) {
    if (e23861 instanceof Object) {
      var ex = e23861;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.USER_START_IDX));
      throw ex;
    } else {
      throw e23861;
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function cljs$core$async$impl$ioc_helpers$take_BANG_(state, blk, c) {
  var temp__4423__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_23864_23866 = state;
    statearr_23864_23866[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_23864_23866[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4423__auto__)) {
    var cb = temp__4423__auto__;
    var statearr_23865_23867 = state;
    statearr_23865_23867[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_23865_23867[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function cljs$core$async$impl$ioc_helpers$put_BANG_(state, blk, c, val) {
  var temp__4423__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(ret_val) {
    var statearr_23870_23872 = state;
    statearr_23870_23872[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = ret_val;
    statearr_23870_23872[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4423__auto__)) {
    var cb = temp__4423__auto__;
    var statearr_23871_23873 = state;
    statearr_23871_23873[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_23871_23873[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.return_chan = function cljs$core$async$impl$ioc_helpers$return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if (value == null) {
  } else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(c) {
      return function() {
        return null;
      };
    }(c)));
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame = function(catch_block, catch_exception, finally_block, continue_block, prev, __meta, __extmap, __hash) {
  this.catch_block = catch_block;
  this.catch_exception = catch_exception;
  this.finally_block = finally_block;
  this.continue_block = continue_block;
  this.prev = prev;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__5121__auto__, k__5122__auto__) {
  var self__ = this;
  var this__5121__auto____$1 = this;
  return cljs.core._lookup.call(null, this__5121__auto____$1, k__5122__auto__, null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__5123__auto__, k23875, else__5124__auto__) {
  var self__ = this;
  var this__5123__auto____$1 = this;
  var G__23877 = k23875 instanceof cljs.core.Keyword ? k23875.fqn : null;
  switch(G__23877) {
    case "catch-block":
      return self__.catch_block;
      break;
    case "catch-exception":
      return self__.catch_exception;
      break;
    case "finally-block":
      return self__.finally_block;
      break;
    case "continue-block":
      return self__.continue_block;
      break;
    case "prev":
      return self__.prev;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k23875, else__5124__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__5135__auto__, writer__5136__auto__, opts__5137__auto__) {
  var self__ = this;
  var this__5135__auto____$1 = this;
  var pr_pair__5138__auto__ = function(this__5135__auto____$1) {
    return function(keyval__5139__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__5136__auto__, cljs.core.pr_writer, "", " ", "", opts__5137__auto__, keyval__5139__auto__);
    };
  }(this__5135__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__5136__auto__, pr_pair__5138__auto__, "#cljs.core.async.impl.ioc-helpers.ExceptionFrame{", ", ", "}", opts__5137__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IIterable$ = true;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__23874) {
  var self__ = this;
  var G__23874__$1 = this;
  return new cljs.core.RecordIter(0, G__23874__$1, 5, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), new cljs.core.Keyword(null, "prev", "prev", -1597069226)], null), 
  cljs.core._iterator.call(null, self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__5119__auto__) {
  var self__ = this;
  var this__5119__auto____$1 = this;
  return self__.__meta;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__5115__auto__) {
  var self__ = this;
  var this__5115__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICounted$_count$arity$1 = function(this__5125__auto__) {
  var self__ = this;
  var this__5125__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IHash$_hash$arity$1 = function(this__5116__auto__) {
  var self__ = this;
  var this__5116__auto____$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_imap.call(null, this__5116__auto____$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__5117__auto__, other__5118__auto__) {
  var self__ = this;
  var this__5117__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4514__auto__ = other__5118__auto__;
    if (cljs.core.truth_(and__4514__auto__)) {
      var and__4514__auto____$1 = this__5117__auto____$1.constructor === other__5118__auto__.constructor;
      if (and__4514__auto____$1) {
        return cljs.core.equiv_map.call(null, this__5117__auto____$1, other__5118__auto__);
      } else {
        return and__4514__auto____$1;
      }
    } else {
      return and__4514__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__5130__auto__, k__5131__auto__) {
  var self__ = this;
  var this__5130__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  null], null), null), k__5131__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__5130__auto____$1), self__.__meta), k__5131__auto__);
  } else {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__5131__auto__)), null);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__5128__auto__, k__5129__auto__, G__23874) {
  var self__ = this;
  var this__5128__auto____$1 = this;
  var pred__23878 = cljs.core.keyword_identical_QMARK_;
  var expr__23879 = k__5129__auto__;
  if (cljs.core.truth_(pred__23878.call(null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), expr__23879))) {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(G__23874, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__23878.call(null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), expr__23879))) {
      return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, G__23874, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__23878.call(null, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), expr__23879))) {
        return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, G__23874, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__23878.call(null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), expr__23879))) {
          return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, G__23874, self__.prev, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__23878.call(null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), expr__23879))) {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, G__23874, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__5129__auto__, G__23874), null);
          }
        }
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__5133__auto__) {
  var self__ = this;
  var this__5133__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", 
  "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__5120__auto__, G__23874) {
  var self__ = this;
  var this__5120__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, G__23874, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__5126__auto__, entry__5127__auto__) {
  var self__ = this;
  var this__5126__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__5127__auto__)) {
    return cljs.core._assoc.call(null, this__5126__auto____$1, cljs.core._nth.call(null, entry__5127__auto__, 0), cljs.core._nth.call(null, entry__5127__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__5126__auto____$1, entry__5127__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "catch-block", "catch-block", -1479223021, null), cljs.core.with_meta(new cljs.core.Symbol(null, "catch-exception", "catch-exception", -356775268, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "Class", "Class", 2064526977, null)], null)), new cljs.core.Symbol(null, "finally-block", "finally-block", 
  -1821453297, null), new cljs.core.Symbol(null, "continue-block", "continue-block", -211516323, null), new cljs.core.Symbol(null, "prev", "prev", 43462301, null)], null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$type = true;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrSeq = function(this__5155__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrWriter = function(this__5155__auto__, writer__5156__auto__) {
  return cljs.core._write.call(null, writer__5156__auto__, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame = function cljs$core$async$impl$ioc_helpers$__GT_ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev, null, null, null);
};
cljs.core.async.impl.ioc_helpers.map__GT_ExceptionFrame = function cljs$core$async$impl$ioc_helpers$map__GT_ExceptionFrame(G__23876) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame((new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(G__23876), (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(G__23876), (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(G__23876), (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(G__23876), 
  (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(G__23876), null, cljs.core.dissoc.call(null, G__23876, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), new cljs.core.Keyword(null, "prev", "prev", -1597069226)), 
  null);
};
cljs.core.async.impl.ioc_helpers.add_exception_frame = function cljs$core$async$impl$ioc_helpers$add_exception_frame(state, catch_block, catch_exception, finally_block, continue_block) {
  var statearr_23883 = state;
  statearr_23883[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame.call(null, catch_block, catch_exception, finally_block, continue_block, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES));
  return statearr_23883;
};
cljs.core.async.impl.ioc_helpers.process_exception = function cljs$core$async$impl$ioc_helpers$process_exception(state) {
  while (true) {
    var exception_frame = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES);
    var catch_block = (new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var catch_exception = (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var exception = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION);
    if (cljs.core.truth_(function() {
      var and__4514__auto__ = exception;
      if (cljs.core.truth_(and__4514__auto__)) {
        return cljs.core.not.call(null, exception_frame);
      } else {
        return and__4514__auto__;
      }
    }())) {
      throw exception;
    } else {
      if (cljs.core.truth_(function() {
        var and__4514__auto__ = exception;
        if (cljs.core.truth_(and__4514__auto__)) {
          var and__4514__auto____$1 = catch_block;
          if (cljs.core.truth_(and__4514__auto____$1)) {
            return exception instanceof catch_exception;
          } else {
            return and__4514__auto____$1;
          }
        } else {
          return and__4514__auto__;
        }
      }())) {
        var statearr_23889 = state;
        statearr_23889[cljs.core.async.impl.ioc_helpers.STATE_IDX] = catch_block;
        statearr_23889[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = exception;
        statearr_23889[cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION] = null;
        statearr_23889[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null);
        return statearr_23889;
      } else {
        if (cljs.core.truth_(function() {
          var and__4514__auto__ = exception;
          if (cljs.core.truth_(and__4514__auto__)) {
            return cljs.core.not.call(null, catch_block) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame));
          } else {
            return and__4514__auto__;
          }
        }())) {
          var statearr_23890_23894 = state;
          statearr_23890_23894[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
          var G__23895 = state;
          state = G__23895;
          continue;
        } else {
          if (cljs.core.truth_(function() {
            var and__4514__auto__ = exception;
            if (cljs.core.truth_(and__4514__auto__)) {
              var and__4514__auto____$1 = cljs.core.not.call(null, catch_block);
              if (and__4514__auto____$1) {
                return (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__4514__auto____$1;
              }
            } else {
              return and__4514__auto__;
            }
          }())) {
            var statearr_23891 = state;
            statearr_23891[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
            statearr_23891[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
            return statearr_23891;
          } else {
            if (cljs.core.truth_(function() {
              var and__4514__auto__ = cljs.core.not.call(null, exception);
              if (and__4514__auto__) {
                return (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__4514__auto__;
              }
            }())) {
              var statearr_23892 = state;
              statearr_23892[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              statearr_23892[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
              return statearr_23892;
            } else {
              if (cljs.core.not.call(null, exception) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame))) {
                var statearr_23893 = state;
                statearr_23893[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                statearr_23893[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                return statearr_23893;
              } else {
                throw new Error("No matching clause");
              }
            }
          }
        }
      }
    }
    break;
  }
};
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function cljs$core$async$impl$timers$random_level() {
  var args23807 = [];
  var len__5565__auto___23810 = arguments.length;
  var i__5566__auto___23811 = 0;
  while (true) {
    if (i__5566__auto___23811 < len__5565__auto___23810) {
      args23807.push(arguments[i__5566__auto___23811]);
      var G__23812 = i__5566__auto___23811 + 1;
      i__5566__auto___23811 = G__23812;
      continue;
    } else {
    }
    break;
  }
  var G__23809 = args23807.length;
  switch(G__23809) {
    case 0:
      return cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23807.length)].join(""));;
  }
};
cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.async.impl.timers.random_level.call(null, 0);
};
cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$1 = function(level) {
  while (true) {
    if (Math.random() < cljs.core.async.impl.timers.P && level < cljs.core.async.impl.timers.MAX_LEVEL) {
      var G__23814 = level + 1;
      level = G__23814;
      continue;
    } else {
      return level;
    }
    break;
  }
};
cljs.core.async.impl.timers.random_level.cljs$lang$maxFixedArity = 1;
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipListNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "forward", "forward", 1083186224, null)], null);
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write.call(null, writer__5106__auto__, "cljs.core.async.impl.timers/SkipListNode");
};
cljs.core.async.impl.timers.__GT_SkipListNode = function cljs$core$async$impl$timers$__GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward);
};
cljs.core.async.impl.timers.skip_list_node = function cljs$core$async$impl$timers$skip_list_node() {
  var args23815 = [];
  var len__5565__auto___23818 = arguments.length;
  var i__5566__auto___23819 = 0;
  while (true) {
    if (i__5566__auto___23819 < len__5565__auto___23818) {
      args23815.push(arguments[i__5566__auto___23819]);
      var G__23820 = i__5566__auto___23819 + 1;
      i__5566__auto___23819 = G__23820;
      continue;
    } else {
    }
    break;
  }
  var G__23817 = args23815.length;
  switch(G__23817) {
    case 1:
      return cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 3:
      return cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23815.length)].join(""));;
  }
};
cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$1 = function(level) {
  return cljs.core.async.impl.timers.skip_list_node.call(null, null, null, level);
};
cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$3 = function(k, v, level) {
  var arr = new Array(level + 1);
  var i_23822 = 0;
  while (true) {
    if (i_23822 < arr.length) {
      arr[i_23822] = null;
      var G__23823 = i_23822 + 1;
      i_23822 = G__23823;
      continue;
    } else {
    }
    break;
  }
  return new cljs.core.async.impl.timers.SkipListNode(k, v, arr);
};
cljs.core.async.impl.timers.skip_list_node.cljs$lang$maxFixedArity = 3;
cljs.core.async.impl.timers.least_greater_node = function cljs$core$async$impl$timers$least_greater_node() {
  var args23824 = [];
  var len__5565__auto___23827 = arguments.length;
  var i__5566__auto___23828 = 0;
  while (true) {
    if (i__5566__auto___23828 < len__5565__auto___23827) {
      args23824.push(arguments[i__5566__auto___23828]);
      var G__23829 = i__5566__auto___23828 + 1;
      i__5566__auto___23828 = G__23829;
      continue;
    } else {
    }
    break;
  }
  var G__23826 = args23824.length;
  switch(G__23826) {
    case 3:
      return cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23824.length)].join(""));;
  }
};
cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$3 = function(x, k, level) {
  return cljs.core.async.impl.timers.least_greater_node.call(null, x, k, level, null);
};
cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$4 = function(x, k, level, update) {
  while (true) {
    if (!(level < 0)) {
      var x__$1 = function() {
        var x__$1 = x;
        while (true) {
          var temp__4423__auto__ = x__$1.forward[level];
          if (cljs.core.truth_(temp__4423__auto__)) {
            var x_SINGLEQUOTE_ = temp__4423__auto__;
            if (x_SINGLEQUOTE_.key < k) {
              var G__23831 = x_SINGLEQUOTE_;
              x__$1 = G__23831;
              continue;
            } else {
              return x__$1;
            }
          } else {
            return x__$1;
          }
          break;
        }
      }();
      if (update == null) {
      } else {
        update[level] = x__$1;
      }
      var G__23832 = x__$1;
      var G__23833 = k;
      var G__23834 = level - 1;
      var G__23835 = update;
      x = G__23832;
      k = G__23833;
      level = G__23834;
      update = G__23835;
      continue;
    } else {
      return x;
    }
    break;
  }
};
cljs.core.async.impl.timers.least_greater_node.cljs$lang$maxFixedArity = 4;
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    return x__$1.val = v;
  } else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if (new_level > self__.level) {
      var i_23836 = self__.level + 1;
      while (true) {
        if (i_23836 <= new_level + 1) {
          update[i_23836] = self__.header;
          var G__23837 = i_23836 + 1;
          i_23836 = G__23837;
          continue;
        } else {
        }
        break;
      }
      self__.level = new_level;
    } else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while (true) {
      if (i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2;
      } else {
        return null;
      }
      break;
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    var i_23838 = 0;
    while (true) {
      if (i_23838 <= self__.level) {
        var links_23839 = update[i_23838].forward;
        if (links_23839[i_23838] === x__$1) {
          links_23839[i_23838] = x__$1.forward[i_23838];
          var G__23840 = i_23838 + 1;
          i_23838 = G__23840;
          continue;
        } else {
          var G__23841 = i_23838 + 1;
          i_23838 = G__23841;
          continue;
        }
      } else {
      }
      break;
    }
    while (true) {
      if (self__.level > 0 && self__.header.forward[self__.level] == null) {
        self__.level = self__.level - 1;
        continue;
      } else {
        return null;
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (x_SINGLEQUOTE_ == null) {
            return null;
          } else {
            if (x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_;
            } else {
              var G__23842 = x_SINGLEQUOTE_;
              x__$1 = G__23842;
              continue;
            }
          }
          break;
        }
      }();
      if (!(nx == null)) {
        var G__23843 = nx;
        var G__23844 = level__$1 - 1;
        x = G__23843;
        level__$1 = G__23844;
        continue;
      } else {
        var G__23845 = x;
        var G__23846 = level__$1 - 1;
        x = G__23845;
        level__$1 = G__23846;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (!(x_SINGLEQUOTE_ == null)) {
            if (x_SINGLEQUOTE_.key > k) {
              return x__$1;
            } else {
              var G__23847 = x_SINGLEQUOTE_;
              x__$1 = G__23847;
              continue;
            }
          } else {
            if (level__$1 === 0) {
              return x__$1;
            } else {
              return null;
            }
          }
          break;
        }
      }();
      if (cljs.core.truth_(nx)) {
        var G__23848 = nx;
        var G__23849 = level__$1 - 1;
        x = G__23848;
        level__$1 = G__23849;
        continue;
      } else {
        var G__23850 = x;
        var G__23851 = level__$1 - 1;
        x = G__23850;
        level__$1 = G__23851;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var iter = function(coll__$1) {
    return function cljs$core$async$impl$timers$iter(node) {
      return new cljs.core.LazySeq(null, function(coll__$1) {
        return function() {
          if (node == null) {
            return null;
          } else {
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node.key, node.val], null), cljs$core$async$impl$timers$iter.call(null, node.forward[0]));
          }
        };
      }(coll__$1), null, null);
    };
  }(coll__$1);
  return iter.call(null, self__.header.forward[0]);
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  var pr_pair = function(coll__$1) {
    return function(keyval) {
      return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval);
    };
  }(coll__$1);
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "header", "header", 1759972661, null), cljs.core.with_meta(new cljs.core.Symbol(null, "level", "level", -1363938217, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write.call(null, writer__5106__auto__, "cljs.core.async.impl.timers/SkipList");
};
cljs.core.async.impl.timers.__GT_SkipList = function cljs$core$async$impl$timers$__GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level);
};
cljs.core.async.impl.timers.skip_list = function cljs$core$async$impl$timers$skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0);
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function cljs$core$async$impl$timers$timeout(msecs) {
  var timeout__$1 = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout__$1);
  var or__4526__auto__ = cljs.core.truth_(function() {
    var and__4514__auto__ = me;
    if (cljs.core.truth_(and__4514__auto__)) {
      return me.key < timeout__$1 + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS;
    } else {
      return and__4514__auto__;
    }
  }()) ? me.val : null;
  if (cljs.core.truth_(or__4526__auto__)) {
    return or__4526__auto__;
  } else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout__$1, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function(timeout_channel, or__4526__auto__, timeout__$1, me) {
      return function() {
        cljs.core.async.impl.timers.timeouts_map.remove(timeout__$1);
        return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel);
      };
    }(timeout_channel, or__4526__auto__, timeout__$1, me), msecs);
    return timeout_channel;
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.timers");
cljs.core.async.fn_handler = function cljs$core$async$fn_handler(f) {
  if (typeof cljs.core.async.t21110 !== "undefined") {
  } else {
    cljs.core.async.t21110 = function(fn_handler, f, meta21111) {
      this.fn_handler = fn_handler;
      this.f = f;
      this.meta21111 = meta21111;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t21110.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_21112, meta21111__$1) {
      var self__ = this;
      var _21112__$1 = this;
      return new cljs.core.async.t21110(self__.fn_handler, self__.f, meta21111__$1);
    };
    cljs.core.async.t21110.prototype.cljs$core$IMeta$_meta$arity$1 = function(_21112) {
      var self__ = this;
      var _21112__$1 = this;
      return self__.meta21111;
    };
    cljs.core.async.t21110.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t21110.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.t21110.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.t21110.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "fn-handler", "fn-handler", 648785851, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, 
      cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 43394975, null)], null)))], null)), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "meta21111", "meta21111", 770833787, null)], null);
    };
    cljs.core.async.t21110.cljs$lang$type = true;
    cljs.core.async.t21110.cljs$lang$ctorStr = "cljs.core.async/t21110";
    cljs.core.async.t21110.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
      return cljs.core._write.call(null, writer__5106__auto__, "cljs.core.async/t21110");
    };
    cljs.core.async.__GT_t21110 = function cljs$core$async$fn_handler_$___GT_t21110(fn_handler__$1, f__$1, meta21111) {
      return new cljs.core.async.t21110(fn_handler__$1, f__$1, meta21111);
    };
  }
  return new cljs.core.async.t21110(cljs$core$async$fn_handler, f, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.buffer = function cljs$core$async$buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n);
};
cljs.core.async.dropping_buffer = function cljs$core$async$dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n);
};
cljs.core.async.sliding_buffer = function cljs$core$async$sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n);
};
cljs.core.async.unblocking_buffer_QMARK_ = function cljs$core$async$unblocking_buffer_QMARK_(buff) {
  if (!(buff == null)) {
    if (false || buff.cljs$core$async$impl$protocols$UnblockingBuffer$) {
      return true;
    } else {
      if (!buff.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, buff);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, buff);
  }
};
cljs.core.async.chan = function cljs$core$async$chan() {
  var args21115 = [];
  var len__5565__auto___21118 = arguments.length;
  var i__5566__auto___21119 = 0;
  while (true) {
    if (i__5566__auto___21119 < len__5565__auto___21118) {
      args21115.push(arguments[i__5566__auto___21119]);
      var G__21120 = i__5566__auto___21119 + 1;
      i__5566__auto___21119 = G__21120;
      continue;
    } else {
    }
    break;
  }
  var G__21117 = args21115.length;
  switch(G__21117) {
    case 0:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21115.length)].join(""));;
  }
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.async.chan.call(null, null);
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1 = function(buf_or_n) {
  return cljs.core.async.chan.call(null, buf_or_n, null, null);
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$2 = function(buf_or_n, xform) {
  return cljs.core.async.chan.call(null, buf_or_n, xform, null);
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$3 = function(buf_or_n, xform, ex_handler) {
  var buf_or_n__$1 = cljs.core._EQ_.call(null, buf_or_n, 0) ? null : buf_or_n;
  if (cljs.core.truth_(xform)) {
    if (cljs.core.truth_(buf_or_n__$1)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("buffer must be supplied when transducer is"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "buf-or-n", "buf-or-n", -1646815050, null)))].join(""));
    }
  } else {
  }
  return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n__$1 === "number" ? cljs.core.async.buffer.call(null, buf_or_n__$1) : buf_or_n__$1, xform, ex_handler);
};
cljs.core.async.chan.cljs$lang$maxFixedArity = 3;
cljs.core.async.timeout = function cljs$core$async$timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs);
};
cljs.core.async._LT__BANG_ = function cljs$core$async$_LT__BANG_(port) {
  throw new Error("\x3c! used not in (go ...) block");
};
cljs.core.async.take_BANG_ = function cljs$core$async$take_BANG_() {
  var args21122 = [];
  var len__5565__auto___21125 = arguments.length;
  var i__5566__auto___21126 = 0;
  while (true) {
    if (i__5566__auto___21126 < len__5565__auto___21125) {
      args21122.push(arguments[i__5566__auto___21126]);
      var G__21127 = i__5566__auto___21126 + 1;
      i__5566__auto___21126 = G__21127;
      continue;
    } else {
    }
    break;
  }
  var G__21124 = args21122.length;
  switch(G__21124) {
    case 2:
      return cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21122.length)].join(""));;
  }
};
cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$2 = function(port, fn1) {
  return cljs.core.async.take_BANG_.call(null, port, fn1, true);
};
cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$3 = function(port, fn1, on_caller_QMARK_) {
  var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
  if (cljs.core.truth_(ret)) {
    var val_21129 = cljs.core.deref.call(null, ret);
    if (cljs.core.truth_(on_caller_QMARK_)) {
      fn1.call(null, val_21129);
    } else {
      cljs.core.async.impl.dispatch.run.call(null, function(val_21129, ret) {
        return function() {
          return fn1.call(null, val_21129);
        };
      }(val_21129, ret));
    }
  } else {
  }
  return null;
};
cljs.core.async.take_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.async.nop = function cljs$core$async$nop(_) {
  return null;
};
cljs.core.async.fhnop = cljs.core.async.fn_handler.call(null, cljs.core.async.nop);
cljs.core.async._GT__BANG_ = function cljs$core$async$_GT__BANG_(port, val) {
  throw new Error("\x3e! used not in (go ...) block");
};
cljs.core.async.put_BANG_ = function cljs$core$async$put_BANG_() {
  var args21130 = [];
  var len__5565__auto___21133 = arguments.length;
  var i__5566__auto___21134 = 0;
  while (true) {
    if (i__5566__auto___21134 < len__5565__auto___21133) {
      args21130.push(arguments[i__5566__auto___21134]);
      var G__21135 = i__5566__auto___21134 + 1;
      i__5566__auto___21134 = G__21135;
      continue;
    } else {
    }
    break;
  }
  var G__21132 = args21130.length;
  switch(G__21132) {
    case 2:
      return cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21130.length)].join(""));;
  }
};
cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2 = function(port, val) {
  var temp__4423__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fhnop);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var ret = temp__4423__auto__;
    return cljs.core.deref.call(null, ret);
  } else {
    return true;
  }
};
cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$3 = function(port, val, fn1) {
  return cljs.core.async.put_BANG_.call(null, port, val, fn1, true);
};
cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$4 = function(port, val, fn1, on_caller_QMARK_) {
  var temp__4423__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn1));
  if (cljs.core.truth_(temp__4423__auto__)) {
    var retb = temp__4423__auto__;
    var ret = cljs.core.deref.call(null, retb);
    if (cljs.core.truth_(on_caller_QMARK_)) {
      fn1.call(null, ret);
    } else {
      cljs.core.async.impl.dispatch.run.call(null, function(ret, retb, temp__4423__auto__) {
        return function() {
          return fn1.call(null, ret);
        };
      }(ret, retb, temp__4423__auto__));
    }
    return ret;
  } else {
    return true;
  }
};
cljs.core.async.put_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.async.close_BANG_ = function cljs$core$async$close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port);
};
cljs.core.async.random_array = function cljs$core$async$random_array(n) {
  var a = new Array(n);
  var n__5410__auto___21137 = n;
  var x_21138 = 0;
  while (true) {
    if (x_21138 < n__5410__auto___21137) {
      a[x_21138] = 0;
      var G__21139 = x_21138 + 1;
      x_21138 = G__21139;
      continue;
    } else {
    }
    break;
  }
  var i = 1;
  while (true) {
    if (cljs.core._EQ_.call(null, i, n)) {
      return a;
    } else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__21140 = i + 1;
      i = G__21140;
      continue;
    }
    break;
  }
};
cljs.core.async.alt_flag = function cljs$core$async$alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if (typeof cljs.core.async.t21144 !== "undefined") {
  } else {
    cljs.core.async.t21144 = function(alt_flag, flag, meta21145) {
      this.alt_flag = alt_flag;
      this.flag = flag;
      this.meta21145 = meta21145;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t21144.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(flag) {
      return function(_21146, meta21145__$1) {
        var self__ = this;
        var _21146__$1 = this;
        return new cljs.core.async.t21144(self__.alt_flag, self__.flag, meta21145__$1);
      };
    }(flag);
    cljs.core.async.t21144.prototype.cljs$core$IMeta$_meta$arity$1 = function(flag) {
      return function(_21146) {
        var self__ = this;
        var _21146__$1 = this;
        return self__.meta21145;
      };
    }(flag);
    cljs.core.async.t21144.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t21144.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.deref.call(null, self__.flag);
      };
    }(flag);
    cljs.core.async.t21144.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        cljs.core.reset_BANG_.call(null, self__.flag, null);
        return true;
      };
    }(flag);
    cljs.core.async.t21144.getBasis = function(flag) {
      return function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "alt-flag", "alt-flag", -1794972754, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(cljs.core.PersistentVector.EMPTY))], null)), 
        new cljs.core.Symbol(null, "flag", "flag", -1565787888, null), new cljs.core.Symbol(null, "meta21145", "meta21145", -1667049649, null)], null);
      };
    }(flag);
    cljs.core.async.t21144.cljs$lang$type = true;
    cljs.core.async.t21144.cljs$lang$ctorStr = "cljs.core.async/t21144";
    cljs.core.async.t21144.cljs$lang$ctorPrWriter = function(flag) {
      return function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
        return cljs.core._write.call(null, writer__5106__auto__, "cljs.core.async/t21144");
      };
    }(flag);
    cljs.core.async.__GT_t21144 = function(flag) {
      return function cljs$core$async$alt_flag_$___GT_t21144(alt_flag__$1, flag__$1, meta21145) {
        return new cljs.core.async.t21144(alt_flag__$1, flag__$1, meta21145);
      };
    }(flag);
  }
  return new cljs.core.async.t21144(cljs$core$async$alt_flag, flag, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.alt_handler = function cljs$core$async$alt_handler(flag, cb) {
  if (typeof cljs.core.async.t21150 !== "undefined") {
  } else {
    cljs.core.async.t21150 = function(alt_handler, flag, cb, meta21151) {
      this.alt_handler = alt_handler;
      this.flag = flag;
      this.cb = cb;
      this.meta21151 = meta21151;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t21150.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_21152, meta21151__$1) {
      var self__ = this;
      var _21152__$1 = this;
      return new cljs.core.async.t21150(self__.alt_handler, self__.flag, self__.cb, meta21151__$1);
    };
    cljs.core.async.t21150.prototype.cljs$core$IMeta$_meta$arity$1 = function(_21152) {
      var self__ = this;
      var _21152__$1 = this;
      return self__.meta21151;
    };
    cljs.core.async.t21150.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t21150.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag);
    };
    cljs.core.async.t21150.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb;
    };
    cljs.core.async.t21150.getBasis = function() {
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "alt-handler", "alt-handler", 963786170, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 2, 
      5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "flag", "flag", -1565787888, null), new cljs.core.Symbol(null, "cb", "cb", -2064487928, null)], null)))], null)), new cljs.core.Symbol(null, "flag", "flag", -1565787888, null), new cljs.core.Symbol(null, "cb", "cb", -2064487928, null), new cljs.core.Symbol(null, "meta21151", "meta21151", -1930479448, null)], null);
    };
    cljs.core.async.t21150.cljs$lang$type = true;
    cljs.core.async.t21150.cljs$lang$ctorStr = "cljs.core.async/t21150";
    cljs.core.async.t21150.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
      return cljs.core._write.call(null, writer__5106__auto__, "cljs.core.async/t21150");
    };
    cljs.core.async.__GT_t21150 = function cljs$core$async$alt_handler_$___GT_t21150(alt_handler__$1, flag__$1, cb__$1, meta21151) {
      return new cljs.core.async.t21150(alt_handler__$1, flag__$1, cb__$1, meta21151);
    };
  }
  return new cljs.core.async.t21150(cljs$core$async$alt_handler, flag, cb, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.do_alts = function cljs$core$async$do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword(null, "priority", "priority", 1431093715)).cljs$core$IFn$_invoke$arity$1(opts);
  var ret = function() {
    var i = 0;
    while (true) {
      if (i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function(p1__21153_SHARP_) {
              return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__21153_SHARP_, wport], null));
            };
          }(i, val, idx, port, wport, flag, n, idxs, priority)));
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__21154_SHARP_) {
            return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__21154_SHARP_, port], null));
          };
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if (cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref.call(null, vbox), function() {
            var or__4526__auto__ = wport;
            if (cljs.core.truth_(or__4526__auto__)) {
              return or__4526__auto__;
            } else {
              return port;
            }
          }()], null));
        } else {
          var G__21155 = i + 1;
          i = G__21155;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  }();
  var or__4526__auto__ = ret;
  if (cljs.core.truth_(or__4526__auto__)) {
    return or__4526__auto__;
  } else {
    if (cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "default", "default", -1987822328))) {
      var temp__4425__auto__ = function() {
        var and__4514__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if (cljs.core.truth_(and__4514__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag);
        } else {
          return and__4514__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4425__auto__)) {
        var got = temp__4425__auto__;
        return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "default", "default", -1987822328)).cljs$core$IFn$_invoke$arity$1(opts), new cljs.core.Keyword(null, "default", "default", -1987822328)], null));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
};
cljs.core.async.alts_BANG_ = function cljs$core$async$alts_BANG_() {
  var args__5572__auto__ = [];
  var len__5565__auto___21161 = arguments.length;
  var i__5566__auto___21162 = 0;
  while (true) {
    if (i__5566__auto___21162 < len__5565__auto___21161) {
      args__5572__auto__.push(arguments[i__5566__auto___21162]);
      var G__21163 = i__5566__auto___21162 + 1;
      i__5566__auto___21162 = G__21163;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return cljs.core.async.alts_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
cljs.core.async.alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(ports, p__21158) {
  var map__21159 = p__21158;
  var map__21159__$1 = (!(map__21159 == null) ? map__21159.cljs$lang$protocol_mask$partition0$ & 64 || map__21159.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__21159) : map__21159;
  var opts = map__21159__$1;
  throw new Error("alts! used not in (go ...) block");
};
cljs.core.async.alts_BANG_.cljs$lang$maxFixedArity = 1;
cljs.core.async.alts_BANG_.cljs$lang$applyTo = function(seq21156) {
  var G__21157 = cljs.core.first.call(null, seq21156);
  var seq21156__$1 = cljs.core.next.call(null, seq21156);
  return cljs.core.async.alts_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__21157, seq21156__$1);
};
cljs.core.async.pipe = function cljs$core$async$pipe() {
  var args21164 = [];
  var len__5565__auto___21214 = arguments.length;
  var i__5566__auto___21215 = 0;
  while (true) {
    if (i__5566__auto___21215 < len__5565__auto___21214) {
      args21164.push(arguments[i__5566__auto___21215]);
      var G__21216 = i__5566__auto___21215 + 1;
      i__5566__auto___21215 = G__21216;
      continue;
    } else {
    }
    break;
  }
  var G__21166 = args21164.length;
  switch(G__21166) {
    case 2:
      return cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21164.length)].join(""));;
  }
};
cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$2 = function(from, to) {
  return cljs.core.async.pipe.call(null, from, to, true);
};
cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$3 = function(from, to, close_QMARK_) {
  var c__14432__auto___21218 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__14432__auto___21218) {
    return function() {
      var f__14433__auto__ = function() {
        var switch__14367__auto__ = function(c__14432__auto___21218) {
          return function(state_21190) {
            var state_val_21191 = state_21190[1];
            if (state_val_21191 === 7) {
              var inst_21186 = state_21190[2];
              var state_21190__$1 = state_21190;
              var statearr_21192_21219 = state_21190__$1;
              statearr_21192_21219[2] = inst_21186;
              statearr_21192_21219[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_21191 === 1) {
                var state_21190__$1 = state_21190;
                var statearr_21193_21220 = state_21190__$1;
                statearr_21193_21220[2] = null;
                statearr_21193_21220[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_21191 === 4) {
                  var inst_21169 = state_21190[7];
                  var inst_21169__$1 = state_21190[2];
                  var inst_21170 = inst_21169__$1 == null;
                  var state_21190__$1 = function() {
                    var statearr_21194 = state_21190;
                    statearr_21194[7] = inst_21169__$1;
                    return statearr_21194;
                  }();
                  if (cljs.core.truth_(inst_21170)) {
                    var statearr_21195_21221 = state_21190__$1;
                    statearr_21195_21221[1] = 5;
                  } else {
                    var statearr_21196_21222 = state_21190__$1;
                    statearr_21196_21222[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_21191 === 13) {
                    var state_21190__$1 = state_21190;
                    var statearr_21197_21223 = state_21190__$1;
                    statearr_21197_21223[2] = null;
                    statearr_21197_21223[1] = 14;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_21191 === 6) {
                      var inst_21169 = state_21190[7];
                      var state_21190__$1 = state_21190;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_21190__$1, 11, to, inst_21169);
                    } else {
                      if (state_val_21191 === 3) {
                        var inst_21188 = state_21190[2];
                        var state_21190__$1 = state_21190;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_21190__$1, inst_21188);
                      } else {
                        if (state_val_21191 === 12) {
                          var state_21190__$1 = state_21190;
                          var statearr_21198_21224 = state_21190__$1;
                          statearr_21198_21224[2] = null;
                          statearr_21198_21224[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_21191 === 2) {
                            var state_21190__$1 = state_21190;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_21190__$1, 4, from);
                          } else {
                            if (state_val_21191 === 11) {
                              var inst_21179 = state_21190[2];
                              var state_21190__$1 = state_21190;
                              if (cljs.core.truth_(inst_21179)) {
                                var statearr_21199_21225 = state_21190__$1;
                                statearr_21199_21225[1] = 12;
                              } else {
                                var statearr_21200_21226 = state_21190__$1;
                                statearr_21200_21226[1] = 13;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_21191 === 9) {
                                var state_21190__$1 = state_21190;
                                var statearr_21201_21227 = state_21190__$1;
                                statearr_21201_21227[2] = null;
                                statearr_21201_21227[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_21191 === 5) {
                                  var state_21190__$1 = state_21190;
                                  if (cljs.core.truth_(close_QMARK_)) {
                                    var statearr_21202_21228 = state_21190__$1;
                                    statearr_21202_21228[1] = 8;
                                  } else {
                                    var statearr_21203_21229 = state_21190__$1;
                                    statearr_21203_21229[1] = 9;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_21191 === 14) {
                                    var inst_21184 = state_21190[2];
                                    var state_21190__$1 = state_21190;
                                    var statearr_21204_21230 = state_21190__$1;
                                    statearr_21204_21230[2] = inst_21184;
                                    statearr_21204_21230[1] = 7;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_21191 === 10) {
                                      var inst_21176 = state_21190[2];
                                      var state_21190__$1 = state_21190;
                                      var statearr_21205_21231 = state_21190__$1;
                                      statearr_21205_21231[2] = inst_21176;
                                      statearr_21205_21231[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_21191 === 8) {
                                        var inst_21173 = cljs.core.async.close_BANG_.call(null, to);
                                        var state_21190__$1 = state_21190;
                                        var statearr_21206_21232 = state_21190__$1;
                                        statearr_21206_21232[2] = inst_21173;
                                        statearr_21206_21232[1] = 10;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__14432__auto___21218);
        return function(switch__14367__auto__, c__14432__auto___21218) {
          return function() {
            var cljs$core$async$state_machine__14368__auto__ = null;
            var cljs$core$async$state_machine__14368__auto____0 = function() {
              var statearr_21210 = [null, null, null, null, null, null, null, null];
              statearr_21210[0] = cljs$core$async$state_machine__14368__auto__;
              statearr_21210[1] = 1;
              return statearr_21210;
            };
            var cljs$core$async$state_machine__14368__auto____1 = function(state_21190) {
              while (true) {
                var ret_value__14369__auto__ = function() {
                  try {
                    while (true) {
                      var result__14370__auto__ = switch__14367__auto__.call(null, state_21190);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__14370__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__14370__auto__;
                      }
                      break;
                    }
                  } catch (e21211) {
                    if (e21211 instanceof Object) {
                      var ex__14371__auto__ = e21211;
                      var statearr_21212_21233 = state_21190;
                      statearr_21212_21233[5] = ex__14371__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_21190);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e21211;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__14369__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__21234 = state_21190;
                  state_21190 = G__21234;
                  continue;
                } else {
                  return ret_value__14369__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__14368__auto__ = function(state_21190) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__14368__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__14368__auto____1.call(this, state_21190);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__14368__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__14368__auto____0;
            cljs$core$async$state_machine__14368__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__14368__auto____1;
            return cljs$core$async$state_machine__14368__auto__;
          }();
        }(switch__14367__auto__, c__14432__auto___21218);
      }();
      var state__14434__auto__ = function() {
        var statearr_21213 = f__14433__auto__.call(null);
        statearr_21213[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__14432__auto___21218;
        return statearr_21213;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__14434__auto__);
    };
  }(c__14432__auto___21218));
  return to;
};
cljs.core.async.pipe.cljs$lang$maxFixedArity = 3;
cljs.core.async.pipeline_STAR_ = function cljs$core$async$pipeline_STAR_(n, to, xf, from, close_QMARK_, ex_handler, type) {
  if (n > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "pos?", "pos?", -244377722, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null))))].join(""));
  }
  var jobs = cljs.core.async.chan.call(null, n);
  var results = cljs.core.async.chan.call(null, n);
  var process = function(jobs, results) {
    return function(p__21418) {
      var vec__21419 = p__21418;
      var v = cljs.core.nth.call(null, vec__21419, 0, null);
      var p = cljs.core.nth.call(null, vec__21419, 1, null);
      var job = vec__21419;
      if (job == null) {
        cljs.core.async.close_BANG_.call(null, results);
        return null;
      } else {
        var res = cljs.core.async.chan.call(null, 1, xf, ex_handler);
        var c__14432__auto___21601 = cljs.core.async.chan.call(null, 1);
        cljs.core.async.impl.dispatch.run.call(null, function(c__14432__auto___21601, res, vec__21419, v, p, job, jobs, results) {
          return function() {
            var f__14433__auto__ = function() {
              var switch__14367__auto__ = function(c__14432__auto___21601, res, vec__21419, v, p, job, jobs, results) {
                return function(state_21424) {
                  var state_val_21425 = state_21424[1];
                  if (state_val_21425 === 1) {
                    var state_21424__$1 = state_21424;
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_21424__$1, 2, res, v);
                  } else {
                    if (state_val_21425 === 2) {
                      var inst_21421 = state_21424[2];
                      var inst_21422 = cljs.core.async.close_BANG_.call(null, res);
                      var state_21424__$1 = function() {
                        var statearr_21426 = state_21424;
                        statearr_21426[7] = inst_21421;
                        return statearr_21426;
                      }();
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_21424__$1, inst_21422);
                    } else {
                      return null;
                    }
                  }
                };
              }(c__14432__auto___21601, res, vec__21419, v, p, job, jobs, results);
              return function(switch__14367__auto__, c__14432__auto___21601, res, vec__21419, v, p, job, jobs, results) {
                return function() {
                  var cljs$core$async$pipeline_STAR__$_state_machine__14368__auto__ = null;
                  var cljs$core$async$pipeline_STAR__$_state_machine__14368__auto____0 = function() {
                    var statearr_21430 = [null, null, null, null, null, null, null, null];
                    statearr_21430[0] = cljs$core$async$pipeline_STAR__$_state_machine__14368__auto__;
                    statearr_21430[1] = 1;
                    return statearr_21430;
                  };
                  var cljs$core$async$pipeline_STAR__$_state_machine__14368__auto____1 = function(state_21424) {
                    while (true) {
                      var ret_value__14369__auto__ = function() {
                        try {
                          while (true) {
                            var result__14370__auto__ = switch__14367__auto__.call(null, state_21424);
                            if (cljs.core.keyword_identical_QMARK_.call(null, result__14370__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                              continue;
                            } else {
                              return result__14370__auto__;
                            }
                            break;
                          }
                        } catch (e21431) {
                          if (e21431 instanceof Object) {
                            var ex__14371__auto__ = e21431;
                            var statearr_21432_21602 = state_21424;
                            statearr_21432_21602[5] = ex__14371__auto__;
                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_21424);
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            throw e21431;
                          }
                        }
                      }();
                      if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__14369__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var G__21603 = state_21424;
                        state_21424 = G__21603;
                        continue;
                      } else {
                        return ret_value__14369__auto__;
                      }
                      break;
                    }
                  };
                  cljs$core$async$pipeline_STAR__$_state_machine__14368__auto__ = function(state_21424) {
                    switch(arguments.length) {
                      case 0:
                        return cljs$core$async$pipeline_STAR__$_state_machine__14368__auto____0.call(this);
                      case 1:
                        return cljs$core$async$pipeline_STAR__$_state_machine__14368__auto____1.call(this, state_21424);
                    }
                    throw new Error("Invalid arity: " + arguments.length);
                  };
                  cljs$core$async$pipeline_STAR__$_state_machine__14368__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__14368__auto____0;
                  cljs$core$async$pipeline_STAR__$_state_machine__14368__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__14368__auto____1;
                  return cljs$core$async$pipeline_STAR__$_state_machine__14368__auto__;
                }();
              }(switch__14367__auto__, c__14432__auto___21601, res, vec__21419, v, p, job, jobs, results);
            }();
            var state__14434__auto__ = function() {
              var statearr_21433 = f__14433__auto__.call(null);
              statearr_21433[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__14432__auto___21601;
              return statearr_21433;
            }();
            return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__14434__auto__);
          };
        }(c__14432__auto___21601, res, vec__21419, v, p, job, jobs, results));
        cljs.core.async.put_BANG_.call(null, p, res);
        return true;
      }
    };
  }(jobs, results);
  var async = function(jobs, results, process) {
    return function(p__21434) {
      var vec__21435 = p__21434;
      var v = cljs.core.nth.call(null, vec__21435, 0, null);
      var p = cljs.core.nth.call(null, vec__21435, 1, null);
      var job = vec__21435;
      if (job == null) {
        cljs.core.async.close_BANG_.call(null, results);
        return null;
      } else {
        var res = cljs.core.async.chan.call(null, 1);
        xf.call(null, v, res);
        cljs.core.async.put_BANG_.call(null, p, res);
        return true;
      }
    };
  }(jobs, results, process);
  var n__5410__auto___21604 = n;
  var __21605 = 0;
  while (true) {
    if (__21605 < n__5410__auto___21604) {
      var G__21436_21606 = type instanceof cljs.core.Keyword ? type.fqn : null;
      switch(G__21436_21606) {
        case "compute":
          var c__14432__auto___21608 = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(__21605, c__14432__auto___21608, G__21436_21606, n__5410__auto___21604, jobs, results, process, async) {
            return function() {
              var f__14433__auto__ = function() {
                var switch__14367__auto__ = function(__21605, c__14432__auto___21608, G__21436_21606, n__5410__auto___21604, jobs, results, process, async) {
                  return function(state_21449) {
                    var state_val_21450 = state_21449[1];
                    if (state_val_21450 === 1) {
                      var state_21449__$1 = state_21449;
                      var statearr_21451_21609 = state_21449__$1;
                      statearr_21451_21609[2] = null;
                      statearr_21451_21609[1] = 2;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_21450 === 2) {
                        var state_21449__$1 = state_21449;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_21449__$1, 4, jobs);
                      } else {
                        if (state_val_21450 === 3) {
                          var inst_21447 = state_21449[2];
                          var state_21449__$1 = state_21449;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_21449__$1, inst_21447);
                        } else {
                          if (state_val_21450 === 4) {
                            var inst_21439 = state_21449[2];
                            var inst_21440 = process.call(null, inst_21439);
                            var state_21449__$1 = state_21449;
                            if (cljs.core.truth_(inst_21440)) {
                              var statearr_21452_21610 = state_21449__$1;
                              statearr_21452_21610[1] = 5;
                            } else {
                              var statearr_21453_21611 = state_21449__$1;
                              statearr_21453_21611[1] = 6;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_21450 === 5) {
                              var state_21449__$1 = state_21449;
                              var statearr_21454_21612 = state_21449__$1;
                              statearr_21454_21612[2] = null;
                              statearr_21454_21612[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_21450 === 6) {
                                var state_21449__$1 = state_21449;
                                var statearr_21455_21613 = state_21449__$1;
                                statearr_21455_21613[2] = null;
                                statearr_21455_21613[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_21450 === 7) {
                                  var inst_21445 = state_21449[2];
                                  var state_21449__$1 = state_21449;
                                  var statearr_21456_21614 = state_21449__$1;
                                  statearr_21456_21614[2] = inst_21445;
                                  statearr_21456_21614[1] = 3;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  };
                }(__21605, c__14432__auto___21608, G__21436_21606, n__5410__auto___21604, jobs, results, process, async);
                return function(__21605, switch__14367__auto__, c__14432__auto___21608, G__21436_21606, n__5410__auto___21604, jobs, results, process, async) {
                  return function() {
                    var cljs$core$async$pipeline_STAR__$_state_machine__14368__auto__ = null;
                    var cljs$core$async$pipeline_STAR__$_state_machine__14368__auto____0 = function() {
                      var statearr_21460 = [null, null, null, null, null, null, null];
                      statearr_21460[0] = cljs$core$async$pipeline_STAR__$_state_machine__14368__auto__;
                      statearr_21460[1] = 1;
                      return statearr_21460;
                    };
                    var cljs$core$async$pipeline_STAR__$_state_machine__14368__auto____1 = function(state_21449) {
                      while (true) {
                        var ret_value__14369__auto__ = function() {
                          try {
                            while (true) {
                              var result__14370__auto__ = switch__14367__auto__.call(null, state_21449);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__14370__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__14370__auto__;
                              }
                              break;
                            }
                          } catch (e21461) {
                            if (e21461 instanceof Object) {
                              var ex__14371__auto__ = e21461;
                              var statearr_21462_21615 = state_21449;
                              statearr_21462_21615[5] = ex__14371__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_21449);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e21461;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__14369__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__21616 = state_21449;
                          state_21449 = G__21616;
                          continue;
                        } else {
                          return ret_value__14369__auto__;
                        }
                        break;
                      }
                    };
                    cljs$core$async$pipeline_STAR__$_state_machine__14368__auto__ = function(state_21449) {
                      switch(arguments.length) {
                        case 0:
                          return cljs$core$async$pipeline_STAR__$_state_machine__14368__auto____0.call(this);
                        case 1:
                          return cljs$core$async$pipeline_STAR__$_state_machine__14368__auto____1.call(this, state_21449);
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    cljs$core$async$pipeline_STAR__$_state_machine__14368__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__14368__auto____0;
                    cljs$core$async$pipeline_STAR__$_state_machine__14368__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__14368__auto____1;
                    return cljs$core$async$pipeline_STAR__$_state_machine__14368__auto__;
                  }();
                }(__21605, switch__14367__auto__, c__14432__auto___21608, G__21436_21606, n__5410__auto___21604, jobs, results, process, async);
              }();
              var state__14434__auto__ = function() {
                var statearr_21463 = f__14433__auto__.call(null);
                statearr_21463[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__14432__auto___21608;
                return statearr_21463;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__14434__auto__);
            };
          }(__21605, c__14432__auto___21608, G__21436_21606, n__5410__auto___21604, jobs, results, process, async));
          break;
        case "async":
          var c__14432__auto___21617 = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(__21605, c__14432__auto___21617, G__21436_21606, n__5410__auto___21604, jobs, results, process, async) {
            return function() {
              var f__14433__auto__ = function() {
                var switch__14367__auto__ = function(__21605, c__14432__auto___21617, G__21436_21606, n__5410__auto___21604, jobs, results, process, async) {
                  return function(state_21476) {
                    var state_val_21477 = state_21476[1];
                    if (state_val_21477 === 1) {
                      var state_21476__$1 = state_21476;
                      var statearr_21478_21618 = state_21476__$1;
                      statearr_21478_21618[2] = null;
                      statearr_21478_21618[1] = 2;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_21477 === 2) {
                        var state_21476__$1 = state_21476;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_21476__$1, 4, jobs);
                      } else {
                        if (state_val_21477 === 3) {
                          var inst_21474 = state_21476[2];
                          var state_21476__$1 = state_21476;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_21476__$1, inst_21474);
                        } else {
                          if (state_val_21477 === 4) {
                            var inst_21466 = state_21476[2];
                            var inst_21467 = async.call(null, inst_21466);
                            var state_21476__$1 = state_21476;
                            if (cljs.core.truth_(inst_21467)) {
                              var statearr_21479_21619 = state_21476__$1;
                              statearr_21479_21619[1] = 5;
                            } else {
                              var statearr_21480_21620 = state_21476__$1;
                              statearr_21480_21620[1] = 6;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_21477 === 5) {
                              var state_21476__$1 = state_21476;
                              var statearr_21481_21621 = state_21476__$1;
                              statearr_21481_21621[2] = null;
                              statearr_21481_21621[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_21477 === 6) {
                                var state_21476__$1 = state_21476;
                                var statearr_21482_21622 = state_21476__$1;
                                statearr_21482_21622[2] = null;
                                statearr_21482_21622[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_21477 === 7) {
                                  var inst_21472 = state_21476[2];
                                  var state_21476__$1 = state_21476;
                                  var statearr_21483_21623 = state_21476__$1;
                                  statearr_21483_21623[2] = inst_21472;
                                  statearr_21483_21623[1] = 3;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  };
                }(__21605, c__14432__auto___21617, G__21436_21606, n__5410__auto___21604, jobs, results, process, async);
                return function(__21605, switch__14367__auto__, c__14432__auto___21617, G__21436_21606, n__5410__auto___21604, jobs, results, process, async) {
                  return function() {
                    var cljs$core$async$pipeline_STAR__$_state_machine__14368__auto__ = null;
                    var cljs$core$async$pipeline_STAR__$_state_machine__14368__auto____0 = function() {
                      var statearr_21487 = [null, null, null, null, null, null, null];
                      statearr_21487[0] = cljs$core$async$pipeline_STAR__$_state_machine__14368__auto__;
                      statearr_21487[1] = 1;
                      return statearr_21487;
                    };
                    var cljs$core$async$pipeline_STAR__$_state_machine__14368__auto____1 = function(state_21476) {
                      while (true) {
                        var ret_value__14369__auto__ = function() {
                          try {
                            while (true) {
                              var result__14370__auto__ = switch__14367__auto__.call(null, state_21476);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__14370__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__14370__auto__;
                              }
                              break;
                            }
                          } catch (e21488) {
                            if (e21488 instanceof Object) {
                              var ex__14371__auto__ = e21488;
                              var statearr_21489_21624 = state_21476;
                              statearr_21489_21624[5] = ex__14371__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_21476);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e21488;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__14369__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__21625 = state_21476;
                          state_21476 = G__21625;
                          continue;
                        } else {
                          return ret_value__14369__auto__;
                        }
                        break;
                      }
                    };
                    cljs$core$async$pipeline_STAR__$_state_machine__14368__auto__ = function(state_21476) {
                      switch(arguments.length) {
                        case 0:
                          return cljs$core$async$pipeline_STAR__$_state_machine__14368__auto____0.call(this);
                        case 1:
                          return cljs$core$async$pipeline_STAR__$_state_machine__14368__auto____1.call(this, state_21476);
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    cljs$core$async$pipeline_STAR__$_state_machine__14368__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__14368__auto____0;
                    cljs$core$async$pipeline_STAR__$_state_machine__14368__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__14368__auto____1;
                    return cljs$core$async$pipeline_STAR__$_state_machine__14368__auto__;
                  }();
                }(__21605, switch__14367__auto__, c__14432__auto___21617, G__21436_21606, n__5410__auto___21604, jobs, results, process, async);
              }();
              var state__14434__auto__ = function() {
                var statearr_21490 = f__14433__auto__.call(null);
                statearr_21490[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__14432__auto___21617;
                return statearr_21490;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__14434__auto__);
            };
          }(__21605, c__14432__auto___21617, G__21436_21606, n__5410__auto___21604, jobs, results, process, async));
          break;
        default:
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(type)].join(""));;
      }
      var G__21626 = __21605 + 1;
      __21605 = G__21626;
      continue;
    } else {
    }
    break;
  }
  var c__14432__auto___21627 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__14432__auto___21627, jobs, results, process, async) {
    return function() {
      var f__14433__auto__ = function() {
        var switch__14367__auto__ = function(c__14432__auto___21627, jobs, results, process, async) {
          return function(state_21512) {
            var state_val_21513 = state_21512[1];
            if (state_val_21513 === 1) {
              var state_21512__$1 = state_21512;
              var statearr_21514_21628 = state_21512__$1;
              statearr_21514_21628[2] = null;
              statearr_21514_21628[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_21513 === 2) {
                var state_21512__$1 = state_21512;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_21512__$1, 4, from);
              } else {
                if (state_val_21513 === 3) {
                  var inst_21510 = state_21512[2];
                  var state_21512__$1 = state_21512;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_21512__$1, inst_21510);
                } else {
                  if (state_val_21513 === 4) {
                    var inst_21493 = state_21512[7];
                    var inst_21493__$1 = state_21512[2];
                    var inst_21494 = inst_21493__$1 == null;
                    var state_21512__$1 = function() {
                      var statearr_21515 = state_21512;
                      statearr_21515[7] = inst_21493__$1;
                      return statearr_21515;
                    }();
                    if (cljs.core.truth_(inst_21494)) {
                      var statearr_21516_21629 = state_21512__$1;
                      statearr_21516_21629[1] = 5;
                    } else {
                      var statearr_21517_21630 = state_21512__$1;
                      statearr_21517_21630[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_21513 === 5) {
                      var inst_21496 = cljs.core.async.close_BANG_.call(null, jobs);
                      var state_21512__$1 = state_21512;
                      var statearr_21518_21631 = state_21512__$1;
                      statearr_21518_21631[2] = inst_21496;
                      statearr_21518_21631[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_21513 === 6) {
                        var inst_21493 = state_21512[7];
                        var inst_21498 = state_21512[8];
                        var inst_21498__$1 = cljs.core.async.chan.call(null, 1);
                        var inst_21499 = cljs.core.PersistentVector.EMPTY_NODE;
                        var inst_21500 = [inst_21493, inst_21498__$1];
                        var inst_21501 = new cljs.core.PersistentVector(null, 2, 5, inst_21499, inst_21500, null);
                        var state_21512__$1 = function() {
                          var statearr_21519 = state_21512;
                          statearr_21519[8] = inst_21498__$1;
                          return statearr_21519;
                        }();
                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_21512__$1, 8, jobs, inst_21501);
                      } else {
                        if (state_val_21513 === 7) {
                          var inst_21508 = state_21512[2];
                          var state_21512__$1 = state_21512;
                          var statearr_21520_21632 = state_21512__$1;
                          statearr_21520_21632[2] = inst_21508;
                          statearr_21520_21632[1] = 3;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_21513 === 8) {
                            var inst_21498 = state_21512[8];
                            var inst_21503 = state_21512[2];
                            var state_21512__$1 = function() {
                              var statearr_21521 = state_21512;
                              statearr_21521[9] = inst_21503;
                              return statearr_21521;
                            }();
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_21512__$1, 9, results, inst_21498);
                          } else {
                            if (state_val_21513 === 9) {
                              var inst_21505 = state_21512[2];
                              var state_21512__$1 = function() {
                                var statearr_21522 = state_21512;
                                statearr_21522[10] = inst_21505;
                                return statearr_21522;
                              }();
                              var statearr_21523_21633 = state_21512__$1;
                              statearr_21523_21633[2] = null;
                              statearr_21523_21633[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              return null;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__14432__auto___21627, jobs, results, process, async);
        return function(switch__14367__auto__, c__14432__auto___21627, jobs, results, process, async) {
          return function() {
            var cljs$core$async$pipeline_STAR__$_state_machine__14368__auto__ = null;
            var cljs$core$async$pipeline_STAR__$_state_machine__14368__auto____0 = function() {
              var statearr_21527 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_21527[0] = cljs$core$async$pipeline_STAR__$_state_machine__14368__auto__;
              statearr_21527[1] = 1;
              return statearr_21527;
            };
            var cljs$core$async$pipeline_STAR__$_state_machine__14368__auto____1 = function(state_21512) {
              while (true) {
                var ret_value__14369__auto__ = function() {
                  try {
                    while (true) {
                      var result__14370__auto__ = switch__14367__auto__.call(null, state_21512);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__14370__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__14370__auto__;
                      }
                      break;
                    }
                  } catch (e21528) {
                    if (e21528 instanceof Object) {
                      var ex__14371__auto__ = e21528;
                      var statearr_21529_21634 = state_21512;
                      statearr_21529_21634[5] = ex__14371__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_21512);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e21528;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__14369__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__21635 = state_21512;
                  state_21512 = G__21635;
                  continue;
                } else {
                  return ret_value__14369__auto__;
                }
                break;
              }
            };
            cljs$core$async$pipeline_STAR__$_state_machine__14368__auto__ = function(state_21512) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$pipeline_STAR__$_state_machine__14368__auto____0.call(this);
                case 1:
                  return cljs$core$async$pipeline_STAR__$_state_machine__14368__auto____1.call(this, state_21512);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$pipeline_STAR__$_state_machine__14368__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__14368__auto____0;
            cljs$core$async$pipeline_STAR__$_state_machine__14368__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__14368__auto____1;
            return cljs$core$async$pipeline_STAR__$_state_machine__14368__auto__;
          }();
        }(switch__14367__auto__, c__14432__auto___21627, jobs, results, process, async);
      }();
      var state__14434__auto__ = function() {
        var statearr_21530 = f__14433__auto__.call(null);
        statearr_21530[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__14432__auto___21627;
        return statearr_21530;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__14434__auto__);
    };
  }(c__14432__auto___21627, jobs, results, process, async));
  var c__14432__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__14432__auto__, jobs, results, process, async) {
    return function() {
      var f__14433__auto__ = function() {
        var switch__14367__auto__ = function(c__14432__auto__, jobs, results, process, async) {
          return function(state_21568) {
            var state_val_21569 = state_21568[1];
            if (state_val_21569 === 7) {
              var inst_21564 = state_21568[2];
              var state_21568__$1 = state_21568;
              var statearr_21570_21636 = state_21568__$1;
              statearr_21570_21636[2] = inst_21564;
              statearr_21570_21636[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_21569 === 20) {
                var state_21568__$1 = state_21568;
                var statearr_21571_21637 = state_21568__$1;
                statearr_21571_21637[2] = null;
                statearr_21571_21637[1] = 21;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_21569 === 1) {
                  var state_21568__$1 = state_21568;
                  var statearr_21572_21638 = state_21568__$1;
                  statearr_21572_21638[2] = null;
                  statearr_21572_21638[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_21569 === 4) {
                    var inst_21533 = state_21568[7];
                    var inst_21533__$1 = state_21568[2];
                    var inst_21534 = inst_21533__$1 == null;
                    var state_21568__$1 = function() {
                      var statearr_21573 = state_21568;
                      statearr_21573[7] = inst_21533__$1;
                      return statearr_21573;
                    }();
                    if (cljs.core.truth_(inst_21534)) {
                      var statearr_21574_21639 = state_21568__$1;
                      statearr_21574_21639[1] = 5;
                    } else {
                      var statearr_21575_21640 = state_21568__$1;
                      statearr_21575_21640[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_21569 === 15) {
                      var inst_21546 = state_21568[8];
                      var state_21568__$1 = state_21568;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_21568__$1, 18, to, inst_21546);
                    } else {
                      if (state_val_21569 === 21) {
                        var inst_21559 = state_21568[2];
                        var state_21568__$1 = state_21568;
                        var statearr_21576_21641 = state_21568__$1;
                        statearr_21576_21641[2] = inst_21559;
                        statearr_21576_21641[1] = 13;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_21569 === 13) {
                          var inst_21561 = state_21568[2];
                          var state_21568__$1 = function() {
                            var statearr_21577 = state_21568;
                            statearr_21577[9] = inst_21561;
                            return statearr_21577;
                          }();
                          var statearr_21578_21642 = state_21568__$1;
                          statearr_21578_21642[2] = null;
                          statearr_21578_21642[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_21569 === 6) {
                            var inst_21533 = state_21568[7];
                            var state_21568__$1 = state_21568;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_21568__$1, 11, inst_21533);
                          } else {
                            if (state_val_21569 === 17) {
                              var inst_21554 = state_21568[2];
                              var state_21568__$1 = state_21568;
                              if (cljs.core.truth_(inst_21554)) {
                                var statearr_21579_21643 = state_21568__$1;
                                statearr_21579_21643[1] = 19;
                              } else {
                                var statearr_21580_21644 = state_21568__$1;
                                statearr_21580_21644[1] = 20;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_21569 === 3) {
                                var inst_21566 = state_21568[2];
                                var state_21568__$1 = state_21568;
                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_21568__$1, inst_21566);
                              } else {
                                if (state_val_21569 === 12) {
                                  var inst_21543 = state_21568[10];
                                  var state_21568__$1 = state_21568;
                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_21568__$1, 14, inst_21543);
                                } else {
                                  if (state_val_21569 === 2) {
                                    var state_21568__$1 = state_21568;
                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_21568__$1, 4, results);
                                  } else {
                                    if (state_val_21569 === 19) {
                                      var state_21568__$1 = state_21568;
                                      var statearr_21581_21645 = state_21568__$1;
                                      statearr_21581_21645[2] = null;
                                      statearr_21581_21645[1] = 12;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_21569 === 11) {
                                        var inst_21543 = state_21568[2];
                                        var state_21568__$1 = function() {
                                          var statearr_21582 = state_21568;
                                          statearr_21582[10] = inst_21543;
                                          return statearr_21582;
                                        }();
                                        var statearr_21583_21646 = state_21568__$1;
                                        statearr_21583_21646[2] = null;
                                        statearr_21583_21646[1] = 12;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_21569 === 9) {
                                          var state_21568__$1 = state_21568;
                                          var statearr_21584_21647 = state_21568__$1;
                                          statearr_21584_21647[2] = null;
                                          statearr_21584_21647[1] = 10;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_21569 === 5) {
                                            var state_21568__$1 = state_21568;
                                            if (cljs.core.truth_(close_QMARK_)) {
                                              var statearr_21585_21648 = state_21568__$1;
                                              statearr_21585_21648[1] = 8;
                                            } else {
                                              var statearr_21586_21649 = state_21568__$1;
                                              statearr_21586_21649[1] = 9;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_21569 === 14) {
                                              var inst_21548 = state_21568[11];
                                              var inst_21546 = state_21568[8];
                                              var inst_21546__$1 = state_21568[2];
                                              var inst_21547 = inst_21546__$1 == null;
                                              var inst_21548__$1 = cljs.core.not.call(null, inst_21547);
                                              var state_21568__$1 = function() {
                                                var statearr_21587 = state_21568;
                                                statearr_21587[11] = inst_21548__$1;
                                                statearr_21587[8] = inst_21546__$1;
                                                return statearr_21587;
                                              }();
                                              if (inst_21548__$1) {
                                                var statearr_21588_21650 = state_21568__$1;
                                                statearr_21588_21650[1] = 15;
                                              } else {
                                                var statearr_21589_21651 = state_21568__$1;
                                                statearr_21589_21651[1] = 16;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_21569 === 16) {
                                                var inst_21548 = state_21568[11];
                                                var state_21568__$1 = state_21568;
                                                var statearr_21590_21652 = state_21568__$1;
                                                statearr_21590_21652[2] = inst_21548;
                                                statearr_21590_21652[1] = 17;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_21569 === 10) {
                                                  var inst_21540 = state_21568[2];
                                                  var state_21568__$1 = state_21568;
                                                  var statearr_21591_21653 = state_21568__$1;
                                                  statearr_21591_21653[2] = inst_21540;
                                                  statearr_21591_21653[1] = 7;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_21569 === 18) {
                                                    var inst_21551 = state_21568[2];
                                                    var state_21568__$1 = state_21568;
                                                    var statearr_21592_21654 = state_21568__$1;
                                                    statearr_21592_21654[2] = inst_21551;
                                                    statearr_21592_21654[1] = 17;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_21569 === 8) {
                                                      var inst_21537 = cljs.core.async.close_BANG_.call(null, to);
                                                      var state_21568__$1 = state_21568;
                                                      var statearr_21593_21655 = state_21568__$1;
                                                      statearr_21593_21655[2] = inst_21537;
                                                      statearr_21593_21655[1] = 10;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      return null;
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__14432__auto__, jobs, results, process, async);
        return function(switch__14367__auto__, c__14432__auto__, jobs, results, process, async) {
          return function() {
            var cljs$core$async$pipeline_STAR__$_state_machine__14368__auto__ = null;
            var cljs$core$async$pipeline_STAR__$_state_machine__14368__auto____0 = function() {
              var statearr_21597 = [null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_21597[0] = cljs$core$async$pipeline_STAR__$_state_machine__14368__auto__;
              statearr_21597[1] = 1;
              return statearr_21597;
            };
            var cljs$core$async$pipeline_STAR__$_state_machine__14368__auto____1 = function(state_21568) {
              while (true) {
                var ret_value__14369__auto__ = function() {
                  try {
                    while (true) {
                      var result__14370__auto__ = switch__14367__auto__.call(null, state_21568);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__14370__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__14370__auto__;
                      }
                      break;
                    }
                  } catch (e21598) {
                    if (e21598 instanceof Object) {
                      var ex__14371__auto__ = e21598;
                      var statearr_21599_21656 = state_21568;
                      statearr_21599_21656[5] = ex__14371__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_21568);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e21598;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__14369__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__21657 = state_21568;
                  state_21568 = G__21657;
                  continue;
                } else {
                  return ret_value__14369__auto__;
                }
                break;
              }
            };
            cljs$core$async$pipeline_STAR__$_state_machine__14368__auto__ = function(state_21568) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$pipeline_STAR__$_state_machine__14368__auto____0.call(this);
                case 1:
                  return cljs$core$async$pipeline_STAR__$_state_machine__14368__auto____1.call(this, state_21568);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$pipeline_STAR__$_state_machine__14368__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__14368__auto____0;
            cljs$core$async$pipeline_STAR__$_state_machine__14368__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__14368__auto____1;
            return cljs$core$async$pipeline_STAR__$_state_machine__14368__auto__;
          }();
        }(switch__14367__auto__, c__14432__auto__, jobs, results, process, async);
      }();
      var state__14434__auto__ = function() {
        var statearr_21600 = f__14433__auto__.call(null);
        statearr_21600[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__14432__auto__;
        return statearr_21600;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__14434__auto__);
    };
  }(c__14432__auto__, jobs, results, process, async));
  return c__14432__auto__;
};
cljs.core.async.pipeline_async = function cljs$core$async$pipeline_async() {
  var args21658 = [];
  var len__5565__auto___21661 = arguments.length;
  var i__5566__auto___21662 = 0;
  while (true) {
    if (i__5566__auto___21662 < len__5565__auto___21661) {
      args21658.push(arguments[i__5566__auto___21662]);
      var G__21663 = i__5566__auto___21662 + 1;
      i__5566__auto___21662 = G__21663;
      continue;
    } else {
    }
    break;
  }
  var G__21660 = args21658.length;
  switch(G__21660) {
    case 4:
      return cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21658.length)].join(""));;
  }
};
cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$4 = function(n, to, af, from) {
  return cljs.core.async.pipeline_async.call(null, n, to, af, from, true);
};
cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$5 = function(n, to, af, from, close_QMARK_) {
  return cljs.core.async.pipeline_STAR_.call(null, n, to, af, from, close_QMARK_, null, new cljs.core.Keyword(null, "async", "async", 1050769601));
};
cljs.core.async.pipeline_async.cljs$lang$maxFixedArity = 5;
cljs.core.async.pipeline = function cljs$core$async$pipeline() {
  var args21665 = [];
  var len__5565__auto___21668 = arguments.length;
  var i__5566__auto___21669 = 0;
  while (true) {
    if (i__5566__auto___21669 < len__5565__auto___21668) {
      args21665.push(arguments[i__5566__auto___21669]);
      var G__21670 = i__5566__auto___21669 + 1;
      i__5566__auto___21669 = G__21670;
      continue;
    } else {
    }
    break;
  }
  var G__21667 = args21665.length;
  switch(G__21667) {
    case 4:
      return cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21665.length)].join(""));;
  }
};
cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$4 = function(n, to, xf, from) {
  return cljs.core.async.pipeline.call(null, n, to, xf, from, true);
};
cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$5 = function(n, to, xf, from, close_QMARK_) {
  return cljs.core.async.pipeline.call(null, n, to, xf, from, close_QMARK_, null);
};
cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$6 = function(n, to, xf, from, close_QMARK_, ex_handler) {
  return cljs.core.async.pipeline_STAR_.call(null, n, to, xf, from, close_QMARK_, ex_handler, new cljs.core.Keyword(null, "compute", "compute", 1555393130));
};
cljs.core.async.pipeline.cljs$lang$maxFixedArity = 6;
cljs.core.async.split = function cljs$core$async$split() {
  var args21672 = [];
  var len__5565__auto___21725 = arguments.length;
  var i__5566__auto___21726 = 0;
  while (true) {
    if (i__5566__auto___21726 < len__5565__auto___21725) {
      args21672.push(arguments[i__5566__auto___21726]);
      var G__21727 = i__5566__auto___21726 + 1;
      i__5566__auto___21726 = G__21727;
      continue;
    } else {
    }
    break;
  }
  var G__21674 = args21672.length;
  switch(G__21674) {
    case 2:
      return cljs.core.async.split.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return cljs.core.async.split.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21672.length)].join(""));;
  }
};
cljs.core.async.split.cljs$core$IFn$_invoke$arity$2 = function(p, ch) {
  return cljs.core.async.split.call(null, p, ch, null, null);
};
cljs.core.async.split.cljs$core$IFn$_invoke$arity$4 = function(p, ch, t_buf_or_n, f_buf_or_n) {
  var tc = cljs.core.async.chan.call(null, t_buf_or_n);
  var fc = cljs.core.async.chan.call(null, f_buf_or_n);
  var c__14432__auto___21729 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__14432__auto___21729, tc, fc) {
    return function() {
      var f__14433__auto__ = function() {
        var switch__14367__auto__ = function(c__14432__auto___21729, tc, fc) {
          return function(state_21700) {
            var state_val_21701 = state_21700[1];
            if (state_val_21701 === 7) {
              var inst_21696 = state_21700[2];
              var state_21700__$1 = state_21700;
              var statearr_21702_21730 = state_21700__$1;
              statearr_21702_21730[2] = inst_21696;
              statearr_21702_21730[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_21701 === 1) {
                var state_21700__$1 = state_21700;
                var statearr_21703_21731 = state_21700__$1;
                statearr_21703_21731[2] = null;
                statearr_21703_21731[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_21701 === 4) {
                  var inst_21677 = state_21700[7];
                  var inst_21677__$1 = state_21700[2];
                  var inst_21678 = inst_21677__$1 == null;
                  var state_21700__$1 = function() {
                    var statearr_21704 = state_21700;
                    statearr_21704[7] = inst_21677__$1;
                    return statearr_21704;
                  }();
                  if (cljs.core.truth_(inst_21678)) {
                    var statearr_21705_21732 = state_21700__$1;
                    statearr_21705_21732[1] = 5;
                  } else {
                    var statearr_21706_21733 = state_21700__$1;
                    statearr_21706_21733[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_21701 === 13) {
                    var state_21700__$1 = state_21700;
                    var statearr_21707_21734 = state_21700__$1;
                    statearr_21707_21734[2] = null;
                    statearr_21707_21734[1] = 14;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_21701 === 6) {
                      var inst_21677 = state_21700[7];
                      var inst_21683 = p.call(null, inst_21677);
                      var state_21700__$1 = state_21700;
                      if (cljs.core.truth_(inst_21683)) {
                        var statearr_21708_21735 = state_21700__$1;
                        statearr_21708_21735[1] = 9;
                      } else {
                        var statearr_21709_21736 = state_21700__$1;
                        statearr_21709_21736[1] = 10;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_21701 === 3) {
                        var inst_21698 = state_21700[2];
                        var state_21700__$1 = state_21700;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_21700__$1, inst_21698);
                      } else {
                        if (state_val_21701 === 12) {
                          var state_21700__$1 = state_21700;
                          var statearr_21710_21737 = state_21700__$1;
                          statearr_21710_21737[2] = null;
                          statearr_21710_21737[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_21701 === 2) {
                            var state_21700__$1 = state_21700;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_21700__$1, 4, ch);
                          } else {
                            if (state_val_21701 === 11) {
                              var inst_21677 = state_21700[7];
                              var inst_21687 = state_21700[2];
                              var state_21700__$1 = state_21700;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_21700__$1, 8, inst_21687, inst_21677);
                            } else {
                              if (state_val_21701 === 9) {
                                var state_21700__$1 = state_21700;
                                var statearr_21711_21738 = state_21700__$1;
                                statearr_21711_21738[2] = tc;
                                statearr_21711_21738[1] = 11;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_21701 === 5) {
                                  var inst_21680 = cljs.core.async.close_BANG_.call(null, tc);
                                  var inst_21681 = cljs.core.async.close_BANG_.call(null, fc);
                                  var state_21700__$1 = function() {
                                    var statearr_21712 = state_21700;
                                    statearr_21712[8] = inst_21680;
                                    return statearr_21712;
                                  }();
                                  var statearr_21713_21739 = state_21700__$1;
                                  statearr_21713_21739[2] = inst_21681;
                                  statearr_21713_21739[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_21701 === 14) {
                                    var inst_21694 = state_21700[2];
                                    var state_21700__$1 = state_21700;
                                    var statearr_21714_21740 = state_21700__$1;
                                    statearr_21714_21740[2] = inst_21694;
                                    statearr_21714_21740[1] = 7;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_21701 === 10) {
                                      var state_21700__$1 = state_21700;
                                      var statearr_21715_21741 = state_21700__$1;
                                      statearr_21715_21741[2] = fc;
                                      statearr_21715_21741[1] = 11;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_21701 === 8) {
                                        var inst_21689 = state_21700[2];
                                        var state_21700__$1 = state_21700;
                                        if (cljs.core.truth_(inst_21689)) {
                                          var statearr_21716_21742 = state_21700__$1;
                                          statearr_21716_21742[1] = 12;
                                        } else {
                                          var statearr_21717_21743 = state_21700__$1;
                                          statearr_21717_21743[1] = 13;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__14432__auto___21729, tc, fc);
        return function(switch__14367__auto__, c__14432__auto___21729, tc, fc) {
          return function() {
            var cljs$core$async$state_machine__14368__auto__ = null;
            var cljs$core$async$state_machine__14368__auto____0 = function() {
              var statearr_21721 = [null, null, null, null, null, null, null, null, null];
              statearr_21721[0] = cljs$core$async$state_machine__14368__auto__;
              statearr_21721[1] = 1;
              return statearr_21721;
            };
            var cljs$core$async$state_machine__14368__auto____1 = function(state_21700) {
              while (true) {
                var ret_value__14369__auto__ = function() {
                  try {
                    while (true) {
                      var result__14370__auto__ = switch__14367__auto__.call(null, state_21700);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__14370__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__14370__auto__;
                      }
                      break;
                    }
                  } catch (e21722) {
                    if (e21722 instanceof Object) {
                      var ex__14371__auto__ = e21722;
                      var statearr_21723_21744 = state_21700;
                      statearr_21723_21744[5] = ex__14371__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_21700);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e21722;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__14369__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__21745 = state_21700;
                  state_21700 = G__21745;
                  continue;
                } else {
                  return ret_value__14369__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__14368__auto__ = function(state_21700) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__14368__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__14368__auto____1.call(this, state_21700);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__14368__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__14368__auto____0;
            cljs$core$async$state_machine__14368__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__14368__auto____1;
            return cljs$core$async$state_machine__14368__auto__;
          }();
        }(switch__14367__auto__, c__14432__auto___21729, tc, fc);
      }();
      var state__14434__auto__ = function() {
        var statearr_21724 = f__14433__auto__.call(null);
        statearr_21724[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__14432__auto___21729;
        return statearr_21724;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__14434__auto__);
    };
  }(c__14432__auto___21729, tc, fc));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tc, fc], null);
};
cljs.core.async.split.cljs$lang$maxFixedArity = 4;
cljs.core.async.reduce = function cljs$core$async$reduce(f, init, ch) {
  var c__14432__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__14432__auto__) {
    return function() {
      var f__14433__auto__ = function() {
        var switch__14367__auto__ = function(c__14432__auto__) {
          return function(state_21792) {
            var state_val_21793 = state_21792[1];
            if (state_val_21793 === 1) {
              var inst_21778 = init;
              var state_21792__$1 = function() {
                var statearr_21794 = state_21792;
                statearr_21794[7] = inst_21778;
                return statearr_21794;
              }();
              var statearr_21795_21810 = state_21792__$1;
              statearr_21795_21810[2] = null;
              statearr_21795_21810[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_21793 === 2) {
                var state_21792__$1 = state_21792;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_21792__$1, 4, ch);
              } else {
                if (state_val_21793 === 3) {
                  var inst_21790 = state_21792[2];
                  var state_21792__$1 = state_21792;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_21792__$1, inst_21790);
                } else {
                  if (state_val_21793 === 4) {
                    var inst_21781 = state_21792[8];
                    var inst_21781__$1 = state_21792[2];
                    var inst_21782 = inst_21781__$1 == null;
                    var state_21792__$1 = function() {
                      var statearr_21796 = state_21792;
                      statearr_21796[8] = inst_21781__$1;
                      return statearr_21796;
                    }();
                    if (cljs.core.truth_(inst_21782)) {
                      var statearr_21797_21811 = state_21792__$1;
                      statearr_21797_21811[1] = 5;
                    } else {
                      var statearr_21798_21812 = state_21792__$1;
                      statearr_21798_21812[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_21793 === 5) {
                      var inst_21778 = state_21792[7];
                      var state_21792__$1 = state_21792;
                      var statearr_21799_21813 = state_21792__$1;
                      statearr_21799_21813[2] = inst_21778;
                      statearr_21799_21813[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_21793 === 6) {
                        var inst_21778 = state_21792[7];
                        var inst_21781 = state_21792[8];
                        var inst_21785 = f.call(null, inst_21778, inst_21781);
                        var inst_21778__$1 = inst_21785;
                        var state_21792__$1 = function() {
                          var statearr_21800 = state_21792;
                          statearr_21800[7] = inst_21778__$1;
                          return statearr_21800;
                        }();
                        var statearr_21801_21814 = state_21792__$1;
                        statearr_21801_21814[2] = null;
                        statearr_21801_21814[1] = 2;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_21793 === 7) {
                          var inst_21788 = state_21792[2];
                          var state_21792__$1 = state_21792;
                          var statearr_21802_21815 = state_21792__$1;
                          statearr_21802_21815[2] = inst_21788;
                          statearr_21802_21815[1] = 3;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__14432__auto__);
        return function(switch__14367__auto__, c__14432__auto__) {
          return function() {
            var cljs$core$async$reduce_$_state_machine__14368__auto__ = null;
            var cljs$core$async$reduce_$_state_machine__14368__auto____0 = function() {
              var statearr_21806 = [null, null, null, null, null, null, null, null, null];
              statearr_21806[0] = cljs$core$async$reduce_$_state_machine__14368__auto__;
              statearr_21806[1] = 1;
              return statearr_21806;
            };
            var cljs$core$async$reduce_$_state_machine__14368__auto____1 = function(state_21792) {
              while (true) {
                var ret_value__14369__auto__ = function() {
                  try {
                    while (true) {
                      var result__14370__auto__ = switch__14367__auto__.call(null, state_21792);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__14370__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__14370__auto__;
                      }
                      break;
                    }
                  } catch (e21807) {
                    if (e21807 instanceof Object) {
                      var ex__14371__auto__ = e21807;
                      var statearr_21808_21816 = state_21792;
                      statearr_21808_21816[5] = ex__14371__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_21792);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e21807;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__14369__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__21817 = state_21792;
                  state_21792 = G__21817;
                  continue;
                } else {
                  return ret_value__14369__auto__;
                }
                break;
              }
            };
            cljs$core$async$reduce_$_state_machine__14368__auto__ = function(state_21792) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$reduce_$_state_machine__14368__auto____0.call(this);
                case 1:
                  return cljs$core$async$reduce_$_state_machine__14368__auto____1.call(this, state_21792);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$reduce_$_state_machine__14368__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$reduce_$_state_machine__14368__auto____0;
            cljs$core$async$reduce_$_state_machine__14368__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$reduce_$_state_machine__14368__auto____1;
            return cljs$core$async$reduce_$_state_machine__14368__auto__;
          }();
        }(switch__14367__auto__, c__14432__auto__);
      }();
      var state__14434__auto__ = function() {
        var statearr_21809 = f__14433__auto__.call(null);
        statearr_21809[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__14432__auto__;
        return statearr_21809;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__14434__auto__);
    };
  }(c__14432__auto__));
  return c__14432__auto__;
};
cljs.core.async.onto_chan = function cljs$core$async$onto_chan() {
  var args21818 = [];
  var len__5565__auto___21870 = arguments.length;
  var i__5566__auto___21871 = 0;
  while (true) {
    if (i__5566__auto___21871 < len__5565__auto___21870) {
      args21818.push(arguments[i__5566__auto___21871]);
      var G__21872 = i__5566__auto___21871 + 1;
      i__5566__auto___21871 = G__21872;
      continue;
    } else {
    }
    break;
  }
  var G__21820 = args21818.length;
  switch(G__21820) {
    case 2:
      return cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21818.length)].join(""));;
  }
};
cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$2 = function(ch, coll) {
  return cljs.core.async.onto_chan.call(null, ch, coll, true);
};
cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$3 = function(ch, coll, close_QMARK_) {
  var c__14432__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__14432__auto__) {
    return function() {
      var f__14433__auto__ = function() {
        var switch__14367__auto__ = function(c__14432__auto__) {
          return function(state_21845) {
            var state_val_21846 = state_21845[1];
            if (state_val_21846 === 7) {
              var inst_21827 = state_21845[2];
              var state_21845__$1 = state_21845;
              var statearr_21847_21874 = state_21845__$1;
              statearr_21847_21874[2] = inst_21827;
              statearr_21847_21874[1] = 6;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_21846 === 1) {
                var inst_21821 = cljs.core.seq.call(null, coll);
                var inst_21822 = inst_21821;
                var state_21845__$1 = function() {
                  var statearr_21848 = state_21845;
                  statearr_21848[7] = inst_21822;
                  return statearr_21848;
                }();
                var statearr_21849_21875 = state_21845__$1;
                statearr_21849_21875[2] = null;
                statearr_21849_21875[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_21846 === 4) {
                  var inst_21822 = state_21845[7];
                  var inst_21825 = cljs.core.first.call(null, inst_21822);
                  var state_21845__$1 = state_21845;
                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_21845__$1, 7, ch, inst_21825);
                } else {
                  if (state_val_21846 === 13) {
                    var inst_21839 = state_21845[2];
                    var state_21845__$1 = state_21845;
                    var statearr_21850_21876 = state_21845__$1;
                    statearr_21850_21876[2] = inst_21839;
                    statearr_21850_21876[1] = 10;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_21846 === 6) {
                      var inst_21830 = state_21845[2];
                      var state_21845__$1 = state_21845;
                      if (cljs.core.truth_(inst_21830)) {
                        var statearr_21851_21877 = state_21845__$1;
                        statearr_21851_21877[1] = 8;
                      } else {
                        var statearr_21852_21878 = state_21845__$1;
                        statearr_21852_21878[1] = 9;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_21846 === 3) {
                        var inst_21843 = state_21845[2];
                        var state_21845__$1 = state_21845;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_21845__$1, inst_21843);
                      } else {
                        if (state_val_21846 === 12) {
                          var state_21845__$1 = state_21845;
                          var statearr_21853_21879 = state_21845__$1;
                          statearr_21853_21879[2] = null;
                          statearr_21853_21879[1] = 13;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_21846 === 2) {
                            var inst_21822 = state_21845[7];
                            var state_21845__$1 = state_21845;
                            if (cljs.core.truth_(inst_21822)) {
                              var statearr_21854_21880 = state_21845__$1;
                              statearr_21854_21880[1] = 4;
                            } else {
                              var statearr_21855_21881 = state_21845__$1;
                              statearr_21855_21881[1] = 5;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_21846 === 11) {
                              var inst_21836 = cljs.core.async.close_BANG_.call(null, ch);
                              var state_21845__$1 = state_21845;
                              var statearr_21856_21882 = state_21845__$1;
                              statearr_21856_21882[2] = inst_21836;
                              statearr_21856_21882[1] = 13;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_21846 === 9) {
                                var state_21845__$1 = state_21845;
                                if (cljs.core.truth_(close_QMARK_)) {
                                  var statearr_21857_21883 = state_21845__$1;
                                  statearr_21857_21883[1] = 11;
                                } else {
                                  var statearr_21858_21884 = state_21845__$1;
                                  statearr_21858_21884[1] = 12;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_21846 === 5) {
                                  var inst_21822 = state_21845[7];
                                  var state_21845__$1 = state_21845;
                                  var statearr_21859_21885 = state_21845__$1;
                                  statearr_21859_21885[2] = inst_21822;
                                  statearr_21859_21885[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_21846 === 10) {
                                    var inst_21841 = state_21845[2];
                                    var state_21845__$1 = state_21845;
                                    var statearr_21860_21886 = state_21845__$1;
                                    statearr_21860_21886[2] = inst_21841;
                                    statearr_21860_21886[1] = 3;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_21846 === 8) {
                                      var inst_21822 = state_21845[7];
                                      var inst_21832 = cljs.core.next.call(null, inst_21822);
                                      var inst_21822__$1 = inst_21832;
                                      var state_21845__$1 = function() {
                                        var statearr_21861 = state_21845;
                                        statearr_21861[7] = inst_21822__$1;
                                        return statearr_21861;
                                      }();
                                      var statearr_21862_21887 = state_21845__$1;
                                      statearr_21862_21887[2] = null;
                                      statearr_21862_21887[1] = 2;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__14432__auto__);
        return function(switch__14367__auto__, c__14432__auto__) {
          return function() {
            var cljs$core$async$state_machine__14368__auto__ = null;
            var cljs$core$async$state_machine__14368__auto____0 = function() {
              var statearr_21866 = [null, null, null, null, null, null, null, null];
              statearr_21866[0] = cljs$core$async$state_machine__14368__auto__;
              statearr_21866[1] = 1;
              return statearr_21866;
            };
            var cljs$core$async$state_machine__14368__auto____1 = function(state_21845) {
              while (true) {
                var ret_value__14369__auto__ = function() {
                  try {
                    while (true) {
                      var result__14370__auto__ = switch__14367__auto__.call(null, state_21845);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__14370__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__14370__auto__;
                      }
                      break;
                    }
                  } catch (e21867) {
                    if (e21867 instanceof Object) {
                      var ex__14371__auto__ = e21867;
                      var statearr_21868_21888 = state_21845;
                      statearr_21868_21888[5] = ex__14371__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_21845);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e21867;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__14369__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__21889 = state_21845;
                  state_21845 = G__21889;
                  continue;
                } else {
                  return ret_value__14369__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__14368__auto__ = function(state_21845) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__14368__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__14368__auto____1.call(this, state_21845);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__14368__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__14368__auto____0;
            cljs$core$async$state_machine__14368__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__14368__auto____1;
            return cljs$core$async$state_machine__14368__auto__;
          }();
        }(switch__14367__auto__, c__14432__auto__);
      }();
      var state__14434__auto__ = function() {
        var statearr_21869 = f__14433__auto__.call(null);
        statearr_21869[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__14432__auto__;
        return statearr_21869;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__14434__auto__);
    };
  }(c__14432__auto__));
  return c__14432__auto__;
};
cljs.core.async.onto_chan.cljs$lang$maxFixedArity = 3;
cljs.core.async.to_chan = function cljs$core$async$to_chan(coll) {
  var ch = cljs.core.async.chan.call(null, cljs.core.bounded_count.call(null, 100, coll));
  cljs.core.async.onto_chan.call(null, ch, coll);
  return ch;
};
cljs.core.async.Mux = {};
cljs.core.async.muxch_STAR_ = function cljs$core$async$muxch_STAR_(_) {
  if (!(_ == null) && !(_.cljs$core$async$Mux$muxch_STAR_$arity$1 == null)) {
    return _.cljs$core$async$Mux$muxch_STAR_$arity$1(_);
  } else {
    var x__5162__auto__ = _ == null ? null : _;
    var m__5163__auto__ = cljs.core.async.muxch_STAR_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, _);
    } else {
      var m__5163__auto____$1 = cljs.core.async.muxch_STAR_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, _);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mux.muxch*", _);
      }
    }
  }
};
cljs.core.async.Mult = {};
cljs.core.async.tap_STAR_ = function cljs$core$async$tap_STAR_(m, ch, close_QMARK_) {
  if (!(m == null) && !(m.cljs$core$async$Mult$tap_STAR_$arity$3 == null)) {
    return m.cljs$core$async$Mult$tap_STAR_$arity$3(m, ch, close_QMARK_);
  } else {
    var x__5162__auto__ = m == null ? null : m;
    var m__5163__auto__ = cljs.core.async.tap_STAR_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, m, ch, close_QMARK_);
    } else {
      var m__5163__auto____$1 = cljs.core.async.tap_STAR_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, m, ch, close_QMARK_);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mult.tap*", m);
      }
    }
  }
};
cljs.core.async.untap_STAR_ = function cljs$core$async$untap_STAR_(m, ch) {
  if (!(m == null) && !(m.cljs$core$async$Mult$untap_STAR_$arity$2 == null)) {
    return m.cljs$core$async$Mult$untap_STAR_$arity$2(m, ch);
  } else {
    var x__5162__auto__ = m == null ? null : m;
    var m__5163__auto__ = cljs.core.async.untap_STAR_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, m, ch);
    } else {
      var m__5163__auto____$1 = cljs.core.async.untap_STAR_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, m, ch);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mult.untap*", m);
      }
    }
  }
};
cljs.core.async.untap_all_STAR_ = function cljs$core$async$untap_all_STAR_(m) {
  if (!(m == null) && !(m.cljs$core$async$Mult$untap_all_STAR_$arity$1 == null)) {
    return m.cljs$core$async$Mult$untap_all_STAR_$arity$1(m);
  } else {
    var x__5162__auto__ = m == null ? null : m;
    var m__5163__auto__ = cljs.core.async.untap_all_STAR_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, m);
    } else {
      var m__5163__auto____$1 = cljs.core.async.untap_all_STAR_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, m);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mult.untap-all*", m);
      }
    }
  }
};
cljs.core.async.mult = function cljs$core$async$mult(ch) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var m = function() {
    if (typeof cljs.core.async.t22115 !== "undefined") {
    } else {
      cljs.core.async.t22115 = function(mult, ch, cs, meta22116) {
        this.mult = mult;
        this.ch = ch;
        this.cs = cs;
        this.meta22116 = meta22116;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
        this.cljs$lang$protocol_mask$partition1$ = 0;
      };
      cljs.core.async.t22115.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs) {
        return function(_22117, meta22116__$1) {
          var self__ = this;
          var _22117__$1 = this;
          return new cljs.core.async.t22115(self__.mult, self__.ch, self__.cs, meta22116__$1);
        };
      }(cs);
      cljs.core.async.t22115.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs) {
        return function(_22117) {
          var self__ = this;
          var _22117__$1 = this;
          return self__.meta22116;
        };
      }(cs);
      cljs.core.async.t22115.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t22115.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(cs);
      cljs.core.async.t22115.prototype.cljs$core$async$Mult$ = true;
      cljs.core.async.t22115.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(cs) {
        return function(_, ch__$1, close_QMARK_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch__$1, close_QMARK_);
          return null;
        };
      }(cs);
      cljs.core.async.t22115.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(cs) {
        return function(_, ch__$1) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch__$1);
          return null;
        };
      }(cs);
      cljs.core.async.t22115.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return null;
        };
      }(cs);
      cljs.core.async.t22115.getBasis = function(cs) {
        return function() {
          return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mult", "mult", -1187640995, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ch", 
          "ch", 1085813622, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Creates and returns a mult(iple) of the supplied channel. Channels\n  containing copies of the channel can be created with 'tap', and\n  detached with 'untap'.\n\n  Each item is distributed to all taps in parallel and synchronously,\n  i.e. each tap must accept before the next item is distributed. Use\n  buffering/windowing to prevent slow taps from holding up the mult.\n\n  Items received when there are no taps get dropped.\n\n  If a tap puts to a closed channel, it will be removed from the mult."], 
          null)), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "cs", "cs", -117024463, null), new cljs.core.Symbol(null, "meta22116", "meta22116", 625425132, null)], null);
        };
      }(cs);
      cljs.core.async.t22115.cljs$lang$type = true;
      cljs.core.async.t22115.cljs$lang$ctorStr = "cljs.core.async/t22115";
      cljs.core.async.t22115.cljs$lang$ctorPrWriter = function(cs) {
        return function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
          return cljs.core._write.call(null, writer__5106__auto__, "cljs.core.async/t22115");
        };
      }(cs);
      cljs.core.async.__GT_t22115 = function(cs) {
        return function cljs$core$async$mult_$___GT_t22115(mult__$1, ch__$1, cs__$1, meta22116) {
          return new cljs.core.async.t22115(mult__$1, ch__$1, cs__$1, meta22116);
        };
      }(cs);
    }
    return new cljs.core.async.t22115(cljs$core$async$mult, ch, cs, cljs.core.PersistentArrayMap.EMPTY);
  }();
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = function(cs, m, dchan, dctr) {
    return function(_) {
      if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
        return cljs.core.async.put_BANG_.call(null, dchan, true);
      } else {
        return null;
      }
    };
  }(cs, m, dchan, dctr);
  var c__14432__auto___22336 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__14432__auto___22336, cs, m, dchan, dctr, done) {
    return function() {
      var f__14433__auto__ = function() {
        var switch__14367__auto__ = function(c__14432__auto___22336, cs, m, dchan, dctr, done) {
          return function(state_22248) {
            var state_val_22249 = state_22248[1];
            if (state_val_22249 === 7) {
              var inst_22244 = state_22248[2];
              var state_22248__$1 = state_22248;
              var statearr_22250_22337 = state_22248__$1;
              statearr_22250_22337[2] = inst_22244;
              statearr_22250_22337[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_22249 === 20) {
                var inst_22149 = state_22248[7];
                var inst_22159 = cljs.core.first.call(null, inst_22149);
                var inst_22160 = cljs.core.nth.call(null, inst_22159, 0, null);
                var inst_22161 = cljs.core.nth.call(null, inst_22159, 1, null);
                var state_22248__$1 = function() {
                  var statearr_22251 = state_22248;
                  statearr_22251[8] = inst_22160;
                  return statearr_22251;
                }();
                if (cljs.core.truth_(inst_22161)) {
                  var statearr_22252_22338 = state_22248__$1;
                  statearr_22252_22338[1] = 22;
                } else {
                  var statearr_22253_22339 = state_22248__$1;
                  statearr_22253_22339[1] = 23;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_22249 === 27) {
                  var inst_22189 = state_22248[9];
                  var inst_22196 = state_22248[10];
                  var inst_22191 = state_22248[11];
                  var inst_22120 = state_22248[12];
                  var inst_22196__$1 = cljs.core._nth.call(null, inst_22189, inst_22191);
                  var inst_22197 = cljs.core.async.put_BANG_.call(null, inst_22196__$1, inst_22120, done);
                  var state_22248__$1 = function() {
                    var statearr_22254 = state_22248;
                    statearr_22254[10] = inst_22196__$1;
                    return statearr_22254;
                  }();
                  if (cljs.core.truth_(inst_22197)) {
                    var statearr_22255_22340 = state_22248__$1;
                    statearr_22255_22340[1] = 30;
                  } else {
                    var statearr_22256_22341 = state_22248__$1;
                    statearr_22256_22341[1] = 31;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_22249 === 1) {
                    var state_22248__$1 = state_22248;
                    var statearr_22257_22342 = state_22248__$1;
                    statearr_22257_22342[2] = null;
                    statearr_22257_22342[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_22249 === 24) {
                      var inst_22149 = state_22248[7];
                      var inst_22166 = state_22248[2];
                      var inst_22167 = cljs.core.next.call(null, inst_22149);
                      var inst_22129 = inst_22167;
                      var inst_22130 = null;
                      var inst_22131 = 0;
                      var inst_22132 = 0;
                      var state_22248__$1 = function() {
                        var statearr_22258 = state_22248;
                        statearr_22258[13] = inst_22129;
                        statearr_22258[14] = inst_22166;
                        statearr_22258[15] = inst_22132;
                        statearr_22258[16] = inst_22130;
                        statearr_22258[17] = inst_22131;
                        return statearr_22258;
                      }();
                      var statearr_22259_22343 = state_22248__$1;
                      statearr_22259_22343[2] = null;
                      statearr_22259_22343[1] = 8;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_22249 === 39) {
                        var state_22248__$1 = state_22248;
                        var statearr_22263_22344 = state_22248__$1;
                        statearr_22263_22344[2] = null;
                        statearr_22263_22344[1] = 41;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_22249 === 4) {
                          var inst_22120 = state_22248[12];
                          var inst_22120__$1 = state_22248[2];
                          var inst_22121 = inst_22120__$1 == null;
                          var state_22248__$1 = function() {
                            var statearr_22264 = state_22248;
                            statearr_22264[12] = inst_22120__$1;
                            return statearr_22264;
                          }();
                          if (cljs.core.truth_(inst_22121)) {
                            var statearr_22265_22345 = state_22248__$1;
                            statearr_22265_22345[1] = 5;
                          } else {
                            var statearr_22266_22346 = state_22248__$1;
                            statearr_22266_22346[1] = 6;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_22249 === 15) {
                            var inst_22129 = state_22248[13];
                            var inst_22132 = state_22248[15];
                            var inst_22130 = state_22248[16];
                            var inst_22131 = state_22248[17];
                            var inst_22145 = state_22248[2];
                            var inst_22146 = inst_22132 + 1;
                            var tmp22260 = inst_22129;
                            var tmp22261 = inst_22130;
                            var tmp22262 = inst_22131;
                            var inst_22129__$1 = tmp22260;
                            var inst_22130__$1 = tmp22261;
                            var inst_22131__$1 = tmp22262;
                            var inst_22132__$1 = inst_22146;
                            var state_22248__$1 = function() {
                              var statearr_22267 = state_22248;
                              statearr_22267[13] = inst_22129__$1;
                              statearr_22267[15] = inst_22132__$1;
                              statearr_22267[16] = inst_22130__$1;
                              statearr_22267[17] = inst_22131__$1;
                              statearr_22267[18] = inst_22145;
                              return statearr_22267;
                            }();
                            var statearr_22268_22347 = state_22248__$1;
                            statearr_22268_22347[2] = null;
                            statearr_22268_22347[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_22249 === 21) {
                              var inst_22170 = state_22248[2];
                              var state_22248__$1 = state_22248;
                              var statearr_22272_22348 = state_22248__$1;
                              statearr_22272_22348[2] = inst_22170;
                              statearr_22272_22348[1] = 18;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_22249 === 31) {
                                var inst_22196 = state_22248[10];
                                var inst_22200 = done.call(null, null);
                                var inst_22201 = cljs.core.async.untap_STAR_.call(null, m, inst_22196);
                                var state_22248__$1 = function() {
                                  var statearr_22273 = state_22248;
                                  statearr_22273[19] = inst_22200;
                                  return statearr_22273;
                                }();
                                var statearr_22274_22349 = state_22248__$1;
                                statearr_22274_22349[2] = inst_22201;
                                statearr_22274_22349[1] = 32;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_22249 === 32) {
                                  var inst_22189 = state_22248[9];
                                  var inst_22190 = state_22248[20];
                                  var inst_22191 = state_22248[11];
                                  var inst_22188 = state_22248[21];
                                  var inst_22203 = state_22248[2];
                                  var inst_22204 = inst_22191 + 1;
                                  var tmp22269 = inst_22189;
                                  var tmp22270 = inst_22190;
                                  var tmp22271 = inst_22188;
                                  var inst_22188__$1 = tmp22271;
                                  var inst_22189__$1 = tmp22269;
                                  var inst_22190__$1 = tmp22270;
                                  var inst_22191__$1 = inst_22204;
                                  var state_22248__$1 = function() {
                                    var statearr_22275 = state_22248;
                                    statearr_22275[9] = inst_22189__$1;
                                    statearr_22275[20] = inst_22190__$1;
                                    statearr_22275[22] = inst_22203;
                                    statearr_22275[11] = inst_22191__$1;
                                    statearr_22275[21] = inst_22188__$1;
                                    return statearr_22275;
                                  }();
                                  var statearr_22276_22350 = state_22248__$1;
                                  statearr_22276_22350[2] = null;
                                  statearr_22276_22350[1] = 25;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_22249 === 40) {
                                    var inst_22216 = state_22248[23];
                                    var inst_22220 = done.call(null, null);
                                    var inst_22221 = cljs.core.async.untap_STAR_.call(null, m, inst_22216);
                                    var state_22248__$1 = function() {
                                      var statearr_22277 = state_22248;
                                      statearr_22277[24] = inst_22220;
                                      return statearr_22277;
                                    }();
                                    var statearr_22278_22351 = state_22248__$1;
                                    statearr_22278_22351[2] = inst_22221;
                                    statearr_22278_22351[1] = 41;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_22249 === 33) {
                                      var inst_22207 = state_22248[25];
                                      var inst_22209 = cljs.core.chunked_seq_QMARK_.call(null, inst_22207);
                                      var state_22248__$1 = state_22248;
                                      if (inst_22209) {
                                        var statearr_22279_22352 = state_22248__$1;
                                        statearr_22279_22352[1] = 36;
                                      } else {
                                        var statearr_22280_22353 = state_22248__$1;
                                        statearr_22280_22353[1] = 37;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_22249 === 13) {
                                        var inst_22139 = state_22248[26];
                                        var inst_22142 = cljs.core.async.close_BANG_.call(null, inst_22139);
                                        var state_22248__$1 = state_22248;
                                        var statearr_22281_22354 = state_22248__$1;
                                        statearr_22281_22354[2] = inst_22142;
                                        statearr_22281_22354[1] = 15;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_22249 === 22) {
                                          var inst_22160 = state_22248[8];
                                          var inst_22163 = cljs.core.async.close_BANG_.call(null, inst_22160);
                                          var state_22248__$1 = state_22248;
                                          var statearr_22282_22355 = state_22248__$1;
                                          statearr_22282_22355[2] = inst_22163;
                                          statearr_22282_22355[1] = 24;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_22249 === 36) {
                                            var inst_22207 = state_22248[25];
                                            var inst_22211 = cljs.core.chunk_first.call(null, inst_22207);
                                            var inst_22212 = cljs.core.chunk_rest.call(null, inst_22207);
                                            var inst_22213 = cljs.core.count.call(null, inst_22211);
                                            var inst_22188 = inst_22212;
                                            var inst_22189 = inst_22211;
                                            var inst_22190 = inst_22213;
                                            var inst_22191 = 0;
                                            var state_22248__$1 = function() {
                                              var statearr_22283 = state_22248;
                                              statearr_22283[9] = inst_22189;
                                              statearr_22283[20] = inst_22190;
                                              statearr_22283[11] = inst_22191;
                                              statearr_22283[21] = inst_22188;
                                              return statearr_22283;
                                            }();
                                            var statearr_22284_22356 = state_22248__$1;
                                            statearr_22284_22356[2] = null;
                                            statearr_22284_22356[1] = 25;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_22249 === 41) {
                                              var inst_22207 = state_22248[25];
                                              var inst_22223 = state_22248[2];
                                              var inst_22224 = cljs.core.next.call(null, inst_22207);
                                              var inst_22188 = inst_22224;
                                              var inst_22189 = null;
                                              var inst_22190 = 0;
                                              var inst_22191 = 0;
                                              var state_22248__$1 = function() {
                                                var statearr_22285 = state_22248;
                                                statearr_22285[9] = inst_22189;
                                                statearr_22285[20] = inst_22190;
                                                statearr_22285[11] = inst_22191;
                                                statearr_22285[21] = inst_22188;
                                                statearr_22285[27] = inst_22223;
                                                return statearr_22285;
                                              }();
                                              var statearr_22286_22357 = state_22248__$1;
                                              statearr_22286_22357[2] = null;
                                              statearr_22286_22357[1] = 25;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_22249 === 43) {
                                                var state_22248__$1 = state_22248;
                                                var statearr_22287_22358 = state_22248__$1;
                                                statearr_22287_22358[2] = null;
                                                statearr_22287_22358[1] = 44;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_22249 === 29) {
                                                  var inst_22232 = state_22248[2];
                                                  var state_22248__$1 = state_22248;
                                                  var statearr_22288_22359 = state_22248__$1;
                                                  statearr_22288_22359[2] = inst_22232;
                                                  statearr_22288_22359[1] = 26;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_22249 === 44) {
                                                    var inst_22241 = state_22248[2];
                                                    var state_22248__$1 = function() {
                                                      var statearr_22289 = state_22248;
                                                      statearr_22289[28] = inst_22241;
                                                      return statearr_22289;
                                                    }();
                                                    var statearr_22290_22360 = state_22248__$1;
                                                    statearr_22290_22360[2] = null;
                                                    statearr_22290_22360[1] = 2;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_22249 === 6) {
                                                      var inst_22180 = state_22248[29];
                                                      var inst_22179 = cljs.core.deref.call(null, cs);
                                                      var inst_22180__$1 = cljs.core.keys.call(null, inst_22179);
                                                      var inst_22181 = cljs.core.count.call(null, inst_22180__$1);
                                                      var inst_22182 = cljs.core.reset_BANG_.call(null, dctr, inst_22181);
                                                      var inst_22187 = cljs.core.seq.call(null, inst_22180__$1);
                                                      var inst_22188 = inst_22187;
                                                      var inst_22189 = null;
                                                      var inst_22190 = 0;
                                                      var inst_22191 = 0;
                                                      var state_22248__$1 = function() {
                                                        var statearr_22291 = state_22248;
                                                        statearr_22291[9] = inst_22189;
                                                        statearr_22291[29] = inst_22180__$1;
                                                        statearr_22291[20] = inst_22190;
                                                        statearr_22291[11] = inst_22191;
                                                        statearr_22291[21] = inst_22188;
                                                        statearr_22291[30] = inst_22182;
                                                        return statearr_22291;
                                                      }();
                                                      var statearr_22292_22361 = state_22248__$1;
                                                      statearr_22292_22361[2] = null;
                                                      statearr_22292_22361[1] = 25;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_22249 === 28) {
                                                        var inst_22207 = state_22248[25];
                                                        var inst_22188 = state_22248[21];
                                                        var inst_22207__$1 = cljs.core.seq.call(null, inst_22188);
                                                        var state_22248__$1 = function() {
                                                          var statearr_22293 = state_22248;
                                                          statearr_22293[25] = inst_22207__$1;
                                                          return statearr_22293;
                                                        }();
                                                        if (inst_22207__$1) {
                                                          var statearr_22294_22362 = state_22248__$1;
                                                          statearr_22294_22362[1] = 33;
                                                        } else {
                                                          var statearr_22295_22363 = state_22248__$1;
                                                          statearr_22295_22363[1] = 34;
                                                        }
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_22249 === 25) {
                                                          var inst_22190 = state_22248[20];
                                                          var inst_22191 = state_22248[11];
                                                          var inst_22193 = inst_22191 < inst_22190;
                                                          var inst_22194 = inst_22193;
                                                          var state_22248__$1 = state_22248;
                                                          if (cljs.core.truth_(inst_22194)) {
                                                            var statearr_22296_22364 = state_22248__$1;
                                                            statearr_22296_22364[1] = 27;
                                                          } else {
                                                            var statearr_22297_22365 = state_22248__$1;
                                                            statearr_22297_22365[1] = 28;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_22249 === 34) {
                                                            var state_22248__$1 = state_22248;
                                                            var statearr_22298_22366 = state_22248__$1;
                                                            statearr_22298_22366[2] = null;
                                                            statearr_22298_22366[1] = 35;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_22249 === 17) {
                                                              var state_22248__$1 = state_22248;
                                                              var statearr_22299_22367 = state_22248__$1;
                                                              statearr_22299_22367[2] = null;
                                                              statearr_22299_22367[1] = 18;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_22249 === 3) {
                                                                var inst_22246 = state_22248[2];
                                                                var state_22248__$1 = state_22248;
                                                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_22248__$1, inst_22246);
                                                              } else {
                                                                if (state_val_22249 === 12) {
                                                                  var inst_22175 = state_22248[2];
                                                                  var state_22248__$1 = state_22248;
                                                                  var statearr_22300_22368 = state_22248__$1;
                                                                  statearr_22300_22368[2] = inst_22175;
                                                                  statearr_22300_22368[1] = 9;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                } else {
                                                                  if (state_val_22249 === 2) {
                                                                    var state_22248__$1 = state_22248;
                                                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_22248__$1, 4, ch);
                                                                  } else {
                                                                    if (state_val_22249 === 23) {
                                                                      var state_22248__$1 = state_22248;
                                                                      var statearr_22301_22369 = state_22248__$1;
                                                                      statearr_22301_22369[2] = null;
                                                                      statearr_22301_22369[1] = 24;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                    } else {
                                                                      if (state_val_22249 === 35) {
                                                                        var inst_22230 = state_22248[2];
                                                                        var state_22248__$1 = state_22248;
                                                                        var statearr_22302_22370 = state_22248__$1;
                                                                        statearr_22302_22370[2] = inst_22230;
                                                                        statearr_22302_22370[1] = 29;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                      } else {
                                                                        if (state_val_22249 === 19) {
                                                                          var inst_22149 = state_22248[7];
                                                                          var inst_22153 = cljs.core.chunk_first.call(null, inst_22149);
                                                                          var inst_22154 = cljs.core.chunk_rest.call(null, inst_22149);
                                                                          var inst_22155 = cljs.core.count.call(null, inst_22153);
                                                                          var inst_22129 = inst_22154;
                                                                          var inst_22130 = inst_22153;
                                                                          var inst_22131 = inst_22155;
                                                                          var inst_22132 = 0;
                                                                          var state_22248__$1 = function() {
                                                                            var statearr_22303 = state_22248;
                                                                            statearr_22303[13] = inst_22129;
                                                                            statearr_22303[15] = inst_22132;
                                                                            statearr_22303[16] = inst_22130;
                                                                            statearr_22303[17] = inst_22131;
                                                                            return statearr_22303;
                                                                          }();
                                                                          var statearr_22304_22371 = state_22248__$1;
                                                                          statearr_22304_22371[2] = null;
                                                                          statearr_22304_22371[1] = 8;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                        } else {
                                                                          if (state_val_22249 === 11) {
                                                                            var inst_22129 = state_22248[13];
                                                                            var inst_22149 = state_22248[7];
                                                                            var inst_22149__$1 = cljs.core.seq.call(null, inst_22129);
                                                                            var state_22248__$1 = function() {
                                                                              var statearr_22305 = state_22248;
                                                                              statearr_22305[7] = inst_22149__$1;
                                                                              return statearr_22305;
                                                                            }();
                                                                            if (inst_22149__$1) {
                                                                              var statearr_22306_22372 = state_22248__$1;
                                                                              statearr_22306_22372[1] = 16;
                                                                            } else {
                                                                              var statearr_22307_22373 = state_22248__$1;
                                                                              statearr_22307_22373[1] = 17;
                                                                            }
                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                          } else {
                                                                            if (state_val_22249 === 9) {
                                                                              var inst_22177 = state_22248[2];
                                                                              var state_22248__$1 = state_22248;
                                                                              var statearr_22308_22374 = state_22248__$1;
                                                                              statearr_22308_22374[2] = inst_22177;
                                                                              statearr_22308_22374[1] = 7;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                            } else {
                                                                              if (state_val_22249 === 5) {
                                                                                var inst_22127 = cljs.core.deref.call(null, cs);
                                                                                var inst_22128 = cljs.core.seq.call(null, inst_22127);
                                                                                var inst_22129 = inst_22128;
                                                                                var inst_22130 = null;
                                                                                var inst_22131 = 0;
                                                                                var inst_22132 = 0;
                                                                                var state_22248__$1 = function() {
                                                                                  var statearr_22309 = state_22248;
                                                                                  statearr_22309[13] = inst_22129;
                                                                                  statearr_22309[15] = inst_22132;
                                                                                  statearr_22309[16] = inst_22130;
                                                                                  statearr_22309[17] = inst_22131;
                                                                                  return statearr_22309;
                                                                                }();
                                                                                var statearr_22310_22375 = state_22248__$1;
                                                                                statearr_22310_22375[2] = null;
                                                                                statearr_22310_22375[1] = 8;
                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                              } else {
                                                                                if (state_val_22249 === 14) {
                                                                                  var state_22248__$1 = state_22248;
                                                                                  var statearr_22311_22376 = state_22248__$1;
                                                                                  statearr_22311_22376[2] = null;
                                                                                  statearr_22311_22376[1] = 15;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                } else {
                                                                                  if (state_val_22249 === 45) {
                                                                                    var inst_22238 = state_22248[2];
                                                                                    var state_22248__$1 = state_22248;
                                                                                    var statearr_22312_22377 = state_22248__$1;
                                                                                    statearr_22312_22377[2] = inst_22238;
                                                                                    statearr_22312_22377[1] = 44;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                  } else {
                                                                                    if (state_val_22249 === 26) {
                                                                                      var inst_22180 = state_22248[29];
                                                                                      var inst_22234 = state_22248[2];
                                                                                      var inst_22235 = cljs.core.seq.call(null, inst_22180);
                                                                                      var state_22248__$1 = function() {
                                                                                        var statearr_22313 = state_22248;
                                                                                        statearr_22313[31] = inst_22234;
                                                                                        return statearr_22313;
                                                                                      }();
                                                                                      if (inst_22235) {
                                                                                        var statearr_22314_22378 = state_22248__$1;
                                                                                        statearr_22314_22378[1] = 42;
                                                                                      } else {
                                                                                        var statearr_22315_22379 = state_22248__$1;
                                                                                        statearr_22315_22379[1] = 43;
                                                                                      }
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                    } else {
                                                                                      if (state_val_22249 === 16) {
                                                                                        var inst_22149 = state_22248[7];
                                                                                        var inst_22151 = cljs.core.chunked_seq_QMARK_.call(null, inst_22149);
                                                                                        var state_22248__$1 = state_22248;
                                                                                        if (inst_22151) {
                                                                                          var statearr_22316_22380 = state_22248__$1;
                                                                                          statearr_22316_22380[1] = 19;
                                                                                        } else {
                                                                                          var statearr_22317_22381 = state_22248__$1;
                                                                                          statearr_22317_22381[1] = 20;
                                                                                        }
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                      } else {
                                                                                        if (state_val_22249 === 38) {
                                                                                          var inst_22227 = state_22248[2];
                                                                                          var state_22248__$1 = state_22248;
                                                                                          var statearr_22318_22382 = state_22248__$1;
                                                                                          statearr_22318_22382[2] = inst_22227;
                                                                                          statearr_22318_22382[1] = 35;
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                        } else {
                                                                                          if (state_val_22249 === 30) {
                                                                                            var state_22248__$1 = state_22248;
                                                                                            var statearr_22319_22383 = state_22248__$1;
                                                                                            statearr_22319_22383[2] = null;
                                                                                            statearr_22319_22383[1] = 32;
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                          } else {
                                                                                            if (state_val_22249 === 10) {
                                                                                              var inst_22132 = state_22248[15];
                                                                                              var inst_22130 = state_22248[16];
                                                                                              var inst_22138 = cljs.core._nth.call(null, inst_22130, inst_22132);
                                                                                              var inst_22139 = cljs.core.nth.call(null, inst_22138, 0, null);
                                                                                              var inst_22140 = cljs.core.nth.call(null, inst_22138, 1, null);
                                                                                              var state_22248__$1 = function() {
                                                                                                var statearr_22320 = state_22248;
                                                                                                statearr_22320[26] = inst_22139;
                                                                                                return statearr_22320;
                                                                                              }();
                                                                                              if (cljs.core.truth_(inst_22140)) {
                                                                                                var statearr_22321_22384 = state_22248__$1;
                                                                                                statearr_22321_22384[1] = 13;
                                                                                              } else {
                                                                                                var statearr_22322_22385 = state_22248__$1;
                                                                                                statearr_22322_22385[1] = 14;
                                                                                              }
                                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                            } else {
                                                                                              if (state_val_22249 === 18) {
                                                                                                var inst_22173 = state_22248[2];
                                                                                                var state_22248__$1 = state_22248;
                                                                                                var statearr_22323_22386 = state_22248__$1;
                                                                                                statearr_22323_22386[2] = inst_22173;
                                                                                                statearr_22323_22386[1] = 12;
                                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                              } else {
                                                                                                if (state_val_22249 === 42) {
                                                                                                  var state_22248__$1 = state_22248;
                                                                                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_22248__$1, 45, dchan);
                                                                                                } else {
                                                                                                  if (state_val_22249 === 37) {
                                                                                                    var inst_22207 = state_22248[25];
                                                                                                    var inst_22216 = state_22248[23];
                                                                                                    var inst_22120 = state_22248[12];
                                                                                                    var inst_22216__$1 = cljs.core.first.call(null, inst_22207);
                                                                                                    var inst_22217 = cljs.core.async.put_BANG_.call(null, inst_22216__$1, inst_22120, done);
                                                                                                    var state_22248__$1 = function() {
                                                                                                      var statearr_22324 = state_22248;
                                                                                                      statearr_22324[23] = inst_22216__$1;
                                                                                                      return statearr_22324;
                                                                                                    }();
                                                                                                    if (cljs.core.truth_(inst_22217)) {
                                                                                                      var statearr_22325_22387 = state_22248__$1;
                                                                                                      statearr_22325_22387[1] = 39;
                                                                                                    } else {
                                                                                                      var statearr_22326_22388 = state_22248__$1;
                                                                                                      statearr_22326_22388[1] = 40;
                                                                                                    }
                                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                  } else {
                                                                                                    if (state_val_22249 === 8) {
                                                                                                      var inst_22132 = state_22248[15];
                                                                                                      var inst_22131 = state_22248[17];
                                                                                                      var inst_22134 = inst_22132 < inst_22131;
                                                                                                      var inst_22135 = inst_22134;
                                                                                                      var state_22248__$1 = state_22248;
                                                                                                      if (cljs.core.truth_(inst_22135)) {
                                                                                                        var statearr_22327_22389 = state_22248__$1;
                                                                                                        statearr_22327_22389[1] = 10;
                                                                                                      } else {
                                                                                                        var statearr_22328_22390 = state_22248__$1;
                                                                                                        statearr_22328_22390[1] = 11;
                                                                                                      }
                                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                    } else {
                                                                                                      return null;
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__14432__auto___22336, cs, m, dchan, dctr, done);
        return function(switch__14367__auto__, c__14432__auto___22336, cs, m, dchan, dctr, done) {
          return function() {
            var cljs$core$async$mult_$_state_machine__14368__auto__ = null;
            var cljs$core$async$mult_$_state_machine__14368__auto____0 = function() {
              var statearr_22332 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_22332[0] = cljs$core$async$mult_$_state_machine__14368__auto__;
              statearr_22332[1] = 1;
              return statearr_22332;
            };
            var cljs$core$async$mult_$_state_machine__14368__auto____1 = function(state_22248) {
              while (true) {
                var ret_value__14369__auto__ = function() {
                  try {
                    while (true) {
                      var result__14370__auto__ = switch__14367__auto__.call(null, state_22248);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__14370__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__14370__auto__;
                      }
                      break;
                    }
                  } catch (e22333) {
                    if (e22333 instanceof Object) {
                      var ex__14371__auto__ = e22333;
                      var statearr_22334_22391 = state_22248;
                      statearr_22334_22391[5] = ex__14371__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_22248);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e22333;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__14369__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__22392 = state_22248;
                  state_22248 = G__22392;
                  continue;
                } else {
                  return ret_value__14369__auto__;
                }
                break;
              }
            };
            cljs$core$async$mult_$_state_machine__14368__auto__ = function(state_22248) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$mult_$_state_machine__14368__auto____0.call(this);
                case 1:
                  return cljs$core$async$mult_$_state_machine__14368__auto____1.call(this, state_22248);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$mult_$_state_machine__14368__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$mult_$_state_machine__14368__auto____0;
            cljs$core$async$mult_$_state_machine__14368__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$mult_$_state_machine__14368__auto____1;
            return cljs$core$async$mult_$_state_machine__14368__auto__;
          }();
        }(switch__14367__auto__, c__14432__auto___22336, cs, m, dchan, dctr, done);
      }();
      var state__14434__auto__ = function() {
        var statearr_22335 = f__14433__auto__.call(null);
        statearr_22335[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__14432__auto___22336;
        return statearr_22335;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__14434__auto__);
    };
  }(c__14432__auto___22336, cs, m, dchan, dctr, done));
  return m;
};
cljs.core.async.tap = function cljs$core$async$tap() {
  var args22393 = [];
  var len__5565__auto___22396 = arguments.length;
  var i__5566__auto___22397 = 0;
  while (true) {
    if (i__5566__auto___22397 < len__5565__auto___22396) {
      args22393.push(arguments[i__5566__auto___22397]);
      var G__22398 = i__5566__auto___22397 + 1;
      i__5566__auto___22397 = G__22398;
      continue;
    } else {
    }
    break;
  }
  var G__22395 = args22393.length;
  switch(G__22395) {
    case 2:
      return cljs.core.async.tap.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.tap.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22393.length)].join(""));;
  }
};
cljs.core.async.tap.cljs$core$IFn$_invoke$arity$2 = function(mult, ch) {
  return cljs.core.async.tap.call(null, mult, ch, true);
};
cljs.core.async.tap.cljs$core$IFn$_invoke$arity$3 = function(mult, ch, close_QMARK_) {
  cljs.core.async.tap_STAR_.call(null, mult, ch, close_QMARK_);
  return ch;
};
cljs.core.async.tap.cljs$lang$maxFixedArity = 3;
cljs.core.async.untap = function cljs$core$async$untap(mult, ch) {
  return cljs.core.async.untap_STAR_.call(null, mult, ch);
};
cljs.core.async.untap_all = function cljs$core$async$untap_all(mult) {
  return cljs.core.async.untap_all_STAR_.call(null, mult);
};
cljs.core.async.Mix = {};
cljs.core.async.admix_STAR_ = function cljs$core$async$admix_STAR_(m, ch) {
  if (!(m == null) && !(m.cljs$core$async$Mix$admix_STAR_$arity$2 == null)) {
    return m.cljs$core$async$Mix$admix_STAR_$arity$2(m, ch);
  } else {
    var x__5162__auto__ = m == null ? null : m;
    var m__5163__auto__ = cljs.core.async.admix_STAR_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, m, ch);
    } else {
      var m__5163__auto____$1 = cljs.core.async.admix_STAR_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, m, ch);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mix.admix*", m);
      }
    }
  }
};
cljs.core.async.unmix_STAR_ = function cljs$core$async$unmix_STAR_(m, ch) {
  if (!(m == null) && !(m.cljs$core$async$Mix$unmix_STAR_$arity$2 == null)) {
    return m.cljs$core$async$Mix$unmix_STAR_$arity$2(m, ch);
  } else {
    var x__5162__auto__ = m == null ? null : m;
    var m__5163__auto__ = cljs.core.async.unmix_STAR_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, m, ch);
    } else {
      var m__5163__auto____$1 = cljs.core.async.unmix_STAR_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, m, ch);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mix.unmix*", m);
      }
    }
  }
};
cljs.core.async.unmix_all_STAR_ = function cljs$core$async$unmix_all_STAR_(m) {
  if (!(m == null) && !(m.cljs$core$async$Mix$unmix_all_STAR_$arity$1 == null)) {
    return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1(m);
  } else {
    var x__5162__auto__ = m == null ? null : m;
    var m__5163__auto__ = cljs.core.async.unmix_all_STAR_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, m);
    } else {
      var m__5163__auto____$1 = cljs.core.async.unmix_all_STAR_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, m);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mix.unmix-all*", m);
      }
    }
  }
};
cljs.core.async.toggle_STAR_ = function cljs$core$async$toggle_STAR_(m, state_map) {
  if (!(m == null) && !(m.cljs$core$async$Mix$toggle_STAR_$arity$2 == null)) {
    return m.cljs$core$async$Mix$toggle_STAR_$arity$2(m, state_map);
  } else {
    var x__5162__auto__ = m == null ? null : m;
    var m__5163__auto__ = cljs.core.async.toggle_STAR_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, m, state_map);
    } else {
      var m__5163__auto____$1 = cljs.core.async.toggle_STAR_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, m, state_map);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mix.toggle*", m);
      }
    }
  }
};
cljs.core.async.solo_mode_STAR_ = function cljs$core$async$solo_mode_STAR_(m, mode) {
  if (!(m == null) && !(m.cljs$core$async$Mix$solo_mode_STAR_$arity$2 == null)) {
    return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2(m, mode);
  } else {
    var x__5162__auto__ = m == null ? null : m;
    var m__5163__auto__ = cljs.core.async.solo_mode_STAR_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, m, mode);
    } else {
      var m__5163__auto____$1 = cljs.core.async.solo_mode_STAR_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, m, mode);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mix.solo-mode*", m);
      }
    }
  }
};
cljs.core.async.ioc_alts_BANG_ = function cljs$core$async$ioc_alts_BANG_() {
  var args__5572__auto__ = [];
  var len__5565__auto___22412 = arguments.length;
  var i__5566__auto___22413 = 0;
  while (true) {
    if (i__5566__auto___22413 < len__5565__auto___22412) {
      args__5572__auto__.push(arguments[i__5566__auto___22413]);
      var G__22414 = i__5566__auto___22413 + 1;
      i__5566__auto___22413 = G__22414;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 3 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(3), 0) : null;
  return cljs.core.async.ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5573__auto__);
};
cljs.core.async.ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(state, cont_block, ports, p__22406) {
  var map__22407 = p__22406;
  var map__22407__$1 = (!(map__22407 == null) ? map__22407.cljs$lang$protocol_mask$partition0$ & 64 || map__22407.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22407) : map__22407;
  var opts = map__22407__$1;
  var statearr_22409_22415 = state;
  statearr_22409_22415[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
  var temp__4425__auto__ = cljs.core.async.do_alts.call(null, function(map__22407, map__22407__$1, opts) {
    return function(val) {
      var statearr_22410_22416 = state;
      statearr_22410_22416[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
    };
  }(map__22407, map__22407__$1, opts), ports, opts);
  if (cljs.core.truth_(temp__4425__auto__)) {
    var cb = temp__4425__auto__;
    var statearr_22411_22417 = state;
    statearr_22411_22417[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.async.ioc_alts_BANG_.cljs$lang$applyTo = function(seq22402) {
  var G__22403 = cljs.core.first.call(null, seq22402);
  var seq22402__$1 = cljs.core.next.call(null, seq22402);
  var G__22404 = cljs.core.first.call(null, seq22402__$1);
  var seq22402__$2 = cljs.core.next.call(null, seq22402__$1);
  var G__22405 = cljs.core.first.call(null, seq22402__$2);
  var seq22402__$3 = cljs.core.next.call(null, seq22402__$2);
  return cljs.core.async.ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__22403, G__22404, G__22405, seq22402__$3);
};
cljs.core.async.mix = function cljs$core$async$mix(out) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var solo_modes = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pause", "pause", -2095325672), null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), null], null), null);
  var attrs = cljs.core.conj.call(null, solo_modes, new cljs.core.Keyword(null, "solo", "solo", -316350075));
  var solo_mode = cljs.core.atom.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646));
  var change = cljs.core.async.chan.call(null);
  var changed = function(cs, solo_modes, attrs, solo_mode, change) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, change, true);
    };
  }(cs, solo_modes, attrs, solo_mode, change);
  var pick = function(cs, solo_modes, attrs, solo_mode, change, changed) {
    return function(attr, chs) {
      return cljs.core.reduce_kv.call(null, function(cs, solo_modes, attrs, solo_mode, change, changed) {
        return function(ret, c, v) {
          if (cljs.core.truth_(attr.call(null, v))) {
            return cljs.core.conj.call(null, ret, c);
          } else {
            return ret;
          }
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed), cljs.core.PersistentHashSet.EMPTY, chs);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed);
  var calc_state = function(cs, solo_modes, attrs, solo_mode, change, changed, pick) {
    return function() {
      var chs = cljs.core.deref.call(null, cs);
      var mode = cljs.core.deref.call(null, solo_mode);
      var solos = pick.call(null, new cljs.core.Keyword(null, "solo", "solo", -316350075), chs);
      var pauses = pick.call(null, new cljs.core.Keyword(null, "pause", "pause", -2095325672), chs);
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "solos", "solos", 1441458643), solos, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309), pick.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), chs), new cljs.core.Keyword(null, "reads", "reads", -1215067361), cljs.core.conj.call(null, cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "pause", "pause", -2095325672)) && !cljs.core.empty_QMARK_.call(null, solos) ? cljs.core.vec.call(null, 
      solos) : cljs.core.vec.call(null, cljs.core.remove.call(null, pauses, cljs.core.keys.call(null, chs))), change)], null);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed, pick);
  var m = function() {
    if (typeof cljs.core.async.t22581 !== "undefined") {
    } else {
      cljs.core.async.t22581 = function(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, meta22582) {
        this.change = change;
        this.mix = mix;
        this.solo_mode = solo_mode;
        this.pick = pick;
        this.cs = cs;
        this.calc_state = calc_state;
        this.out = out;
        this.changed = changed;
        this.solo_modes = solo_modes;
        this.attrs = attrs;
        this.meta22582 = meta22582;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
        this.cljs$lang$protocol_mask$partition1$ = 0;
      };
      cljs.core.async.t22581.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_22583, meta22582__$1) {
          var self__ = this;
          var _22583__$1 = this;
          return new cljs.core.async.t22581(self__.change, self__.mix, self__.solo_mode, self__.pick, self__.cs, self__.calc_state, self__.out, self__.changed, self__.solo_modes, self__.attrs, meta22582__$1);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t22581.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_22583) {
          var self__ = this;
          var _22583__$1 = this;
          return self__.meta22582;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t22581.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t22581.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.out;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t22581.prototype.cljs$core$async$Mix$ = true;
      cljs.core.async.t22581.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t22581.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t22581.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t22581.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, state_map) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core.merge), state_map);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t22581.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, mode) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.solo_modes.call(null, mode))) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("mode must be one of: "), cljs.core.str(self__.solo_modes)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "solo-modes", "solo-modes", 882180540, null), new cljs.core.Symbol(null, "mode", "mode", -2000032078, null))))].join(""));
          }
          cljs.core.reset_BANG_.call(null, self__.solo_mode, mode);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t22581.getBasis = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function() {
          return new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "change", "change", 477485025, null), cljs.core.with_meta(new cljs.core.Symbol(null, "mix", "mix", 2121373763, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
          [new cljs.core.Symbol(null, "out", "out", 729986010, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Creates and returns a mix of one or more input channels which will\n  be put on the supplied out channel. Input sources can be added to\n  the mix with 'admix', and removed with 'unmix'. A mix supports\n  soloing, muting and pausing multiple inputs atomically using\n  'toggle', and can solo using either muting or pausing as determined\n  by 'solo-mode'.\n\n  Each channel can have zero or more boolean modes set via 'toggle':\n\n  :solo - when true, only this (ond other soloed) channel(s) will appear\n          in the mix output channel. :mute and :pause states of soloed\n          channels are ignored. If solo-mode is :mute, non-soloed\n          channels are muted, if :pause, non-soloed channels are\n          paused.\n\n  :mute - muted channels will have their contents consumed but not included in the mix\n  :pause - paused channels will not have their contents consumed (and thus also not included in the mix)\n"], 
          null)), new cljs.core.Symbol(null, "solo-mode", "solo-mode", 2031788074, null), new cljs.core.Symbol(null, "pick", "pick", 1300068175, null), new cljs.core.Symbol(null, "cs", "cs", -117024463, null), new cljs.core.Symbol(null, "calc-state", "calc-state", -349968968, null), new cljs.core.Symbol(null, "out", "out", 729986010, null), new cljs.core.Symbol(null, "changed", "changed", -2083710852, null), new cljs.core.Symbol(null, "solo-modes", "solo-modes", 882180540, null), new cljs.core.Symbol(null, 
          "attrs", "attrs", -450137186, null), new cljs.core.Symbol(null, "meta22582", "meta22582", -1754694983, null)], null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t22581.cljs$lang$type = true;
      cljs.core.async.t22581.cljs$lang$ctorStr = "cljs.core.async/t22581";
      cljs.core.async.t22581.cljs$lang$ctorPrWriter = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
          return cljs.core._write.call(null, writer__5106__auto__, "cljs.core.async/t22581");
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.__GT_t22581 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function cljs$core$async$mix_$___GT_t22581(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta22582) {
          return new cljs.core.async.t22581(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta22582);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
    }
    return new cljs.core.async.t22581(change, cljs$core$async$mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, cljs.core.PersistentArrayMap.EMPTY);
  }();
  var c__14432__auto___22744 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__14432__auto___22744, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
    return function() {
      var f__14433__auto__ = function() {
        var switch__14367__auto__ = function(c__14432__auto___22744, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function(state_22681) {
            var state_val_22682 = state_22681[1];
            if (state_val_22682 === 7) {
              var inst_22599 = state_22681[2];
              var state_22681__$1 = state_22681;
              var statearr_22683_22745 = state_22681__$1;
              statearr_22683_22745[2] = inst_22599;
              statearr_22683_22745[1] = 4;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_22682 === 20) {
                var inst_22611 = state_22681[7];
                var state_22681__$1 = state_22681;
                var statearr_22684_22746 = state_22681__$1;
                statearr_22684_22746[2] = inst_22611;
                statearr_22684_22746[1] = 21;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_22682 === 27) {
                  var state_22681__$1 = state_22681;
                  var statearr_22685_22747 = state_22681__$1;
                  statearr_22685_22747[2] = null;
                  statearr_22685_22747[1] = 28;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_22682 === 1) {
                    var inst_22587 = state_22681[8];
                    var inst_22587__$1 = calc_state.call(null);
                    var inst_22589 = inst_22587__$1 == null;
                    var inst_22590 = cljs.core.not.call(null, inst_22589);
                    var state_22681__$1 = function() {
                      var statearr_22686 = state_22681;
                      statearr_22686[8] = inst_22587__$1;
                      return statearr_22686;
                    }();
                    if (inst_22590) {
                      var statearr_22687_22748 = state_22681__$1;
                      statearr_22687_22748[1] = 2;
                    } else {
                      var statearr_22688_22749 = state_22681__$1;
                      statearr_22688_22749[1] = 3;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_22682 === 24) {
                      var inst_22655 = state_22681[9];
                      var inst_22634 = state_22681[10];
                      var inst_22641 = state_22681[11];
                      var inst_22655__$1 = inst_22634.call(null, inst_22641);
                      var state_22681__$1 = function() {
                        var statearr_22689 = state_22681;
                        statearr_22689[9] = inst_22655__$1;
                        return statearr_22689;
                      }();
                      if (cljs.core.truth_(inst_22655__$1)) {
                        var statearr_22690_22750 = state_22681__$1;
                        statearr_22690_22750[1] = 29;
                      } else {
                        var statearr_22691_22751 = state_22681__$1;
                        statearr_22691_22751[1] = 30;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_22682 === 4) {
                        var inst_22602 = state_22681[2];
                        var state_22681__$1 = state_22681;
                        if (cljs.core.truth_(inst_22602)) {
                          var statearr_22692_22752 = state_22681__$1;
                          statearr_22692_22752[1] = 8;
                        } else {
                          var statearr_22693_22753 = state_22681__$1;
                          statearr_22693_22753[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_22682 === 15) {
                          var inst_22628 = state_22681[2];
                          var state_22681__$1 = state_22681;
                          if (cljs.core.truth_(inst_22628)) {
                            var statearr_22694_22754 = state_22681__$1;
                            statearr_22694_22754[1] = 19;
                          } else {
                            var statearr_22695_22755 = state_22681__$1;
                            statearr_22695_22755[1] = 20;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_22682 === 21) {
                            var inst_22633 = state_22681[12];
                            var inst_22633__$1 = state_22681[2];
                            var inst_22634 = cljs.core.get.call(null, inst_22633__$1, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                            var inst_22635 = cljs.core.get.call(null, inst_22633__$1, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                            var inst_22636 = cljs.core.get.call(null, inst_22633__$1, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                            var state_22681__$1 = function() {
                              var statearr_22696 = state_22681;
                              statearr_22696[10] = inst_22634;
                              statearr_22696[13] = inst_22635;
                              statearr_22696[12] = inst_22633__$1;
                              return statearr_22696;
                            }();
                            return cljs.core.async.ioc_alts_BANG_.call(null, state_22681__$1, 22, inst_22636);
                          } else {
                            if (state_val_22682 === 31) {
                              var inst_22663 = state_22681[2];
                              var state_22681__$1 = state_22681;
                              if (cljs.core.truth_(inst_22663)) {
                                var statearr_22697_22756 = state_22681__$1;
                                statearr_22697_22756[1] = 32;
                              } else {
                                var statearr_22698_22757 = state_22681__$1;
                                statearr_22698_22757[1] = 33;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_22682 === 32) {
                                var inst_22640 = state_22681[14];
                                var state_22681__$1 = state_22681;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_22681__$1, 35, out, inst_22640);
                              } else {
                                if (state_val_22682 === 33) {
                                  var inst_22633 = state_22681[12];
                                  var inst_22611 = inst_22633;
                                  var state_22681__$1 = function() {
                                    var statearr_22699 = state_22681;
                                    statearr_22699[7] = inst_22611;
                                    return statearr_22699;
                                  }();
                                  var statearr_22700_22758 = state_22681__$1;
                                  statearr_22700_22758[2] = null;
                                  statearr_22700_22758[1] = 11;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_22682 === 13) {
                                    var inst_22611 = state_22681[7];
                                    var inst_22618 = inst_22611.cljs$lang$protocol_mask$partition0$;
                                    var inst_22619 = inst_22618 & 64;
                                    var inst_22620 = inst_22611.cljs$core$ISeq$;
                                    var inst_22621 = inst_22619 || inst_22620;
                                    var state_22681__$1 = state_22681;
                                    if (cljs.core.truth_(inst_22621)) {
                                      var statearr_22701_22759 = state_22681__$1;
                                      statearr_22701_22759[1] = 16;
                                    } else {
                                      var statearr_22702_22760 = state_22681__$1;
                                      statearr_22702_22760[1] = 17;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_22682 === 22) {
                                      var inst_22640 = state_22681[14];
                                      var inst_22641 = state_22681[11];
                                      var inst_22639 = state_22681[2];
                                      var inst_22640__$1 = cljs.core.nth.call(null, inst_22639, 0, null);
                                      var inst_22641__$1 = cljs.core.nth.call(null, inst_22639, 1, null);
                                      var inst_22642 = inst_22640__$1 == null;
                                      var inst_22643 = cljs.core._EQ_.call(null, inst_22641__$1, change);
                                      var inst_22644 = inst_22642 || inst_22643;
                                      var state_22681__$1 = function() {
                                        var statearr_22703 = state_22681;
                                        statearr_22703[14] = inst_22640__$1;
                                        statearr_22703[11] = inst_22641__$1;
                                        return statearr_22703;
                                      }();
                                      if (cljs.core.truth_(inst_22644)) {
                                        var statearr_22704_22761 = state_22681__$1;
                                        statearr_22704_22761[1] = 23;
                                      } else {
                                        var statearr_22705_22762 = state_22681__$1;
                                        statearr_22705_22762[1] = 24;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_22682 === 36) {
                                        var inst_22633 = state_22681[12];
                                        var inst_22611 = inst_22633;
                                        var state_22681__$1 = function() {
                                          var statearr_22706 = state_22681;
                                          statearr_22706[7] = inst_22611;
                                          return statearr_22706;
                                        }();
                                        var statearr_22707_22763 = state_22681__$1;
                                        statearr_22707_22763[2] = null;
                                        statearr_22707_22763[1] = 11;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_22682 === 29) {
                                          var inst_22655 = state_22681[9];
                                          var state_22681__$1 = state_22681;
                                          var statearr_22708_22764 = state_22681__$1;
                                          statearr_22708_22764[2] = inst_22655;
                                          statearr_22708_22764[1] = 31;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_22682 === 6) {
                                            var state_22681__$1 = state_22681;
                                            var statearr_22709_22765 = state_22681__$1;
                                            statearr_22709_22765[2] = false;
                                            statearr_22709_22765[1] = 7;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_22682 === 28) {
                                              var inst_22651 = state_22681[2];
                                              var inst_22652 = calc_state.call(null);
                                              var inst_22611 = inst_22652;
                                              var state_22681__$1 = function() {
                                                var statearr_22710 = state_22681;
                                                statearr_22710[7] = inst_22611;
                                                statearr_22710[15] = inst_22651;
                                                return statearr_22710;
                                              }();
                                              var statearr_22711_22766 = state_22681__$1;
                                              statearr_22711_22766[2] = null;
                                              statearr_22711_22766[1] = 11;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_22682 === 25) {
                                                var inst_22677 = state_22681[2];
                                                var state_22681__$1 = state_22681;
                                                var statearr_22712_22767 = state_22681__$1;
                                                statearr_22712_22767[2] = inst_22677;
                                                statearr_22712_22767[1] = 12;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_22682 === 34) {
                                                  var inst_22675 = state_22681[2];
                                                  var state_22681__$1 = state_22681;
                                                  var statearr_22713_22768 = state_22681__$1;
                                                  statearr_22713_22768[2] = inst_22675;
                                                  statearr_22713_22768[1] = 25;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_22682 === 17) {
                                                    var state_22681__$1 = state_22681;
                                                    var statearr_22714_22769 = state_22681__$1;
                                                    statearr_22714_22769[2] = false;
                                                    statearr_22714_22769[1] = 18;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_22682 === 3) {
                                                      var state_22681__$1 = state_22681;
                                                      var statearr_22715_22770 = state_22681__$1;
                                                      statearr_22715_22770[2] = false;
                                                      statearr_22715_22770[1] = 4;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_22682 === 12) {
                                                        var inst_22679 = state_22681[2];
                                                        var state_22681__$1 = state_22681;
                                                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_22681__$1, inst_22679);
                                                      } else {
                                                        if (state_val_22682 === 2) {
                                                          var inst_22587 = state_22681[8];
                                                          var inst_22592 = inst_22587.cljs$lang$protocol_mask$partition0$;
                                                          var inst_22593 = inst_22592 & 64;
                                                          var inst_22594 = inst_22587.cljs$core$ISeq$;
                                                          var inst_22595 = inst_22593 || inst_22594;
                                                          var state_22681__$1 = state_22681;
                                                          if (cljs.core.truth_(inst_22595)) {
                                                            var statearr_22716_22771 = state_22681__$1;
                                                            statearr_22716_22771[1] = 5;
                                                          } else {
                                                            var statearr_22717_22772 = state_22681__$1;
                                                            statearr_22717_22772[1] = 6;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_22682 === 23) {
                                                            var inst_22640 = state_22681[14];
                                                            var inst_22646 = inst_22640 == null;
                                                            var state_22681__$1 = state_22681;
                                                            if (cljs.core.truth_(inst_22646)) {
                                                              var statearr_22718_22773 = state_22681__$1;
                                                              statearr_22718_22773[1] = 26;
                                                            } else {
                                                              var statearr_22719_22774 = state_22681__$1;
                                                              statearr_22719_22774[1] = 27;
                                                            }
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_22682 === 35) {
                                                              var inst_22666 = state_22681[2];
                                                              var state_22681__$1 = state_22681;
                                                              if (cljs.core.truth_(inst_22666)) {
                                                                var statearr_22720_22775 = state_22681__$1;
                                                                statearr_22720_22775[1] = 36;
                                                              } else {
                                                                var statearr_22721_22776 = state_22681__$1;
                                                                statearr_22721_22776[1] = 37;
                                                              }
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_22682 === 19) {
                                                                var inst_22611 = state_22681[7];
                                                                var inst_22630 = cljs.core.apply.call(null, cljs.core.hash_map, inst_22611);
                                                                var state_22681__$1 = state_22681;
                                                                var statearr_22722_22777 = state_22681__$1;
                                                                statearr_22722_22777[2] = inst_22630;
                                                                statearr_22722_22777[1] = 21;
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                if (state_val_22682 === 11) {
                                                                  var inst_22611 = state_22681[7];
                                                                  var inst_22615 = inst_22611 == null;
                                                                  var inst_22616 = cljs.core.not.call(null, inst_22615);
                                                                  var state_22681__$1 = state_22681;
                                                                  if (inst_22616) {
                                                                    var statearr_22723_22778 = state_22681__$1;
                                                                    statearr_22723_22778[1] = 13;
                                                                  } else {
                                                                    var statearr_22724_22779 = state_22681__$1;
                                                                    statearr_22724_22779[1] = 14;
                                                                  }
                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                } else {
                                                                  if (state_val_22682 === 9) {
                                                                    var inst_22587 = state_22681[8];
                                                                    var state_22681__$1 = state_22681;
                                                                    var statearr_22725_22780 = state_22681__$1;
                                                                    statearr_22725_22780[2] = inst_22587;
                                                                    statearr_22725_22780[1] = 10;
                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                  } else {
                                                                    if (state_val_22682 === 5) {
                                                                      var state_22681__$1 = state_22681;
                                                                      var statearr_22726_22781 = state_22681__$1;
                                                                      statearr_22726_22781[2] = true;
                                                                      statearr_22726_22781[1] = 7;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                    } else {
                                                                      if (state_val_22682 === 14) {
                                                                        var state_22681__$1 = state_22681;
                                                                        var statearr_22727_22782 = state_22681__$1;
                                                                        statearr_22727_22782[2] = false;
                                                                        statearr_22727_22782[1] = 15;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                      } else {
                                                                        if (state_val_22682 === 26) {
                                                                          var inst_22641 = state_22681[11];
                                                                          var inst_22648 = cljs.core.swap_BANG_.call(null, cs, cljs.core.dissoc, inst_22641);
                                                                          var state_22681__$1 = state_22681;
                                                                          var statearr_22728_22783 = state_22681__$1;
                                                                          statearr_22728_22783[2] = inst_22648;
                                                                          statearr_22728_22783[1] = 28;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                        } else {
                                                                          if (state_val_22682 === 16) {
                                                                            var state_22681__$1 = state_22681;
                                                                            var statearr_22729_22784 = state_22681__$1;
                                                                            statearr_22729_22784[2] = true;
                                                                            statearr_22729_22784[1] = 18;
                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                          } else {
                                                                            if (state_val_22682 === 38) {
                                                                              var inst_22671 = state_22681[2];
                                                                              var state_22681__$1 = state_22681;
                                                                              var statearr_22730_22785 = state_22681__$1;
                                                                              statearr_22730_22785[2] = inst_22671;
                                                                              statearr_22730_22785[1] = 34;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                            } else {
                                                                              if (state_val_22682 === 30) {
                                                                                var inst_22634 = state_22681[10];
                                                                                var inst_22635 = state_22681[13];
                                                                                var inst_22641 = state_22681[11];
                                                                                var inst_22658 = cljs.core.empty_QMARK_.call(null, inst_22634);
                                                                                var inst_22659 = inst_22635.call(null, inst_22641);
                                                                                var inst_22660 = cljs.core.not.call(null, inst_22659);
                                                                                var inst_22661 = inst_22658 && inst_22660;
                                                                                var state_22681__$1 = state_22681;
                                                                                var statearr_22731_22786 = state_22681__$1;
                                                                                statearr_22731_22786[2] = inst_22661;
                                                                                statearr_22731_22786[1] = 31;
                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                              } else {
                                                                                if (state_val_22682 === 10) {
                                                                                  var inst_22587 = state_22681[8];
                                                                                  var inst_22607 = state_22681[2];
                                                                                  var inst_22608 = cljs.core.get.call(null, inst_22607, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                                                                                  var inst_22609 = cljs.core.get.call(null, inst_22607, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                                                                                  var inst_22610 = cljs.core.get.call(null, inst_22607, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                                                                                  var inst_22611 = inst_22587;
                                                                                  var state_22681__$1 = function() {
                                                                                    var statearr_22732 = state_22681;
                                                                                    statearr_22732[7] = inst_22611;
                                                                                    statearr_22732[16] = inst_22608;
                                                                                    statearr_22732[17] = inst_22610;
                                                                                    statearr_22732[18] = inst_22609;
                                                                                    return statearr_22732;
                                                                                  }();
                                                                                  var statearr_22733_22787 = state_22681__$1;
                                                                                  statearr_22733_22787[2] = null;
                                                                                  statearr_22733_22787[1] = 11;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                } else {
                                                                                  if (state_val_22682 === 18) {
                                                                                    var inst_22625 = state_22681[2];
                                                                                    var state_22681__$1 = state_22681;
                                                                                    var statearr_22734_22788 = state_22681__$1;
                                                                                    statearr_22734_22788[2] = inst_22625;
                                                                                    statearr_22734_22788[1] = 15;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                  } else {
                                                                                    if (state_val_22682 === 37) {
                                                                                      var state_22681__$1 = state_22681;
                                                                                      var statearr_22735_22789 = state_22681__$1;
                                                                                      statearr_22735_22789[2] = null;
                                                                                      statearr_22735_22789[1] = 38;
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                    } else {
                                                                                      if (state_val_22682 === 8) {
                                                                                        var inst_22587 = state_22681[8];
                                                                                        var inst_22604 = cljs.core.apply.call(null, cljs.core.hash_map, inst_22587);
                                                                                        var state_22681__$1 = state_22681;
                                                                                        var statearr_22736_22790 = state_22681__$1;
                                                                                        statearr_22736_22790[2] = inst_22604;
                                                                                        statearr_22736_22790[1] = 10;
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                      } else {
                                                                                        return null;
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__14432__auto___22744, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
        return function(switch__14367__auto__, c__14432__auto___22744, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function() {
            var cljs$core$async$mix_$_state_machine__14368__auto__ = null;
            var cljs$core$async$mix_$_state_machine__14368__auto____0 = function() {
              var statearr_22740 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_22740[0] = cljs$core$async$mix_$_state_machine__14368__auto__;
              statearr_22740[1] = 1;
              return statearr_22740;
            };
            var cljs$core$async$mix_$_state_machine__14368__auto____1 = function(state_22681) {
              while (true) {
                var ret_value__14369__auto__ = function() {
                  try {
                    while (true) {
                      var result__14370__auto__ = switch__14367__auto__.call(null, state_22681);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__14370__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__14370__auto__;
                      }
                      break;
                    }
                  } catch (e22741) {
                    if (e22741 instanceof Object) {
                      var ex__14371__auto__ = e22741;
                      var statearr_22742_22791 = state_22681;
                      statearr_22742_22791[5] = ex__14371__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_22681);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e22741;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__14369__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__22792 = state_22681;
                  state_22681 = G__22792;
                  continue;
                } else {
                  return ret_value__14369__auto__;
                }
                break;
              }
            };
            cljs$core$async$mix_$_state_machine__14368__auto__ = function(state_22681) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$mix_$_state_machine__14368__auto____0.call(this);
                case 1:
                  return cljs$core$async$mix_$_state_machine__14368__auto____1.call(this, state_22681);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$mix_$_state_machine__14368__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$mix_$_state_machine__14368__auto____0;
            cljs$core$async$mix_$_state_machine__14368__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$mix_$_state_machine__14368__auto____1;
            return cljs$core$async$mix_$_state_machine__14368__auto__;
          }();
        }(switch__14367__auto__, c__14432__auto___22744, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
      }();
      var state__14434__auto__ = function() {
        var statearr_22743 = f__14433__auto__.call(null);
        statearr_22743[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__14432__auto___22744;
        return statearr_22743;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__14434__auto__);
    };
  }(c__14432__auto___22744, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m));
  return m;
};
cljs.core.async.admix = function cljs$core$async$admix(mix, ch) {
  return cljs.core.async.admix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix = function cljs$core$async$unmix(mix, ch) {
  return cljs.core.async.unmix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix_all = function cljs$core$async$unmix_all(mix) {
  return cljs.core.async.unmix_all_STAR_.call(null, mix);
};
cljs.core.async.toggle = function cljs$core$async$toggle(mix, state_map) {
  return cljs.core.async.toggle_STAR_.call(null, mix, state_map);
};
cljs.core.async.solo_mode = function cljs$core$async$solo_mode(mix, mode) {
  return cljs.core.async.solo_mode_STAR_.call(null, mix, mode);
};
cljs.core.async.Pub = {};
cljs.core.async.sub_STAR_ = function cljs$core$async$sub_STAR_(p, v, ch, close_QMARK_) {
  if (!(p == null) && !(p.cljs$core$async$Pub$sub_STAR_$arity$4 == null)) {
    return p.cljs$core$async$Pub$sub_STAR_$arity$4(p, v, ch, close_QMARK_);
  } else {
    var x__5162__auto__ = p == null ? null : p;
    var m__5163__auto__ = cljs.core.async.sub_STAR_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, p, v, ch, close_QMARK_);
    } else {
      var m__5163__auto____$1 = cljs.core.async.sub_STAR_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, p, v, ch, close_QMARK_);
      } else {
        throw cljs.core.missing_protocol.call(null, "Pub.sub*", p);
      }
    }
  }
};
cljs.core.async.unsub_STAR_ = function cljs$core$async$unsub_STAR_(p, v, ch) {
  if (!(p == null) && !(p.cljs$core$async$Pub$unsub_STAR_$arity$3 == null)) {
    return p.cljs$core$async$Pub$unsub_STAR_$arity$3(p, v, ch);
  } else {
    var x__5162__auto__ = p == null ? null : p;
    var m__5163__auto__ = cljs.core.async.unsub_STAR_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, p, v, ch);
    } else {
      var m__5163__auto____$1 = cljs.core.async.unsub_STAR_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, p, v, ch);
      } else {
        throw cljs.core.missing_protocol.call(null, "Pub.unsub*", p);
      }
    }
  }
};
cljs.core.async.unsub_all_STAR_ = function cljs$core$async$unsub_all_STAR_() {
  var args22795 = [];
  var len__5565__auto___22798 = arguments.length;
  var i__5566__auto___22799 = 0;
  while (true) {
    if (i__5566__auto___22799 < len__5565__auto___22798) {
      args22795.push(arguments[i__5566__auto___22799]);
      var G__22800 = i__5566__auto___22799 + 1;
      i__5566__auto___22799 = G__22800;
      continue;
    } else {
    }
    break;
  }
  var G__22797 = args22795.length;
  switch(G__22797) {
    case 1:
      return cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22795.length)].join(""));;
  }
};
cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = function(p) {
  if (!(p == null) && !(p.cljs$core$async$Pub$unsub_all_STAR_$arity$1 == null)) {
    return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1(p);
  } else {
    var x__5162__auto__ = p == null ? null : p;
    var m__5163__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, p);
    } else {
      var m__5163__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, p);
      } else {
        throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
      }
    }
  }
};
cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = function(p, v) {
  if (!(p == null) && !(p.cljs$core$async$Pub$unsub_all_STAR_$arity$2 == null)) {
    return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2(p, v);
  } else {
    var x__5162__auto__ = p == null ? null : p;
    var m__5163__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, p, v);
    } else {
      var m__5163__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, p, v);
      } else {
        throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
      }
    }
  }
};
cljs.core.async.unsub_all_STAR_.cljs$lang$maxFixedArity = 2;
cljs.core.async.pub = function cljs$core$async$pub() {
  var args22803 = [];
  var len__5565__auto___22928 = arguments.length;
  var i__5566__auto___22929 = 0;
  while (true) {
    if (i__5566__auto___22929 < len__5565__auto___22928) {
      args22803.push(arguments[i__5566__auto___22929]);
      var G__22930 = i__5566__auto___22929 + 1;
      i__5566__auto___22929 = G__22930;
      continue;
    } else {
    }
    break;
  }
  var G__22805 = args22803.length;
  switch(G__22805) {
    case 2:
      return cljs.core.async.pub.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.pub.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22803.length)].join(""));;
  }
};
cljs.core.async.pub.cljs$core$IFn$_invoke$arity$2 = function(ch, topic_fn) {
  return cljs.core.async.pub.call(null, ch, topic_fn, cljs.core.constantly.call(null, null));
};
cljs.core.async.pub.cljs$core$IFn$_invoke$arity$3 = function(ch, topic_fn, buf_fn) {
  var mults = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ensure_mult = function(mults) {
    return function(topic) {
      var or__4526__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mults), topic);
      if (cljs.core.truth_(or__4526__auto__)) {
        return or__4526__auto__;
      } else {
        return cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, mults, function(or__4526__auto__, mults) {
          return function(p1__22802_SHARP_) {
            if (cljs.core.truth_(p1__22802_SHARP_.call(null, topic))) {
              return p1__22802_SHARP_;
            } else {
              return cljs.core.assoc.call(null, p1__22802_SHARP_, topic, cljs.core.async.mult.call(null, cljs.core.async.chan.call(null, buf_fn.call(null, topic))));
            }
          };
        }(or__4526__auto__, mults)), topic);
      }
    };
  }(mults);
  var p = function() {
    if (typeof cljs.core.async.t22806 !== "undefined") {
    } else {
      cljs.core.async.t22806 = function(ch, topic_fn, buf_fn, mults, ensure_mult, meta22807) {
        this.ch = ch;
        this.topic_fn = topic_fn;
        this.buf_fn = buf_fn;
        this.mults = mults;
        this.ensure_mult = ensure_mult;
        this.meta22807 = meta22807;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
        this.cljs$lang$protocol_mask$partition1$ = 0;
      };
      cljs.core.async.t22806.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(mults, ensure_mult) {
        return function(_22808, meta22807__$1) {
          var self__ = this;
          var _22808__$1 = this;
          return new cljs.core.async.t22806(self__.ch, self__.topic_fn, self__.buf_fn, self__.mults, self__.ensure_mult, meta22807__$1);
        };
      }(mults, ensure_mult);
      cljs.core.async.t22806.prototype.cljs$core$IMeta$_meta$arity$1 = function(mults, ensure_mult) {
        return function(_22808) {
          var self__ = this;
          var _22808__$1 = this;
          return self__.meta22807;
        };
      }(mults, ensure_mult);
      cljs.core.async.t22806.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t22806.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(mults, ensure_mult) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(mults, ensure_mult);
      cljs.core.async.t22806.prototype.cljs$core$async$Pub$ = true;
      cljs.core.async.t22806.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(mults, ensure_mult) {
        return function(p, topic, ch__$1, close_QMARK_) {
          var self__ = this;
          var p__$1 = this;
          var m = self__.ensure_mult.call(null, topic);
          return cljs.core.async.tap.call(null, m, ch__$1, close_QMARK_);
        };
      }(mults, ensure_mult);
      cljs.core.async.t22806.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(mults, ensure_mult) {
        return function(p, topic, ch__$1) {
          var self__ = this;
          var p__$1 = this;
          var temp__4425__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, self__.mults), topic);
          if (cljs.core.truth_(temp__4425__auto__)) {
            var m = temp__4425__auto__;
            return cljs.core.async.untap.call(null, m, ch__$1);
          } else {
            return null;
          }
        };
      }(mults, ensure_mult);
      cljs.core.async.t22806.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(mults, ensure_mult) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.reset_BANG_.call(null, self__.mults, cljs.core.PersistentArrayMap.EMPTY);
        };
      }(mults, ensure_mult);
      cljs.core.async.t22806.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(mults, ensure_mult) {
        return function(_, topic) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.swap_BANG_.call(null, self__.mults, cljs.core.dissoc, topic);
        };
      }(mults, ensure_mult);
      cljs.core.async.t22806.getBasis = function(mults, ensure_mult) {
        return function() {
          return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "topic-fn", "topic-fn", -862449736, null), new cljs.core.Symbol(null, "buf-fn", "buf-fn", -1200281591, null), new cljs.core.Symbol(null, "mults", "mults", -461114485, null), new cljs.core.Symbol(null, "ensure-mult", "ensure-mult", 1796584816, null), new cljs.core.Symbol(null, "meta22807", "meta22807", 529227713, null)], 
          null);
        };
      }(mults, ensure_mult);
      cljs.core.async.t22806.cljs$lang$type = true;
      cljs.core.async.t22806.cljs$lang$ctorStr = "cljs.core.async/t22806";
      cljs.core.async.t22806.cljs$lang$ctorPrWriter = function(mults, ensure_mult) {
        return function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
          return cljs.core._write.call(null, writer__5106__auto__, "cljs.core.async/t22806");
        };
      }(mults, ensure_mult);
      cljs.core.async.__GT_t22806 = function(mults, ensure_mult) {
        return function cljs$core$async$__GT_t22806(ch__$1, topic_fn__$1, buf_fn__$1, mults__$1, ensure_mult__$1, meta22807) {
          return new cljs.core.async.t22806(ch__$1, topic_fn__$1, buf_fn__$1, mults__$1, ensure_mult__$1, meta22807);
        };
      }(mults, ensure_mult);
    }
    return new cljs.core.async.t22806(ch, topic_fn, buf_fn, mults, ensure_mult, cljs.core.PersistentArrayMap.EMPTY);
  }();
  var c__14432__auto___22932 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__14432__auto___22932, mults, ensure_mult, p) {
    return function() {
      var f__14433__auto__ = function() {
        var switch__14367__auto__ = function(c__14432__auto___22932, mults, ensure_mult, p) {
          return function(state_22880) {
            var state_val_22881 = state_22880[1];
            if (state_val_22881 === 7) {
              var inst_22876 = state_22880[2];
              var state_22880__$1 = state_22880;
              var statearr_22882_22933 = state_22880__$1;
              statearr_22882_22933[2] = inst_22876;
              statearr_22882_22933[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_22881 === 20) {
                var state_22880__$1 = state_22880;
                var statearr_22883_22934 = state_22880__$1;
                statearr_22883_22934[2] = null;
                statearr_22883_22934[1] = 21;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_22881 === 1) {
                  var state_22880__$1 = state_22880;
                  var statearr_22884_22935 = state_22880__$1;
                  statearr_22884_22935[2] = null;
                  statearr_22884_22935[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_22881 === 24) {
                    var inst_22859 = state_22880[7];
                    var inst_22868 = cljs.core.swap_BANG_.call(null, mults, cljs.core.dissoc, inst_22859);
                    var state_22880__$1 = state_22880;
                    var statearr_22885_22936 = state_22880__$1;
                    statearr_22885_22936[2] = inst_22868;
                    statearr_22885_22936[1] = 25;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_22881 === 4) {
                      var inst_22811 = state_22880[8];
                      var inst_22811__$1 = state_22880[2];
                      var inst_22812 = inst_22811__$1 == null;
                      var state_22880__$1 = function() {
                        var statearr_22886 = state_22880;
                        statearr_22886[8] = inst_22811__$1;
                        return statearr_22886;
                      }();
                      if (cljs.core.truth_(inst_22812)) {
                        var statearr_22887_22937 = state_22880__$1;
                        statearr_22887_22937[1] = 5;
                      } else {
                        var statearr_22888_22938 = state_22880__$1;
                        statearr_22888_22938[1] = 6;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_22881 === 15) {
                        var inst_22853 = state_22880[2];
                        var state_22880__$1 = state_22880;
                        var statearr_22889_22939 = state_22880__$1;
                        statearr_22889_22939[2] = inst_22853;
                        statearr_22889_22939[1] = 12;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_22881 === 21) {
                          var inst_22873 = state_22880[2];
                          var state_22880__$1 = function() {
                            var statearr_22890 = state_22880;
                            statearr_22890[9] = inst_22873;
                            return statearr_22890;
                          }();
                          var statearr_22891_22940 = state_22880__$1;
                          statearr_22891_22940[2] = null;
                          statearr_22891_22940[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_22881 === 13) {
                            var inst_22835 = state_22880[10];
                            var inst_22837 = cljs.core.chunked_seq_QMARK_.call(null, inst_22835);
                            var state_22880__$1 = state_22880;
                            if (inst_22837) {
                              var statearr_22892_22941 = state_22880__$1;
                              statearr_22892_22941[1] = 16;
                            } else {
                              var statearr_22893_22942 = state_22880__$1;
                              statearr_22893_22942[1] = 17;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_22881 === 22) {
                              var inst_22865 = state_22880[2];
                              var state_22880__$1 = state_22880;
                              if (cljs.core.truth_(inst_22865)) {
                                var statearr_22894_22943 = state_22880__$1;
                                statearr_22894_22943[1] = 23;
                              } else {
                                var statearr_22895_22944 = state_22880__$1;
                                statearr_22895_22944[1] = 24;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_22881 === 6) {
                                var inst_22859 = state_22880[7];
                                var inst_22811 = state_22880[8];
                                var inst_22861 = state_22880[11];
                                var inst_22859__$1 = topic_fn.call(null, inst_22811);
                                var inst_22860 = cljs.core.deref.call(null, mults);
                                var inst_22861__$1 = cljs.core.get.call(null, inst_22860, inst_22859__$1);
                                var state_22880__$1 = function() {
                                  var statearr_22896 = state_22880;
                                  statearr_22896[7] = inst_22859__$1;
                                  statearr_22896[11] = inst_22861__$1;
                                  return statearr_22896;
                                }();
                                if (cljs.core.truth_(inst_22861__$1)) {
                                  var statearr_22897_22945 = state_22880__$1;
                                  statearr_22897_22945[1] = 19;
                                } else {
                                  var statearr_22898_22946 = state_22880__$1;
                                  statearr_22898_22946[1] = 20;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_22881 === 25) {
                                  var inst_22870 = state_22880[2];
                                  var state_22880__$1 = state_22880;
                                  var statearr_22899_22947 = state_22880__$1;
                                  statearr_22899_22947[2] = inst_22870;
                                  statearr_22899_22947[1] = 21;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_22881 === 17) {
                                    var inst_22835 = state_22880[10];
                                    var inst_22844 = cljs.core.first.call(null, inst_22835);
                                    var inst_22845 = cljs.core.async.muxch_STAR_.call(null, inst_22844);
                                    var inst_22846 = cljs.core.async.close_BANG_.call(null, inst_22845);
                                    var inst_22847 = cljs.core.next.call(null, inst_22835);
                                    var inst_22821 = inst_22847;
                                    var inst_22822 = null;
                                    var inst_22823 = 0;
                                    var inst_22824 = 0;
                                    var state_22880__$1 = function() {
                                      var statearr_22900 = state_22880;
                                      statearr_22900[12] = inst_22824;
                                      statearr_22900[13] = inst_22846;
                                      statearr_22900[14] = inst_22822;
                                      statearr_22900[15] = inst_22821;
                                      statearr_22900[16] = inst_22823;
                                      return statearr_22900;
                                    }();
                                    var statearr_22901_22948 = state_22880__$1;
                                    statearr_22901_22948[2] = null;
                                    statearr_22901_22948[1] = 8;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_22881 === 3) {
                                      var inst_22878 = state_22880[2];
                                      var state_22880__$1 = state_22880;
                                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_22880__$1, inst_22878);
                                    } else {
                                      if (state_val_22881 === 12) {
                                        var inst_22855 = state_22880[2];
                                        var state_22880__$1 = state_22880;
                                        var statearr_22902_22949 = state_22880__$1;
                                        statearr_22902_22949[2] = inst_22855;
                                        statearr_22902_22949[1] = 9;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_22881 === 2) {
                                          var state_22880__$1 = state_22880;
                                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_22880__$1, 4, ch);
                                        } else {
                                          if (state_val_22881 === 23) {
                                            var state_22880__$1 = state_22880;
                                            var statearr_22903_22950 = state_22880__$1;
                                            statearr_22903_22950[2] = null;
                                            statearr_22903_22950[1] = 25;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_22881 === 19) {
                                              var inst_22811 = state_22880[8];
                                              var inst_22861 = state_22880[11];
                                              var inst_22863 = cljs.core.async.muxch_STAR_.call(null, inst_22861);
                                              var state_22880__$1 = state_22880;
                                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_22880__$1, 22, inst_22863, inst_22811);
                                            } else {
                                              if (state_val_22881 === 11) {
                                                var inst_22835 = state_22880[10];
                                                var inst_22821 = state_22880[15];
                                                var inst_22835__$1 = cljs.core.seq.call(null, inst_22821);
                                                var state_22880__$1 = function() {
                                                  var statearr_22904 = state_22880;
                                                  statearr_22904[10] = inst_22835__$1;
                                                  return statearr_22904;
                                                }();
                                                if (inst_22835__$1) {
                                                  var statearr_22905_22951 = state_22880__$1;
                                                  statearr_22905_22951[1] = 13;
                                                } else {
                                                  var statearr_22906_22952 = state_22880__$1;
                                                  statearr_22906_22952[1] = 14;
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_22881 === 9) {
                                                  var inst_22857 = state_22880[2];
                                                  var state_22880__$1 = state_22880;
                                                  var statearr_22907_22953 = state_22880__$1;
                                                  statearr_22907_22953[2] = inst_22857;
                                                  statearr_22907_22953[1] = 7;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_22881 === 5) {
                                                    var inst_22818 = cljs.core.deref.call(null, mults);
                                                    var inst_22819 = cljs.core.vals.call(null, inst_22818);
                                                    var inst_22820 = cljs.core.seq.call(null, inst_22819);
                                                    var inst_22821 = inst_22820;
                                                    var inst_22822 = null;
                                                    var inst_22823 = 0;
                                                    var inst_22824 = 0;
                                                    var state_22880__$1 = function() {
                                                      var statearr_22908 = state_22880;
                                                      statearr_22908[12] = inst_22824;
                                                      statearr_22908[14] = inst_22822;
                                                      statearr_22908[15] = inst_22821;
                                                      statearr_22908[16] = inst_22823;
                                                      return statearr_22908;
                                                    }();
                                                    var statearr_22909_22954 = state_22880__$1;
                                                    statearr_22909_22954[2] = null;
                                                    statearr_22909_22954[1] = 8;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_22881 === 14) {
                                                      var state_22880__$1 = state_22880;
                                                      var statearr_22913_22955 = state_22880__$1;
                                                      statearr_22913_22955[2] = null;
                                                      statearr_22913_22955[1] = 15;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_22881 === 16) {
                                                        var inst_22835 = state_22880[10];
                                                        var inst_22839 = cljs.core.chunk_first.call(null, inst_22835);
                                                        var inst_22840 = cljs.core.chunk_rest.call(null, inst_22835);
                                                        var inst_22841 = cljs.core.count.call(null, inst_22839);
                                                        var inst_22821 = inst_22840;
                                                        var inst_22822 = inst_22839;
                                                        var inst_22823 = inst_22841;
                                                        var inst_22824 = 0;
                                                        var state_22880__$1 = function() {
                                                          var statearr_22914 = state_22880;
                                                          statearr_22914[12] = inst_22824;
                                                          statearr_22914[14] = inst_22822;
                                                          statearr_22914[15] = inst_22821;
                                                          statearr_22914[16] = inst_22823;
                                                          return statearr_22914;
                                                        }();
                                                        var statearr_22915_22956 = state_22880__$1;
                                                        statearr_22915_22956[2] = null;
                                                        statearr_22915_22956[1] = 8;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_22881 === 10) {
                                                          var inst_22824 = state_22880[12];
                                                          var inst_22822 = state_22880[14];
                                                          var inst_22821 = state_22880[15];
                                                          var inst_22823 = state_22880[16];
                                                          var inst_22829 = cljs.core._nth.call(null, inst_22822, inst_22824);
                                                          var inst_22830 = cljs.core.async.muxch_STAR_.call(null, inst_22829);
                                                          var inst_22831 = cljs.core.async.close_BANG_.call(null, inst_22830);
                                                          var inst_22832 = inst_22824 + 1;
                                                          var tmp22910 = inst_22822;
                                                          var tmp22911 = inst_22821;
                                                          var tmp22912 = inst_22823;
                                                          var inst_22821__$1 = tmp22911;
                                                          var inst_22822__$1 = tmp22910;
                                                          var inst_22823__$1 = tmp22912;
                                                          var inst_22824__$1 = inst_22832;
                                                          var state_22880__$1 = function() {
                                                            var statearr_22916 = state_22880;
                                                            statearr_22916[12] = inst_22824__$1;
                                                            statearr_22916[17] = inst_22831;
                                                            statearr_22916[14] = inst_22822__$1;
                                                            statearr_22916[15] = inst_22821__$1;
                                                            statearr_22916[16] = inst_22823__$1;
                                                            return statearr_22916;
                                                          }();
                                                          var statearr_22917_22957 = state_22880__$1;
                                                          statearr_22917_22957[2] = null;
                                                          statearr_22917_22957[1] = 8;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_22881 === 18) {
                                                            var inst_22850 = state_22880[2];
                                                            var state_22880__$1 = state_22880;
                                                            var statearr_22918_22958 = state_22880__$1;
                                                            statearr_22918_22958[2] = inst_22850;
                                                            statearr_22918_22958[1] = 15;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_22881 === 8) {
                                                              var inst_22824 = state_22880[12];
                                                              var inst_22823 = state_22880[16];
                                                              var inst_22826 = inst_22824 < inst_22823;
                                                              var inst_22827 = inst_22826;
                                                              var state_22880__$1 = state_22880;
                                                              if (cljs.core.truth_(inst_22827)) {
                                                                var statearr_22919_22959 = state_22880__$1;
                                                                statearr_22919_22959[1] = 10;
                                                              } else {
                                                                var statearr_22920_22960 = state_22880__$1;
                                                                statearr_22920_22960[1] = 11;
                                                              }
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              return null;
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__14432__auto___22932, mults, ensure_mult, p);
        return function(switch__14367__auto__, c__14432__auto___22932, mults, ensure_mult, p) {
          return function() {
            var cljs$core$async$state_machine__14368__auto__ = null;
            var cljs$core$async$state_machine__14368__auto____0 = function() {
              var statearr_22924 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_22924[0] = cljs$core$async$state_machine__14368__auto__;
              statearr_22924[1] = 1;
              return statearr_22924;
            };
            var cljs$core$async$state_machine__14368__auto____1 = function(state_22880) {
              while (true) {
                var ret_value__14369__auto__ = function() {
                  try {
                    while (true) {
                      var result__14370__auto__ = switch__14367__auto__.call(null, state_22880);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__14370__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__14370__auto__;
                      }
                      break;
                    }
                  } catch (e22925) {
                    if (e22925 instanceof Object) {
                      var ex__14371__auto__ = e22925;
                      var statearr_22926_22961 = state_22880;
                      statearr_22926_22961[5] = ex__14371__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_22880);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e22925;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__14369__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__22962 = state_22880;
                  state_22880 = G__22962;
                  continue;
                } else {
                  return ret_value__14369__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__14368__auto__ = function(state_22880) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__14368__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__14368__auto____1.call(this, state_22880);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__14368__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__14368__auto____0;
            cljs$core$async$state_machine__14368__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__14368__auto____1;
            return cljs$core$async$state_machine__14368__auto__;
          }();
        }(switch__14367__auto__, c__14432__auto___22932, mults, ensure_mult, p);
      }();
      var state__14434__auto__ = function() {
        var statearr_22927 = f__14433__auto__.call(null);
        statearr_22927[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__14432__auto___22932;
        return statearr_22927;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__14434__auto__);
    };
  }(c__14432__auto___22932, mults, ensure_mult, p));
  return p;
};
cljs.core.async.pub.cljs$lang$maxFixedArity = 3;
cljs.core.async.sub = function cljs$core$async$sub() {
  var args22963 = [];
  var len__5565__auto___22966 = arguments.length;
  var i__5566__auto___22967 = 0;
  while (true) {
    if (i__5566__auto___22967 < len__5565__auto___22966) {
      args22963.push(arguments[i__5566__auto___22967]);
      var G__22968 = i__5566__auto___22967 + 1;
      i__5566__auto___22967 = G__22968;
      continue;
    } else {
    }
    break;
  }
  var G__22965 = args22963.length;
  switch(G__22965) {
    case 3:
      return cljs.core.async.sub.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.async.sub.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22963.length)].join(""));;
  }
};
cljs.core.async.sub.cljs$core$IFn$_invoke$arity$3 = function(p, topic, ch) {
  return cljs.core.async.sub.call(null, p, topic, ch, true);
};
cljs.core.async.sub.cljs$core$IFn$_invoke$arity$4 = function(p, topic, ch, close_QMARK_) {
  return cljs.core.async.sub_STAR_.call(null, p, topic, ch, close_QMARK_);
};
cljs.core.async.sub.cljs$lang$maxFixedArity = 4;
cljs.core.async.unsub = function cljs$core$async$unsub(p, topic, ch) {
  return cljs.core.async.unsub_STAR_.call(null, p, topic, ch);
};
cljs.core.async.unsub_all = function cljs$core$async$unsub_all() {
  var args22970 = [];
  var len__5565__auto___22973 = arguments.length;
  var i__5566__auto___22974 = 0;
  while (true) {
    if (i__5566__auto___22974 < len__5565__auto___22973) {
      args22970.push(arguments[i__5566__auto___22974]);
      var G__22975 = i__5566__auto___22974 + 1;
      i__5566__auto___22974 = G__22975;
      continue;
    } else {
    }
    break;
  }
  var G__22972 = args22970.length;
  switch(G__22972) {
    case 1:
      return cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22970.length)].join(""));;
  }
};
cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return cljs.core.async.unsub_all_STAR_.call(null, p);
};
cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$2 = function(p, topic) {
  return cljs.core.async.unsub_all_STAR_.call(null, p, topic);
};
cljs.core.async.unsub_all.cljs$lang$maxFixedArity = 2;
cljs.core.async.map = function cljs$core$async$map() {
  var args22977 = [];
  var len__5565__auto___23048 = arguments.length;
  var i__5566__auto___23049 = 0;
  while (true) {
    if (i__5566__auto___23049 < len__5565__auto___23048) {
      args22977.push(arguments[i__5566__auto___23049]);
      var G__23050 = i__5566__auto___23049 + 1;
      i__5566__auto___23049 = G__23050;
      continue;
    } else {
    }
    break;
  }
  var G__22979 = args22977.length;
  switch(G__22979) {
    case 2:
      return cljs.core.async.map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.map.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22977.length)].join(""));;
  }
};
cljs.core.async.map.cljs$core$IFn$_invoke$arity$2 = function(f, chs) {
  return cljs.core.async.map.call(null, f, chs, null);
};
cljs.core.async.map.cljs$core$IFn$_invoke$arity$3 = function(f, chs, buf_or_n) {
  var chs__$1 = cljs.core.vec.call(null, chs);
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var cnt = cljs.core.count.call(null, chs__$1);
  var rets = cljs.core.object_array.call(null, cnt);
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = cljs.core.mapv.call(null, function(chs__$1, out, cnt, rets, dchan, dctr) {
    return function(i) {
      return function(chs__$1, out, cnt, rets, dchan, dctr) {
        return function(ret) {
          rets[i] = ret;
          if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
            return cljs.core.async.put_BANG_.call(null, dchan, rets.slice(0));
          } else {
            return null;
          }
        };
      }(chs__$1, out, cnt, rets, dchan, dctr);
    };
  }(chs__$1, out, cnt, rets, dchan, dctr), cljs.core.range.call(null, cnt));
  var c__14432__auto___23052 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__14432__auto___23052, chs__$1, out, cnt, rets, dchan, dctr, done) {
    return function() {
      var f__14433__auto__ = function() {
        var switch__14367__auto__ = function(c__14432__auto___23052, chs__$1, out, cnt, rets, dchan, dctr, done) {
          return function(state_23018) {
            var state_val_23019 = state_23018[1];
            if (state_val_23019 === 7) {
              var state_23018__$1 = state_23018;
              var statearr_23020_23053 = state_23018__$1;
              statearr_23020_23053[2] = null;
              statearr_23020_23053[1] = 8;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_23019 === 1) {
                var state_23018__$1 = state_23018;
                var statearr_23021_23054 = state_23018__$1;
                statearr_23021_23054[2] = null;
                statearr_23021_23054[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_23019 === 4) {
                  var inst_22982 = state_23018[7];
                  var inst_22984 = inst_22982 < cnt;
                  var state_23018__$1 = state_23018;
                  if (cljs.core.truth_(inst_22984)) {
                    var statearr_23022_23055 = state_23018__$1;
                    statearr_23022_23055[1] = 6;
                  } else {
                    var statearr_23023_23056 = state_23018__$1;
                    statearr_23023_23056[1] = 7;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_23019 === 15) {
                    var inst_23014 = state_23018[2];
                    var state_23018__$1 = state_23018;
                    var statearr_23024_23057 = state_23018__$1;
                    statearr_23024_23057[2] = inst_23014;
                    statearr_23024_23057[1] = 3;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_23019 === 13) {
                      var inst_23007 = cljs.core.async.close_BANG_.call(null, out);
                      var state_23018__$1 = state_23018;
                      var statearr_23025_23058 = state_23018__$1;
                      statearr_23025_23058[2] = inst_23007;
                      statearr_23025_23058[1] = 15;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_23019 === 6) {
                        var state_23018__$1 = state_23018;
                        var statearr_23026_23059 = state_23018__$1;
                        statearr_23026_23059[2] = null;
                        statearr_23026_23059[1] = 11;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_23019 === 3) {
                          var inst_23016 = state_23018[2];
                          var state_23018__$1 = state_23018;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_23018__$1, inst_23016);
                        } else {
                          if (state_val_23019 === 12) {
                            var inst_23004 = state_23018[8];
                            var inst_23004__$1 = state_23018[2];
                            var inst_23005 = cljs.core.some.call(null, cljs.core.nil_QMARK_, inst_23004__$1);
                            var state_23018__$1 = function() {
                              var statearr_23027 = state_23018;
                              statearr_23027[8] = inst_23004__$1;
                              return statearr_23027;
                            }();
                            if (cljs.core.truth_(inst_23005)) {
                              var statearr_23028_23060 = state_23018__$1;
                              statearr_23028_23060[1] = 13;
                            } else {
                              var statearr_23029_23061 = state_23018__$1;
                              statearr_23029_23061[1] = 14;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_23019 === 2) {
                              var inst_22981 = cljs.core.reset_BANG_.call(null, dctr, cnt);
                              var inst_22982 = 0;
                              var state_23018__$1 = function() {
                                var statearr_23030 = state_23018;
                                statearr_23030[9] = inst_22981;
                                statearr_23030[7] = inst_22982;
                                return statearr_23030;
                              }();
                              var statearr_23031_23062 = state_23018__$1;
                              statearr_23031_23062[2] = null;
                              statearr_23031_23062[1] = 4;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_23019 === 11) {
                                var inst_22982 = state_23018[7];
                                var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_23018, 10, Object, null, 9);
                                var inst_22991 = chs__$1.call(null, inst_22982);
                                var inst_22992 = done.call(null, inst_22982);
                                var inst_22993 = cljs.core.async.take_BANG_.call(null, inst_22991, inst_22992);
                                var state_23018__$1 = state_23018;
                                var statearr_23032_23063 = state_23018__$1;
                                statearr_23032_23063[2] = inst_22993;
                                cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_23018__$1);
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_23019 === 9) {
                                  var inst_22982 = state_23018[7];
                                  var inst_22995 = state_23018[2];
                                  var inst_22996 = inst_22982 + 1;
                                  var inst_22982__$1 = inst_22996;
                                  var state_23018__$1 = function() {
                                    var statearr_23033 = state_23018;
                                    statearr_23033[10] = inst_22995;
                                    statearr_23033[7] = inst_22982__$1;
                                    return statearr_23033;
                                  }();
                                  var statearr_23034_23064 = state_23018__$1;
                                  statearr_23034_23064[2] = null;
                                  statearr_23034_23064[1] = 4;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_23019 === 5) {
                                    var inst_23002 = state_23018[2];
                                    var state_23018__$1 = function() {
                                      var statearr_23035 = state_23018;
                                      statearr_23035[11] = inst_23002;
                                      return statearr_23035;
                                    }();
                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_23018__$1, 12, dchan);
                                  } else {
                                    if (state_val_23019 === 14) {
                                      var inst_23004 = state_23018[8];
                                      var inst_23009 = cljs.core.apply.call(null, f, inst_23004);
                                      var state_23018__$1 = state_23018;
                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_23018__$1, 16, out, inst_23009);
                                    } else {
                                      if (state_val_23019 === 16) {
                                        var inst_23011 = state_23018[2];
                                        var state_23018__$1 = function() {
                                          var statearr_23036 = state_23018;
                                          statearr_23036[12] = inst_23011;
                                          return statearr_23036;
                                        }();
                                        var statearr_23037_23065 = state_23018__$1;
                                        statearr_23037_23065[2] = null;
                                        statearr_23037_23065[1] = 2;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_23019 === 10) {
                                          var inst_22986 = state_23018[2];
                                          var inst_22987 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                          var state_23018__$1 = function() {
                                            var statearr_23038 = state_23018;
                                            statearr_23038[13] = inst_22986;
                                            return statearr_23038;
                                          }();
                                          var statearr_23039_23066 = state_23018__$1;
                                          statearr_23039_23066[2] = inst_22987;
                                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_23018__$1);
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_23019 === 8) {
                                            var inst_23000 = state_23018[2];
                                            var state_23018__$1 = state_23018;
                                            var statearr_23040_23067 = state_23018__$1;
                                            statearr_23040_23067[2] = inst_23000;
                                            statearr_23040_23067[1] = 5;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__14432__auto___23052, chs__$1, out, cnt, rets, dchan, dctr, done);
        return function(switch__14367__auto__, c__14432__auto___23052, chs__$1, out, cnt, rets, dchan, dctr, done) {
          return function() {
            var cljs$core$async$state_machine__14368__auto__ = null;
            var cljs$core$async$state_machine__14368__auto____0 = function() {
              var statearr_23044 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_23044[0] = cljs$core$async$state_machine__14368__auto__;
              statearr_23044[1] = 1;
              return statearr_23044;
            };
            var cljs$core$async$state_machine__14368__auto____1 = function(state_23018) {
              while (true) {
                var ret_value__14369__auto__ = function() {
                  try {
                    while (true) {
                      var result__14370__auto__ = switch__14367__auto__.call(null, state_23018);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__14370__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__14370__auto__;
                      }
                      break;
                    }
                  } catch (e23045) {
                    if (e23045 instanceof Object) {
                      var ex__14371__auto__ = e23045;
                      var statearr_23046_23068 = state_23018;
                      statearr_23046_23068[5] = ex__14371__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_23018);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e23045;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__14369__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__23069 = state_23018;
                  state_23018 = G__23069;
                  continue;
                } else {
                  return ret_value__14369__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__14368__auto__ = function(state_23018) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__14368__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__14368__auto____1.call(this, state_23018);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__14368__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__14368__auto____0;
            cljs$core$async$state_machine__14368__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__14368__auto____1;
            return cljs$core$async$state_machine__14368__auto__;
          }();
        }(switch__14367__auto__, c__14432__auto___23052, chs__$1, out, cnt, rets, dchan, dctr, done);
      }();
      var state__14434__auto__ = function() {
        var statearr_23047 = f__14433__auto__.call(null);
        statearr_23047[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__14432__auto___23052;
        return statearr_23047;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__14434__auto__);
    };
  }(c__14432__auto___23052, chs__$1, out, cnt, rets, dchan, dctr, done));
  return out;
};
cljs.core.async.map.cljs$lang$maxFixedArity = 3;
cljs.core.async.merge = function cljs$core$async$merge() {
  var args23071 = [];
  var len__5565__auto___23127 = arguments.length;
  var i__5566__auto___23128 = 0;
  while (true) {
    if (i__5566__auto___23128 < len__5565__auto___23127) {
      args23071.push(arguments[i__5566__auto___23128]);
      var G__23129 = i__5566__auto___23128 + 1;
      i__5566__auto___23128 = G__23129;
      continue;
    } else {
    }
    break;
  }
  var G__23073 = args23071.length;
  switch(G__23073) {
    case 1:
      return cljs.core.async.merge.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.merge.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23071.length)].join(""));;
  }
};
cljs.core.async.merge.cljs$core$IFn$_invoke$arity$1 = function(chs) {
  return cljs.core.async.merge.call(null, chs, null);
};
cljs.core.async.merge.cljs$core$IFn$_invoke$arity$2 = function(chs, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__14432__auto___23131 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__14432__auto___23131, out) {
    return function() {
      var f__14433__auto__ = function() {
        var switch__14367__auto__ = function(c__14432__auto___23131, out) {
          return function(state_23103) {
            var state_val_23104 = state_23103[1];
            if (state_val_23104 === 7) {
              var inst_23082 = state_23103[7];
              var inst_23083 = state_23103[8];
              var inst_23082__$1 = state_23103[2];
              var inst_23083__$1 = cljs.core.nth.call(null, inst_23082__$1, 0, null);
              var inst_23084 = cljs.core.nth.call(null, inst_23082__$1, 1, null);
              var inst_23085 = inst_23083__$1 == null;
              var state_23103__$1 = function() {
                var statearr_23105 = state_23103;
                statearr_23105[7] = inst_23082__$1;
                statearr_23105[9] = inst_23084;
                statearr_23105[8] = inst_23083__$1;
                return statearr_23105;
              }();
              if (cljs.core.truth_(inst_23085)) {
                var statearr_23106_23132 = state_23103__$1;
                statearr_23106_23132[1] = 8;
              } else {
                var statearr_23107_23133 = state_23103__$1;
                statearr_23107_23133[1] = 9;
              }
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_23104 === 1) {
                var inst_23074 = cljs.core.vec.call(null, chs);
                var inst_23075 = inst_23074;
                var state_23103__$1 = function() {
                  var statearr_23108 = state_23103;
                  statearr_23108[10] = inst_23075;
                  return statearr_23108;
                }();
                var statearr_23109_23134 = state_23103__$1;
                statearr_23109_23134[2] = null;
                statearr_23109_23134[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_23104 === 4) {
                  var inst_23075 = state_23103[10];
                  var state_23103__$1 = state_23103;
                  return cljs.core.async.ioc_alts_BANG_.call(null, state_23103__$1, 7, inst_23075);
                } else {
                  if (state_val_23104 === 6) {
                    var inst_23099 = state_23103[2];
                    var state_23103__$1 = state_23103;
                    var statearr_23110_23135 = state_23103__$1;
                    statearr_23110_23135[2] = inst_23099;
                    statearr_23110_23135[1] = 3;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_23104 === 3) {
                      var inst_23101 = state_23103[2];
                      var state_23103__$1 = state_23103;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_23103__$1, inst_23101);
                    } else {
                      if (state_val_23104 === 2) {
                        var inst_23075 = state_23103[10];
                        var inst_23077 = cljs.core.count.call(null, inst_23075);
                        var inst_23078 = inst_23077 > 0;
                        var state_23103__$1 = state_23103;
                        if (cljs.core.truth_(inst_23078)) {
                          var statearr_23112_23136 = state_23103__$1;
                          statearr_23112_23136[1] = 4;
                        } else {
                          var statearr_23113_23137 = state_23103__$1;
                          statearr_23113_23137[1] = 5;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_23104 === 11) {
                          var inst_23075 = state_23103[10];
                          var inst_23092 = state_23103[2];
                          var tmp23111 = inst_23075;
                          var inst_23075__$1 = tmp23111;
                          var state_23103__$1 = function() {
                            var statearr_23114 = state_23103;
                            statearr_23114[10] = inst_23075__$1;
                            statearr_23114[11] = inst_23092;
                            return statearr_23114;
                          }();
                          var statearr_23115_23138 = state_23103__$1;
                          statearr_23115_23138[2] = null;
                          statearr_23115_23138[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_23104 === 9) {
                            var inst_23083 = state_23103[8];
                            var state_23103__$1 = state_23103;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_23103__$1, 11, out, inst_23083);
                          } else {
                            if (state_val_23104 === 5) {
                              var inst_23097 = cljs.core.async.close_BANG_.call(null, out);
                              var state_23103__$1 = state_23103;
                              var statearr_23116_23139 = state_23103__$1;
                              statearr_23116_23139[2] = inst_23097;
                              statearr_23116_23139[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_23104 === 10) {
                                var inst_23095 = state_23103[2];
                                var state_23103__$1 = state_23103;
                                var statearr_23117_23140 = state_23103__$1;
                                statearr_23117_23140[2] = inst_23095;
                                statearr_23117_23140[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_23104 === 8) {
                                  var inst_23075 = state_23103[10];
                                  var inst_23082 = state_23103[7];
                                  var inst_23084 = state_23103[9];
                                  var inst_23083 = state_23103[8];
                                  var inst_23087 = function() {
                                    var cs = inst_23075;
                                    var vec__23080 = inst_23082;
                                    var v = inst_23083;
                                    var c = inst_23084;
                                    return function(cs, vec__23080, v, c, inst_23075, inst_23082, inst_23084, inst_23083, state_val_23104, c__14432__auto___23131, out) {
                                      return function(p1__23070_SHARP_) {
                                        return cljs.core.not_EQ_.call(null, c, p1__23070_SHARP_);
                                      };
                                    }(cs, vec__23080, v, c, inst_23075, inst_23082, inst_23084, inst_23083, state_val_23104, c__14432__auto___23131, out);
                                  }();
                                  var inst_23088 = cljs.core.filterv.call(null, inst_23087, inst_23075);
                                  var inst_23075__$1 = inst_23088;
                                  var state_23103__$1 = function() {
                                    var statearr_23118 = state_23103;
                                    statearr_23118[10] = inst_23075__$1;
                                    return statearr_23118;
                                  }();
                                  var statearr_23119_23141 = state_23103__$1;
                                  statearr_23119_23141[2] = null;
                                  statearr_23119_23141[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__14432__auto___23131, out);
        return function(switch__14367__auto__, c__14432__auto___23131, out) {
          return function() {
            var cljs$core$async$state_machine__14368__auto__ = null;
            var cljs$core$async$state_machine__14368__auto____0 = function() {
              var statearr_23123 = [null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_23123[0] = cljs$core$async$state_machine__14368__auto__;
              statearr_23123[1] = 1;
              return statearr_23123;
            };
            var cljs$core$async$state_machine__14368__auto____1 = function(state_23103) {
              while (true) {
                var ret_value__14369__auto__ = function() {
                  try {
                    while (true) {
                      var result__14370__auto__ = switch__14367__auto__.call(null, state_23103);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__14370__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__14370__auto__;
                      }
                      break;
                    }
                  } catch (e23124) {
                    if (e23124 instanceof Object) {
                      var ex__14371__auto__ = e23124;
                      var statearr_23125_23142 = state_23103;
                      statearr_23125_23142[5] = ex__14371__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_23103);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e23124;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__14369__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__23143 = state_23103;
                  state_23103 = G__23143;
                  continue;
                } else {
                  return ret_value__14369__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__14368__auto__ = function(state_23103) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__14368__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__14368__auto____1.call(this, state_23103);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__14368__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__14368__auto____0;
            cljs$core$async$state_machine__14368__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__14368__auto____1;
            return cljs$core$async$state_machine__14368__auto__;
          }();
        }(switch__14367__auto__, c__14432__auto___23131, out);
      }();
      var state__14434__auto__ = function() {
        var statearr_23126 = f__14433__auto__.call(null);
        statearr_23126[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__14432__auto___23131;
        return statearr_23126;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__14434__auto__);
    };
  }(c__14432__auto___23131, out));
  return out;
};
cljs.core.async.merge.cljs$lang$maxFixedArity = 2;
cljs.core.async.into = function cljs$core$async$into(coll, ch) {
  return cljs.core.async.reduce.call(null, cljs.core.conj, coll, ch);
};
cljs.core.async.take = function cljs$core$async$take() {
  var args23144 = [];
  var len__5565__auto___23193 = arguments.length;
  var i__5566__auto___23194 = 0;
  while (true) {
    if (i__5566__auto___23194 < len__5565__auto___23193) {
      args23144.push(arguments[i__5566__auto___23194]);
      var G__23195 = i__5566__auto___23194 + 1;
      i__5566__auto___23194 = G__23195;
      continue;
    } else {
    }
    break;
  }
  var G__23146 = args23144.length;
  switch(G__23146) {
    case 2:
      return cljs.core.async.take.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.take.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23144.length)].join(""));;
  }
};
cljs.core.async.take.cljs$core$IFn$_invoke$arity$2 = function(n, ch) {
  return cljs.core.async.take.call(null, n, ch, null);
};
cljs.core.async.take.cljs$core$IFn$_invoke$arity$3 = function(n, ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__14432__auto___23197 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__14432__auto___23197, out) {
    return function() {
      var f__14433__auto__ = function() {
        var switch__14367__auto__ = function(c__14432__auto___23197, out) {
          return function(state_23170) {
            var state_val_23171 = state_23170[1];
            if (state_val_23171 === 7) {
              var inst_23152 = state_23170[7];
              var inst_23152__$1 = state_23170[2];
              var inst_23153 = inst_23152__$1 == null;
              var inst_23154 = cljs.core.not.call(null, inst_23153);
              var state_23170__$1 = function() {
                var statearr_23172 = state_23170;
                statearr_23172[7] = inst_23152__$1;
                return statearr_23172;
              }();
              if (inst_23154) {
                var statearr_23173_23198 = state_23170__$1;
                statearr_23173_23198[1] = 8;
              } else {
                var statearr_23174_23199 = state_23170__$1;
                statearr_23174_23199[1] = 9;
              }
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_23171 === 1) {
                var inst_23147 = 0;
                var state_23170__$1 = function() {
                  var statearr_23175 = state_23170;
                  statearr_23175[8] = inst_23147;
                  return statearr_23175;
                }();
                var statearr_23176_23200 = state_23170__$1;
                statearr_23176_23200[2] = null;
                statearr_23176_23200[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_23171 === 4) {
                  var state_23170__$1 = state_23170;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_23170__$1, 7, ch);
                } else {
                  if (state_val_23171 === 6) {
                    var inst_23165 = state_23170[2];
                    var state_23170__$1 = state_23170;
                    var statearr_23177_23201 = state_23170__$1;
                    statearr_23177_23201[2] = inst_23165;
                    statearr_23177_23201[1] = 3;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_23171 === 3) {
                      var inst_23167 = state_23170[2];
                      var inst_23168 = cljs.core.async.close_BANG_.call(null, out);
                      var state_23170__$1 = function() {
                        var statearr_23178 = state_23170;
                        statearr_23178[9] = inst_23167;
                        return statearr_23178;
                      }();
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_23170__$1, inst_23168);
                    } else {
                      if (state_val_23171 === 2) {
                        var inst_23147 = state_23170[8];
                        var inst_23149 = inst_23147 < n;
                        var state_23170__$1 = state_23170;
                        if (cljs.core.truth_(inst_23149)) {
                          var statearr_23179_23202 = state_23170__$1;
                          statearr_23179_23202[1] = 4;
                        } else {
                          var statearr_23180_23203 = state_23170__$1;
                          statearr_23180_23203[1] = 5;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_23171 === 11) {
                          var inst_23147 = state_23170[8];
                          var inst_23157 = state_23170[2];
                          var inst_23158 = inst_23147 + 1;
                          var inst_23147__$1 = inst_23158;
                          var state_23170__$1 = function() {
                            var statearr_23181 = state_23170;
                            statearr_23181[10] = inst_23157;
                            statearr_23181[8] = inst_23147__$1;
                            return statearr_23181;
                          }();
                          var statearr_23182_23204 = state_23170__$1;
                          statearr_23182_23204[2] = null;
                          statearr_23182_23204[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_23171 === 9) {
                            var state_23170__$1 = state_23170;
                            var statearr_23183_23205 = state_23170__$1;
                            statearr_23183_23205[2] = null;
                            statearr_23183_23205[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_23171 === 5) {
                              var state_23170__$1 = state_23170;
                              var statearr_23184_23206 = state_23170__$1;
                              statearr_23184_23206[2] = null;
                              statearr_23184_23206[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_23171 === 10) {
                                var inst_23162 = state_23170[2];
                                var state_23170__$1 = state_23170;
                                var statearr_23185_23207 = state_23170__$1;
                                statearr_23185_23207[2] = inst_23162;
                                statearr_23185_23207[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_23171 === 8) {
                                  var inst_23152 = state_23170[7];
                                  var state_23170__$1 = state_23170;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_23170__$1, 11, out, inst_23152);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__14432__auto___23197, out);
        return function(switch__14367__auto__, c__14432__auto___23197, out) {
          return function() {
            var cljs$core$async$state_machine__14368__auto__ = null;
            var cljs$core$async$state_machine__14368__auto____0 = function() {
              var statearr_23189 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_23189[0] = cljs$core$async$state_machine__14368__auto__;
              statearr_23189[1] = 1;
              return statearr_23189;
            };
            var cljs$core$async$state_machine__14368__auto____1 = function(state_23170) {
              while (true) {
                var ret_value__14369__auto__ = function() {
                  try {
                    while (true) {
                      var result__14370__auto__ = switch__14367__auto__.call(null, state_23170);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__14370__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__14370__auto__;
                      }
                      break;
                    }
                  } catch (e23190) {
                    if (e23190 instanceof Object) {
                      var ex__14371__auto__ = e23190;
                      var statearr_23191_23208 = state_23170;
                      statearr_23191_23208[5] = ex__14371__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_23170);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e23190;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__14369__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__23209 = state_23170;
                  state_23170 = G__23209;
                  continue;
                } else {
                  return ret_value__14369__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__14368__auto__ = function(state_23170) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__14368__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__14368__auto____1.call(this, state_23170);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__14368__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__14368__auto____0;
            cljs$core$async$state_machine__14368__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__14368__auto____1;
            return cljs$core$async$state_machine__14368__auto__;
          }();
        }(switch__14367__auto__, c__14432__auto___23197, out);
      }();
      var state__14434__auto__ = function() {
        var statearr_23192 = f__14433__auto__.call(null);
        statearr_23192[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__14432__auto___23197;
        return statearr_23192;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__14434__auto__);
    };
  }(c__14432__auto___23197, out));
  return out;
};
cljs.core.async.take.cljs$lang$maxFixedArity = 3;
cljs.core.async.map_LT_ = function cljs$core$async$map_LT_(f, ch) {
  if (typeof cljs.core.async.t23217 !== "undefined") {
  } else {
    cljs.core.async.t23217 = function(map_LT_, f, ch, meta23218) {
      this.map_LT_ = map_LT_;
      this.f = f;
      this.ch = ch;
      this.meta23218 = meta23218;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t23217.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_23219, meta23218__$1) {
      var self__ = this;
      var _23219__$1 = this;
      return new cljs.core.async.t23217(self__.map_LT_, self__.f, self__.ch, meta23218__$1);
    };
    cljs.core.async.t23217.prototype.cljs$core$IMeta$_meta$arity$1 = function(_23219) {
      var self__ = this;
      var _23219__$1 = this;
      return self__.meta23218;
    };
    cljs.core.async.t23217.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t23217.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t23217.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t23217.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t23217.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, function() {
        if (typeof cljs.core.async.t23220 !== "undefined") {
        } else {
          cljs.core.async.t23220 = function(map_LT_, f, ch, meta23218, _, fn1, meta23221) {
            this.map_LT_ = map_LT_;
            this.f = f;
            this.ch = ch;
            this.meta23218 = meta23218;
            this._ = _;
            this.fn1 = fn1;
            this.meta23221 = meta23221;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
            this.cljs$lang$protocol_mask$partition1$ = 0;
          };
          cljs.core.async.t23220.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(___$1) {
            return function(_23222, meta23221__$1) {
              var self__ = this;
              var _23222__$1 = this;
              return new cljs.core.async.t23220(self__.map_LT_, self__.f, self__.ch, self__.meta23218, self__._, self__.fn1, meta23221__$1);
            };
          }(___$1);
          cljs.core.async.t23220.prototype.cljs$core$IMeta$_meta$arity$1 = function(___$1) {
            return function(_23222) {
              var self__ = this;
              var _23222__$1 = this;
              return self__.meta23221;
            };
          }(___$1);
          cljs.core.async.t23220.prototype.cljs$core$async$impl$protocols$Handler$ = true;
          cljs.core.async.t23220.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.fn1);
            };
          }(___$1);
          cljs.core.async.t23220.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              var f1 = cljs.core.async.impl.protocols.commit.call(null, self__.fn1);
              return function(f1, ___$2, ___$1) {
                return function(p1__23210_SHARP_) {
                  return f1.call(null, p1__23210_SHARP_ == null ? null : self__.f.call(null, p1__23210_SHARP_));
                };
              }(f1, ___$2, ___$1);
            };
          }(___$1);
          cljs.core.async.t23220.getBasis = function(___$1) {
            return function() {
              return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "map\x3c", "map\x3c", -1235808357, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
              "f", "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Deprecated - this function will be removed. Use transducer instead"], null)), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "meta23218", "meta23218", 712376825, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_", "_", -1201019570, null), 
              new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("cljs.core.async", "t23217", "cljs.core.async/t23217", -344213599, null)], null)), new cljs.core.Symbol(null, "fn1", "fn1", 895834444, null), new cljs.core.Symbol(null, "meta23221", "meta23221", -853352546, null)], null);
            };
          }(___$1);
          cljs.core.async.t23220.cljs$lang$type = true;
          cljs.core.async.t23220.cljs$lang$ctorStr = "cljs.core.async/t23220";
          cljs.core.async.t23220.cljs$lang$ctorPrWriter = function(___$1) {
            return function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
              return cljs.core._write.call(null, writer__5106__auto__, "cljs.core.async/t23220");
            };
          }(___$1);
          cljs.core.async.__GT_t23220 = function(___$1) {
            return function cljs$core$async$map_LT__$___GT_t23220(map_LT___$1, f__$1, ch__$1, meta23218__$1, ___$2, fn1__$1, meta23221) {
              return new cljs.core.async.t23220(map_LT___$1, f__$1, ch__$1, meta23218__$1, ___$2, fn1__$1, meta23221);
            };
          }(___$1);
        }
        return new cljs.core.async.t23220(self__.map_LT_, self__.f, self__.ch, self__.meta23218, ___$1, fn1, cljs.core.PersistentArrayMap.EMPTY);
      }());
      if (cljs.core.truth_(function() {
        var and__4514__auto__ = ret;
        if (cljs.core.truth_(and__4514__auto__)) {
          return !(cljs.core.deref.call(null, ret) == null);
        } else {
          return and__4514__auto__;
        }
      }())) {
        return cljs.core.async.impl.channels.box.call(null, self__.f.call(null, cljs.core.deref.call(null, ret)));
      } else {
        return ret;
      }
    };
    cljs.core.async.t23217.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t23217.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
    };
    cljs.core.async.t23217.getBasis = function() {
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "map\x3c", "map\x3c", -1235808357, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", 
      "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Deprecated - this function will be removed. Use transducer instead"], null)), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "meta23218", "meta23218", 712376825, null)], null);
    };
    cljs.core.async.t23217.cljs$lang$type = true;
    cljs.core.async.t23217.cljs$lang$ctorStr = "cljs.core.async/t23217";
    cljs.core.async.t23217.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
      return cljs.core._write.call(null, writer__5106__auto__, "cljs.core.async/t23217");
    };
    cljs.core.async.__GT_t23217 = function cljs$core$async$map_LT__$___GT_t23217(map_LT___$1, f__$1, ch__$1, meta23218) {
      return new cljs.core.async.t23217(map_LT___$1, f__$1, ch__$1, meta23218);
    };
  }
  return new cljs.core.async.t23217(cljs$core$async$map_LT_, f, ch, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.map_GT_ = function cljs$core$async$map_GT_(f, ch) {
  if (typeof cljs.core.async.t23226 !== "undefined") {
  } else {
    cljs.core.async.t23226 = function(map_GT_, f, ch, meta23227) {
      this.map_GT_ = map_GT_;
      this.f = f;
      this.ch = ch;
      this.meta23227 = meta23227;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t23226.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_23228, meta23227__$1) {
      var self__ = this;
      var _23228__$1 = this;
      return new cljs.core.async.t23226(self__.map_GT_, self__.f, self__.ch, meta23227__$1);
    };
    cljs.core.async.t23226.prototype.cljs$core$IMeta$_meta$arity$1 = function(_23228) {
      var self__ = this;
      var _23228__$1 = this;
      return self__.meta23227;
    };
    cljs.core.async.t23226.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t23226.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t23226.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t23226.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t23226.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t23226.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, self__.f.call(null, val), fn1);
    };
    cljs.core.async.t23226.getBasis = function() {
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "map\x3e", "map\x3e", 1676369295, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", 
      "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Deprecated - this function will be removed. Use transducer instead"], null)), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "meta23227", "meta23227", 2114996209, null)], null);
    };
    cljs.core.async.t23226.cljs$lang$type = true;
    cljs.core.async.t23226.cljs$lang$ctorStr = "cljs.core.async/t23226";
    cljs.core.async.t23226.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
      return cljs.core._write.call(null, writer__5106__auto__, "cljs.core.async/t23226");
    };
    cljs.core.async.__GT_t23226 = function cljs$core$async$map_GT__$___GT_t23226(map_GT___$1, f__$1, ch__$1, meta23227) {
      return new cljs.core.async.t23226(map_GT___$1, f__$1, ch__$1, meta23227);
    };
  }
  return new cljs.core.async.t23226(cljs$core$async$map_GT_, f, ch, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.filter_GT_ = function cljs$core$async$filter_GT_(p, ch) {
  if (typeof cljs.core.async.t23232 !== "undefined") {
  } else {
    cljs.core.async.t23232 = function(filter_GT_, p, ch, meta23233) {
      this.filter_GT_ = filter_GT_;
      this.p = p;
      this.ch = ch;
      this.meta23233 = meta23233;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t23232.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_23234, meta23233__$1) {
      var self__ = this;
      var _23234__$1 = this;
      return new cljs.core.async.t23232(self__.filter_GT_, self__.p, self__.ch, meta23233__$1);
    };
    cljs.core.async.t23232.prototype.cljs$core$IMeta$_meta$arity$1 = function(_23234) {
      var self__ = this;
      var _23234__$1 = this;
      return self__.meta23233;
    };
    cljs.core.async.t23232.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t23232.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t23232.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t23232.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t23232.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t23232.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t23232.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.p.call(null, val))) {
        return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
      } else {
        return cljs.core.async.impl.channels.box.call(null, cljs.core.not.call(null, cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch)));
      }
    };
    cljs.core.async.t23232.getBasis = function() {
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "filter\x3e", "filter\x3e", -37644455, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
      "p", "p", 1791580836, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Deprecated - this function will be removed. Use transducer instead"], null)), new cljs.core.Symbol(null, "p", "p", 1791580836, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "meta23233", "meta23233", -1459492537, null)], null);
    };
    cljs.core.async.t23232.cljs$lang$type = true;
    cljs.core.async.t23232.cljs$lang$ctorStr = "cljs.core.async/t23232";
    cljs.core.async.t23232.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
      return cljs.core._write.call(null, writer__5106__auto__, "cljs.core.async/t23232");
    };
    cljs.core.async.__GT_t23232 = function cljs$core$async$filter_GT__$___GT_t23232(filter_GT___$1, p__$1, ch__$1, meta23233) {
      return new cljs.core.async.t23232(filter_GT___$1, p__$1, ch__$1, meta23233);
    };
  }
  return new cljs.core.async.t23232(cljs$core$async$filter_GT_, p, ch, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.remove_GT_ = function cljs$core$async$remove_GT_(p, ch) {
  return cljs.core.async.filter_GT_.call(null, cljs.core.complement.call(null, p), ch);
};
cljs.core.async.filter_LT_ = function cljs$core$async$filter_LT_() {
  var args23235 = [];
  var len__5565__auto___23279 = arguments.length;
  var i__5566__auto___23280 = 0;
  while (true) {
    if (i__5566__auto___23280 < len__5565__auto___23279) {
      args23235.push(arguments[i__5566__auto___23280]);
      var G__23281 = i__5566__auto___23280 + 1;
      i__5566__auto___23280 = G__23281;
      continue;
    } else {
    }
    break;
  }
  var G__23237 = args23235.length;
  switch(G__23237) {
    case 2:
      return cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23235.length)].join(""));;
  }
};
cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$2 = function(p, ch) {
  return cljs.core.async.filter_LT_.call(null, p, ch, null);
};
cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$3 = function(p, ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__14432__auto___23283 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__14432__auto___23283, out) {
    return function() {
      var f__14433__auto__ = function() {
        var switch__14367__auto__ = function(c__14432__auto___23283, out) {
          return function(state_23258) {
            var state_val_23259 = state_23258[1];
            if (state_val_23259 === 7) {
              var inst_23254 = state_23258[2];
              var state_23258__$1 = state_23258;
              var statearr_23260_23284 = state_23258__$1;
              statearr_23260_23284[2] = inst_23254;
              statearr_23260_23284[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_23259 === 1) {
                var state_23258__$1 = state_23258;
                var statearr_23261_23285 = state_23258__$1;
                statearr_23261_23285[2] = null;
                statearr_23261_23285[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_23259 === 4) {
                  var inst_23240 = state_23258[7];
                  var inst_23240__$1 = state_23258[2];
                  var inst_23241 = inst_23240__$1 == null;
                  var state_23258__$1 = function() {
                    var statearr_23262 = state_23258;
                    statearr_23262[7] = inst_23240__$1;
                    return statearr_23262;
                  }();
                  if (cljs.core.truth_(inst_23241)) {
                    var statearr_23263_23286 = state_23258__$1;
                    statearr_23263_23286[1] = 5;
                  } else {
                    var statearr_23264_23287 = state_23258__$1;
                    statearr_23264_23287[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_23259 === 6) {
                    var inst_23240 = state_23258[7];
                    var inst_23245 = p.call(null, inst_23240);
                    var state_23258__$1 = state_23258;
                    if (cljs.core.truth_(inst_23245)) {
                      var statearr_23265_23288 = state_23258__$1;
                      statearr_23265_23288[1] = 8;
                    } else {
                      var statearr_23266_23289 = state_23258__$1;
                      statearr_23266_23289[1] = 9;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_23259 === 3) {
                      var inst_23256 = state_23258[2];
                      var state_23258__$1 = state_23258;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_23258__$1, inst_23256);
                    } else {
                      if (state_val_23259 === 2) {
                        var state_23258__$1 = state_23258;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_23258__$1, 4, ch);
                      } else {
                        if (state_val_23259 === 11) {
                          var inst_23248 = state_23258[2];
                          var state_23258__$1 = state_23258;
                          var statearr_23267_23290 = state_23258__$1;
                          statearr_23267_23290[2] = inst_23248;
                          statearr_23267_23290[1] = 10;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_23259 === 9) {
                            var state_23258__$1 = state_23258;
                            var statearr_23268_23291 = state_23258__$1;
                            statearr_23268_23291[2] = null;
                            statearr_23268_23291[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_23259 === 5) {
                              var inst_23243 = cljs.core.async.close_BANG_.call(null, out);
                              var state_23258__$1 = state_23258;
                              var statearr_23269_23292 = state_23258__$1;
                              statearr_23269_23292[2] = inst_23243;
                              statearr_23269_23292[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_23259 === 10) {
                                var inst_23251 = state_23258[2];
                                var state_23258__$1 = function() {
                                  var statearr_23270 = state_23258;
                                  statearr_23270[8] = inst_23251;
                                  return statearr_23270;
                                }();
                                var statearr_23271_23293 = state_23258__$1;
                                statearr_23271_23293[2] = null;
                                statearr_23271_23293[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_23259 === 8) {
                                  var inst_23240 = state_23258[7];
                                  var state_23258__$1 = state_23258;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_23258__$1, 11, out, inst_23240);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__14432__auto___23283, out);
        return function(switch__14367__auto__, c__14432__auto___23283, out) {
          return function() {
            var cljs$core$async$state_machine__14368__auto__ = null;
            var cljs$core$async$state_machine__14368__auto____0 = function() {
              var statearr_23275 = [null, null, null, null, null, null, null, null, null];
              statearr_23275[0] = cljs$core$async$state_machine__14368__auto__;
              statearr_23275[1] = 1;
              return statearr_23275;
            };
            var cljs$core$async$state_machine__14368__auto____1 = function(state_23258) {
              while (true) {
                var ret_value__14369__auto__ = function() {
                  try {
                    while (true) {
                      var result__14370__auto__ = switch__14367__auto__.call(null, state_23258);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__14370__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__14370__auto__;
                      }
                      break;
                    }
                  } catch (e23276) {
                    if (e23276 instanceof Object) {
                      var ex__14371__auto__ = e23276;
                      var statearr_23277_23294 = state_23258;
                      statearr_23277_23294[5] = ex__14371__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_23258);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e23276;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__14369__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__23295 = state_23258;
                  state_23258 = G__23295;
                  continue;
                } else {
                  return ret_value__14369__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__14368__auto__ = function(state_23258) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__14368__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__14368__auto____1.call(this, state_23258);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__14368__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__14368__auto____0;
            cljs$core$async$state_machine__14368__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__14368__auto____1;
            return cljs$core$async$state_machine__14368__auto__;
          }();
        }(switch__14367__auto__, c__14432__auto___23283, out);
      }();
      var state__14434__auto__ = function() {
        var statearr_23278 = f__14433__auto__.call(null);
        statearr_23278[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__14432__auto___23283;
        return statearr_23278;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__14434__auto__);
    };
  }(c__14432__auto___23283, out));
  return out;
};
cljs.core.async.filter_LT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.remove_LT_ = function cljs$core$async$remove_LT_() {
  var args23296 = [];
  var len__5565__auto___23299 = arguments.length;
  var i__5566__auto___23300 = 0;
  while (true) {
    if (i__5566__auto___23300 < len__5565__auto___23299) {
      args23296.push(arguments[i__5566__auto___23300]);
      var G__23301 = i__5566__auto___23300 + 1;
      i__5566__auto___23300 = G__23301;
      continue;
    } else {
    }
    break;
  }
  var G__23298 = args23296.length;
  switch(G__23298) {
    case 2:
      return cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23296.length)].join(""));;
  }
};
cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$2 = function(p, ch) {
  return cljs.core.async.remove_LT_.call(null, p, ch, null);
};
cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$3 = function(p, ch, buf_or_n) {
  return cljs.core.async.filter_LT_.call(null, cljs.core.complement.call(null, p), ch, buf_or_n);
};
cljs.core.async.remove_LT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.mapcat_STAR_ = function cljs$core$async$mapcat_STAR_(f, in$, out) {
  var c__14432__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__14432__auto__) {
    return function() {
      var f__14433__auto__ = function() {
        var switch__14367__auto__ = function(c__14432__auto__) {
          return function(state_23468) {
            var state_val_23469 = state_23468[1];
            if (state_val_23469 === 7) {
              var inst_23464 = state_23468[2];
              var state_23468__$1 = state_23468;
              var statearr_23470_23511 = state_23468__$1;
              statearr_23470_23511[2] = inst_23464;
              statearr_23470_23511[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_23469 === 20) {
                var inst_23434 = state_23468[7];
                var inst_23445 = state_23468[2];
                var inst_23446 = cljs.core.next.call(null, inst_23434);
                var inst_23420 = inst_23446;
                var inst_23421 = null;
                var inst_23422 = 0;
                var inst_23423 = 0;
                var state_23468__$1 = function() {
                  var statearr_23471 = state_23468;
                  statearr_23471[8] = inst_23423;
                  statearr_23471[9] = inst_23420;
                  statearr_23471[10] = inst_23421;
                  statearr_23471[11] = inst_23422;
                  statearr_23471[12] = inst_23445;
                  return statearr_23471;
                }();
                var statearr_23472_23512 = state_23468__$1;
                statearr_23472_23512[2] = null;
                statearr_23472_23512[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_23469 === 1) {
                  var state_23468__$1 = state_23468;
                  var statearr_23473_23513 = state_23468__$1;
                  statearr_23473_23513[2] = null;
                  statearr_23473_23513[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_23469 === 4) {
                    var inst_23409 = state_23468[13];
                    var inst_23409__$1 = state_23468[2];
                    var inst_23410 = inst_23409__$1 == null;
                    var state_23468__$1 = function() {
                      var statearr_23474 = state_23468;
                      statearr_23474[13] = inst_23409__$1;
                      return statearr_23474;
                    }();
                    if (cljs.core.truth_(inst_23410)) {
                      var statearr_23475_23514 = state_23468__$1;
                      statearr_23475_23514[1] = 5;
                    } else {
                      var statearr_23476_23515 = state_23468__$1;
                      statearr_23476_23515[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_23469 === 15) {
                      var state_23468__$1 = state_23468;
                      var statearr_23480_23516 = state_23468__$1;
                      statearr_23480_23516[2] = null;
                      statearr_23480_23516[1] = 16;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_23469 === 21) {
                        var state_23468__$1 = state_23468;
                        var statearr_23481_23517 = state_23468__$1;
                        statearr_23481_23517[2] = null;
                        statearr_23481_23517[1] = 23;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_23469 === 13) {
                          var inst_23423 = state_23468[8];
                          var inst_23420 = state_23468[9];
                          var inst_23421 = state_23468[10];
                          var inst_23422 = state_23468[11];
                          var inst_23430 = state_23468[2];
                          var inst_23431 = inst_23423 + 1;
                          var tmp23477 = inst_23420;
                          var tmp23478 = inst_23421;
                          var tmp23479 = inst_23422;
                          var inst_23420__$1 = tmp23477;
                          var inst_23421__$1 = tmp23478;
                          var inst_23422__$1 = tmp23479;
                          var inst_23423__$1 = inst_23431;
                          var state_23468__$1 = function() {
                            var statearr_23482 = state_23468;
                            statearr_23482[8] = inst_23423__$1;
                            statearr_23482[9] = inst_23420__$1;
                            statearr_23482[10] = inst_23421__$1;
                            statearr_23482[14] = inst_23430;
                            statearr_23482[11] = inst_23422__$1;
                            return statearr_23482;
                          }();
                          var statearr_23483_23518 = state_23468__$1;
                          statearr_23483_23518[2] = null;
                          statearr_23483_23518[1] = 8;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_23469 === 22) {
                            var state_23468__$1 = state_23468;
                            var statearr_23484_23519 = state_23468__$1;
                            statearr_23484_23519[2] = null;
                            statearr_23484_23519[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_23469 === 6) {
                              var inst_23409 = state_23468[13];
                              var inst_23418 = f.call(null, inst_23409);
                              var inst_23419 = cljs.core.seq.call(null, inst_23418);
                              var inst_23420 = inst_23419;
                              var inst_23421 = null;
                              var inst_23422 = 0;
                              var inst_23423 = 0;
                              var state_23468__$1 = function() {
                                var statearr_23485 = state_23468;
                                statearr_23485[8] = inst_23423;
                                statearr_23485[9] = inst_23420;
                                statearr_23485[10] = inst_23421;
                                statearr_23485[11] = inst_23422;
                                return statearr_23485;
                              }();
                              var statearr_23486_23520 = state_23468__$1;
                              statearr_23486_23520[2] = null;
                              statearr_23486_23520[1] = 8;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_23469 === 17) {
                                var inst_23434 = state_23468[7];
                                var inst_23438 = cljs.core.chunk_first.call(null, inst_23434);
                                var inst_23439 = cljs.core.chunk_rest.call(null, inst_23434);
                                var inst_23440 = cljs.core.count.call(null, inst_23438);
                                var inst_23420 = inst_23439;
                                var inst_23421 = inst_23438;
                                var inst_23422 = inst_23440;
                                var inst_23423 = 0;
                                var state_23468__$1 = function() {
                                  var statearr_23487 = state_23468;
                                  statearr_23487[8] = inst_23423;
                                  statearr_23487[9] = inst_23420;
                                  statearr_23487[10] = inst_23421;
                                  statearr_23487[11] = inst_23422;
                                  return statearr_23487;
                                }();
                                var statearr_23488_23521 = state_23468__$1;
                                statearr_23488_23521[2] = null;
                                statearr_23488_23521[1] = 8;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_23469 === 3) {
                                  var inst_23466 = state_23468[2];
                                  var state_23468__$1 = state_23468;
                                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_23468__$1, inst_23466);
                                } else {
                                  if (state_val_23469 === 12) {
                                    var inst_23454 = state_23468[2];
                                    var state_23468__$1 = state_23468;
                                    var statearr_23489_23522 = state_23468__$1;
                                    statearr_23489_23522[2] = inst_23454;
                                    statearr_23489_23522[1] = 9;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_23469 === 2) {
                                      var state_23468__$1 = state_23468;
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_23468__$1, 4, in$);
                                    } else {
                                      if (state_val_23469 === 23) {
                                        var inst_23462 = state_23468[2];
                                        var state_23468__$1 = state_23468;
                                        var statearr_23490_23523 = state_23468__$1;
                                        statearr_23490_23523[2] = inst_23462;
                                        statearr_23490_23523[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_23469 === 19) {
                                          var inst_23449 = state_23468[2];
                                          var state_23468__$1 = state_23468;
                                          var statearr_23491_23524 = state_23468__$1;
                                          statearr_23491_23524[2] = inst_23449;
                                          statearr_23491_23524[1] = 16;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_23469 === 11) {
                                            var inst_23420 = state_23468[9];
                                            var inst_23434 = state_23468[7];
                                            var inst_23434__$1 = cljs.core.seq.call(null, inst_23420);
                                            var state_23468__$1 = function() {
                                              var statearr_23492 = state_23468;
                                              statearr_23492[7] = inst_23434__$1;
                                              return statearr_23492;
                                            }();
                                            if (inst_23434__$1) {
                                              var statearr_23493_23525 = state_23468__$1;
                                              statearr_23493_23525[1] = 14;
                                            } else {
                                              var statearr_23494_23526 = state_23468__$1;
                                              statearr_23494_23526[1] = 15;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_23469 === 9) {
                                              var inst_23456 = state_23468[2];
                                              var inst_23457 = cljs.core.async.impl.protocols.closed_QMARK_.call(null, out);
                                              var state_23468__$1 = function() {
                                                var statearr_23495 = state_23468;
                                                statearr_23495[15] = inst_23456;
                                                return statearr_23495;
                                              }();
                                              if (cljs.core.truth_(inst_23457)) {
                                                var statearr_23496_23527 = state_23468__$1;
                                                statearr_23496_23527[1] = 21;
                                              } else {
                                                var statearr_23497_23528 = state_23468__$1;
                                                statearr_23497_23528[1] = 22;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_23469 === 5) {
                                                var inst_23412 = cljs.core.async.close_BANG_.call(null, out);
                                                var state_23468__$1 = state_23468;
                                                var statearr_23498_23529 = state_23468__$1;
                                                statearr_23498_23529[2] = inst_23412;
                                                statearr_23498_23529[1] = 7;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_23469 === 14) {
                                                  var inst_23434 = state_23468[7];
                                                  var inst_23436 = cljs.core.chunked_seq_QMARK_.call(null, inst_23434);
                                                  var state_23468__$1 = state_23468;
                                                  if (inst_23436) {
                                                    var statearr_23499_23530 = state_23468__$1;
                                                    statearr_23499_23530[1] = 17;
                                                  } else {
                                                    var statearr_23500_23531 = state_23468__$1;
                                                    statearr_23500_23531[1] = 18;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_23469 === 16) {
                                                    var inst_23452 = state_23468[2];
                                                    var state_23468__$1 = state_23468;
                                                    var statearr_23501_23532 = state_23468__$1;
                                                    statearr_23501_23532[2] = inst_23452;
                                                    statearr_23501_23532[1] = 12;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_23469 === 10) {
                                                      var inst_23423 = state_23468[8];
                                                      var inst_23421 = state_23468[10];
                                                      var inst_23428 = cljs.core._nth.call(null, inst_23421, inst_23423);
                                                      var state_23468__$1 = state_23468;
                                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_23468__$1, 13, out, inst_23428);
                                                    } else {
                                                      if (state_val_23469 === 18) {
                                                        var inst_23434 = state_23468[7];
                                                        var inst_23443 = cljs.core.first.call(null, inst_23434);
                                                        var state_23468__$1 = state_23468;
                                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_23468__$1, 20, out, inst_23443);
                                                      } else {
                                                        if (state_val_23469 === 8) {
                                                          var inst_23423 = state_23468[8];
                                                          var inst_23422 = state_23468[11];
                                                          var inst_23425 = inst_23423 < inst_23422;
                                                          var inst_23426 = inst_23425;
                                                          var state_23468__$1 = state_23468;
                                                          if (cljs.core.truth_(inst_23426)) {
                                                            var statearr_23502_23533 = state_23468__$1;
                                                            statearr_23502_23533[1] = 10;
                                                          } else {
                                                            var statearr_23503_23534 = state_23468__$1;
                                                            statearr_23503_23534[1] = 11;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          return null;
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__14432__auto__);
        return function(switch__14367__auto__, c__14432__auto__) {
          return function() {
            var cljs$core$async$mapcat_STAR__$_state_machine__14368__auto__ = null;
            var cljs$core$async$mapcat_STAR__$_state_machine__14368__auto____0 = function() {
              var statearr_23507 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_23507[0] = cljs$core$async$mapcat_STAR__$_state_machine__14368__auto__;
              statearr_23507[1] = 1;
              return statearr_23507;
            };
            var cljs$core$async$mapcat_STAR__$_state_machine__14368__auto____1 = function(state_23468) {
              while (true) {
                var ret_value__14369__auto__ = function() {
                  try {
                    while (true) {
                      var result__14370__auto__ = switch__14367__auto__.call(null, state_23468);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__14370__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__14370__auto__;
                      }
                      break;
                    }
                  } catch (e23508) {
                    if (e23508 instanceof Object) {
                      var ex__14371__auto__ = e23508;
                      var statearr_23509_23535 = state_23468;
                      statearr_23509_23535[5] = ex__14371__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_23468);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e23508;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__14369__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__23536 = state_23468;
                  state_23468 = G__23536;
                  continue;
                } else {
                  return ret_value__14369__auto__;
                }
                break;
              }
            };
            cljs$core$async$mapcat_STAR__$_state_machine__14368__auto__ = function(state_23468) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$mapcat_STAR__$_state_machine__14368__auto____0.call(this);
                case 1:
                  return cljs$core$async$mapcat_STAR__$_state_machine__14368__auto____1.call(this, state_23468);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$mapcat_STAR__$_state_machine__14368__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$mapcat_STAR__$_state_machine__14368__auto____0;
            cljs$core$async$mapcat_STAR__$_state_machine__14368__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$mapcat_STAR__$_state_machine__14368__auto____1;
            return cljs$core$async$mapcat_STAR__$_state_machine__14368__auto__;
          }();
        }(switch__14367__auto__, c__14432__auto__);
      }();
      var state__14434__auto__ = function() {
        var statearr_23510 = f__14433__auto__.call(null);
        statearr_23510[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__14432__auto__;
        return statearr_23510;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__14434__auto__);
    };
  }(c__14432__auto__));
  return c__14432__auto__;
};
cljs.core.async.mapcat_LT_ = function cljs$core$async$mapcat_LT_() {
  var args23537 = [];
  var len__5565__auto___23540 = arguments.length;
  var i__5566__auto___23541 = 0;
  while (true) {
    if (i__5566__auto___23541 < len__5565__auto___23540) {
      args23537.push(arguments[i__5566__auto___23541]);
      var G__23542 = i__5566__auto___23541 + 1;
      i__5566__auto___23541 = G__23542;
      continue;
    } else {
    }
    break;
  }
  var G__23539 = args23537.length;
  switch(G__23539) {
    case 2:
      return cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23537.length)].join(""));;
  }
};
cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = function(f, in$) {
  return cljs.core.async.mapcat_LT_.call(null, f, in$, null);
};
cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = function(f, in$, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
  return out;
};
cljs.core.async.mapcat_LT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.mapcat_GT_ = function cljs$core$async$mapcat_GT_() {
  var args23544 = [];
  var len__5565__auto___23547 = arguments.length;
  var i__5566__auto___23548 = 0;
  while (true) {
    if (i__5566__auto___23548 < len__5565__auto___23547) {
      args23544.push(arguments[i__5566__auto___23548]);
      var G__23549 = i__5566__auto___23548 + 1;
      i__5566__auto___23548 = G__23549;
      continue;
    } else {
    }
    break;
  }
  var G__23546 = args23544.length;
  switch(G__23546) {
    case 2:
      return cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23544.length)].join(""));;
  }
};
cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = function(f, out) {
  return cljs.core.async.mapcat_GT_.call(null, f, out, null);
};
cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = function(f, out, buf_or_n) {
  var in$ = cljs.core.async.chan.call(null, buf_or_n);
  cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
  return in$;
};
cljs.core.async.mapcat_GT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.unique = function cljs$core$async$unique() {
  var args23551 = [];
  var len__5565__auto___23602 = arguments.length;
  var i__5566__auto___23603 = 0;
  while (true) {
    if (i__5566__auto___23603 < len__5565__auto___23602) {
      args23551.push(arguments[i__5566__auto___23603]);
      var G__23604 = i__5566__auto___23603 + 1;
      i__5566__auto___23603 = G__23604;
      continue;
    } else {
    }
    break;
  }
  var G__23553 = args23551.length;
  switch(G__23553) {
    case 1:
      return cljs.core.async.unique.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.unique.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23551.length)].join(""));;
  }
};
cljs.core.async.unique.cljs$core$IFn$_invoke$arity$1 = function(ch) {
  return cljs.core.async.unique.call(null, ch, null);
};
cljs.core.async.unique.cljs$core$IFn$_invoke$arity$2 = function(ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__14432__auto___23606 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__14432__auto___23606, out) {
    return function() {
      var f__14433__auto__ = function() {
        var switch__14367__auto__ = function(c__14432__auto___23606, out) {
          return function(state_23577) {
            var state_val_23578 = state_23577[1];
            if (state_val_23578 === 7) {
              var inst_23572 = state_23577[2];
              var state_23577__$1 = state_23577;
              var statearr_23579_23607 = state_23577__$1;
              statearr_23579_23607[2] = inst_23572;
              statearr_23579_23607[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_23578 === 1) {
                var inst_23554 = null;
                var state_23577__$1 = function() {
                  var statearr_23580 = state_23577;
                  statearr_23580[7] = inst_23554;
                  return statearr_23580;
                }();
                var statearr_23581_23608 = state_23577__$1;
                statearr_23581_23608[2] = null;
                statearr_23581_23608[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_23578 === 4) {
                  var inst_23557 = state_23577[8];
                  var inst_23557__$1 = state_23577[2];
                  var inst_23558 = inst_23557__$1 == null;
                  var inst_23559 = cljs.core.not.call(null, inst_23558);
                  var state_23577__$1 = function() {
                    var statearr_23582 = state_23577;
                    statearr_23582[8] = inst_23557__$1;
                    return statearr_23582;
                  }();
                  if (inst_23559) {
                    var statearr_23583_23609 = state_23577__$1;
                    statearr_23583_23609[1] = 5;
                  } else {
                    var statearr_23584_23610 = state_23577__$1;
                    statearr_23584_23610[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_23578 === 6) {
                    var state_23577__$1 = state_23577;
                    var statearr_23585_23611 = state_23577__$1;
                    statearr_23585_23611[2] = null;
                    statearr_23585_23611[1] = 7;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_23578 === 3) {
                      var inst_23574 = state_23577[2];
                      var inst_23575 = cljs.core.async.close_BANG_.call(null, out);
                      var state_23577__$1 = function() {
                        var statearr_23586 = state_23577;
                        statearr_23586[9] = inst_23574;
                        return statearr_23586;
                      }();
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_23577__$1, inst_23575);
                    } else {
                      if (state_val_23578 === 2) {
                        var state_23577__$1 = state_23577;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_23577__$1, 4, ch);
                      } else {
                        if (state_val_23578 === 11) {
                          var inst_23557 = state_23577[8];
                          var inst_23566 = state_23577[2];
                          var inst_23554 = inst_23557;
                          var state_23577__$1 = function() {
                            var statearr_23587 = state_23577;
                            statearr_23587[10] = inst_23566;
                            statearr_23587[7] = inst_23554;
                            return statearr_23587;
                          }();
                          var statearr_23588_23612 = state_23577__$1;
                          statearr_23588_23612[2] = null;
                          statearr_23588_23612[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_23578 === 9) {
                            var inst_23557 = state_23577[8];
                            var state_23577__$1 = state_23577;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_23577__$1, 11, out, inst_23557);
                          } else {
                            if (state_val_23578 === 5) {
                              var inst_23554 = state_23577[7];
                              var inst_23557 = state_23577[8];
                              var inst_23561 = cljs.core._EQ_.call(null, inst_23557, inst_23554);
                              var state_23577__$1 = state_23577;
                              if (inst_23561) {
                                var statearr_23590_23613 = state_23577__$1;
                                statearr_23590_23613[1] = 8;
                              } else {
                                var statearr_23591_23614 = state_23577__$1;
                                statearr_23591_23614[1] = 9;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_23578 === 10) {
                                var inst_23569 = state_23577[2];
                                var state_23577__$1 = state_23577;
                                var statearr_23592_23615 = state_23577__$1;
                                statearr_23592_23615[2] = inst_23569;
                                statearr_23592_23615[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_23578 === 8) {
                                  var inst_23554 = state_23577[7];
                                  var tmp23589 = inst_23554;
                                  var inst_23554__$1 = tmp23589;
                                  var state_23577__$1 = function() {
                                    var statearr_23593 = state_23577;
                                    statearr_23593[7] = inst_23554__$1;
                                    return statearr_23593;
                                  }();
                                  var statearr_23594_23616 = state_23577__$1;
                                  statearr_23594_23616[2] = null;
                                  statearr_23594_23616[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__14432__auto___23606, out);
        return function(switch__14367__auto__, c__14432__auto___23606, out) {
          return function() {
            var cljs$core$async$state_machine__14368__auto__ = null;
            var cljs$core$async$state_machine__14368__auto____0 = function() {
              var statearr_23598 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_23598[0] = cljs$core$async$state_machine__14368__auto__;
              statearr_23598[1] = 1;
              return statearr_23598;
            };
            var cljs$core$async$state_machine__14368__auto____1 = function(state_23577) {
              while (true) {
                var ret_value__14369__auto__ = function() {
                  try {
                    while (true) {
                      var result__14370__auto__ = switch__14367__auto__.call(null, state_23577);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__14370__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__14370__auto__;
                      }
                      break;
                    }
                  } catch (e23599) {
                    if (e23599 instanceof Object) {
                      var ex__14371__auto__ = e23599;
                      var statearr_23600_23617 = state_23577;
                      statearr_23600_23617[5] = ex__14371__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_23577);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e23599;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__14369__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__23618 = state_23577;
                  state_23577 = G__23618;
                  continue;
                } else {
                  return ret_value__14369__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__14368__auto__ = function(state_23577) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__14368__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__14368__auto____1.call(this, state_23577);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__14368__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__14368__auto____0;
            cljs$core$async$state_machine__14368__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__14368__auto____1;
            return cljs$core$async$state_machine__14368__auto__;
          }();
        }(switch__14367__auto__, c__14432__auto___23606, out);
      }();
      var state__14434__auto__ = function() {
        var statearr_23601 = f__14433__auto__.call(null);
        statearr_23601[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__14432__auto___23606;
        return statearr_23601;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__14434__auto__);
    };
  }(c__14432__auto___23606, out));
  return out;
};
cljs.core.async.unique.cljs$lang$maxFixedArity = 2;
cljs.core.async.partition = function cljs$core$async$partition() {
  var args23619 = [];
  var len__5565__auto___23689 = arguments.length;
  var i__5566__auto___23690 = 0;
  while (true) {
    if (i__5566__auto___23690 < len__5565__auto___23689) {
      args23619.push(arguments[i__5566__auto___23690]);
      var G__23691 = i__5566__auto___23690 + 1;
      i__5566__auto___23690 = G__23691;
      continue;
    } else {
    }
    break;
  }
  var G__23621 = args23619.length;
  switch(G__23621) {
    case 2:
      return cljs.core.async.partition.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.partition.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23619.length)].join(""));;
  }
};
cljs.core.async.partition.cljs$core$IFn$_invoke$arity$2 = function(n, ch) {
  return cljs.core.async.partition.call(null, n, ch, null);
};
cljs.core.async.partition.cljs$core$IFn$_invoke$arity$3 = function(n, ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__14432__auto___23693 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__14432__auto___23693, out) {
    return function() {
      var f__14433__auto__ = function() {
        var switch__14367__auto__ = function(c__14432__auto___23693, out) {
          return function(state_23659) {
            var state_val_23660 = state_23659[1];
            if (state_val_23660 === 7) {
              var inst_23655 = state_23659[2];
              var state_23659__$1 = state_23659;
              var statearr_23661_23694 = state_23659__$1;
              statearr_23661_23694[2] = inst_23655;
              statearr_23661_23694[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_23660 === 1) {
                var inst_23622 = new Array(n);
                var inst_23623 = inst_23622;
                var inst_23624 = 0;
                var state_23659__$1 = function() {
                  var statearr_23662 = state_23659;
                  statearr_23662[7] = inst_23623;
                  statearr_23662[8] = inst_23624;
                  return statearr_23662;
                }();
                var statearr_23663_23695 = state_23659__$1;
                statearr_23663_23695[2] = null;
                statearr_23663_23695[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_23660 === 4) {
                  var inst_23627 = state_23659[9];
                  var inst_23627__$1 = state_23659[2];
                  var inst_23628 = inst_23627__$1 == null;
                  var inst_23629 = cljs.core.not.call(null, inst_23628);
                  var state_23659__$1 = function() {
                    var statearr_23664 = state_23659;
                    statearr_23664[9] = inst_23627__$1;
                    return statearr_23664;
                  }();
                  if (inst_23629) {
                    var statearr_23665_23696 = state_23659__$1;
                    statearr_23665_23696[1] = 5;
                  } else {
                    var statearr_23666_23697 = state_23659__$1;
                    statearr_23666_23697[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_23660 === 15) {
                    var inst_23649 = state_23659[2];
                    var state_23659__$1 = state_23659;
                    var statearr_23667_23698 = state_23659__$1;
                    statearr_23667_23698[2] = inst_23649;
                    statearr_23667_23698[1] = 14;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_23660 === 13) {
                      var state_23659__$1 = state_23659;
                      var statearr_23668_23699 = state_23659__$1;
                      statearr_23668_23699[2] = null;
                      statearr_23668_23699[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_23660 === 6) {
                        var inst_23624 = state_23659[8];
                        var inst_23645 = inst_23624 > 0;
                        var state_23659__$1 = state_23659;
                        if (cljs.core.truth_(inst_23645)) {
                          var statearr_23669_23700 = state_23659__$1;
                          statearr_23669_23700[1] = 12;
                        } else {
                          var statearr_23670_23701 = state_23659__$1;
                          statearr_23670_23701[1] = 13;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_23660 === 3) {
                          var inst_23657 = state_23659[2];
                          var state_23659__$1 = state_23659;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_23659__$1, inst_23657);
                        } else {
                          if (state_val_23660 === 12) {
                            var inst_23623 = state_23659[7];
                            var inst_23647 = cljs.core.vec.call(null, inst_23623);
                            var state_23659__$1 = state_23659;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_23659__$1, 15, out, inst_23647);
                          } else {
                            if (state_val_23660 === 2) {
                              var state_23659__$1 = state_23659;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_23659__$1, 4, ch);
                            } else {
                              if (state_val_23660 === 11) {
                                var inst_23639 = state_23659[2];
                                var inst_23640 = new Array(n);
                                var inst_23623 = inst_23640;
                                var inst_23624 = 0;
                                var state_23659__$1 = function() {
                                  var statearr_23671 = state_23659;
                                  statearr_23671[7] = inst_23623;
                                  statearr_23671[10] = inst_23639;
                                  statearr_23671[8] = inst_23624;
                                  return statearr_23671;
                                }();
                                var statearr_23672_23702 = state_23659__$1;
                                statearr_23672_23702[2] = null;
                                statearr_23672_23702[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_23660 === 9) {
                                  var inst_23623 = state_23659[7];
                                  var inst_23637 = cljs.core.vec.call(null, inst_23623);
                                  var state_23659__$1 = state_23659;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_23659__$1, 11, out, inst_23637);
                                } else {
                                  if (state_val_23660 === 5) {
                                    var inst_23623 = state_23659[7];
                                    var inst_23627 = state_23659[9];
                                    var inst_23624 = state_23659[8];
                                    var inst_23632 = state_23659[11];
                                    var inst_23631 = inst_23623[inst_23624] = inst_23627;
                                    var inst_23632__$1 = inst_23624 + 1;
                                    var inst_23633 = inst_23632__$1 < n;
                                    var state_23659__$1 = function() {
                                      var statearr_23673 = state_23659;
                                      statearr_23673[12] = inst_23631;
                                      statearr_23673[11] = inst_23632__$1;
                                      return statearr_23673;
                                    }();
                                    if (cljs.core.truth_(inst_23633)) {
                                      var statearr_23674_23703 = state_23659__$1;
                                      statearr_23674_23703[1] = 8;
                                    } else {
                                      var statearr_23675_23704 = state_23659__$1;
                                      statearr_23675_23704[1] = 9;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_23660 === 14) {
                                      var inst_23652 = state_23659[2];
                                      var inst_23653 = cljs.core.async.close_BANG_.call(null, out);
                                      var state_23659__$1 = function() {
                                        var statearr_23677 = state_23659;
                                        statearr_23677[13] = inst_23652;
                                        return statearr_23677;
                                      }();
                                      var statearr_23678_23705 = state_23659__$1;
                                      statearr_23678_23705[2] = inst_23653;
                                      statearr_23678_23705[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_23660 === 10) {
                                        var inst_23643 = state_23659[2];
                                        var state_23659__$1 = state_23659;
                                        var statearr_23679_23706 = state_23659__$1;
                                        statearr_23679_23706[2] = inst_23643;
                                        statearr_23679_23706[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_23660 === 8) {
                                          var inst_23623 = state_23659[7];
                                          var inst_23632 = state_23659[11];
                                          var tmp23676 = inst_23623;
                                          var inst_23623__$1 = tmp23676;
                                          var inst_23624 = inst_23632;
                                          var state_23659__$1 = function() {
                                            var statearr_23680 = state_23659;
                                            statearr_23680[7] = inst_23623__$1;
                                            statearr_23680[8] = inst_23624;
                                            return statearr_23680;
                                          }();
                                          var statearr_23681_23707 = state_23659__$1;
                                          statearr_23681_23707[2] = null;
                                          statearr_23681_23707[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__14432__auto___23693, out);
        return function(switch__14367__auto__, c__14432__auto___23693, out) {
          return function() {
            var cljs$core$async$state_machine__14368__auto__ = null;
            var cljs$core$async$state_machine__14368__auto____0 = function() {
              var statearr_23685 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_23685[0] = cljs$core$async$state_machine__14368__auto__;
              statearr_23685[1] = 1;
              return statearr_23685;
            };
            var cljs$core$async$state_machine__14368__auto____1 = function(state_23659) {
              while (true) {
                var ret_value__14369__auto__ = function() {
                  try {
                    while (true) {
                      var result__14370__auto__ = switch__14367__auto__.call(null, state_23659);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__14370__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__14370__auto__;
                      }
                      break;
                    }
                  } catch (e23686) {
                    if (e23686 instanceof Object) {
                      var ex__14371__auto__ = e23686;
                      var statearr_23687_23708 = state_23659;
                      statearr_23687_23708[5] = ex__14371__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_23659);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e23686;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__14369__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__23709 = state_23659;
                  state_23659 = G__23709;
                  continue;
                } else {
                  return ret_value__14369__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__14368__auto__ = function(state_23659) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__14368__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__14368__auto____1.call(this, state_23659);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__14368__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__14368__auto____0;
            cljs$core$async$state_machine__14368__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__14368__auto____1;
            return cljs$core$async$state_machine__14368__auto__;
          }();
        }(switch__14367__auto__, c__14432__auto___23693, out);
      }();
      var state__14434__auto__ = function() {
        var statearr_23688 = f__14433__auto__.call(null);
        statearr_23688[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__14432__auto___23693;
        return statearr_23688;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__14434__auto__);
    };
  }(c__14432__auto___23693, out));
  return out;
};
cljs.core.async.partition.cljs$lang$maxFixedArity = 3;
cljs.core.async.partition_by = function cljs$core$async$partition_by() {
  var args23710 = [];
  var len__5565__auto___23784 = arguments.length;
  var i__5566__auto___23785 = 0;
  while (true) {
    if (i__5566__auto___23785 < len__5565__auto___23784) {
      args23710.push(arguments[i__5566__auto___23785]);
      var G__23786 = i__5566__auto___23785 + 1;
      i__5566__auto___23785 = G__23786;
      continue;
    } else {
    }
    break;
  }
  var G__23712 = args23710.length;
  switch(G__23712) {
    case 2:
      return cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23710.length)].join(""));;
  }
};
cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$2 = function(f, ch) {
  return cljs.core.async.partition_by.call(null, f, ch, null);
};
cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$3 = function(f, ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__14432__auto___23788 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__14432__auto___23788, out) {
    return function() {
      var f__14433__auto__ = function() {
        var switch__14367__auto__ = function(c__14432__auto___23788, out) {
          return function(state_23754) {
            var state_val_23755 = state_23754[1];
            if (state_val_23755 === 7) {
              var inst_23750 = state_23754[2];
              var state_23754__$1 = state_23754;
              var statearr_23756_23789 = state_23754__$1;
              statearr_23756_23789[2] = inst_23750;
              statearr_23756_23789[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_23755 === 1) {
                var inst_23713 = [];
                var inst_23714 = inst_23713;
                var inst_23715 = new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123);
                var state_23754__$1 = function() {
                  var statearr_23757 = state_23754;
                  statearr_23757[7] = inst_23715;
                  statearr_23757[8] = inst_23714;
                  return statearr_23757;
                }();
                var statearr_23758_23790 = state_23754__$1;
                statearr_23758_23790[2] = null;
                statearr_23758_23790[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_23755 === 4) {
                  var inst_23718 = state_23754[9];
                  var inst_23718__$1 = state_23754[2];
                  var inst_23719 = inst_23718__$1 == null;
                  var inst_23720 = cljs.core.not.call(null, inst_23719);
                  var state_23754__$1 = function() {
                    var statearr_23759 = state_23754;
                    statearr_23759[9] = inst_23718__$1;
                    return statearr_23759;
                  }();
                  if (inst_23720) {
                    var statearr_23760_23791 = state_23754__$1;
                    statearr_23760_23791[1] = 5;
                  } else {
                    var statearr_23761_23792 = state_23754__$1;
                    statearr_23761_23792[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_23755 === 15) {
                    var inst_23744 = state_23754[2];
                    var state_23754__$1 = state_23754;
                    var statearr_23762_23793 = state_23754__$1;
                    statearr_23762_23793[2] = inst_23744;
                    statearr_23762_23793[1] = 14;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_23755 === 13) {
                      var state_23754__$1 = state_23754;
                      var statearr_23763_23794 = state_23754__$1;
                      statearr_23763_23794[2] = null;
                      statearr_23763_23794[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_23755 === 6) {
                        var inst_23714 = state_23754[8];
                        var inst_23739 = inst_23714.length;
                        var inst_23740 = inst_23739 > 0;
                        var state_23754__$1 = state_23754;
                        if (cljs.core.truth_(inst_23740)) {
                          var statearr_23764_23795 = state_23754__$1;
                          statearr_23764_23795[1] = 12;
                        } else {
                          var statearr_23765_23796 = state_23754__$1;
                          statearr_23765_23796[1] = 13;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_23755 === 3) {
                          var inst_23752 = state_23754[2];
                          var state_23754__$1 = state_23754;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_23754__$1, inst_23752);
                        } else {
                          if (state_val_23755 === 12) {
                            var inst_23714 = state_23754[8];
                            var inst_23742 = cljs.core.vec.call(null, inst_23714);
                            var state_23754__$1 = state_23754;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_23754__$1, 15, out, inst_23742);
                          } else {
                            if (state_val_23755 === 2) {
                              var state_23754__$1 = state_23754;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_23754__$1, 4, ch);
                            } else {
                              if (state_val_23755 === 11) {
                                var inst_23722 = state_23754[10];
                                var inst_23718 = state_23754[9];
                                var inst_23732 = state_23754[2];
                                var inst_23733 = [];
                                var inst_23734 = inst_23733.push(inst_23718);
                                var inst_23714 = inst_23733;
                                var inst_23715 = inst_23722;
                                var state_23754__$1 = function() {
                                  var statearr_23766 = state_23754;
                                  statearr_23766[11] = inst_23734;
                                  statearr_23766[7] = inst_23715;
                                  statearr_23766[12] = inst_23732;
                                  statearr_23766[8] = inst_23714;
                                  return statearr_23766;
                                }();
                                var statearr_23767_23797 = state_23754__$1;
                                statearr_23767_23797[2] = null;
                                statearr_23767_23797[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_23755 === 9) {
                                  var inst_23714 = state_23754[8];
                                  var inst_23730 = cljs.core.vec.call(null, inst_23714);
                                  var state_23754__$1 = state_23754;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_23754__$1, 11, out, inst_23730);
                                } else {
                                  if (state_val_23755 === 5) {
                                    var inst_23722 = state_23754[10];
                                    var inst_23715 = state_23754[7];
                                    var inst_23718 = state_23754[9];
                                    var inst_23722__$1 = f.call(null, inst_23718);
                                    var inst_23723 = cljs.core._EQ_.call(null, inst_23722__$1, inst_23715);
                                    var inst_23724 = cljs.core.keyword_identical_QMARK_.call(null, inst_23715, new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123));
                                    var inst_23725 = inst_23723 || inst_23724;
                                    var state_23754__$1 = function() {
                                      var statearr_23768 = state_23754;
                                      statearr_23768[10] = inst_23722__$1;
                                      return statearr_23768;
                                    }();
                                    if (cljs.core.truth_(inst_23725)) {
                                      var statearr_23769_23798 = state_23754__$1;
                                      statearr_23769_23798[1] = 8;
                                    } else {
                                      var statearr_23770_23799 = state_23754__$1;
                                      statearr_23770_23799[1] = 9;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_23755 === 14) {
                                      var inst_23747 = state_23754[2];
                                      var inst_23748 = cljs.core.async.close_BANG_.call(null, out);
                                      var state_23754__$1 = function() {
                                        var statearr_23772 = state_23754;
                                        statearr_23772[13] = inst_23747;
                                        return statearr_23772;
                                      }();
                                      var statearr_23773_23800 = state_23754__$1;
                                      statearr_23773_23800[2] = inst_23748;
                                      statearr_23773_23800[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_23755 === 10) {
                                        var inst_23737 = state_23754[2];
                                        var state_23754__$1 = state_23754;
                                        var statearr_23774_23801 = state_23754__$1;
                                        statearr_23774_23801[2] = inst_23737;
                                        statearr_23774_23801[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_23755 === 8) {
                                          var inst_23722 = state_23754[10];
                                          var inst_23714 = state_23754[8];
                                          var inst_23718 = state_23754[9];
                                          var inst_23727 = inst_23714.push(inst_23718);
                                          var tmp23771 = inst_23714;
                                          var inst_23714__$1 = tmp23771;
                                          var inst_23715 = inst_23722;
                                          var state_23754__$1 = function() {
                                            var statearr_23775 = state_23754;
                                            statearr_23775[7] = inst_23715;
                                            statearr_23775[8] = inst_23714__$1;
                                            statearr_23775[14] = inst_23727;
                                            return statearr_23775;
                                          }();
                                          var statearr_23776_23802 = state_23754__$1;
                                          statearr_23776_23802[2] = null;
                                          statearr_23776_23802[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__14432__auto___23788, out);
        return function(switch__14367__auto__, c__14432__auto___23788, out) {
          return function() {
            var cljs$core$async$state_machine__14368__auto__ = null;
            var cljs$core$async$state_machine__14368__auto____0 = function() {
              var statearr_23780 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_23780[0] = cljs$core$async$state_machine__14368__auto__;
              statearr_23780[1] = 1;
              return statearr_23780;
            };
            var cljs$core$async$state_machine__14368__auto____1 = function(state_23754) {
              while (true) {
                var ret_value__14369__auto__ = function() {
                  try {
                    while (true) {
                      var result__14370__auto__ = switch__14367__auto__.call(null, state_23754);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__14370__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__14370__auto__;
                      }
                      break;
                    }
                  } catch (e23781) {
                    if (e23781 instanceof Object) {
                      var ex__14371__auto__ = e23781;
                      var statearr_23782_23803 = state_23754;
                      statearr_23782_23803[5] = ex__14371__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_23754);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e23781;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__14369__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__23804 = state_23754;
                  state_23754 = G__23804;
                  continue;
                } else {
                  return ret_value__14369__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__14368__auto__ = function(state_23754) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__14368__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__14368__auto____1.call(this, state_23754);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__14368__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__14368__auto____0;
            cljs$core$async$state_machine__14368__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__14368__auto____1;
            return cljs$core$async$state_machine__14368__auto__;
          }();
        }(switch__14367__auto__, c__14432__auto___23788, out);
      }();
      var state__14434__auto__ = function() {
        var statearr_23783 = f__14433__auto__.call(null);
        statearr_23783[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__14432__auto___23788;
        return statearr_23783;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__14434__auto__);
    };
  }(c__14432__auto___23788, out));
  return out;
};
cljs.core.async.partition_by.cljs$lang$maxFixedArity = 3;
goog.provide("om_tools.mixin");
goog.require("cljs.core");
goog.require("om.core");
goog.provide("om_bootstrap.mixins");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("om.core");
goog.require("om_tools.mixin");
goog.require("schema.core");
var ufv___19382 = schema.utils.use_fn_validation;
var output_schema19375_19383 = schema.core.make_fn_schema.call(null, schema.core.Any, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY], null));
var input_schema19376_19384 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, cljs.core.with_meta(new cljs.core.Symbol(null, "target", "target", 1893533248, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("s", "Any", "s/Any", 1277490110, null)], null))), schema.core.one.call(null, schema.core.Str, cljs.core.with_meta(new cljs.core.Symbol(null, 
"event-type", "event-type", 1960254340, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("s", "Str", "s/Str", 907974338, null)], null))), schema.core.one.call(null, schema.core.make_fn_schema.call(null, schema.core.Any, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, 
new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null))], null)], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "callback", "callback", 935395299, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), cljs.core.list(new cljs.core.Symbol("s", "\x3d\x3e", "s/\x3d\x3e", -813269628, null), new cljs.core.Symbol("s", "Any", "s/Any", 1277490110, null), new cljs.core.Symbol("s", "Any", "s/Any", 1277490110, null))], null)))], null);
var input_checker19377_19385 = schema.core.checker.call(null, input_schema19376_19384);
var output_checker19378_19386 = schema.core.checker.call(null, output_schema19375_19383);
om_bootstrap.mixins.event_listener = function(ufv___19382, output_schema19375_19383, input_schema19376_19384, input_checker19377_19385, output_checker19378_19386) {
  return function om_bootstrap$mixins$event_listener(G__19379, G__19380, G__19381) {
    var validate__6953__auto__ = ufv___19382.get_cell();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var args__6954__auto___19387 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__19379, G__19380, G__19381], null);
      var temp__4425__auto___19388 = input_checker19377_19385.call(null, args__6954__auto___19387);
      if (cljs.core.truth_(temp__4425__auto___19388)) {
        var error__6955__auto___19389 = temp__4425__auto___19388;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "event-listener", "event-listener", 809979412, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), cljs.core.list(new cljs.core.Symbol("s", "\x3d\x3e", "s/\x3d\x3e", -813269628, null), new cljs.core.Symbol("s", "Any", "s/Any", 1277490110, null)), new cljs.core.Keyword(null, 
        "doc", "doc", 1913296891), "Registers the callback on the supplied target for events of type\n   `event-type`. Returns a function of no arguments that, when called,\n   unregisters the callback."], null)), cljs.core.pr_str.call(null, error__6955__auto___19389)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), 
        input_schema19376_19384, new cljs.core.Keyword(null, "value", "value", 305978217), args__6954__auto___19387, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___19389], null));
      } else {
      }
    } else {
    }
    var o__6956__auto__ = function() {
      var target = G__19379;
      var event_type = G__19380;
      var callback = G__19381;
      while (true) {
        if (cljs.core.truth_(target.addEventListener)) {
          target.addEventListener(event_type, callback, false);
          return function(validate__6953__auto__, ufv___19382, output_schema19375_19383, input_schema19376_19384, input_checker19377_19385, output_checker19378_19386) {
            return function() {
              return target.removeEventListener(event_type, callback, false);
            };
          }(validate__6953__auto__, ufv___19382, output_schema19375_19383, input_schema19376_19384, input_checker19377_19385, output_checker19378_19386);
        } else {
          if (cljs.core.truth_(target.attachEvent)) {
            var event_type__$1 = [cljs.core.str("on"), cljs.core.str(event_type)].join("");
            target.attachEvent(event_type__$1, callback);
            return function(event_type__$1, validate__6953__auto__, ufv___19382, output_schema19375_19383, input_schema19376_19384, input_checker19377_19385, output_checker19378_19386) {
              return function() {
                return target.detachEvent(event_type__$1, callback);
              };
            }(event_type__$1, validate__6953__auto__, ufv___19382, output_schema19375_19383, input_schema19376_19384, input_checker19377_19385, output_checker19378_19386);
          } else {
            return function(validate__6953__auto__, ufv___19382, output_schema19375_19383, input_schema19376_19384, input_checker19377_19385, output_checker19378_19386) {
              return function() {
                return null;
              };
            }(validate__6953__auto__, ufv___19382, output_schema19375_19383, input_schema19376_19384, input_checker19377_19385, output_checker19378_19386);
          }
        }
        break;
      }
    }();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var temp__4425__auto___19390 = output_checker19378_19386.call(null, o__6956__auto__);
      if (cljs.core.truth_(temp__4425__auto___19390)) {
        var error__6955__auto___19391 = temp__4425__auto___19390;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "event-listener", "event-listener", 809979412, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), cljs.core.list(new cljs.core.Symbol("s", "\x3d\x3e", "s/\x3d\x3e", -813269628, null), new cljs.core.Symbol("s", "Any", "s/Any", 1277490110, null)), new cljs.core.Keyword(null, 
        "doc", "doc", 1913296891), "Registers the callback on the supplied target for events of type\n   `event-type`. Returns a function of no arguments that, when called,\n   unregisters the callback."], null)), cljs.core.pr_str.call(null, error__6955__auto___19391)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), 
        output_schema19375_19383, new cljs.core.Keyword(null, "value", "value", 305978217), o__6956__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___19391], null));
      } else {
      }
    } else {
    }
    return o__6956__auto__;
  };
}(ufv___19382, output_schema19375_19383, input_schema19376_19384, input_checker19377_19385, output_checker19378_19386);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, om_bootstrap.mixins.event_listener), schema.core.make_fn_schema.call(null, output_schema19375_19383, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema19376_19384], null)));
om_bootstrap.mixins.set_listener_mixin = {"componentWillMount":function() {
  var this19392 = this;
  return function(this19392) {
    return function(owner) {
      return owner.listeners = [];
    };
  }(this19392).call(null, this19392);
}, "componentWillUnmount":function() {
  var this19393 = this;
  return function(this19393) {
    return function(owner) {
      var seq__19398 = cljs.core.seq.call(null, owner.listeners);
      var chunk__19399 = null;
      var count__19400 = 0;
      var i__19401 = 0;
      while (true) {
        if (i__19401 < count__19400) {
          var l = cljs.core._nth.call(null, chunk__19399, i__19401);
          l.call(null);
          var G__19402 = seq__19398;
          var G__19403 = chunk__19399;
          var G__19404 = count__19400;
          var G__19405 = i__19401 + 1;
          seq__19398 = G__19402;
          chunk__19399 = G__19403;
          count__19400 = G__19404;
          i__19401 = G__19405;
          continue;
        } else {
          var temp__4425__auto__ = cljs.core.seq.call(null, seq__19398);
          if (temp__4425__auto__) {
            var seq__19398__$1 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__19398__$1)) {
              var c__5310__auto__ = cljs.core.chunk_first.call(null, seq__19398__$1);
              var G__19406 = cljs.core.chunk_rest.call(null, seq__19398__$1);
              var G__19407 = c__5310__auto__;
              var G__19408 = cljs.core.count.call(null, c__5310__auto__);
              var G__19409 = 0;
              seq__19398 = G__19406;
              chunk__19399 = G__19407;
              count__19400 = G__19408;
              i__19401 = G__19409;
              continue;
            } else {
              var l = cljs.core.first.call(null, seq__19398__$1);
              l.call(null);
              var G__19410 = cljs.core.next.call(null, seq__19398__$1);
              var G__19411 = null;
              var G__19412 = 0;
              var G__19413 = 0;
              seq__19398 = G__19410;
              chunk__19399 = G__19411;
              count__19400 = G__19412;
              i__19401 = G__19413;
              continue;
            }
          } else {
            return null;
          }
        }
        break;
      }
    };
  }(this19393).call(null, this19393);
}, "set_listener":function(target19395, event_type19396, callback19397) {
  var this19394 = this;
  return function(this19394) {
    return function(owner, target, event_type, callback) {
      var remove_fn = om_bootstrap.mixins.event_listener.call(null, target, event_type, callback);
      return owner.listeners.push(remove_fn);
    };
  }(this19394).call(null, this19394, target19395, event_type19396, callback19397);
}};
om_bootstrap.mixins.set_timeout_mixin = {"componentWillMount":function() {
  var this19415 = this;
  return function(this19415) {
    return function(owner) {
      return owner.timeouts = [];
    };
  }(this19415).call(null, this19415);
}, "componentWillUnmount":function() {
  var this19416 = this;
  return function(this19416) {
    return function(owner) {
      return owner.timeouts.map(function(this19416) {
        return function(p1__19414_SHARP_) {
          return clearTimeout(p1__19414_SHARP_);
        };
      }(this19416));
    };
  }(this19416).call(null, this19416);
}, "set_timeout":function(f19418, timeout19419) {
  var this19417 = this;
  return function(this19417) {
    return function(owner, f, timeout) {
      var timeout__$1 = setTimeout(f, timeout);
      return owner.timeouts.push(timeout__$1);
    };
  }(this19417).call(null, this19417, f19418, timeout19419);
}};
om_bootstrap.mixins.in_root_QMARK_ = function om_bootstrap$mixins$in_root_QMARK_(node, root) {
  var node__$1 = node;
  while (true) {
    if (node__$1 == null) {
      return false;
    } else {
      if (cljs.core._EQ_.call(null, root, node__$1)) {
        return true;
      } else {
        var G__19420 = node__$1.parentNode;
        node__$1 = G__19420;
        continue;
      }
    }
    break;
  }
};
om_bootstrap.mixins.ESCAPE_KEY = 27;
om_bootstrap.mixins.bind_root_close_handlers_BANG_ = function om_bootstrap$mixins$bind_root_close_handlers_BANG_(owner) {
  var set_state = owner["setDropdownState"];
  return owner.dropdownListeners = [om_bootstrap.mixins.event_listener.call(null, document, "click", function(set_state) {
    return function(e) {
      if (cljs.core.truth_(om_bootstrap.mixins.in_root_QMARK_.call(null, e.target, om.core.get_node.call(null, owner)))) {
        return null;
      } else {
        return set_state.call(null, false);
      }
    };
  }(set_state)), om_bootstrap.mixins.event_listener.call(null, document, "keyup", function(set_state) {
    return function(e) {
      if (cljs.core._EQ_.call(null, om_bootstrap.mixins.ESCAPE_KEY, e.keyCode)) {
        return set_state.call(null, false);
      } else {
        return null;
      }
    };
  }(set_state))];
};
om_bootstrap.mixins.unbind_root_close_handlers_BANG_ = function om_bootstrap$mixins$unbind_root_close_handlers_BANG_(owner) {
  var temp__4425__auto__ = owner.dropdownListeners;
  if (cljs.core.truth_(temp__4425__auto__)) {
    var listeners = temp__4425__auto__;
    var seq__19425_19429 = cljs.core.seq.call(null, listeners);
    var chunk__19426_19430 = null;
    var count__19427_19431 = 0;
    var i__19428_19432 = 0;
    while (true) {
      if (i__19428_19432 < count__19427_19431) {
        var l_19433 = cljs.core._nth.call(null, chunk__19426_19430, i__19428_19432);
        l_19433.call(null);
        var G__19434 = seq__19425_19429;
        var G__19435 = chunk__19426_19430;
        var G__19436 = count__19427_19431;
        var G__19437 = i__19428_19432 + 1;
        seq__19425_19429 = G__19434;
        chunk__19426_19430 = G__19435;
        count__19427_19431 = G__19436;
        i__19428_19432 = G__19437;
        continue;
      } else {
        var temp__4425__auto___19438__$1 = cljs.core.seq.call(null, seq__19425_19429);
        if (temp__4425__auto___19438__$1) {
          var seq__19425_19439__$1 = temp__4425__auto___19438__$1;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__19425_19439__$1)) {
            var c__5310__auto___19440 = cljs.core.chunk_first.call(null, seq__19425_19439__$1);
            var G__19441 = cljs.core.chunk_rest.call(null, seq__19425_19439__$1);
            var G__19442 = c__5310__auto___19440;
            var G__19443 = cljs.core.count.call(null, c__5310__auto___19440);
            var G__19444 = 0;
            seq__19425_19429 = G__19441;
            chunk__19426_19430 = G__19442;
            count__19427_19431 = G__19443;
            i__19428_19432 = G__19444;
            continue;
          } else {
            var l_19445 = cljs.core.first.call(null, seq__19425_19439__$1);
            l_19445.call(null);
            var G__19446 = cljs.core.next.call(null, seq__19425_19439__$1);
            var G__19447 = null;
            var G__19448 = 0;
            var G__19449 = 0;
            seq__19425_19429 = G__19446;
            chunk__19426_19430 = G__19447;
            count__19427_19431 = G__19448;
            i__19428_19432 = G__19449;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return owner.dropdownListeners = null;
  } else {
    return null;
  }
};
om_bootstrap.mixins.dropdown_mixin = {"getInitialState":function() {
  var this19450 = this;
  return function(this19450) {
    return function(_) {
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "open?", "open?", 1238443125), false], null);
    };
  }(this19450).call(null, this19450);
}, "componentWillUnmount":function() {
  var this19451 = this;
  return function(this19451) {
    return function(owner) {
      return om_bootstrap.mixins.unbind_root_close_handlers_BANG_.call(null, owner);
    };
  }(this19451).call(null, this19451);
}, "isDropdownOpen":function() {
  var this19452 = this;
  return function(this19452) {
    return function(owner) {
      return om.core.get_state.call(null, owner, new cljs.core.Keyword(null, "open?", "open?", 1238443125));
    };
  }(this19452).call(null, this19452);
}, "setDropdownState":function(open_QMARK_19454) {
  var this19453 = this;
  return function(this19453) {
    return function(owner, open_QMARK_) {
      if (cljs.core.truth_(open_QMARK_)) {
        om_bootstrap.mixins.bind_root_close_handlers_BANG_.call(null, owner);
      } else {
        om_bootstrap.mixins.unbind_root_close_handlers_BANG_.call(null, owner);
      }
      return om.core.set_state_BANG_.call(null, owner, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "open?", "open?", 1238443125)], null), open_QMARK_);
    };
  }(this19453).call(null, this19453, open_QMARK_19454);
}};
om_bootstrap.mixins.collapsible_mixin = {"getInitialState":function() {
  var this19455 = this;
  return function(this19455) {
    return function(_) {
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "collapsed?", "collapsed?", -1661420674), true], null);
    };
  }(this19455).call(null, this19455);
}, "isPanelCollapsed":function() {
  var this19456 = this;
  return function(this19456) {
    return function(owner) {
      var collapsed_QMARK_ = om.core.get_state.call(null, owner, new cljs.core.Keyword(null, "collapsed?", "collapsed?", -1661420674));
      if (collapsed_QMARK_ == null) {
        om.core.set_state_BANG_.call(null, owner, new cljs.core.Keyword(null, "collapsed?", "collapsed?", -1661420674), true);
        return true;
      } else {
        return collapsed_QMARK_;
      }
    };
  }(this19456).call(null, this19456);
}, "toggleCollapsed":function() {
  var this19457 = this;
  return function(this19457) {
    return function(owner) {
      return om.core.update_state_BANG_.call(null, owner, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "collapsed?", "collapsed?", -1661420674)], null), cljs.core.not);
    };
  }(this19457).call(null, this19457);
}};
goog.provide("om_bootstrap.button");
goog.require("cljs.core");
goog.require("om_bootstrap.types");
goog.require("schema.core");
goog.require("om_bootstrap.util");
goog.require("om_tools.dom");
goog.require("om_tools.mixin");
goog.require("om_tools.core");
goog.require("om_bootstrap.mixins");
goog.require("om.core");
om_bootstrap.button.Button = om_bootstrap.types.bootstrap.call(null, new cljs.core.PersistentArrayMap.fromArray([schema.core.optional_key.call(null, new cljs.core.Keyword(null, "active?", "active?", 459499776)), schema.core.Bool, schema.core.optional_key.call(null, new cljs.core.Keyword(null, "disabled?", "disabled?", -1523234181)), schema.core.Bool, schema.core.optional_key.call(null, new cljs.core.Keyword(null, "block?", "block?", 1102479923)), schema.core.Bool, schema.core.optional_key.call(null, 
new cljs.core.Keyword(null, "nav-item?", "nav-item?", -1419487031)), schema.core.Bool, schema.core.optional_key.call(null, new cljs.core.Keyword(null, "nav-dropdown?", "nav-dropdown?", 2070486004)), schema.core.Bool], true, false));
om_bootstrap.button.ButtonGroup = om_bootstrap.types.bootstrap.call(null, new cljs.core.PersistentArrayMap.fromArray([schema.core.optional_key.call(null, new cljs.core.Keyword(null, "vertical?", "vertical?", -1522630444)), schema.core.Bool, schema.core.optional_key.call(null, new cljs.core.Keyword(null, "justified?", "justified?", -1045366764)), schema.core.Bool], true, false));
var ufv___18855 = schema.utils.use_fn_validation;
var output_schema18849_18856 = schema.core.Any;
var input_schema18850_18857 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "classes", "classes", 2037804510), new cljs.core.PersistentArrayMap.fromArray([schema.core.Any, schema.core.Any], true, false), new cljs.core.Keyword(null, "disabled?", "disabled?", -1523234181), schema.core.maybe.call(null, schema.core.Bool), new cljs.core.Keyword(null, "props", "props", 
453281727), new cljs.core.PersistentArrayMap.fromArray([schema.core.Any, schema.core.Any], true, false)], null), cljs.core.with_meta(new cljs.core.Symbol(null, "opts", "opts", 1795607228, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "classes", "classes", 2037804510), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol("s", "Any", "s/Any", 1277490110, 
null), new cljs.core.Symbol("s", "Any", "s/Any", 1277490110, null)], null), new cljs.core.Keyword(null, "disabled?", "disabled?", -1523234181), cljs.core.list(new cljs.core.Symbol("s", "maybe", "s/maybe", 1326133944, null), new cljs.core.Symbol("s", "Bool", "s/Bool", 195910545, null)), new cljs.core.Keyword(null, "props", "props", 453281727), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol("s", "Any", "s/Any", 1277490110, null), new cljs.core.Symbol("s", "Any", "s/Any", 1277490110, 
null)], null)], null)], null))), schema.core.one.call(null, schema.core.Any, cljs.core.with_meta(new cljs.core.Symbol(null, "children", "children", 699969545, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)))], null);
var input_checker18851_18858 = schema.core.checker.call(null, input_schema18850_18857);
var output_checker18852_18859 = schema.core.checker.call(null, output_schema18849_18856);
om_bootstrap.button.render_anchor = function(ufv___18855, output_schema18849_18856, input_schema18850_18857, input_checker18851_18858, output_checker18852_18859) {
  return function om_bootstrap$button$render_anchor(G__18853, G__18854) {
    var validate__6953__auto__ = ufv___18855.get_cell();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var args__6954__auto___18860 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__18853, G__18854], null);
      var temp__4425__auto___18861 = input_checker18851_18858.call(null, args__6954__auto___18860);
      if (cljs.core.truth_(temp__4425__auto___18861)) {
        var error__6955__auto___18862 = temp__4425__auto___18861;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "render-anchor", "render-anchor", -1892709609, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)), cljs.core.pr_str.call(null, error__6955__auto___18862)), new cljs.core.PersistentArrayMap(null, 
        4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema18850_18857, new cljs.core.Keyword(null, "value", "value", 305978217), args__6954__auto___18860, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___18862], null));
      } else {
      }
    } else {
    }
    var o__6956__auto__ = function() {
      var opts = G__18853;
      var children = G__18854;
      while (true) {
        var props = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "href", "href", -793805698), (new cljs.core.Keyword(null, "href", "href", -793805698)).cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "props", "props", 453281727)).cljs$core$IFn$_invoke$arity$1(opts), "#"), new cljs.core.Keyword(null, "class", "class", -2030961996), om_tools.dom.class_set.call(null, cljs.core.assoc.call(null, (new cljs.core.Keyword(null, "classes", "classes", 2037804510)).cljs$core$IFn$_invoke$arity$1(opts), 
        new cljs.core.Keyword(null, "disabled", "disabled", -1529784218), (new cljs.core.Keyword(null, "disabled?", "disabled?", -1523234181)).cljs$core$IFn$_invoke$arity$1(opts))), new cljs.core.Keyword(null, "role", "role", -736691072), "button"], null);
        return om_tools.dom.element.call(null, React.DOM.a, om_bootstrap.util.merge_props.call(null, props, (new cljs.core.Keyword(null, "props", "props", 453281727)).cljs$core$IFn$_invoke$arity$1(opts)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [children], null));
        break;
      }
    }();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var temp__4425__auto___18863 = output_checker18852_18859.call(null, o__6956__auto__);
      if (cljs.core.truth_(temp__4425__auto___18863)) {
        var error__6955__auto___18864 = temp__4425__auto___18863;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "render-anchor", "render-anchor", -1892709609, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)), cljs.core.pr_str.call(null, error__6955__auto___18864)), new cljs.core.PersistentArrayMap(null, 
        4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema18849_18856, new cljs.core.Keyword(null, "value", "value", 305978217), o__6956__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___18864], null));
      } else {
      }
    } else {
    }
    return o__6956__auto__;
  };
}(ufv___18855, output_schema18849_18856, input_schema18850_18857, input_checker18851_18858, output_checker18852_18859);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, om_bootstrap.button.render_anchor), schema.core.make_fn_schema.call(null, output_schema18849_18856, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema18850_18857], null)));
var ufv___18874 = schema.utils.use_fn_validation;
var output_schema18865_18875 = om_bootstrap.types.Component;
var input_schema18866_18876 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, om_bootstrap.button.Button, cljs.core.with_meta(new cljs.core.Symbol(null, "props", "props", 2093813254, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol(null, "Button", "Button", -1787718586, null)], null))), schema.core.Any], null);
var input_checker18867_18877 = schema.core.checker.call(null, input_schema18866_18876);
var output_checker18868_18878 = schema.core.checker.call(null, output_schema18865_18875);
om_bootstrap.button.button = function(ufv___18874, output_schema18865_18875, input_schema18866_18876, input_checker18867_18877, output_checker18868_18878) {
  return function om_bootstrap$button$button() {
    var args__5572__auto__ = [];
    var len__5565__auto___18879 = arguments.length;
    var i__5566__auto___18880 = 0;
    while (true) {
      if (i__5566__auto___18880 < len__5565__auto___18879) {
        args__5572__auto__.push(arguments[i__5566__auto___18880]);
        var G__18881 = i__5566__auto___18880 + 1;
        i__5566__auto___18880 = G__18881;
        continue;
      } else {
      }
      break;
    }
    var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
    return om_bootstrap.button.button.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
  };
}(ufv___18874, output_schema18865_18875, input_schema18866_18876, input_checker18867_18877, output_checker18868_18878);
om_bootstrap.button.button.cljs$core$IFn$_invoke$arity$variadic = function(ufv___18874, output_schema18865_18875, input_schema18866_18876, input_checker18867_18877, output_checker18868_18878) {
  return function(G__18869, rest18870) {
    var validate__6953__auto__ = ufv___18874.get_cell();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var args__6954__auto___18882 = cljs.core.list_STAR_.call(null, G__18869, rest18870);
      var temp__4425__auto___18883 = input_checker18867_18877.call(null, args__6954__auto___18882);
      if (cljs.core.truth_(temp__4425__auto___18883)) {
        var error__6955__auto___18884 = temp__4425__auto___18883;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "button", "button", -1197855826, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("t", "Component", "t/Component", 1015042821, null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Renders a button."], null)), cljs.core.pr_str.call(null, error__6955__auto___18884)), 
        new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema18866_18876, new cljs.core.Keyword(null, "value", "value", 305978217), args__6954__auto___18882, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___18884], null));
      } else {
      }
    } else {
    }
    var o__6956__auto__ = function() {
      var props = G__18869;
      var children = rest18870;
      while (true) {
        var vec__18873 = om_bootstrap.types.separate.call(null, om_bootstrap.button.Button, props, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "bs-class", "bs-class", 1438130590), "button", new cljs.core.Keyword(null, "bs-style", "bs-style", 1424423998), "default", new cljs.core.Keyword(null, "type", "type", 1174270348), "button"], null));
        var bs = cljs.core.nth.call(null, vec__18873, 0, null);
        var props__$1 = cljs.core.nth.call(null, vec__18873, 1, null);
        var klasses = cljs.core.truth_((new cljs.core.Keyword(null, "nav-dropdown?", "nav-dropdown?", 2070486004)).cljs$core$IFn$_invoke$arity$1(bs)) ? cljs.core.PersistentArrayMap.EMPTY : om_bootstrap.types.bs_class_set.call(null, bs);
        var klasses__$1 = cljs.core.merge.call(null, klasses, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "active", "active", 1895962068), (new cljs.core.Keyword(null, "active?", "active?", 459499776)).cljs$core$IFn$_invoke$arity$1(bs), new cljs.core.Keyword(null, "btn-block", "btn-block", 967079535), (new cljs.core.Keyword(null, "block?", "block?", 1102479923)).cljs$core$IFn$_invoke$arity$1(bs)], null));
        if (cljs.core.truth_((new cljs.core.Keyword(null, "nav-item?", "nav-item?", -1419487031)).cljs$core$IFn$_invoke$arity$1(bs))) {
          return cljs.core.apply.call(null, React.DOM.li, {"className":om_tools.dom.format_opts.call(null, om_tools.dom.class_set.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "active", "active", 1895962068), (new cljs.core.Keyword(null, "active?", "active?", 459499776)).cljs$core$IFn$_invoke$arity$1(bs), new cljs.core.Keyword(null, "disabled?", "disabled?", -1523234181), (new cljs.core.Keyword(null, "disabled?", "disabled?", -1523234181)).cljs$core$IFn$_invoke$arity$1(bs)], 
          null)))}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [om_bootstrap.button.render_anchor.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "props", "props", 453281727), props__$1, new cljs.core.Keyword(null, "classes", "classes", 2037804510), klasses__$1], null), children)], null)));
        } else {
          if (cljs.core.truth_(function() {
            var or__4526__auto__ = (new cljs.core.Keyword(null, "href", "href", -793805698)).cljs$core$IFn$_invoke$arity$1(props__$1);
            if (cljs.core.truth_(or__4526__auto__)) {
              return or__4526__auto__;
            } else {
              return (new cljs.core.Keyword(null, "nav-dropdown?", "nav-dropdown?", 2070486004)).cljs$core$IFn$_invoke$arity$1(bs);
            }
          }())) {
            return om_bootstrap.button.render_anchor.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "props", "props", 453281727), props__$1, new cljs.core.Keyword(null, "disabled?", "disabled?", -1523234181), (new cljs.core.Keyword(null, "disabled?", "disabled?", -1523234181)).cljs$core$IFn$_invoke$arity$1(bs), new cljs.core.Keyword(null, "classes", "classes", 2037804510), klasses__$1], null), children);
          } else {
            return om_tools.dom.element.call(null, React.DOM.button, om_bootstrap.util.merge_props.call(null, props__$1, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), om_tools.dom.class_set.call(null, klasses__$1), new cljs.core.Keyword(null, "disabled", "disabled", -1529784218), (new cljs.core.Keyword(null, "disabled?", "disabled?", -1523234181)).cljs$core$IFn$_invoke$arity$1(bs)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
            [children], null));
          }
        }
        break;
      }
    }();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var temp__4425__auto___18885 = output_checker18868_18878.call(null, o__6956__auto__);
      if (cljs.core.truth_(temp__4425__auto___18885)) {
        var error__6955__auto___18886 = temp__4425__auto___18885;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "button", "button", -1197855826, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("t", "Component", "t/Component", 1015042821, null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Renders a button."], null)), cljs.core.pr_str.call(null, error__6955__auto___18886)), 
        new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema18865_18875, new cljs.core.Keyword(null, "value", "value", 305978217), o__6956__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___18886], null));
      } else {
      }
    } else {
    }
    return o__6956__auto__;
  };
}(ufv___18874, output_schema18865_18875, input_schema18866_18876, input_checker18867_18877, output_checker18868_18878);
om_bootstrap.button.button.cljs$lang$maxFixedArity = 1;
om_bootstrap.button.button.cljs$lang$applyTo = function(ufv___18874, output_schema18865_18875, input_schema18866_18876, input_checker18867_18877, output_checker18868_18878) {
  return function(seq18871) {
    var G__18872 = cljs.core.first.call(null, seq18871);
    var seq18871__$1 = cljs.core.next.call(null, seq18871);
    return om_bootstrap.button.button.cljs$core$IFn$_invoke$arity$variadic(G__18872, seq18871__$1);
  };
}(ufv___18874, output_schema18865_18875, input_schema18866_18876, input_checker18867_18877, output_checker18868_18878);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, om_bootstrap.button.button), schema.core.make_fn_schema.call(null, output_schema18865_18875, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema18866_18876], null)));
var ufv___18896 = schema.utils.use_fn_validation;
var output_schema18887_18897 = om_bootstrap.types.Component;
var input_schema18888_18898 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, cljs.core.with_meta(new cljs.core.Symbol(null, "opts", "opts", 1795607228, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null))), schema.core.Any], null);
var input_checker18889_18899 = schema.core.checker.call(null, input_schema18888_18898);
var output_checker18890_18900 = schema.core.checker.call(null, output_schema18887_18897);
om_bootstrap.button.toolbar = function(ufv___18896, output_schema18887_18897, input_schema18888_18898, input_checker18889_18899, output_checker18890_18900) {
  return function om_bootstrap$button$toolbar() {
    var args__5572__auto__ = [];
    var len__5565__auto___18901 = arguments.length;
    var i__5566__auto___18902 = 0;
    while (true) {
      if (i__5566__auto___18902 < len__5565__auto___18901) {
        args__5572__auto__.push(arguments[i__5566__auto___18902]);
        var G__18903 = i__5566__auto___18902 + 1;
        i__5566__auto___18902 = G__18903;
        continue;
      } else {
      }
      break;
    }
    var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
    return om_bootstrap.button.toolbar.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
  };
}(ufv___18896, output_schema18887_18897, input_schema18888_18898, input_checker18889_18899, output_checker18890_18900);
om_bootstrap.button.toolbar.cljs$core$IFn$_invoke$arity$variadic = function(ufv___18896, output_schema18887_18897, input_schema18888_18898, input_checker18889_18899, output_checker18890_18900) {
  return function(G__18891, rest18892) {
    var validate__6953__auto__ = ufv___18896.get_cell();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var args__6954__auto___18904 = cljs.core.list_STAR_.call(null, G__18891, rest18892);
      var temp__4425__auto___18905 = input_checker18889_18899.call(null, args__6954__auto___18904);
      if (cljs.core.truth_(temp__4425__auto___18905)) {
        var error__6955__auto___18906 = temp__4425__auto___18905;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "toolbar", "toolbar", 467742462, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("t", "Component", "t/Component", 1015042821, null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Renders a button toolbar."], null)), cljs.core.pr_str.call(null, 
        error__6955__auto___18906)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema18888_18898, new cljs.core.Keyword(null, "value", "value", 305978217), args__6954__auto___18904, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___18906], null));
      } else {
      }
    } else {
    }
    var o__6956__auto__ = function() {
      var opts = G__18891;
      var children = rest18892;
      while (true) {
        var vec__18895 = om_bootstrap.types.separate.call(null, cljs.core.PersistentArrayMap.EMPTY, opts, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "bs-class", "bs-class", 1438130590), "button-toolbar"], null));
        var bs = cljs.core.nth.call(null, vec__18895, 0, null);
        var props = cljs.core.nth.call(null, vec__18895, 1, null);
        return cljs.core.apply.call(null, React.DOM.div, {"role":"toolbar", "className":om_tools.dom.format_opts.call(null, om_tools.dom.class_set.call(null, om_bootstrap.types.bs_class_set.call(null, bs)))}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [children], null)));
        break;
      }
    }();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var temp__4425__auto___18907 = output_checker18890_18900.call(null, o__6956__auto__);
      if (cljs.core.truth_(temp__4425__auto___18907)) {
        var error__6955__auto___18908 = temp__4425__auto___18907;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "toolbar", "toolbar", 467742462, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("t", "Component", "t/Component", 1015042821, null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Renders a button toolbar."], null)), cljs.core.pr_str.call(null, 
        error__6955__auto___18908)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema18887_18897, new cljs.core.Keyword(null, "value", "value", 305978217), o__6956__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___18908], null));
      } else {
      }
    } else {
    }
    return o__6956__auto__;
  };
}(ufv___18896, output_schema18887_18897, input_schema18888_18898, input_checker18889_18899, output_checker18890_18900);
om_bootstrap.button.toolbar.cljs$lang$maxFixedArity = 1;
om_bootstrap.button.toolbar.cljs$lang$applyTo = function(ufv___18896, output_schema18887_18897, input_schema18888_18898, input_checker18889_18899, output_checker18890_18900) {
  return function(seq18893) {
    var G__18894 = cljs.core.first.call(null, seq18893);
    var seq18893__$1 = cljs.core.next.call(null, seq18893);
    return om_bootstrap.button.toolbar.cljs$core$IFn$_invoke$arity$variadic(G__18894, seq18893__$1);
  };
}(ufv___18896, output_schema18887_18897, input_schema18888_18898, input_checker18889_18899, output_checker18890_18900);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, om_bootstrap.button.toolbar), schema.core.make_fn_schema.call(null, output_schema18887_18897, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema18888_18898], null)));
var ufv___18918 = schema.utils.use_fn_validation;
var output_schema18909_18919 = om_bootstrap.types.Component;
var input_schema18910_18920 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, om_bootstrap.button.ButtonGroup, cljs.core.with_meta(new cljs.core.Symbol(null, "opts", "opts", 1795607228, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol(null, "ButtonGroup", "ButtonGroup", -309978472, null)], null))), schema.core.Any], null);
var input_checker18911_18921 = schema.core.checker.call(null, input_schema18910_18920);
var output_checker18912_18922 = schema.core.checker.call(null, output_schema18909_18919);
om_bootstrap.button.button_group = function(ufv___18918, output_schema18909_18919, input_schema18910_18920, input_checker18911_18921, output_checker18912_18922) {
  return function om_bootstrap$button$button_group() {
    var args__5572__auto__ = [];
    var len__5565__auto___18923 = arguments.length;
    var i__5566__auto___18924 = 0;
    while (true) {
      if (i__5566__auto___18924 < len__5565__auto___18923) {
        args__5572__auto__.push(arguments[i__5566__auto___18924]);
        var G__18925 = i__5566__auto___18924 + 1;
        i__5566__auto___18924 = G__18925;
        continue;
      } else {
      }
      break;
    }
    var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
    return om_bootstrap.button.button_group.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
  };
}(ufv___18918, output_schema18909_18919, input_schema18910_18920, input_checker18911_18921, output_checker18912_18922);
om_bootstrap.button.button_group.cljs$core$IFn$_invoke$arity$variadic = function(ufv___18918, output_schema18909_18919, input_schema18910_18920, input_checker18911_18921, output_checker18912_18922) {
  return function(G__18913, rest18914) {
    var validate__6953__auto__ = ufv___18918.get_cell();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var args__6954__auto___18926 = cljs.core.list_STAR_.call(null, G__18913, rest18914);
      var temp__4425__auto___18927 = input_checker18911_18921.call(null, args__6954__auto___18926);
      if (cljs.core.truth_(temp__4425__auto___18927)) {
        var error__6955__auto___18928 = temp__4425__auto___18927;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "button-group", "button-group", 108385979, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("t", "Component", "t/Component", 1015042821, null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Renders the supplied children in a wrapping button-group div."], 
        null)), cljs.core.pr_str.call(null, error__6955__auto___18928)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema18910_18920, new cljs.core.Keyword(null, "value", "value", 305978217), args__6954__auto___18926, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___18928], 
        null));
      } else {
      }
    } else {
    }
    var o__6956__auto__ = function() {
      var opts = G__18913;
      var children = rest18914;
      while (true) {
        var vec__18917 = om_bootstrap.types.separate.call(null, om_bootstrap.button.ButtonGroup, opts, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "bs-class", "bs-class", 1438130590), "button-group"], null));
        var bs = cljs.core.nth.call(null, vec__18917, 0, null);
        var props = cljs.core.nth.call(null, vec__18917, 1, null);
        var classes = cljs.core.merge.call(null, om_bootstrap.types.bs_class_set.call(null, bs), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "btn-group", "btn-group", 114866246), cljs.core.not.call(null, (new cljs.core.Keyword(null, "vertical?", "vertical?", -1522630444)).cljs$core$IFn$_invoke$arity$1(bs)), new cljs.core.Keyword(null, "btn-group-vertical", "btn-group-vertical", -1273565878), (new cljs.core.Keyword(null, "vertical?", "vertical?", -1522630444)).cljs$core$IFn$_invoke$arity$1(bs), 
        new cljs.core.Keyword(null, "btn-group-justified", "btn-group-justified", 1401722505), (new cljs.core.Keyword(null, "justified?", "justified?", -1045366764)).cljs$core$IFn$_invoke$arity$1(bs)], null));
        return om_tools.dom.element.call(null, React.DOM.div, om_bootstrap.util.merge_props.call(null, props, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), om_tools.dom.class_set.call(null, classes)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [children], null));
        break;
      }
    }();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var temp__4425__auto___18929 = output_checker18912_18922.call(null, o__6956__auto__);
      if (cljs.core.truth_(temp__4425__auto___18929)) {
        var error__6955__auto___18930 = temp__4425__auto___18929;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "button-group", "button-group", 108385979, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("t", "Component", "t/Component", 1015042821, null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Renders the supplied children in a wrapping button-group div."], 
        null)), cljs.core.pr_str.call(null, error__6955__auto___18930)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema18909_18919, new cljs.core.Keyword(null, "value", "value", 305978217), o__6956__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___18930], 
        null));
      } else {
      }
    } else {
    }
    return o__6956__auto__;
  };
}(ufv___18918, output_schema18909_18919, input_schema18910_18920, input_checker18911_18921, output_checker18912_18922);
om_bootstrap.button.button_group.cljs$lang$maxFixedArity = 1;
om_bootstrap.button.button_group.cljs$lang$applyTo = function(ufv___18918, output_schema18909_18919, input_schema18910_18920, input_checker18911_18921, output_checker18912_18922) {
  return function(seq18915) {
    var G__18916 = cljs.core.first.call(null, seq18915);
    var seq18915__$1 = cljs.core.next.call(null, seq18915);
    return om_bootstrap.button.button_group.cljs$core$IFn$_invoke$arity$variadic(G__18916, seq18915__$1);
  };
}(ufv___18918, output_schema18909_18919, input_schema18910_18920, input_checker18911_18921, output_checker18912_18922);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, om_bootstrap.button.button_group), schema.core.make_fn_schema.call(null, output_schema18909_18919, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema18910_18920], null)));
om_bootstrap.button.DropdownButton = om_bootstrap.types.bootstrap.call(null, new cljs.core.PersistentArrayMap.fromArray([schema.core.optional_key.call(null, new cljs.core.Keyword(null, "title", "title", 636505583)), om_bootstrap.types.Renderable, schema.core.optional_key.call(null, new cljs.core.Keyword(null, "href", "href", -793805698)), schema.core.Str, schema.core.optional_key.call(null, new cljs.core.Keyword(null, "on-click", "on-click", 1632826543)), schema.core.make_fn_schema.call(null, schema.core.Any, 
new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null))], null)], null)), schema.core.optional_key.call(null, new cljs.core.Keyword(null, "on-select", "on-select", -192407950)), schema.core.make_fn_schema.call(null, schema.core.Any, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null))], null)], null)), schema.core.optional_key.call(null, new cljs.core.Keyword(null, "pull-right?", "pull-right?", 5308493)), schema.core.Bool, schema.core.optional_key.call(null, new cljs.core.Keyword(null, "dropup?", "dropup?", -1170011428)), schema.core.Bool, schema.core.optional_key.call(null, new cljs.core.Keyword(null, 
"nav-item?", "nav-item?", -1419487031)), schema.core.Bool], true, false));
om_bootstrap.button.render_nav_item = function om_bootstrap$button$render_nav_item(props, open_QMARK_, children) {
  var classes = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "dropdown", "dropdown", 1343185805), true, new cljs.core.Keyword(null, "open", "open", -1763596448), open_QMARK_, new cljs.core.Keyword(null, "dropup", "dropup", -1031053231), (new cljs.core.Keyword(null, "dropup?", "dropup?", -1170011428)).cljs$core$IFn$_invoke$arity$1(props)], null);
  return cljs.core.apply.call(null, React.DOM.li, {"className":om_tools.dom.format_opts.call(null, om_tools.dom.class_set.call(null, classes))}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [children], null)));
};
om_bootstrap.button.render_button_group = function om_bootstrap$button$render_button_group(props, open_QMARK_, children) {
  var group_classes = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "open", "open", -1763596448), open_QMARK_, new cljs.core.Keyword(null, "dropup", "dropup", -1031053231), (new cljs.core.Keyword(null, "dropup?", "dropup?", -1170011428)).cljs$core$IFn$_invoke$arity$1(props)], null);
  return om_bootstrap.button.button_group.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bs-size", "bs-size", 1567732754), (new cljs.core.Keyword(null, "bs-size", "bs-size", 1567732754)).cljs$core$IFn$_invoke$arity$1(props), new cljs.core.Keyword(null, "class", "class", -2030961996), om_tools.dom.class_set.call(null, group_classes)], null), children);
};
om_bootstrap.button.MenuItem = om_bootstrap.types.bootstrap.call(null, new cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "key", "key", -1516042587), schema.core.Str, schema.core.optional_key.call(null, new cljs.core.Keyword(null, "header?", "header?", -106649173)), schema.core.Bool, schema.core.optional_key.call(null, new cljs.core.Keyword(null, "divider?", "divider?", 1882560157)), schema.core.Bool, schema.core.optional_key.call(null, new cljs.core.Keyword(null, "href", "href", 
-793805698)), schema.core.Str, schema.core.optional_key.call(null, new cljs.core.Keyword(null, "title", "title", 636505583)), schema.core.Str, schema.core.optional_key.call(null, new cljs.core.Keyword(null, "on-select", "on-select", -192407950)), schema.core.make_fn_schema.call(null, schema.core.Any, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, 
new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null))], null)], null))], true, false));
var component_fnk__13079__auto___18960 = function() {
  var ufv__ = schema.utils.use_fn_validation;
  var output_schema18935 = schema.core.Any;
  var input_schema18936 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, new cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "owner", "owner", -392611939), schema.core.Any, schema.core.Keyword, schema.core.Any], true, false), cljs.core.with_meta(new cljs.core.Symbol(null, "map18934", "map18934", 1817028646, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), 
  new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "owner", "owner", -392611939), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null), new cljs.core.Symbol("schema.core", "Keyword", "schema.core/Keyword", -1941817861, null), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)], null)))], null);
  var input_checker18937 = schema.core.checker.call(null, input_schema18936);
  var output_checker18938 = schema.core.checker.call(null, output_schema18935);
  return schema.core.schematize_fn.call(null, function(ufv__, output_schema18935, input_schema18936, input_checker18937, output_checker18938) {
    return function om_bootstrap$button$constructor18932(G__18939) {
      var validate__6953__auto__ = ufv__.get_cell();
      if (cljs.core.truth_(validate__6953__auto__)) {
        var args__6954__auto___18961 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__18939], null);
        var temp__4425__auto___18962 = input_checker18937.call(null, args__6954__auto___18961);
        if (cljs.core.truth_(temp__4425__auto___18962)) {
          var error__6955__auto___18963 = temp__4425__auto___18962;
          throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "constructor18932", "constructor18932", -938564973, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)), cljs.core.pr_str.call(null, error__6955__auto___18963)), new cljs.core.PersistentArrayMap(null, 
          4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema18936, new cljs.core.Keyword(null, "value", "value", 305978217), args__6954__auto___18961, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___18963], null));
        } else {
        }
      } else {
      }
      var o__6956__auto__ = function() {
        var map18934 = G__18939;
        while (true) {
          if (cljs.core.map_QMARK_.call(null, map18934)) {
          } else {
            throw new Error(schema.utils.format_STAR_.call(null, "fnk called on non-map: %s", map18934));
          }
          var owner = plumbing.fnk.schema.safe_get.call(null, map18934, new cljs.core.Keyword(null, "owner", "owner", -392611939), cljs.core.PersistentVector.EMPTY);
          if (typeof om_bootstrap.button.t18946 !== "undefined") {
          } else {
            om_bootstrap.button.t18946 = function(owner, map18934, output_checker18938, input_checker18937, output_schema18935, constructor18932, G__18939, input_schema18936, ufv__, validate__6953__auto__, meta18947) {
              this.owner = owner;
              this.map18934 = map18934;
              this.output_checker18938 = output_checker18938;
              this.input_checker18937 = input_checker18937;
              this.output_schema18935 = output_schema18935;
              this.constructor18932 = constructor18932;
              this.G__18939 = G__18939;
              this.input_schema18936 = input_schema18936;
              this.ufv__ = ufv__;
              this.validate__6953__auto__ = validate__6953__auto__;
              this.meta18947 = meta18947;
              this.cljs$lang$protocol_mask$partition0$ = 393216;
              this.cljs$lang$protocol_mask$partition1$ = 0;
            };
            om_bootstrap.button.t18946.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(owner, validate__6953__auto__, ufv__, output_schema18935, input_schema18936, input_checker18937, output_checker18938) {
              return function(_18948, meta18947__$1) {
                var self__ = this;
                var _18948__$1 = this;
                return new om_bootstrap.button.t18946(self__.owner, self__.map18934, self__.output_checker18938, self__.input_checker18937, self__.output_schema18935, self__.constructor18932, self__.G__18939, self__.input_schema18936, self__.ufv__, self__.validate__6953__auto__, meta18947__$1);
              };
            }(owner, validate__6953__auto__, ufv__, output_schema18935, input_schema18936, input_checker18937, output_checker18938);
            om_bootstrap.button.t18946.prototype.cljs$core$IMeta$_meta$arity$1 = function(owner, validate__6953__auto__, ufv__, output_schema18935, input_schema18936, input_checker18937, output_checker18938) {
              return function(_18948) {
                var self__ = this;
                var _18948__$1 = this;
                return self__.meta18947;
              };
            }(owner, validate__6953__auto__, ufv__, output_schema18935, input_schema18936, input_checker18937, output_checker18938);
            om_bootstrap.button.t18946.prototype.om$core$IDisplayName$ = true;
            om_bootstrap.button.t18946.prototype.om$core$IDisplayName$display_name$arity$1 = function(owner, validate__6953__auto__, ufv__, output_schema18935, input_schema18936, input_checker18937, output_checker18938) {
              return function(_) {
                var self__ = this;
                var ___$1 = this;
                return "menu-item*";
              };
            }(owner, validate__6953__auto__, ufv__, output_schema18935, input_schema18936, input_checker18937, output_checker18938);
            om_bootstrap.button.t18946.prototype.om$core$IRender$ = true;
            om_bootstrap.button.t18946.prototype.om$core$IRender$render$arity$1 = function(owner, validate__6953__auto__, ufv__, output_schema18935, input_schema18936, input_checker18937, output_checker18938) {
              return function(_) {
                var self__ = this;
                var ___$1 = this;
                var map__18949 = om.core.get_props.call(null, self__.owner);
                var map__18949__$1 = (!(map__18949 == null) ? map__18949.cljs$lang$protocol_mask$partition0$ & 64 || map__18949.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18949) : map__18949;
                var opts = cljs.core.get.call(null, map__18949__$1, new cljs.core.Keyword(null, "opts", "opts", 155075701));
                var children = cljs.core.get.call(null, map__18949__$1, new cljs.core.Keyword(null, "children", "children", -940561982));
                var vec__18950 = om_bootstrap.types.separate.call(null, om_bootstrap.button.MenuItem, opts, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), "#"], null));
                var bs = cljs.core.nth.call(null, vec__18950, 0, null);
                var props = cljs.core.nth.call(null, vec__18950, 1, null);
                var classes = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "dropdown-header", "dropdown-header", -1451449167), (new cljs.core.Keyword(null, "header?", "header?", -106649173)).cljs$core$IFn$_invoke$arity$1(bs), new cljs.core.Keyword(null, "divider", "divider", 1265972657), (new cljs.core.Keyword(null, "divider?", "divider?", 1882560157)).cljs$core$IFn$_invoke$arity$1(bs)], null);
                var handle_click = function(map__18949, map__18949__$1, opts, children, vec__18950, bs, props, classes, ___$1, owner, validate__6953__auto__, ufv__, output_schema18935, input_schema18936, input_checker18937, output_checker18938) {
                  return function(e) {
                    var temp__4425__auto__ = (new cljs.core.Keyword(null, "on-select", "on-select", -192407950)).cljs$core$IFn$_invoke$arity$1(bs);
                    if (cljs.core.truth_(temp__4425__auto__)) {
                      var on_select = temp__4425__auto__;
                      e.preventDefault();
                      return on_select.call(null, (new cljs.core.Keyword(null, "key", "key", -1516042587)).cljs$core$IFn$_invoke$arity$1(bs));
                    } else {
                      return null;
                    }
                  };
                }(map__18949, map__18949__$1, opts, children, vec__18950, bs, props, classes, ___$1, owner, validate__6953__auto__, ufv__, output_schema18935, input_schema18936, input_checker18937, output_checker18938);
                var children__$1 = cljs.core.truth_((new cljs.core.Keyword(null, "header?", "header?", -106649173)).cljs$core$IFn$_invoke$arity$1(bs)) ? children : cljs.core.apply.call(null, React.DOM.a, {"onClick":om_tools.dom.format_opts.call(null, handle_click), "href":om_tools.dom.format_opts.call(null, (new cljs.core.Keyword(null, "href", "href", -793805698)).cljs$core$IFn$_invoke$arity$1(bs)), "title":om_tools.dom.format_opts.call(null, (new cljs.core.Keyword(null, "title", "title", 636505583)).cljs$core$IFn$_invoke$arity$1(bs)), 
                "tabIndex":"-1"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [children], null)));
                var li_attrs = cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "role", "role", -736691072), "presentation", new cljs.core.Keyword(null, "class", "class", -2030961996), om_tools.dom.class_set.call(null, classes)], null), function() {
                  var temp__4425__auto__ = (new cljs.core.Keyword(null, "key", "key", -1516042587)).cljs$core$IFn$_invoke$arity$1(bs);
                  if (cljs.core.truth_(temp__4425__auto__)) {
                    var k = temp__4425__auto__;
                    return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "key", "key", -1516042587), k], null);
                  } else {
                    return null;
                  }
                }());
                return om_tools.dom.element.call(null, React.DOM.li, om_bootstrap.util.merge_props.call(null, props, li_attrs), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [children__$1], null));
              };
            }(owner, validate__6953__auto__, ufv__, output_schema18935, input_schema18936, input_checker18937, output_checker18938);
            om_bootstrap.button.t18946.getBasis = function(owner, validate__6953__auto__, ufv__, output_schema18935, input_schema18936, input_checker18937, output_checker18938) {
              return function() {
                return new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "owner", "owner", 1247919588, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)), new cljs.core.Symbol(null, "map18934", "map18934", 1817028646, null), new cljs.core.Symbol(null, "output-checker18938", 
                "output-checker18938", -376903898, null), new cljs.core.Symbol(null, "input-checker18937", "input-checker18937", -1547931288, null), new cljs.core.Symbol(null, "output-schema18935", "output-schema18935", 426001834, null), cljs.core.with_meta(new cljs.core.Symbol(null, "constructor18932", "constructor18932", -938564973, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", 
                -1891898271, null)], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "G__18939", "G__18939", 758493334, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "owner", "owner", -392611939), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null), new cljs.core.Symbol("schema.core", "Keyword", "schema.core/Keyword", -1941817861, 
                null), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)], null)), new cljs.core.Symbol(null, "input-schema18936", "input-schema18936", 1111087452, null), new cljs.core.Symbol(null, "ufv__", "ufv__", -2046207459, null), new cljs.core.Symbol(null, "validate__6953__auto__", "validate__6953__auto__", -1776384833, null), new cljs.core.Symbol(null, "meta18947", "meta18947", 283211930, null)], null);
              };
            }(owner, validate__6953__auto__, ufv__, output_schema18935, input_schema18936, input_checker18937, output_checker18938);
            om_bootstrap.button.t18946.cljs$lang$type = true;
            om_bootstrap.button.t18946.cljs$lang$ctorStr = "om-bootstrap.button/t18946";
            om_bootstrap.button.t18946.cljs$lang$ctorPrWriter = function(owner, validate__6953__auto__, ufv__, output_schema18935, input_schema18936, input_checker18937, output_checker18938) {
              return function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
                return cljs.core._write.call(null, writer__5106__auto__, "om-bootstrap.button/t18946");
              };
            }(owner, validate__6953__auto__, ufv__, output_schema18935, input_schema18936, input_checker18937, output_checker18938);
            om_bootstrap.button.__GT_t18946 = function(owner, validate__6953__auto__, ufv__, output_schema18935, input_schema18936, input_checker18937, output_checker18938) {
              return function om_bootstrap$button$constructor18932_$___GT_t18946(owner__$1, map18934__$1, output_checker18938__$1, input_checker18937__$1, output_schema18935__$1, constructor18932__$1, G__18939__$1, input_schema18936__$1, ufv____$1, validate__6953__auto____$1, meta18947) {
                return new om_bootstrap.button.t18946(owner__$1, map18934__$1, output_checker18938__$1, input_checker18937__$1, output_schema18935__$1, constructor18932__$1, G__18939__$1, input_schema18936__$1, ufv____$1, validate__6953__auto____$1, meta18947);
              };
            }(owner, validate__6953__auto__, ufv__, output_schema18935, input_schema18936, input_checker18937, output_checker18938);
          }
          return new om_bootstrap.button.t18946(owner, map18934, output_checker18938, input_checker18937, output_schema18935, om_bootstrap$button$constructor18932, G__18939, input_schema18936, ufv__, validate__6953__auto__, null);
          break;
        }
      }();
      if (cljs.core.truth_(validate__6953__auto__)) {
        var temp__4425__auto___18964 = output_checker18938.call(null, o__6956__auto__);
        if (cljs.core.truth_(temp__4425__auto___18964)) {
          var error__6955__auto___18965 = temp__4425__auto___18964;
          throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "constructor18932", "constructor18932", -938564973, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)), cljs.core.pr_str.call(null, error__6955__auto___18965)), new cljs.core.PersistentArrayMap(null, 
          4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema18935, new cljs.core.Keyword(null, "value", "value", 305978217), o__6956__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___18965], null));
        } else {
        }
      } else {
      }
      return o__6956__auto__;
    };
  }(ufv__, output_schema18935, input_schema18936, input_checker18937, output_checker18938), schema.core.make_fn_schema.call(null, output_schema18935, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema18936], null)));
}();
om_bootstrap.button.menu_item_STAR_ = function(component_fnk__13079__auto___18960) {
  return function om_bootstrap$button$menu_item_STAR_() {
    var args__5572__auto__ = [];
    var len__5565__auto___18966 = arguments.length;
    var i__5566__auto___18967 = 0;
    while (true) {
      if (i__5566__auto___18967 < len__5565__auto___18966) {
        args__5572__auto__.push(arguments[i__5566__auto___18967]);
        var G__18968 = i__5566__auto___18967 + 1;
        i__5566__auto___18967 = G__18968;
        continue;
      } else {
      }
      break;
    }
    var argseq__5573__auto__ = 2 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(2), 0) : null;
    return om_bootstrap.button.menu_item_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5573__auto__);
  };
}(component_fnk__13079__auto___18960);
om_bootstrap.button.menu_item_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(component_fnk__13079__auto___18960) {
  return function(data__13080__auto__, owner18931, p__18955) {
    var vec__18956 = p__18955;
    var opts__13081__auto__ = cljs.core.nth.call(null, vec__18956, 0, null);
    return component_fnk__13079__auto___18960.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "opts", "opts", 155075701), opts__13081__auto__, new cljs.core.Keyword(null, "owner", "owner", -392611939), owner18931, new cljs.core.Keyword(null, "data", "data", -232669377), data__13080__auto__], null));
  };
}(component_fnk__13079__auto___18960);
om_bootstrap.button.menu_item_STAR_.cljs$lang$maxFixedArity = 2;
om_bootstrap.button.menu_item_STAR_.cljs$lang$applyTo = function(component_fnk__13079__auto___18960) {
  return function(seq18952) {
    var G__18953 = cljs.core.first.call(null, seq18952);
    var seq18952__$1 = cljs.core.next.call(null, seq18952);
    var G__18954 = cljs.core.first.call(null, seq18952__$1);
    var seq18952__$2 = cljs.core.next.call(null, seq18952__$1);
    return om_bootstrap.button.menu_item_STAR_.cljs$core$IFn$_invoke$arity$variadic(G__18953, G__18954, seq18952__$2);
  };
}(component_fnk__13079__auto___18960);
om_bootstrap.button.__GT_menu_item_STAR_ = function om_bootstrap$button$__GT_menu_item_STAR_() {
  var args18957 = [];
  var len__5565__auto___18969 = arguments.length;
  var i__5566__auto___18970 = 0;
  while (true) {
    if (i__5566__auto___18970 < len__5565__auto___18969) {
      args18957.push(arguments[i__5566__auto___18970]);
      var G__18971 = i__5566__auto___18970 + 1;
      i__5566__auto___18970 = G__18971;
      continue;
    } else {
    }
    break;
  }
  var G__18959 = args18957.length;
  switch(G__18959) {
    case 1:
      return om_bootstrap.button.__GT_menu_item_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return om_bootstrap.button.__GT_menu_item_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args18957.length)].join(""));;
  }
};
om_bootstrap.button.__GT_menu_item_STAR_.cljs$core$IFn$_invoke$arity$1 = function(cursor__13048__auto__) {
  return om.core.build.call(null, om_bootstrap.button.menu_item_STAR_, cursor__13048__auto__);
};
om_bootstrap.button.__GT_menu_item_STAR_.cljs$core$IFn$_invoke$arity$2 = function(cursor__13048__auto__, m18933) {
  return om.core.build.call(null, om_bootstrap.button.menu_item_STAR_, cursor__13048__auto__, m18933);
};
om_bootstrap.button.__GT_menu_item_STAR_.cljs$lang$maxFixedArity = 2;
var ufv___18981 = schema.utils.use_fn_validation;
var output_schema18973_18982 = om_bootstrap.types.Component;
var input_schema18974_18983 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, om_bootstrap.button.MenuItem, cljs.core.with_meta(new cljs.core.Symbol(null, "opts", "opts", 1795607228, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol(null, "MenuItem", "MenuItem", 1235363736, null)], null))), schema.core.Any], null);
var input_checker18975_18984 = schema.core.checker.call(null, input_schema18974_18983);
var output_checker18976_18985 = schema.core.checker.call(null, output_schema18973_18982);
om_bootstrap.button.menu_item = function(ufv___18981, output_schema18973_18982, input_schema18974_18983, input_checker18975_18984, output_checker18976_18985) {
  return function om_bootstrap$button$menu_item() {
    var args__5572__auto__ = [];
    var len__5565__auto___18986 = arguments.length;
    var i__5566__auto___18987 = 0;
    while (true) {
      if (i__5566__auto___18987 < len__5565__auto___18986) {
        args__5572__auto__.push(arguments[i__5566__auto___18987]);
        var G__18988 = i__5566__auto___18987 + 1;
        i__5566__auto___18987 = G__18988;
        continue;
      } else {
      }
      break;
    }
    var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
    return om_bootstrap.button.menu_item.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
  };
}(ufv___18981, output_schema18973_18982, input_schema18974_18983, input_checker18975_18984, output_checker18976_18985);
om_bootstrap.button.menu_item.cljs$core$IFn$_invoke$arity$variadic = function(ufv___18981, output_schema18973_18982, input_schema18974_18983, input_checker18975_18984, output_checker18976_18985) {
  return function(G__18977, rest18978) {
    var validate__6953__auto__ = ufv___18981.get_cell();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var args__6954__auto___18989 = cljs.core.list_STAR_.call(null, G__18977, rest18978);
      var temp__4425__auto___18990 = input_checker18975_18984.call(null, args__6954__auto___18989);
      if (cljs.core.truth_(temp__4425__auto___18990)) {
        var error__6955__auto___18991 = temp__4425__auto___18990;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "menu-item", "menu-item", 269419754, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("t", "Component", "t/Component", 1015042821, null)], null)), cljs.core.pr_str.call(null, error__6955__auto___18991)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, 
        "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema18974_18983, new cljs.core.Keyword(null, "value", "value", 305978217), args__6954__auto___18989, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___18991], null));
      } else {
      }
    } else {
    }
    var o__6956__auto__ = function() {
      var opts = G__18977;
      var children = rest18978;
      while (true) {
        return om_bootstrap.button.__GT_menu_item_STAR_.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "opts", "opts", 155075701), opts, new cljs.core.Keyword(null, "children", "children", -940561982), children], null));
        break;
      }
    }();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var temp__4425__auto___18992 = output_checker18976_18985.call(null, o__6956__auto__);
      if (cljs.core.truth_(temp__4425__auto___18992)) {
        var error__6955__auto___18993 = temp__4425__auto___18992;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "menu-item", "menu-item", 269419754, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("t", "Component", "t/Component", 1015042821, null)], null)), cljs.core.pr_str.call(null, error__6955__auto___18993)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, 
        "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema18973_18982, new cljs.core.Keyword(null, "value", "value", 305978217), o__6956__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___18993], null));
      } else {
      }
    } else {
    }
    return o__6956__auto__;
  };
}(ufv___18981, output_schema18973_18982, input_schema18974_18983, input_checker18975_18984, output_checker18976_18985);
om_bootstrap.button.menu_item.cljs$lang$maxFixedArity = 1;
om_bootstrap.button.menu_item.cljs$lang$applyTo = function(ufv___18981, output_schema18973_18982, input_schema18974_18983, input_checker18975_18984, output_checker18976_18985) {
  return function(seq18979) {
    var G__18980 = cljs.core.first.call(null, seq18979);
    var seq18979__$1 = cljs.core.next.call(null, seq18979);
    return om_bootstrap.button.menu_item.cljs$core$IFn$_invoke$arity$variadic(G__18980, seq18979__$1);
  };
}(ufv___18981, output_schema18973_18982, input_schema18974_18983, input_checker18975_18984, output_checker18976_18985);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, om_bootstrap.button.menu_item), schema.core.make_fn_schema.call(null, output_schema18973_18982, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema18974_18983], null)));
om_bootstrap.button.DropdownMenu = om_bootstrap.types.bootstrap.call(null, new cljs.core.PersistentArrayMap.fromArray([schema.core.optional_key.call(null, new cljs.core.Keyword(null, "pull-right?", "pull-right?", 5308493)), schema.core.Bool, schema.core.optional_key.call(null, new cljs.core.Keyword(null, "on-select", "on-select", -192407950)), schema.core.make_fn_schema.call(null, schema.core.Any, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 
1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null))], null)], null))], true, false));
var ufv___19004 = schema.utils.use_fn_validation;
var output_schema18995_19005 = om_bootstrap.types.Component;
var input_schema18996_19006 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, om_bootstrap.button.DropdownMenu, cljs.core.with_meta(new cljs.core.Symbol(null, "opts", "opts", 1795607228, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol(null, "DropdownMenu", "DropdownMenu", 881901742, null)], null))), schema.core.Any], null);
var input_checker18997_19007 = schema.core.checker.call(null, input_schema18996_19006);
var output_checker18998_19008 = schema.core.checker.call(null, output_schema18995_19005);
om_bootstrap.button.dropdown_menu = function(ufv___19004, output_schema18995_19005, input_schema18996_19006, input_checker18997_19007, output_checker18998_19008) {
  return function om_bootstrap$button$dropdown_menu() {
    var args__5572__auto__ = [];
    var len__5565__auto___19009 = arguments.length;
    var i__5566__auto___19010 = 0;
    while (true) {
      if (i__5566__auto___19010 < len__5565__auto___19009) {
        args__5572__auto__.push(arguments[i__5566__auto___19010]);
        var G__19011 = i__5566__auto___19010 + 1;
        i__5566__auto___19010 = G__19011;
        continue;
      } else {
      }
      break;
    }
    var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
    return om_bootstrap.button.dropdown_menu.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
  };
}(ufv___19004, output_schema18995_19005, input_schema18996_19006, input_checker18997_19007, output_checker18998_19008);
om_bootstrap.button.dropdown_menu.cljs$core$IFn$_invoke$arity$variadic = function(ufv___19004, output_schema18995_19005, input_schema18996_19006, input_checker18997_19007, output_checker18998_19008) {
  return function(G__18999, rest19000) {
    var validate__6953__auto__ = ufv___19004.get_cell();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var args__6954__auto___19012 = cljs.core.list_STAR_.call(null, G__18999, rest19000);
      var temp__4425__auto___19013 = input_checker18997_19007.call(null, args__6954__auto___19012);
      if (cljs.core.truth_(temp__4425__auto___19013)) {
        var error__6955__auto___19014 = temp__4425__auto___19013;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "dropdown-menu", "dropdown-menu", -2089460283, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("t", "Component", "t/Component", 1015042821, null)], null)), cljs.core.pr_str.call(null, error__6955__auto___19014)), new cljs.core.PersistentArrayMap(null, 
        4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema18996_19006, new cljs.core.Keyword(null, "value", "value", 305978217), args__6954__auto___19012, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___19014], null));
      } else {
      }
    } else {
    }
    var o__6956__auto__ = function() {
      var opts = G__18999;
      var children = rest19000;
      while (true) {
        var vec__19003 = om_bootstrap.types.separate.call(null, om_bootstrap.button.DropdownMenu, opts);
        var bs = cljs.core.nth.call(null, vec__19003, 0, null);
        var props = cljs.core.nth.call(null, vec__19003, 1, null);
        var classes = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "dropdown-menu", "dropdown-menu", 564975486), true, new cljs.core.Keyword(null, "dropdown-menu-right", "dropdown-menu-right", -1532579541), (new cljs.core.Keyword(null, "pull-right?", "pull-right?", 5308493)).cljs$core$IFn$_invoke$arity$1(bs)], null);
        var ul_attrs = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), om_tools.dom.class_set.call(null, classes), new cljs.core.Keyword(null, "role", "role", -736691072), "menu"], null);
        return om_tools.dom.element.call(null, React.DOM.ul, om_bootstrap.util.merge_props.call(null, props, ul_attrs), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var temp__4423__auto__ = (new cljs.core.Keyword(null, "on-select", "on-select", -192407950)).cljs$core$IFn$_invoke$arity$1(bs);
          if (cljs.core.truth_(temp__4423__auto__)) {
            var on_select = temp__4423__auto__;
            return cljs.core.map.call(null, function(on_select, temp__4423__auto__, vec__19003, bs, props, classes, ul_attrs, validate__6953__auto__, ufv___19004, output_schema18995_19005, input_schema18996_19006, input_checker18997_19007, output_checker18998_19008) {
              return function(p1__18994_SHARP_) {
                return om_bootstrap.util.clone_with_props.call(null, p1__18994_SHARP_, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "on-select", "on-select", -192407950), on_select], null));
              };
            }(on_select, temp__4423__auto__, vec__19003, bs, props, classes, ul_attrs, validate__6953__auto__, ufv___19004, output_schema18995_19005, input_schema18996_19006, input_checker18997_19007, output_checker18998_19008), children);
          } else {
            return children;
          }
        }()], null));
        break;
      }
    }();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var temp__4425__auto___19015 = output_checker18998_19008.call(null, o__6956__auto__);
      if (cljs.core.truth_(temp__4425__auto___19015)) {
        var error__6955__auto___19016 = temp__4425__auto___19015;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "dropdown-menu", "dropdown-menu", -2089460283, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("t", "Component", "t/Component", 1015042821, null)], null)), cljs.core.pr_str.call(null, error__6955__auto___19016)), new cljs.core.PersistentArrayMap(null, 
        4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema18995_19005, new cljs.core.Keyword(null, "value", "value", 305978217), o__6956__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___19016], null));
      } else {
      }
    } else {
    }
    return o__6956__auto__;
  };
}(ufv___19004, output_schema18995_19005, input_schema18996_19006, input_checker18997_19007, output_checker18998_19008);
om_bootstrap.button.dropdown_menu.cljs$lang$maxFixedArity = 1;
om_bootstrap.button.dropdown_menu.cljs$lang$applyTo = function(ufv___19004, output_schema18995_19005, input_schema18996_19006, input_checker18997_19007, output_checker18998_19008) {
  return function(seq19001) {
    var G__19002 = cljs.core.first.call(null, seq19001);
    var seq19001__$1 = cljs.core.next.call(null, seq19001);
    return om_bootstrap.button.dropdown_menu.cljs$core$IFn$_invoke$arity$variadic(G__19002, seq19001__$1);
  };
}(ufv___19004, output_schema18995_19005, input_schema18996_19006, input_checker18997_19007, output_checker18998_19008);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, om_bootstrap.button.dropdown_menu), schema.core.make_fn_schema.call(null, output_schema18995_19005, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema18996_19006], null)));
om_bootstrap.button.dropdown_STAR_$descriptor = function() {
  var descriptor__13050__auto__ = om.core.specify_state_methods_BANG_.call(null, cljs.core.clj__GT_js.call(null, om.core.pure_methods));
  descriptor__13050__auto__["mixins"] = [om_bootstrap.mixins.dropdown_mixin];
  return descriptor__13050__auto__;
}();
var component_fnk__13079__auto___19047 = function() {
  var ufv__ = schema.utils.use_fn_validation;
  var output_schema19022 = schema.core.Any;
  var input_schema19023 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, new cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "state", "state", -1988618099), schema.core.Any, new cljs.core.Keyword(null, "owner", "owner", -392611939), schema.core.Any, schema.core.Keyword, schema.core.Any], true, false), cljs.core.with_meta(new cljs.core.Symbol(null, "map19021", "map19021", -1298933887, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "state", "state", -1988618099), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null), new cljs.core.Keyword(null, "owner", "owner", -392611939), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null), new cljs.core.Symbol("schema.core", "Keyword", "schema.core/Keyword", -1941817861, null), new cljs.core.Symbol("schema.core", 
  "Any", "schema.core/Any", -1891898271, null)], null)], null)))], null);
  var input_checker19024 = schema.core.checker.call(null, input_schema19023);
  var output_checker19025 = schema.core.checker.call(null, output_schema19022);
  return schema.core.schematize_fn.call(null, function(ufv__, output_schema19022, input_schema19023, input_checker19024, output_checker19025) {
    return function om_bootstrap$button$constructor19019(G__19026) {
      var validate__6953__auto__ = ufv__.get_cell();
      if (cljs.core.truth_(validate__6953__auto__)) {
        var args__6954__auto___19048 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__19026], null);
        var temp__4425__auto___19049 = input_checker19024.call(null, args__6954__auto___19048);
        if (cljs.core.truth_(temp__4425__auto___19049)) {
          var error__6955__auto___19050 = temp__4425__auto___19049;
          throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "constructor19019", "constructor19019", 345931023, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)), cljs.core.pr_str.call(null, error__6955__auto___19050)), new cljs.core.PersistentArrayMap(null, 
          4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema19023, new cljs.core.Keyword(null, "value", "value", 305978217), args__6954__auto___19048, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___19050], null));
        } else {
        }
      } else {
      }
      var o__6956__auto__ = function() {
        var map19021 = G__19026;
        while (true) {
          if (cljs.core.map_QMARK_.call(null, map19021)) {
          } else {
            throw new Error(schema.utils.format_STAR_.call(null, "fnk called on non-map: %s", map19021));
          }
          var owner = plumbing.fnk.schema.safe_get.call(null, map19021, new cljs.core.Keyword(null, "owner", "owner", -392611939), cljs.core.PersistentVector.EMPTY);
          var state = plumbing.fnk.schema.safe_get.call(null, map19021, new cljs.core.Keyword(null, "state", "state", -1988618099), cljs.core.PersistentVector.EMPTY);
          if (typeof om_bootstrap.button.t19033 !== "undefined") {
          } else {
            om_bootstrap.button.t19033 = function(map19021, owner, output_checker19025, G__19026, constructor19019, input_schema19023, state, ufv__, output_schema19022, validate__6953__auto__, input_checker19024, meta19034) {
              this.map19021 = map19021;
              this.owner = owner;
              this.output_checker19025 = output_checker19025;
              this.G__19026 = G__19026;
              this.constructor19019 = constructor19019;
              this.input_schema19023 = input_schema19023;
              this.state = state;
              this.ufv__ = ufv__;
              this.output_schema19022 = output_schema19022;
              this.validate__6953__auto__ = validate__6953__auto__;
              this.input_checker19024 = input_checker19024;
              this.meta19034 = meta19034;
              this.cljs$lang$protocol_mask$partition0$ = 393216;
              this.cljs$lang$protocol_mask$partition1$ = 0;
            };
            om_bootstrap.button.t19033.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(state, owner, validate__6953__auto__, ufv__, output_schema19022, input_schema19023, input_checker19024, output_checker19025) {
              return function(_19035, meta19034__$1) {
                var self__ = this;
                var _19035__$1 = this;
                return new om_bootstrap.button.t19033(self__.map19021, self__.owner, self__.output_checker19025, self__.G__19026, self__.constructor19019, self__.input_schema19023, self__.state, self__.ufv__, self__.output_schema19022, self__.validate__6953__auto__, self__.input_checker19024, meta19034__$1);
              };
            }(state, owner, validate__6953__auto__, ufv__, output_schema19022, input_schema19023, input_checker19024, output_checker19025);
            om_bootstrap.button.t19033.prototype.cljs$core$IMeta$_meta$arity$1 = function(state, owner, validate__6953__auto__, ufv__, output_schema19022, input_schema19023, input_checker19024, output_checker19025) {
              return function(_19035) {
                var self__ = this;
                var _19035__$1 = this;
                return self__.meta19034;
              };
            }(state, owner, validate__6953__auto__, ufv__, output_schema19022, input_schema19023, input_checker19024, output_checker19025);
            om_bootstrap.button.t19033.prototype.om$core$IDisplayName$ = true;
            om_bootstrap.button.t19033.prototype.om$core$IDisplayName$display_name$arity$1 = function(state, owner, validate__6953__auto__, ufv__, output_schema19022, input_schema19023, input_checker19024, output_checker19025) {
              return function(_) {
                var self__ = this;
                var ___$1 = this;
                return "dropdown*";
              };
            }(state, owner, validate__6953__auto__, ufv__, output_schema19022, input_schema19023, input_checker19024, output_checker19025);
            om_bootstrap.button.t19033.prototype.om$core$IRender$ = true;
            om_bootstrap.button.t19033.prototype.om$core$IRender$render$arity$1 = function(state, owner, validate__6953__auto__, ufv__, output_schema19022, input_schema19023, input_checker19024, output_checker19025) {
              return function(_) {
                var self__ = this;
                var ___$1 = this;
                var open_QMARK_ = self__.owner["isDropdownOpen"].call(null);
                var map__19036 = om.core.get_props.call(null, self__.owner);
                var map__19036__$1 = (!(map__19036 == null) ? map__19036.cljs$lang$protocol_mask$partition0$ & 64 || map__19036.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__19036) : map__19036;
                var opts = cljs.core.get.call(null, map__19036__$1, new cljs.core.Keyword(null, "opts", "opts", 155075701));
                var children = cljs.core.get.call(null, map__19036__$1, new cljs.core.Keyword(null, "children", "children", -940561982));
                var vec__19037 = om_bootstrap.types.separate.call(null, om_bootstrap.button.DropdownButton, opts, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), "#"], null));
                var bs = cljs.core.nth.call(null, vec__19037, 0, null);
                var props = cljs.core.nth.call(null, vec__19037, 1, null);
                var set_dropdown = self__.owner["setDropdownState"];
                var render_fn = cljs.core.partial.call(null, cljs.core.truth_((new cljs.core.Keyword(null, "nav-item?", "nav-item?", -1419487031)).cljs$core$IFn$_invoke$arity$1(bs)) ? om_bootstrap.button.render_nav_item : om_bootstrap.button.render_button_group, bs, open_QMARK_);
                var button_props = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "ref", "ref", 1289896967), "dropdownButton", new cljs.core.Keyword(null, "class", "class", -2030961996), "dropdown-toggle", new cljs.core.Keyword(null, "key", "key", -1516042587), 0, new cljs.core.Keyword(null, "nav-dropdown?", "nav-dropdown?", 2070486004), (new cljs.core.Keyword(null, "nav-item?", "nav-item?", -1419487031)).cljs$core$IFn$_invoke$arity$1(bs), new cljs.core.Keyword(null, "on-click", 
                "on-click", 1632826543), function(open_QMARK_, map__19036, map__19036__$1, opts, children, vec__19037, bs, props, set_dropdown, render_fn, ___$1, state, owner, validate__6953__auto__, ufv__, output_schema19022, input_schema19023, input_checker19024, output_checker19025) {
                  return function(e) {
                    e.preventDefault();
                    return set_dropdown.call(null, cljs.core.not.call(null, open_QMARK_));
                  };
                }(open_QMARK_, map__19036, map__19036__$1, opts, children, vec__19037, bs, props, set_dropdown, render_fn, ___$1, state, owner, validate__6953__auto__, ufv__, output_schema19022, input_schema19023, input_checker19024, output_checker19025)], null);
                var update_child_props = function(open_QMARK_, map__19036, map__19036__$1, opts, children, vec__19037, bs, props, set_dropdown, render_fn, button_props, ___$1, state, owner, validate__6953__auto__, ufv__, output_schema19022, input_schema19023, input_checker19024, output_checker19025) {
                  return function(props__$1) {
                    var handle = cljs.core.truth_(function() {
                      var or__4526__auto__ = (new cljs.core.Keyword(null, "on-select", "on-select", -192407950)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "opts", "opts", 155075701)).cljs$core$IFn$_invoke$arity$1(props__$1));
                      if (cljs.core.truth_(or__4526__auto__)) {
                        return or__4526__auto__;
                      } else {
                        return (new cljs.core.Keyword(null, "on-select", "on-select", -192407950)).cljs$core$IFn$_invoke$arity$1(bs);
                      }
                    }()) ? function(open_QMARK_, map__19036, map__19036__$1, opts, children, vec__19037, bs, props, set_dropdown, render_fn, button_props, ___$1, state, owner, validate__6953__auto__, ufv__, output_schema19022, input_schema19023, input_checker19024, output_checker19025) {
                      return function(key) {
                        var temp__4423__auto__ = (new cljs.core.Keyword(null, "on-select", "on-select", -192407950)).cljs$core$IFn$_invoke$arity$1(bs);
                        if (cljs.core.truth_(temp__4423__auto__)) {
                          var os = temp__4423__auto__;
                          return os.call(null, key);
                        } else {
                          return set_dropdown.call(null, false);
                        }
                      };
                    }(open_QMARK_, map__19036, map__19036__$1, opts, children, vec__19037, bs, props, set_dropdown, render_fn, button_props, ___$1, state, owner, validate__6953__auto__, ufv__, output_schema19022, input_schema19023, input_checker19024, output_checker19025) : null;
                    return cljs.core.update_in.call(null, props__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "opts", "opts", 155075701)], null), om_bootstrap.util.merge_props, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "on-select", "on-select", -192407950), handle], null));
                  };
                }(open_QMARK_, map__19036, map__19036__$1, opts, children, vec__19037, bs, props, set_dropdown, render_fn, button_props, ___$1, state, owner, validate__6953__auto__, ufv__, output_schema19022, input_schema19023, input_checker19024, output_checker19025);
                return render_fn.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [om_bootstrap.button.button.call(null, om_bootstrap.util.merge_props.call(null, cljs.core.dissoc.call(null, opts, new cljs.core.Keyword(null, "nav-item?", "nav-item?", -1419487031), new cljs.core.Keyword(null, "title", "title", 636505583), new cljs.core.Keyword(null, "pull-right?", "pull-right?", 5308493), new cljs.core.Keyword(null, "dropup?", "dropup?", -1170011428)), button_props), 
                (new cljs.core.Keyword(null, "title", "title", 636505583)).cljs$core$IFn$_invoke$arity$1(bs), " ", React.DOM.span({"className":"caret"})), om_bootstrap.button.dropdown_menu.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "ref", "ref", 1289896967), "menu", new cljs.core.Keyword(null, "aria-labelledby", "aria-labelledby", 1817118667), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(props), new cljs.core.Keyword(null, 
                "pull-right?", "pull-right?", 5308493), (new cljs.core.Keyword(null, "pull-right?", "pull-right?", 5308493)).cljs$core$IFn$_invoke$arity$1(bs), new cljs.core.Keyword(null, "key", "key", -1516042587), 1], null), cljs.core.map.call(null, function(open_QMARK_, map__19036, map__19036__$1, opts, children, vec__19037, bs, props, set_dropdown, render_fn, button_props, update_child_props, ___$1, state, owner, validate__6953__auto__, ufv__, output_schema19022, input_schema19023, input_checker19024, 
                output_checker19025) {
                  return function(p1__19017_SHARP_) {
                    return om_bootstrap.util.clone_with_props.call(null, p1__19017_SHARP_, update_child_props);
                  };
                }(open_QMARK_, map__19036, map__19036__$1, opts, children, vec__19037, bs, props, set_dropdown, render_fn, button_props, update_child_props, ___$1, state, owner, validate__6953__auto__, ufv__, output_schema19022, input_schema19023, input_checker19024, output_checker19025), children))], null));
              };
            }(state, owner, validate__6953__auto__, ufv__, output_schema19022, input_schema19023, input_checker19024, output_checker19025);
            om_bootstrap.button.t19033.getBasis = function(state, owner, validate__6953__auto__, ufv__, output_schema19022, input_schema19023, input_checker19024, output_checker19025) {
              return function() {
                return new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "map19021", "map19021", -1298933887, null), cljs.core.with_meta(new cljs.core.Symbol(null, "owner", "owner", 1247919588, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)), new cljs.core.Symbol(null, "output-checker19025", 
                "output-checker19025", 1977534052, null), cljs.core.with_meta(new cljs.core.Symbol(null, "G__19026", "G__19026", 486017642, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "state", "state", -1988618099), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null), new cljs.core.Keyword(null, "owner", "owner", -392611939), new cljs.core.Symbol("schema.core", 
                "Any", "schema.core/Any", -1891898271, null), new cljs.core.Symbol("schema.core", "Keyword", "schema.core/Keyword", -1941817861, null), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "constructor19019", "constructor19019", 345931023, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", 
                "schema.core/Any", -1891898271, null)], null)), new cljs.core.Symbol(null, "input-schema19023", "input-schema19023", 851585682, null), cljs.core.with_meta(new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)), new cljs.core.Symbol(null, "ufv__", "ufv__", -2046207459, null), new cljs.core.Symbol(null, 
                "output-schema19022", "output-schema19022", 2046937917, null), new cljs.core.Symbol(null, "validate__6953__auto__", "validate__6953__auto__", -1776384833, null), new cljs.core.Symbol(null, "input-checker19024", "input-checker19024", -252363201, null), new cljs.core.Symbol(null, "meta19034", "meta19034", 28349621, null)], null);
              };
            }(state, owner, validate__6953__auto__, ufv__, output_schema19022, input_schema19023, input_checker19024, output_checker19025);
            om_bootstrap.button.t19033.cljs$lang$type = true;
            om_bootstrap.button.t19033.cljs$lang$ctorStr = "om-bootstrap.button/t19033";
            om_bootstrap.button.t19033.cljs$lang$ctorPrWriter = function(state, owner, validate__6953__auto__, ufv__, output_schema19022, input_schema19023, input_checker19024, output_checker19025) {
              return function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
                return cljs.core._write.call(null, writer__5106__auto__, "om-bootstrap.button/t19033");
              };
            }(state, owner, validate__6953__auto__, ufv__, output_schema19022, input_schema19023, input_checker19024, output_checker19025);
            om_bootstrap.button.__GT_t19033 = function(state, owner, validate__6953__auto__, ufv__, output_schema19022, input_schema19023, input_checker19024, output_checker19025) {
              return function om_bootstrap$button$constructor19019_$___GT_t19033(map19021__$1, owner__$1, output_checker19025__$1, G__19026__$1, constructor19019__$1, input_schema19023__$1, state__$1, ufv____$1, output_schema19022__$1, validate__6953__auto____$1, input_checker19024__$1, meta19034) {
                return new om_bootstrap.button.t19033(map19021__$1, owner__$1, output_checker19025__$1, G__19026__$1, constructor19019__$1, input_schema19023__$1, state__$1, ufv____$1, output_schema19022__$1, validate__6953__auto____$1, input_checker19024__$1, meta19034);
              };
            }(state, owner, validate__6953__auto__, ufv__, output_schema19022, input_schema19023, input_checker19024, output_checker19025);
          }
          return new om_bootstrap.button.t19033(map19021, owner, output_checker19025, G__19026, om_bootstrap$button$constructor19019, input_schema19023, state, ufv__, output_schema19022, validate__6953__auto__, input_checker19024, null);
          break;
        }
      }();
      if (cljs.core.truth_(validate__6953__auto__)) {
        var temp__4425__auto___19051 = output_checker19025.call(null, o__6956__auto__);
        if (cljs.core.truth_(temp__4425__auto___19051)) {
          var error__6955__auto___19052 = temp__4425__auto___19051;
          throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "constructor19019", "constructor19019", 345931023, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)), cljs.core.pr_str.call(null, error__6955__auto___19052)), new cljs.core.PersistentArrayMap(null, 
          4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema19022, new cljs.core.Keyword(null, "value", "value", 305978217), o__6956__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___19052], null));
        } else {
        }
      } else {
      }
      return o__6956__auto__;
    };
  }(ufv__, output_schema19022, input_schema19023, input_checker19024, output_checker19025), schema.core.make_fn_schema.call(null, output_schema19022, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema19023], null)));
}();
om_bootstrap.button.dropdown_STAR_ = function(component_fnk__13079__auto___19047) {
  return function om_bootstrap$button$dropdown_STAR_() {
    var args__5572__auto__ = [];
    var len__5565__auto___19053 = arguments.length;
    var i__5566__auto___19054 = 0;
    while (true) {
      if (i__5566__auto___19054 < len__5565__auto___19053) {
        args__5572__auto__.push(arguments[i__5566__auto___19054]);
        var G__19055 = i__5566__auto___19054 + 1;
        i__5566__auto___19054 = G__19055;
        continue;
      } else {
      }
      break;
    }
    var argseq__5573__auto__ = 2 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(2), 0) : null;
    return om_bootstrap.button.dropdown_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5573__auto__);
  };
}(component_fnk__13079__auto___19047);
om_bootstrap.button.dropdown_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(component_fnk__13079__auto___19047) {
  return function(data__13080__auto__, owner19018, p__19042) {
    var vec__19043 = p__19042;
    var opts__13081__auto__ = cljs.core.nth.call(null, vec__19043, 0, null);
    return component_fnk__13079__auto___19047.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "state", "state", -1988618099), om_tools.core.state_proxy.call(null, owner19018), new cljs.core.Keyword(null, "opts", "opts", 155075701), opts__13081__auto__, new cljs.core.Keyword(null, "owner", "owner", -392611939), owner19018, new cljs.core.Keyword(null, "data", "data", -232669377), data__13080__auto__], null));
  };
}(component_fnk__13079__auto___19047);
om_bootstrap.button.dropdown_STAR_.cljs$lang$maxFixedArity = 2;
om_bootstrap.button.dropdown_STAR_.cljs$lang$applyTo = function(component_fnk__13079__auto___19047) {
  return function(seq19039) {
    var G__19040 = cljs.core.first.call(null, seq19039);
    var seq19039__$1 = cljs.core.next.call(null, seq19039);
    var G__19041 = cljs.core.first.call(null, seq19039__$1);
    var seq19039__$2 = cljs.core.next.call(null, seq19039__$1);
    return om_bootstrap.button.dropdown_STAR_.cljs$core$IFn$_invoke$arity$variadic(G__19040, G__19041, seq19039__$2);
  };
}(component_fnk__13079__auto___19047);
om_bootstrap.button.__GT_dropdown_STAR_ = function om_bootstrap$button$__GT_dropdown_STAR_() {
  var args19044 = [];
  var len__5565__auto___19056 = arguments.length;
  var i__5566__auto___19057 = 0;
  while (true) {
    if (i__5566__auto___19057 < len__5565__auto___19056) {
      args19044.push(arguments[i__5566__auto___19057]);
      var G__19058 = i__5566__auto___19057 + 1;
      i__5566__auto___19057 = G__19058;
      continue;
    } else {
    }
    break;
  }
  var G__19046 = args19044.length;
  switch(G__19046) {
    case 1:
      return om_bootstrap.button.__GT_dropdown_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return om_bootstrap.button.__GT_dropdown_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args19044.length)].join(""));;
  }
};
om_bootstrap.button.__GT_dropdown_STAR_.cljs$core$IFn$_invoke$arity$1 = function(cursor__13048__auto__) {
  return om.core.build.call(null, om_bootstrap.button.dropdown_STAR_, cursor__13048__auto__, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "descriptor", "descriptor", 76122018), om_bootstrap.button.dropdown_STAR_$descriptor], null));
};
om_bootstrap.button.__GT_dropdown_STAR_.cljs$core$IFn$_invoke$arity$2 = function(cursor__13048__auto__, m19020) {
  return om.core.build.call(null, om_bootstrap.button.dropdown_STAR_, cursor__13048__auto__, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "descriptor", "descriptor", 76122018), om_bootstrap.button.dropdown_STAR_$descriptor], null), m19020));
};
om_bootstrap.button.__GT_dropdown_STAR_.cljs$lang$maxFixedArity = 2;
var ufv___19068 = schema.utils.use_fn_validation;
var output_schema19060_19069 = om_bootstrap.types.Component;
var input_schema19061_19070 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, om_bootstrap.button.DropdownButton, cljs.core.with_meta(new cljs.core.Symbol(null, "opts", "opts", 1795607228, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol(null, "DropdownButton", "DropdownButton", 251375015, null)], null))), schema.core.Any], null);
var input_checker19062_19071 = schema.core.checker.call(null, input_schema19061_19070);
var output_checker19063_19072 = schema.core.checker.call(null, output_schema19060_19069);
om_bootstrap.button.dropdown = function(ufv___19068, output_schema19060_19069, input_schema19061_19070, input_checker19062_19071, output_checker19063_19072) {
  return function om_bootstrap$button$dropdown() {
    var args__5572__auto__ = [];
    var len__5565__auto___19073 = arguments.length;
    var i__5566__auto___19074 = 0;
    while (true) {
      if (i__5566__auto___19074 < len__5565__auto___19073) {
        args__5572__auto__.push(arguments[i__5566__auto___19074]);
        var G__19075 = i__5566__auto___19074 + 1;
        i__5566__auto___19074 = G__19075;
        continue;
      } else {
      }
      break;
    }
    var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
    return om_bootstrap.button.dropdown.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
  };
}(ufv___19068, output_schema19060_19069, input_schema19061_19070, input_checker19062_19071, output_checker19063_19072);
om_bootstrap.button.dropdown.cljs$core$IFn$_invoke$arity$variadic = function(ufv___19068, output_schema19060_19069, input_schema19061_19070, input_checker19062_19071, output_checker19063_19072) {
  return function(G__19064, rest19065) {
    var validate__6953__auto__ = ufv___19068.get_cell();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var args__6954__auto___19076 = cljs.core.list_STAR_.call(null, G__19064, rest19065);
      var temp__4425__auto___19077 = input_checker19062_19071.call(null, args__6954__auto___19076);
      if (cljs.core.truth_(temp__4425__auto___19077)) {
        var error__6955__auto___19078 = temp__4425__auto___19077;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "dropdown", "dropdown", -1311249964, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("t", "Component", "t/Component", 1015042821, null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns a dropdown button component. The component manages its own\n  dropdown state."], 
        null)), cljs.core.pr_str.call(null, error__6955__auto___19078)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema19061_19070, new cljs.core.Keyword(null, "value", "value", 305978217), args__6954__auto___19076, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___19078], 
        null));
      } else {
      }
    } else {
    }
    var o__6956__auto__ = function() {
      var opts = G__19064;
      var children = rest19065;
      while (true) {
        return om_bootstrap.button.__GT_dropdown_STAR_.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "opts", "opts", 155075701), opts, new cljs.core.Keyword(null, "children", "children", -940561982), children], null));
        break;
      }
    }();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var temp__4425__auto___19079 = output_checker19063_19072.call(null, o__6956__auto__);
      if (cljs.core.truth_(temp__4425__auto___19079)) {
        var error__6955__auto___19080 = temp__4425__auto___19079;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "dropdown", "dropdown", -1311249964, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("t", "Component", "t/Component", 1015042821, null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns a dropdown button component. The component manages its own\n  dropdown state."], 
        null)), cljs.core.pr_str.call(null, error__6955__auto___19080)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema19060_19069, new cljs.core.Keyword(null, "value", "value", 305978217), o__6956__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___19080], 
        null));
      } else {
      }
    } else {
    }
    return o__6956__auto__;
  };
}(ufv___19068, output_schema19060_19069, input_schema19061_19070, input_checker19062_19071, output_checker19063_19072);
om_bootstrap.button.dropdown.cljs$lang$maxFixedArity = 1;
om_bootstrap.button.dropdown.cljs$lang$applyTo = function(ufv___19068, output_schema19060_19069, input_schema19061_19070, input_checker19062_19071, output_checker19063_19072) {
  return function(seq19066) {
    var G__19067 = cljs.core.first.call(null, seq19066);
    var seq19066__$1 = cljs.core.next.call(null, seq19066);
    return om_bootstrap.button.dropdown.cljs$core$IFn$_invoke$arity$variadic(G__19067, seq19066__$1);
  };
}(ufv___19068, output_schema19060_19069, input_schema19061_19070, input_checker19062_19071, output_checker19063_19072);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, om_bootstrap.button.dropdown), schema.core.make_fn_schema.call(null, output_schema19060_19069, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema19061_19070], null)));
om_bootstrap.button.SplitButton = om_bootstrap.types.bootstrap.call(null, new cljs.core.PersistentArrayMap.fromArray([schema.core.optional_key.call(null, new cljs.core.Keyword(null, "pull-right?", "pull-right?", 5308493)), schema.core.Bool, schema.core.optional_key.call(null, new cljs.core.Keyword(null, "dropup?", "dropup?", -1170011428)), schema.core.Bool, schema.core.optional_key.call(null, new cljs.core.Keyword(null, "disabled?", "disabled?", -1523234181)), schema.core.Bool, schema.core.optional_key.call(null, 
new cljs.core.Keyword(null, "title", "title", 636505583)), om_bootstrap.types.Renderable, schema.core.optional_key.call(null, new cljs.core.Keyword(null, "href", "href", -793805698)), schema.core.Str, schema.core.optional_key.call(null, new cljs.core.Keyword(null, "dropdown-title", "dropdown-title", 1850134238)), om_bootstrap.types.Renderable, schema.core.optional_key.call(null, new cljs.core.Keyword(null, "on-click", "on-click", 1632826543)), schema.core.make_fn_schema.call(null, schema.core.Any, 
new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null))], null)], null)), schema.core.optional_key.call(null, new cljs.core.Keyword(null, "on-select", "on-select", -192407950)), schema.core.make_fn_schema.call(null, schema.core.Any, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null))], null)], null))], true, false));
om_bootstrap.button.split_STAR_$descriptor = function() {
  var descriptor__13050__auto__ = om.core.specify_state_methods_BANG_.call(null, cljs.core.clj__GT_js.call(null, om.core.pure_methods));
  descriptor__13050__auto__["mixins"] = [om_bootstrap.mixins.dropdown_mixin];
  return descriptor__13050__auto__;
}();
var component_fnk__13079__auto___19110 = function() {
  var ufv__ = schema.utils.use_fn_validation;
  var output_schema19085 = schema.core.Any;
  var input_schema19086 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, new cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "state", "state", -1988618099), schema.core.Any, new cljs.core.Keyword(null, "owner", "owner", -392611939), schema.core.Any, schema.core.Keyword, schema.core.Any], true, false), cljs.core.with_meta(new cljs.core.Symbol(null, "map19084", "map19084", -53855978, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "state", "state", -1988618099), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null), new cljs.core.Keyword(null, "owner", "owner", -392611939), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null), new cljs.core.Symbol("schema.core", "Keyword", "schema.core/Keyword", -1941817861, null), new cljs.core.Symbol("schema.core", 
  "Any", "schema.core/Any", -1891898271, null)], null)], null)))], null);
  var input_checker19087 = schema.core.checker.call(null, input_schema19086);
  var output_checker19088 = schema.core.checker.call(null, output_schema19085);
  return schema.core.schematize_fn.call(null, function(ufv__, output_schema19085, input_schema19086, input_checker19087, output_checker19088) {
    return function om_bootstrap$button$constructor19082(G__19089) {
      var validate__6953__auto__ = ufv__.get_cell();
      if (cljs.core.truth_(validate__6953__auto__)) {
        var args__6954__auto___19111 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__19089], null);
        var temp__4425__auto___19112 = input_checker19087.call(null, args__6954__auto___19111);
        if (cljs.core.truth_(temp__4425__auto___19112)) {
          var error__6955__auto___19113 = temp__4425__auto___19112;
          throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "constructor19082", "constructor19082", 1787839179, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)), cljs.core.pr_str.call(null, error__6955__auto___19113)), new cljs.core.PersistentArrayMap(null, 
          4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema19086, new cljs.core.Keyword(null, "value", "value", 305978217), args__6954__auto___19111, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___19113], null));
        } else {
        }
      } else {
      }
      var o__6956__auto__ = function() {
        var map19084 = G__19089;
        while (true) {
          if (cljs.core.map_QMARK_.call(null, map19084)) {
          } else {
            throw new Error(schema.utils.format_STAR_.call(null, "fnk called on non-map: %s", map19084));
          }
          var owner = plumbing.fnk.schema.safe_get.call(null, map19084, new cljs.core.Keyword(null, "owner", "owner", -392611939), cljs.core.PersistentVector.EMPTY);
          var state = plumbing.fnk.schema.safe_get.call(null, map19084, new cljs.core.Keyword(null, "state", "state", -1988618099), cljs.core.PersistentVector.EMPTY);
          if (typeof om_bootstrap.button.t19096 !== "undefined") {
          } else {
            om_bootstrap.button.t19096 = function(output_schema19085, owner, output_checker19088, G__19089, constructor19082, input_schema19086, state, map19084, input_checker19087, ufv__, validate__6953__auto__, meta19097) {
              this.output_schema19085 = output_schema19085;
              this.owner = owner;
              this.output_checker19088 = output_checker19088;
              this.G__19089 = G__19089;
              this.constructor19082 = constructor19082;
              this.input_schema19086 = input_schema19086;
              this.state = state;
              this.map19084 = map19084;
              this.input_checker19087 = input_checker19087;
              this.ufv__ = ufv__;
              this.validate__6953__auto__ = validate__6953__auto__;
              this.meta19097 = meta19097;
              this.cljs$lang$protocol_mask$partition0$ = 393216;
              this.cljs$lang$protocol_mask$partition1$ = 0;
            };
            om_bootstrap.button.t19096.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(state, owner, validate__6953__auto__, ufv__, output_schema19085, input_schema19086, input_checker19087, output_checker19088) {
              return function(_19098, meta19097__$1) {
                var self__ = this;
                var _19098__$1 = this;
                return new om_bootstrap.button.t19096(self__.output_schema19085, self__.owner, self__.output_checker19088, self__.G__19089, self__.constructor19082, self__.input_schema19086, self__.state, self__.map19084, self__.input_checker19087, self__.ufv__, self__.validate__6953__auto__, meta19097__$1);
              };
            }(state, owner, validate__6953__auto__, ufv__, output_schema19085, input_schema19086, input_checker19087, output_checker19088);
            om_bootstrap.button.t19096.prototype.cljs$core$IMeta$_meta$arity$1 = function(state, owner, validate__6953__auto__, ufv__, output_schema19085, input_schema19086, input_checker19087, output_checker19088) {
              return function(_19098) {
                var self__ = this;
                var _19098__$1 = this;
                return self__.meta19097;
              };
            }(state, owner, validate__6953__auto__, ufv__, output_schema19085, input_schema19086, input_checker19087, output_checker19088);
            om_bootstrap.button.t19096.prototype.om$core$IDisplayName$ = true;
            om_bootstrap.button.t19096.prototype.om$core$IDisplayName$display_name$arity$1 = function(state, owner, validate__6953__auto__, ufv__, output_schema19085, input_schema19086, input_checker19087, output_checker19088) {
              return function(_) {
                var self__ = this;
                var ___$1 = this;
                return "split*";
              };
            }(state, owner, validate__6953__auto__, ufv__, output_schema19085, input_schema19086, input_checker19087, output_checker19088);
            om_bootstrap.button.t19096.prototype.om$core$IRender$ = true;
            om_bootstrap.button.t19096.prototype.om$core$IRender$render$arity$1 = function(state, owner, validate__6953__auto__, ufv__, output_schema19085, input_schema19086, input_checker19087, output_checker19088) {
              return function(_) {
                var self__ = this;
                var ___$1 = this;
                var open_QMARK_ = self__.owner["isDropdownOpen"].call(null);
                var map__19099 = om.core.get_props.call(null, self__.owner);
                var map__19099__$1 = (!(map__19099 == null) ? map__19099.cljs$lang$protocol_mask$partition0$ & 64 || map__19099.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__19099) : map__19099;
                var opts = cljs.core.get.call(null, map__19099__$1, new cljs.core.Keyword(null, "opts", "opts", 155075701));
                var children = cljs.core.get.call(null, map__19099__$1, new cljs.core.Keyword(null, "children", "children", -940561982));
                var vec__19100 = om_bootstrap.types.separate.call(null, om_bootstrap.button.SplitButton, opts, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "dropdown-title", "dropdown-title", 1850134238), "Toggle dropdown"], null));
                var bs = cljs.core.nth.call(null, vec__19100, 0, null);
                var props = cljs.core.nth.call(null, vec__19100, 1, null);
                var set_dropdown = self__.owner["setDropdownState"];
                var btn_props = cljs.core.partial.call(null, om_bootstrap.util.merge_props, cljs.core.dissoc.call(null, opts, new cljs.core.Keyword(null, "title", "title", 636505583), new cljs.core.Keyword(null, "id", "id", -1388402092)));
                var btn = om_bootstrap.button.button.call(null, btn_props.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ref", "ref", 1289896967), "button", new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), function(open_QMARK_, map__19099, map__19099__$1, opts, children, vec__19100, bs, props, set_dropdown, btn_props, ___$1, state, owner, validate__6953__auto__, ufv__, output_schema19085, input_schema19086, input_checker19087, output_checker19088) {
                  return function(e) {
                    if (cljs.core.truth_(open_QMARK_)) {
                      set_dropdown.call(null, false);
                    } else {
                    }
                    var temp__4425__auto__ = (new cljs.core.Keyword(null, "on-click", "on-click", 1632826543)).cljs$core$IFn$_invoke$arity$1(bs);
                    if (cljs.core.truth_(temp__4425__auto__)) {
                      var f = temp__4425__auto__;
                      return f.call(null, e);
                    } else {
                      return null;
                    }
                  };
                }(open_QMARK_, map__19099, map__19099__$1, opts, children, vec__19100, bs, props, set_dropdown, btn_props, ___$1, state, owner, validate__6953__auto__, ufv__, output_schema19085, input_schema19086, input_checker19087, output_checker19088)], null)), (new cljs.core.Keyword(null, "title", "title", 636505583)).cljs$core$IFn$_invoke$arity$1(bs));
                var drop_btn = om_bootstrap.button.button.call(null, btn_props.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "ref", "ref", 1289896967), "dropdownButton", new cljs.core.Keyword(null, "class", "class", -2030961996), "dropdown-toggle", new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), function(open_QMARK_, map__19099, map__19099__$1, opts, children, vec__19100, bs, props, set_dropdown, btn_props, btn, ___$1, state, owner, validate__6953__auto__, 
                ufv__, output_schema19085, input_schema19086, input_checker19087, output_checker19088) {
                  return function(e) {
                    e.preventDefault();
                    return set_dropdown.call(null, cljs.core.not.call(null, open_QMARK_));
                  };
                }(open_QMARK_, map__19099, map__19099__$1, opts, children, vec__19100, bs, props, set_dropdown, btn_props, btn, ___$1, state, owner, validate__6953__auto__, ufv__, output_schema19085, input_schema19086, input_checker19087, output_checker19088)], null)), cljs.core.apply.call(null, React.DOM.span, {"className":"sr-only"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "dropdown-title", "dropdown-title", 
                1850134238)).cljs$core$IFn$_invoke$arity$1(bs)], null))), React.DOM.span({"className":"caret"}));
                var menu = om_bootstrap.button.dropdown_menu.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "ref", "ref", 1289896967), "menu", new cljs.core.Keyword(null, "aria-labelledby", "aria-labelledby", 1817118667), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(props), new cljs.core.Keyword(null, "pull-right?", "pull-right?", 5308493), (new cljs.core.Keyword(null, "pull-right?", "pull-right?", 5308493)).cljs$core$IFn$_invoke$arity$1(bs), 
                new cljs.core.Keyword(null, "on-select", "on-select", -192407950), function(open_QMARK_, map__19099, map__19099__$1, opts, children, vec__19100, bs, props, set_dropdown, btn_props, btn, drop_btn, ___$1, state, owner, validate__6953__auto__, ufv__, output_schema19085, input_schema19086, input_checker19087, output_checker19088) {
                  return function(k) {
                    var temp__4425__auto___19114 = (new cljs.core.Keyword(null, "on-select", "on-select", -192407950)).cljs$core$IFn$_invoke$arity$1(bs);
                    if (cljs.core.truth_(temp__4425__auto___19114)) {
                      var f_19115 = temp__4425__auto___19114;
                      f_19115.call(null, k);
                    } else {
                    }
                    return set_dropdown.call(null, false);
                  };
                }(open_QMARK_, map__19099, map__19099__$1, opts, children, vec__19100, bs, props, set_dropdown, btn_props, btn, drop_btn, ___$1, state, owner, validate__6953__auto__, ufv__, output_schema19085, input_schema19086, input_checker19087, output_checker19088)], null), children);
                return om_bootstrap.button.button_group.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "bs-size", "bs-size", 1567732754), (new cljs.core.Keyword(null, "bs-size", "bs-size", 1567732754)).cljs$core$IFn$_invoke$arity$1(bs), new cljs.core.Keyword(null, "id", "id", -1388402092), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(props), new cljs.core.Keyword(null, "class", "class", -2030961996), om_tools.dom.class_set.call(null, 
                new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "open", "open", -1763596448), open_QMARK_, new cljs.core.Keyword(null, "dropup", "dropup", -1031053231), (new cljs.core.Keyword(null, "dropup?", "dropup?", -1170011428)).cljs$core$IFn$_invoke$arity$1(bs)], null))], null), btn, drop_btn, menu);
              };
            }(state, owner, validate__6953__auto__, ufv__, output_schema19085, input_schema19086, input_checker19087, output_checker19088);
            om_bootstrap.button.t19096.getBasis = function(state, owner, validate__6953__auto__, ufv__, output_schema19085, input_schema19086, input_checker19087, output_checker19088) {
              return function() {
                return new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "output-schema19085", "output-schema19085", -368557981, null), cljs.core.with_meta(new cljs.core.Symbol(null, "owner", "owner", 1247919588, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)), new cljs.core.Symbol(null, 
                "output-checker19088", "output-checker19088", -1789579738, null), cljs.core.with_meta(new cljs.core.Symbol(null, "G__19089", "G__19089", -58061014, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "state", "state", -1988618099), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null), new cljs.core.Keyword(null, "owner", "owner", 
                -392611939), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null), new cljs.core.Symbol("schema.core", "Keyword", "schema.core/Keyword", -1941817861, null), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "constructor19082", "constructor19082", 1787839179, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), 
                new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)), new cljs.core.Symbol(null, "input-schema19086", "input-schema19086", 935396014, null), cljs.core.with_meta(new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)), new cljs.core.Symbol(null, 
                "map19084", "map19084", -53855978, null), new cljs.core.Symbol(null, "input-checker19087", "input-checker19087", 713807772, null), new cljs.core.Symbol(null, "ufv__", "ufv__", -2046207459, null), new cljs.core.Symbol(null, "validate__6953__auto__", "validate__6953__auto__", -1776384833, null), new cljs.core.Symbol(null, "meta19097", "meta19097", -721605080, null)], null);
              };
            }(state, owner, validate__6953__auto__, ufv__, output_schema19085, input_schema19086, input_checker19087, output_checker19088);
            om_bootstrap.button.t19096.cljs$lang$type = true;
            om_bootstrap.button.t19096.cljs$lang$ctorStr = "om-bootstrap.button/t19096";
            om_bootstrap.button.t19096.cljs$lang$ctorPrWriter = function(state, owner, validate__6953__auto__, ufv__, output_schema19085, input_schema19086, input_checker19087, output_checker19088) {
              return function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
                return cljs.core._write.call(null, writer__5106__auto__, "om-bootstrap.button/t19096");
              };
            }(state, owner, validate__6953__auto__, ufv__, output_schema19085, input_schema19086, input_checker19087, output_checker19088);
            om_bootstrap.button.__GT_t19096 = function(state, owner, validate__6953__auto__, ufv__, output_schema19085, input_schema19086, input_checker19087, output_checker19088) {
              return function om_bootstrap$button$constructor19082_$___GT_t19096(output_schema19085__$1, owner__$1, output_checker19088__$1, G__19089__$1, constructor19082__$1, input_schema19086__$1, state__$1, map19084__$1, input_checker19087__$1, ufv____$1, validate__6953__auto____$1, meta19097) {
                return new om_bootstrap.button.t19096(output_schema19085__$1, owner__$1, output_checker19088__$1, G__19089__$1, constructor19082__$1, input_schema19086__$1, state__$1, map19084__$1, input_checker19087__$1, ufv____$1, validate__6953__auto____$1, meta19097);
              };
            }(state, owner, validate__6953__auto__, ufv__, output_schema19085, input_schema19086, input_checker19087, output_checker19088);
          }
          return new om_bootstrap.button.t19096(output_schema19085, owner, output_checker19088, G__19089, om_bootstrap$button$constructor19082, input_schema19086, state, map19084, input_checker19087, ufv__, validate__6953__auto__, null);
          break;
        }
      }();
      if (cljs.core.truth_(validate__6953__auto__)) {
        var temp__4425__auto___19116 = output_checker19088.call(null, o__6956__auto__);
        if (cljs.core.truth_(temp__4425__auto___19116)) {
          var error__6955__auto___19117 = temp__4425__auto___19116;
          throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "constructor19082", "constructor19082", 1787839179, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)), cljs.core.pr_str.call(null, error__6955__auto___19117)), new cljs.core.PersistentArrayMap(null, 
          4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema19085, new cljs.core.Keyword(null, "value", "value", 305978217), o__6956__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___19117], null));
        } else {
        }
      } else {
      }
      return o__6956__auto__;
    };
  }(ufv__, output_schema19085, input_schema19086, input_checker19087, output_checker19088), schema.core.make_fn_schema.call(null, output_schema19085, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema19086], null)));
}();
om_bootstrap.button.split_STAR_ = function(component_fnk__13079__auto___19110) {
  return function om_bootstrap$button$split_STAR_() {
    var args__5572__auto__ = [];
    var len__5565__auto___19118 = arguments.length;
    var i__5566__auto___19119 = 0;
    while (true) {
      if (i__5566__auto___19119 < len__5565__auto___19118) {
        args__5572__auto__.push(arguments[i__5566__auto___19119]);
        var G__19120 = i__5566__auto___19119 + 1;
        i__5566__auto___19119 = G__19120;
        continue;
      } else {
      }
      break;
    }
    var argseq__5573__auto__ = 2 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(2), 0) : null;
    return om_bootstrap.button.split_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5573__auto__);
  };
}(component_fnk__13079__auto___19110);
om_bootstrap.button.split_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(component_fnk__13079__auto___19110) {
  return function(data__13080__auto__, owner19081, p__19105) {
    var vec__19106 = p__19105;
    var opts__13081__auto__ = cljs.core.nth.call(null, vec__19106, 0, null);
    return component_fnk__13079__auto___19110.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "state", "state", -1988618099), om_tools.core.state_proxy.call(null, owner19081), new cljs.core.Keyword(null, "opts", "opts", 155075701), opts__13081__auto__, new cljs.core.Keyword(null, "owner", "owner", -392611939), owner19081, new cljs.core.Keyword(null, "data", "data", -232669377), data__13080__auto__], null));
  };
}(component_fnk__13079__auto___19110);
om_bootstrap.button.split_STAR_.cljs$lang$maxFixedArity = 2;
om_bootstrap.button.split_STAR_.cljs$lang$applyTo = function(component_fnk__13079__auto___19110) {
  return function(seq19102) {
    var G__19103 = cljs.core.first.call(null, seq19102);
    var seq19102__$1 = cljs.core.next.call(null, seq19102);
    var G__19104 = cljs.core.first.call(null, seq19102__$1);
    var seq19102__$2 = cljs.core.next.call(null, seq19102__$1);
    return om_bootstrap.button.split_STAR_.cljs$core$IFn$_invoke$arity$variadic(G__19103, G__19104, seq19102__$2);
  };
}(component_fnk__13079__auto___19110);
om_bootstrap.button.__GT_split_STAR_ = function om_bootstrap$button$__GT_split_STAR_() {
  var args19107 = [];
  var len__5565__auto___19121 = arguments.length;
  var i__5566__auto___19122 = 0;
  while (true) {
    if (i__5566__auto___19122 < len__5565__auto___19121) {
      args19107.push(arguments[i__5566__auto___19122]);
      var G__19123 = i__5566__auto___19122 + 1;
      i__5566__auto___19122 = G__19123;
      continue;
    } else {
    }
    break;
  }
  var G__19109 = args19107.length;
  switch(G__19109) {
    case 1:
      return om_bootstrap.button.__GT_split_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return om_bootstrap.button.__GT_split_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args19107.length)].join(""));;
  }
};
om_bootstrap.button.__GT_split_STAR_.cljs$core$IFn$_invoke$arity$1 = function(cursor__13048__auto__) {
  return om.core.build.call(null, om_bootstrap.button.split_STAR_, cursor__13048__auto__, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "descriptor", "descriptor", 76122018), om_bootstrap.button.split_STAR_$descriptor], null));
};
om_bootstrap.button.__GT_split_STAR_.cljs$core$IFn$_invoke$arity$2 = function(cursor__13048__auto__, m19083) {
  return om.core.build.call(null, om_bootstrap.button.split_STAR_, cursor__13048__auto__, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "descriptor", "descriptor", 76122018), om_bootstrap.button.split_STAR_$descriptor], null), m19083));
};
om_bootstrap.button.__GT_split_STAR_.cljs$lang$maxFixedArity = 2;
var ufv___19133 = schema.utils.use_fn_validation;
var output_schema19125_19134 = schema.core.Any;
var input_schema19126_19135 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, om_bootstrap.button.SplitButton, cljs.core.with_meta(new cljs.core.Symbol(null, "opts", "opts", 1795607228, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol(null, "SplitButton", "SplitButton", 1856385687, null)], null))), schema.core.Any], null);
var input_checker19127_19136 = schema.core.checker.call(null, input_schema19126_19135);
var output_checker19128_19137 = schema.core.checker.call(null, output_schema19125_19134);
om_bootstrap.button.split = function(ufv___19133, output_schema19125_19134, input_schema19126_19135, input_checker19127_19136, output_checker19128_19137) {
  return function om_bootstrap$button$split() {
    var args__5572__auto__ = [];
    var len__5565__auto___19138 = arguments.length;
    var i__5566__auto___19139 = 0;
    while (true) {
      if (i__5566__auto___19139 < len__5565__auto___19138) {
        args__5572__auto__.push(arguments[i__5566__auto___19139]);
        var G__19140 = i__5566__auto___19139 + 1;
        i__5566__auto___19139 = G__19140;
        continue;
      } else {
      }
      break;
    }
    var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
    return om_bootstrap.button.split.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
  };
}(ufv___19133, output_schema19125_19134, input_schema19126_19135, input_checker19127_19136, output_checker19128_19137);
om_bootstrap.button.split.cljs$core$IFn$_invoke$arity$variadic = function(ufv___19133, output_schema19125_19134, input_schema19126_19135, input_checker19127_19136, output_checker19128_19137) {
  return function(G__19129, rest19130) {
    var validate__6953__auto__ = ufv___19133.get_cell();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var args__6954__auto___19141 = cljs.core.list_STAR_.call(null, G__19129, rest19130);
      var temp__4425__auto___19142 = input_checker19127_19136.call(null, args__6954__auto___19141);
      if (cljs.core.truth_(temp__4425__auto___19142)) {
        var error__6955__auto___19143 = temp__4425__auto___19142;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "split", "split", 1041096409, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)), cljs.core.pr_str.call(null, error__6955__auto___19143)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, 
        "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema19126_19135, new cljs.core.Keyword(null, "value", "value", 305978217), args__6954__auto___19141, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___19143], null));
      } else {
      }
    } else {
    }
    var o__6956__auto__ = function() {
      var opts = G__19129;
      var children = rest19130;
      while (true) {
        return om_bootstrap.button.__GT_split_STAR_.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "opts", "opts", 155075701), opts, new cljs.core.Keyword(null, "children", "children", -940561982), children], null));
        break;
      }
    }();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var temp__4425__auto___19144 = output_checker19128_19137.call(null, o__6956__auto__);
      if (cljs.core.truth_(temp__4425__auto___19144)) {
        var error__6955__auto___19145 = temp__4425__auto___19144;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "split", "split", 1041096409, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)), cljs.core.pr_str.call(null, error__6955__auto___19145)), new cljs.core.PersistentArrayMap(null, 4, 
        [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema19125_19134, new cljs.core.Keyword(null, "value", "value", 305978217), o__6956__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___19145], null));
      } else {
      }
    } else {
    }
    return o__6956__auto__;
  };
}(ufv___19133, output_schema19125_19134, input_schema19126_19135, input_checker19127_19136, output_checker19128_19137);
om_bootstrap.button.split.cljs$lang$maxFixedArity = 1;
om_bootstrap.button.split.cljs$lang$applyTo = function(ufv___19133, output_schema19125_19134, input_schema19126_19135, input_checker19127_19136, output_checker19128_19137) {
  return function(seq19131) {
    var G__19132 = cljs.core.first.call(null, seq19131);
    var seq19131__$1 = cljs.core.next.call(null, seq19131);
    return om_bootstrap.button.split.cljs$core$IFn$_invoke$arity$variadic(G__19132, seq19131__$1);
  };
}(ufv___19133, output_schema19125_19134, input_schema19126_19135, input_checker19127_19136, output_checker19128_19137);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, om_bootstrap.button.split), schema.core.make_fn_schema.call(null, output_schema19125_19134, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema19126_19135], null)));
goog.provide("om_bootstrap.input");
goog.require("cljs.core");
goog.require("om_bootstrap.types");
goog.require("schema.core");
goog.require("om_bootstrap.util");
goog.require("om_tools.dom");
goog.require("clojure.string");
goog.require("om.core");
om_bootstrap.input.Addons = new cljs.core.PersistentArrayMap.fromArray([schema.core.optional_key.call(null, new cljs.core.Keyword(null, "addon-before", "addon-before", -500360384)), schema.core.either.call(null, schema.core.Str, om_bootstrap.types.Component), schema.core.optional_key.call(null, new cljs.core.Keyword(null, "addon-after", "addon-after", 634985306)), schema.core.either.call(null, schema.core.Str, om_bootstrap.types.Component), schema.core.optional_key.call(null, new cljs.core.Keyword(null, 
"addon-button", "addon-button", 136745317)), schema.core.either.call(null, schema.core.Str, om_bootstrap.types.Component), schema.core.optional_key.call(null, new cljs.core.Keyword(null, "addon-button-before", "addon-button-before", -143956251)), schema.core.either.call(null, schema.core.Str, om_bootstrap.types.Component), schema.core.optional_key.call(null, new cljs.core.Keyword(null, "addon-button-after", "addon-button-after", -1815680807)), schema.core.either.call(null, schema.core.Str, om_bootstrap.types.Component)], 
true, false);
om_bootstrap.input.FeedbackIcons = new cljs.core.PersistentArrayMap.fromArray([schema.core.optional_key.call(null, new cljs.core.Keyword(null, "bs-style", "bs-style", 1424423998)), schema.core.enum$.call(null, "success", "warning", "error"), schema.core.optional_key.call(null, new cljs.core.Keyword(null, "feedback?", "feedback?", -1945951821)), schema.core.Bool], true, false);
om_bootstrap.input.Input = om_bootstrap.types.bootstrap.call(null, cljs.core.merge.call(null, om_bootstrap.input.Addons, om_bootstrap.input.FeedbackIcons, new cljs.core.PersistentArrayMap.fromArray([schema.core.optional_key.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348)), schema.core.Str, schema.core.optional_key.call(null, new cljs.core.Keyword(null, "label", "label", 1718410804)), schema.core.Str, schema.core.optional_key.call(null, new cljs.core.Keyword(null, "skip-form-group?", 
"skip-form-group?", 210862261)), schema.core.named.call(null, schema.core.Bool, "DON'T render a wrapping form group?"), schema.core.optional_key.call(null, new cljs.core.Keyword(null, "help", "help", -439233446)), schema.core.Str, schema.core.optional_key.call(null, new cljs.core.Keyword(null, "group-classname", "group-classname", -610987816)), schema.core.Str, schema.core.optional_key.call(null, new cljs.core.Keyword(null, "wrapper-classname", "wrapper-classname", 1629533866)), schema.core.Str, 
schema.core.optional_key.call(null, new cljs.core.Keyword(null, "label-classname", "label-classname", -1752600212)), schema.core.Str], true, false)));
om_bootstrap.input.Radio = om_bootstrap.types.bootstrap.call(null, new cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "label", "label", 1718410804), schema.core.Str, schema.core.optional_key.call(null, new cljs.core.Keyword(null, "checked?", "checked?", 2024809091)), schema.core.Bool, schema.core.optional_key.call(null, new cljs.core.Keyword(null, "inline?", "inline?", -1674483791)), schema.core.Bool], true, false));
var ufv___18813 = schema.utils.use_fn_validation;
var output_schema18804_18814 = schema.core.Str;
var input_schema18805_18815 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, new cljs.core.PersistentArrayMap.fromArray([schema.core.either.call(null, schema.core.Str, schema.core.Keyword), schema.core.Bool], true, false), cljs.core.with_meta(new cljs.core.Symbol(null, "klasses", "klasses", -380235757, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.PersistentArrayMap.fromArray([cljs.core.list(new cljs.core.Symbol("s", 
"either", "s/either", -2144372885, null), new cljs.core.Symbol("s", "Str", "s/Str", 907974338, null), new cljs.core.Symbol("s", "Keyword", "s/Keyword", -850066400, null)), new cljs.core.Symbol("s", "Bool", "s/Bool", 195910545, null)], true, false)], null)))], null);
var input_checker18806_18816 = schema.core.checker.call(null, input_schema18805_18815);
var output_checker18807_18817 = schema.core.checker.call(null, output_schema18804_18814);
om_bootstrap.input.class_set = function(ufv___18813, output_schema18804_18814, input_schema18805_18815, input_checker18806_18816, output_checker18807_18817) {
  return function om_bootstrap$input$class_set(G__18808) {
    var validate__6953__auto__ = ufv___18813.get_cell();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var args__6954__auto___18818 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__18808], null);
      var temp__4425__auto___18819 = input_checker18806_18816.call(null, args__6954__auto___18818);
      if (cljs.core.truth_(temp__4425__auto___18819)) {
        var error__6955__auto___18820 = temp__4425__auto___18819;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "class-set", "class-set", -355600496, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("s", "Str", "s/Str", 907974338, null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Mimics the class-set behavior from React. Pass in a map of\n  potential class to Boolean; you'll get back a class string that\n  represents the final class to apply.\n\n  TODO: Use class-set from om-tools."], 
        null)), cljs.core.pr_str.call(null, error__6955__auto___18820)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema18805_18815, new cljs.core.Keyword(null, "value", "value", 305978217), args__6954__auto___18818, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___18820], 
        null));
      } else {
      }
    } else {
    }
    var o__6956__auto__ = function() {
      var klasses = G__18808;
      while (true) {
        return clojure.string.join.call(null, " ", cljs.core.mapcat.call(null, function(validate__6953__auto__, ufv___18813, output_schema18804_18814, input_schema18805_18815, input_checker18806_18816, output_checker18807_18817) {
          return function(p__18811) {
            var vec__18812 = p__18811;
            var k = cljs.core.nth.call(null, vec__18812, 0, null);
            var keep_QMARK_ = cljs.core.nth.call(null, vec__18812, 1, null);
            if (cljs.core.truth_(keep_QMARK_)) {
              return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.name.call(null, k)], null);
            } else {
              return null;
            }
          };
        }(validate__6953__auto__, ufv___18813, output_schema18804_18814, input_schema18805_18815, input_checker18806_18816, output_checker18807_18817), klasses));
        break;
      }
    }();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var temp__4425__auto___18821 = output_checker18807_18817.call(null, o__6956__auto__);
      if (cljs.core.truth_(temp__4425__auto___18821)) {
        var error__6955__auto___18822 = temp__4425__auto___18821;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "class-set", "class-set", -355600496, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("s", "Str", "s/Str", 907974338, null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Mimics the class-set behavior from React. Pass in a map of\n  potential class to Boolean; you'll get back a class string that\n  represents the final class to apply.\n\n  TODO: Use class-set from om-tools."], 
        null)), cljs.core.pr_str.call(null, error__6955__auto___18822)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema18804_18814, new cljs.core.Keyword(null, "value", "value", 305978217), o__6956__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___18822], 
        null));
      } else {
      }
    } else {
    }
    return o__6956__auto__;
  };
}(ufv___18813, output_schema18804_18814, input_schema18805_18815, input_checker18806_18816, output_checker18807_18817);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, om_bootstrap.input.class_set), schema.core.make_fn_schema.call(null, output_schema18804_18814, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema18805_18815], null)));
var ufv___18828 = schema.utils.use_fn_validation;
var output_schema18823_18829 = om_bootstrap.types.Component;
var input_schema18824_18830 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Str, cljs.core.with_meta(new cljs.core.Symbol(null, "glyph-name", "glyph-name", 350405338, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("s", "Str", "s/Str", 907974338, null)], null)))], null);
var input_checker18825_18831 = schema.core.checker.call(null, input_schema18824_18830);
var output_checker18826_18832 = schema.core.checker.call(null, output_schema18823_18829);
om_bootstrap.input.glyph = function(ufv___18828, output_schema18823_18829, input_schema18824_18830, input_checker18825_18831, output_checker18826_18832) {
  return function om_bootstrap$input$glyph(G__18827) {
    var validate__6953__auto__ = ufv___18828.get_cell();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var args__6954__auto___18833 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__18827], null);
      var temp__4425__auto___18834 = input_checker18825_18831.call(null, args__6954__auto___18833);
      if (cljs.core.truth_(temp__4425__auto___18834)) {
        var error__6955__auto___18835 = temp__4425__auto___18834;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "glyph", "glyph", -534987652, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("t", "Component", "t/Component", 1015042821, null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "To be used with :addon-before or :addon-after."], null)), cljs.core.pr_str.call(null, 
        error__6955__auto___18835)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema18824_18830, new cljs.core.Keyword(null, "value", "value", 305978217), args__6954__auto___18833, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___18835], null));
      } else {
      }
    } else {
    }
    var o__6956__auto__ = function() {
      var glyph_name = G__18827;
      while (true) {
        return React.DOM.span({"className":om_tools.dom.format_opts.call(null, [cljs.core.str("glyphicon glyphicon-"), cljs.core.str(glyph_name)].join(""))});
        break;
      }
    }();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var temp__4425__auto___18836 = output_checker18826_18832.call(null, o__6956__auto__);
      if (cljs.core.truth_(temp__4425__auto___18836)) {
        var error__6955__auto___18837 = temp__4425__auto___18836;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "glyph", "glyph", -534987652, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("t", "Component", "t/Component", 1015042821, null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "To be used with :addon-before or :addon-after."], null)), cljs.core.pr_str.call(null, 
        error__6955__auto___18837)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema18823_18829, new cljs.core.Keyword(null, "value", "value", 305978217), o__6956__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___18837], null));
      } else {
      }
    } else {
    }
    return o__6956__auto__;
  };
}(ufv___18828, output_schema18823_18829, input_schema18824_18830, input_checker18825_18831, output_checker18826_18832);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, om_bootstrap.input.glyph), schema.core.make_fn_schema.call(null, output_schema18823_18829, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema18824_18830], null)));
var ufv___18855 = schema.utils.use_fn_validation;
var output_schema18838_18856 = om_bootstrap.types.Component;
var input_schema18839_18857 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, om_bootstrap.input.FeedbackIcons, new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null))], null);
var input_checker18840_18858 = schema.core.checker.call(null, input_schema18839_18857);
var output_checker18841_18859 = schema.core.checker.call(null, output_schema18838_18856);
om_bootstrap.input.render_icon = function(ufv___18855, output_schema18838_18856, input_schema18839_18857, input_checker18840_18858, output_checker18841_18859) {
  return function om_bootstrap$input$render_icon(G__18842) {
    var validate__6953__auto__ = ufv___18855.get_cell();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var args__6954__auto___18860 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__18842], null);
      var temp__4425__auto___18861 = input_checker18840_18858.call(null, args__6954__auto___18860);
      if (cljs.core.truth_(temp__4425__auto___18861)) {
        var error__6955__auto___18862 = temp__4425__auto___18861;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "render-icon", "render-icon", 511977669, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("t", "Component", "t/Component", 1015042821, null)], null)), cljs.core.pr_str.call(null, error__6955__auto___18862)), new cljs.core.PersistentArrayMap(null, 4, 
        [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema18839_18857, new cljs.core.Keyword(null, "value", "value", 305978217), args__6954__auto___18860, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___18862], null));
      } else {
      }
    } else {
    }
    var o__6956__auto__ = function() {
      var G__18850 = G__18842;
      var map__18851 = G__18850;
      var map__18851__$1 = (!(map__18851 == null) ? map__18851.cljs$lang$protocol_mask$partition0$ & 64 || map__18851.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18851) : map__18851;
      var feedback_QMARK_ = cljs.core.get.call(null, map__18851__$1, new cljs.core.Keyword(null, "feedback?", "feedback?", -1945951821));
      var bs_style = cljs.core.get.call(null, map__18851__$1, new cljs.core.Keyword(null, "bs-style", "bs-style", 1424423998));
      var G__18850__$1 = G__18850;
      while (true) {
        var map__18853 = G__18850__$1;
        var map__18853__$1 = (!(map__18853 == null) ? map__18853.cljs$lang$protocol_mask$partition0$ & 64 || map__18853.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18853) : map__18853;
        var feedback_QMARK___$1 = cljs.core.get.call(null, map__18853__$1, new cljs.core.Keyword(null, "feedback?", "feedback?", -1945951821));
        var bs_style__$1 = cljs.core.get.call(null, map__18853__$1, new cljs.core.Keyword(null, "bs-style", "bs-style", 1424423998));
        if (cljs.core.truth_(feedback_QMARK___$1)) {
          var klasses = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "glyphicon", "glyphicon", -2083132161), true, new cljs.core.Keyword(null, "form-control-feedback", "form-control-feedback", -26248681), true, new cljs.core.Keyword(null, "glyphicon-ok", "glyphicon-ok", -980475854), cljs.core._EQ_.call(null, "success", bs_style__$1), new cljs.core.Keyword(null, "glyphicon-warning-sign", "glyphicon-warning-sign", -715964093), cljs.core._EQ_.call(null, "warning", bs_style__$1), 
          new cljs.core.Keyword(null, "glyphicon-remove", "glyphicon-remove", 16420020), cljs.core._EQ_.call(null, "error", bs_style__$1)], null);
          return React.DOM.span({"className":om_tools.dom.format_opts.call(null, om_bootstrap.input.class_set.call(null, klasses))});
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var temp__4425__auto___18863 = output_checker18841_18859.call(null, o__6956__auto__);
      if (cljs.core.truth_(temp__4425__auto___18863)) {
        var error__6955__auto___18864 = temp__4425__auto___18863;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "render-icon", "render-icon", 511977669, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("t", "Component", "t/Component", 1015042821, null)], null)), cljs.core.pr_str.call(null, error__6955__auto___18864)), new cljs.core.PersistentArrayMap(null, 4, 
        [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema18838_18856, new cljs.core.Keyword(null, "value", "value", 305978217), o__6956__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___18864], null));
      } else {
      }
    } else {
    }
    return o__6956__auto__;
  };
}(ufv___18855, output_schema18838_18856, input_schema18839_18857, input_checker18840_18858, output_checker18841_18859);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, om_bootstrap.input.render_icon), schema.core.make_fn_schema.call(null, output_schema18838_18856, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema18839_18857], null)));
var ufv___18870 = schema.utils.use_fn_validation;
var output_schema18865_18871 = schema.core.Any;
var input_schema18866_18872 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.maybe.call(null, schema.core.Str), cljs.core.with_meta(new cljs.core.Symbol(null, "help", "help", 1201298081, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), cljs.core.list(new cljs.core.Symbol("s", "maybe", "s/maybe", 1326133944, null), new cljs.core.Symbol("s", "Str", "s/Str", 907974338, 
null))], null)))], null);
var input_checker18867_18873 = schema.core.checker.call(null, input_schema18866_18872);
var output_checker18868_18874 = schema.core.checker.call(null, output_schema18865_18871);
om_bootstrap.input.render_help = function(ufv___18870, output_schema18865_18871, input_schema18866_18872, input_checker18867_18873, output_checker18868_18874) {
  return function om_bootstrap$input$render_help(G__18869) {
    var validate__6953__auto__ = ufv___18870.get_cell();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var args__6954__auto___18875 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__18869], null);
      var temp__4425__auto___18876 = input_checker18867_18873.call(null, args__6954__auto___18875);
      if (cljs.core.truth_(temp__4425__auto___18876)) {
        var error__6955__auto___18877 = temp__4425__auto___18876;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "render-help", "render-help", -1879333594, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)), cljs.core.pr_str.call(null, error__6955__auto___18877)), new cljs.core.PersistentArrayMap(null, 
        4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema18866_18872, new cljs.core.Keyword(null, "value", "value", 305978217), args__6954__auto___18875, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___18877], null));
      } else {
      }
    } else {
    }
    var o__6956__auto__ = function() {
      var help = G__18869;
      while (true) {
        if (cljs.core.truth_(help)) {
          return cljs.core.apply.call(null, React.DOM.span, {"className":"help-block"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [help], null)));
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var temp__4425__auto___18878 = output_checker18868_18874.call(null, o__6956__auto__);
      if (cljs.core.truth_(temp__4425__auto___18878)) {
        var error__6955__auto___18879 = temp__4425__auto___18878;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "render-help", "render-help", -1879333594, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)), cljs.core.pr_str.call(null, error__6955__auto___18879)), new cljs.core.PersistentArrayMap(null, 
        4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema18865_18871, new cljs.core.Keyword(null, "value", "value", 305978217), o__6956__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___18879], null));
      } else {
      }
    } else {
    }
    return o__6956__auto__;
  };
}(ufv___18870, output_schema18865_18871, input_schema18866_18872, input_checker18867_18873, output_checker18868_18874);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, om_bootstrap.input.render_help), schema.core.make_fn_schema.call(null, output_schema18865_18871, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema18866_18872], null)));
var ufv___18898 = schema.utils.use_fn_validation;
var output_schema18880_18899 = schema.core.Any;
var input_schema18881_18900 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, om_bootstrap.input.Addons, new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null)), schema.core.one.call(null, schema.core.Any, cljs.core.with_meta(new cljs.core.Symbol(null, "items", "items", -1622480831, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("s", "Any", "s/Any", 
1277490110, null)], null)))], null);
var input_checker18882_18901 = schema.core.checker.call(null, input_schema18881_18900);
var output_checker18883_18902 = schema.core.checker.call(null, output_schema18880_18899);
om_bootstrap.input.render_input_group = function(ufv___18898, output_schema18880_18899, input_schema18881_18900, input_checker18882_18901, output_checker18883_18902) {
  return function om_bootstrap$input$render_input_group(G__18884, G__18885) {
    var validate__6953__auto__ = ufv___18898.get_cell();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var args__6954__auto___18903 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__18884, G__18885], null);
      var temp__4425__auto___18904 = input_checker18882_18901.call(null, args__6954__auto___18903);
      if (cljs.core.truth_(temp__4425__auto___18904)) {
        var error__6955__auto___18905 = temp__4425__auto___18904;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "render-input-group", "render-input-group", 361721583, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Items is a vector of render instances."], 
        null)), cljs.core.pr_str.call(null, error__6955__auto___18905)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema18881_18900, new cljs.core.Keyword(null, "value", "value", 305978217), args__6954__auto___18903, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___18905], 
        null));
      } else {
      }
    } else {
    }
    var o__6956__auto__ = function() {
      var G__18893 = G__18884;
      var map__18894 = G__18893;
      var map__18894__$1 = (!(map__18894 == null) ? map__18894.cljs$lang$protocol_mask$partition0$ & 64 || map__18894.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18894) : map__18894;
      var addon_before = cljs.core.get.call(null, map__18894__$1, new cljs.core.Keyword(null, "addon-before", "addon-before", -500360384));
      var addon_after = cljs.core.get.call(null, map__18894__$1, new cljs.core.Keyword(null, "addon-after", "addon-after", 634985306));
      var addon_button = cljs.core.get.call(null, map__18894__$1, new cljs.core.Keyword(null, "addon-button", "addon-button", 136745317));
      var addon_button_before = cljs.core.get.call(null, map__18894__$1, new cljs.core.Keyword(null, "addon-button-before", "addon-button-before", -143956251));
      var addon_button_after = cljs.core.get.call(null, map__18894__$1, new cljs.core.Keyword(null, "addon-button-after", "addon-button-after", -1815680807));
      var items = G__18885;
      var G__18893__$1 = G__18893;
      var items__$1 = items;
      while (true) {
        var map__18896 = G__18893__$1;
        var map__18896__$1 = (!(map__18896 == null) ? map__18896.cljs$lang$protocol_mask$partition0$ & 64 || map__18896.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18896) : map__18896;
        var addon_before__$1 = cljs.core.get.call(null, map__18896__$1, new cljs.core.Keyword(null, "addon-before", "addon-before", -500360384));
        var addon_after__$1 = cljs.core.get.call(null, map__18896__$1, new cljs.core.Keyword(null, "addon-after", "addon-after", 634985306));
        var addon_button__$1 = cljs.core.get.call(null, map__18896__$1, new cljs.core.Keyword(null, "addon-button", "addon-button", 136745317));
        var addon_button_before__$1 = cljs.core.get.call(null, map__18896__$1, new cljs.core.Keyword(null, "addon-button-before", "addon-button-before", -143956251));
        var addon_button_after__$1 = cljs.core.get.call(null, map__18896__$1, new cljs.core.Keyword(null, "addon-button-after", "addon-button-after", -1815680807));
        var items__$2 = items__$1;
        if (cljs.core.truth_(function() {
          var or__4526__auto__ = addon_before__$1;
          if (cljs.core.truth_(or__4526__auto__)) {
            return or__4526__auto__;
          } else {
            var or__4526__auto____$1 = addon_after__$1;
            if (cljs.core.truth_(or__4526__auto____$1)) {
              return or__4526__auto____$1;
            } else {
              var or__4526__auto____$2 = addon_button__$1;
              if (cljs.core.truth_(or__4526__auto____$2)) {
                return or__4526__auto____$2;
              } else {
                var or__4526__auto____$3 = addon_button_before__$1;
                if (cljs.core.truth_(or__4526__auto____$3)) {
                  return or__4526__auto____$3;
                } else {
                  return addon_button_after__$1;
                }
              }
            }
          }
        }())) {
          return cljs.core.apply.call(null, React.DOM.div, {"className":"input-group"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.truth_(addon_before__$1) ? cljs.core.apply.call(null, React.DOM.span, {"className":"input-group-addon"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [addon_before__$1], null))) : null, cljs.core.truth_(addon_button_before__$1) ? 
          cljs.core.apply.call(null, React.DOM.span, {"className":"input-group-btn"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [addon_button_before__$1], null))) : null, items__$2, cljs.core.truth_(addon_after__$1) ? cljs.core.apply.call(null, React.DOM.span, {"className":"input-group-addon"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [addon_after__$1], null))) : 
          null, cljs.core.truth_(addon_button__$1) ? cljs.core.apply.call(null, React.DOM.span, {"className":"input-group-btn"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [addon_button__$1], null))) : null, cljs.core.truth_(addon_button_after__$1) ? cljs.core.apply.call(null, React.DOM.span, {"className":"input-group-btn"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
          [addon_button_after__$1], null))) : null], null)));
        } else {
          return items__$2;
        }
        break;
      }
    }();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var temp__4425__auto___18906 = output_checker18883_18902.call(null, o__6956__auto__);
      if (cljs.core.truth_(temp__4425__auto___18906)) {
        var error__6955__auto___18907 = temp__4425__auto___18906;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "render-input-group", "render-input-group", 361721583, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Items is a vector of render instances."], 
        null)), cljs.core.pr_str.call(null, error__6955__auto___18907)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema18880_18899, new cljs.core.Keyword(null, "value", "value", 305978217), o__6956__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___18907], 
        null));
      } else {
      }
    } else {
    }
    return o__6956__auto__;
  };
}(ufv___18898, output_schema18880_18899, input_schema18881_18900, input_checker18882_18901, output_checker18883_18902);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, om_bootstrap.input.render_input_group), schema.core.make_fn_schema.call(null, output_schema18880_18899, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema18881_18900], null)));
var ufv___18925 = schema.utils.use_fn_validation;
var output_schema18908_18926 = schema.core.Bool;
var input_schema18909_18927 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, om_bootstrap.input.Input, new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null))], null);
var input_checker18910_18928 = schema.core.checker.call(null, input_schema18909_18927);
var output_checker18911_18929 = schema.core.checker.call(null, output_schema18908_18926);
om_bootstrap.input.checkbox_or_radio_QMARK_ = function(ufv___18925, output_schema18908_18926, input_schema18909_18927, input_checker18910_18928, output_checker18911_18929) {
  return function om_bootstrap$input$checkbox_or_radio_QMARK_(G__18912) {
    var validate__6953__auto__ = ufv___18925.get_cell();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var args__6954__auto___18930 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__18912], null);
      var temp__4425__auto___18931 = input_checker18910_18928.call(null, args__6954__auto___18930);
      if (cljs.core.truth_(temp__4425__auto___18931)) {
        var error__6955__auto___18932 = temp__4425__auto___18931;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "checkbox-or-radio?", "checkbox-or-radio?", -1047589288, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("s", "Bool", "s/Bool", 195910545, null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns true if the supplied input is of type checkbox or radio,\n  false otherwise."], 
        null)), cljs.core.pr_str.call(null, error__6955__auto___18932)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema18909_18927, new cljs.core.Keyword(null, "value", "value", 305978217), args__6954__auto___18930, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___18932], 
        null));
      } else {
      }
    } else {
    }
    var o__6956__auto__ = function() {
      var G__18920 = G__18912;
      var map__18921 = G__18920;
      var map__18921__$1 = (!(map__18921 == null) ? map__18921.cljs$lang$protocol_mask$partition0$ & 64 || map__18921.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18921) : map__18921;
      var type = cljs.core.get.call(null, map__18921__$1, new cljs.core.Keyword(null, "type", "type", 1174270348));
      var G__18920__$1 = G__18920;
      while (true) {
        var map__18923 = G__18920__$1;
        var map__18923__$1 = (!(map__18923 == null) ? map__18923.cljs$lang$protocol_mask$partition0$ & 64 || map__18923.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18923) : map__18923;
        var type__$1 = cljs.core.get.call(null, map__18923__$1, new cljs.core.Keyword(null, "type", "type", 1174270348));
        return cljs.core._EQ_.call(null, type__$1, "checkbox") || cljs.core._EQ_.call(null, type__$1, "radio");
        break;
      }
    }();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var temp__4425__auto___18933 = output_checker18911_18929.call(null, o__6956__auto__);
      if (cljs.core.truth_(temp__4425__auto___18933)) {
        var error__6955__auto___18934 = temp__4425__auto___18933;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "checkbox-or-radio?", "checkbox-or-radio?", -1047589288, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("s", "Bool", "s/Bool", 195910545, null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns true if the supplied input is of type checkbox or radio,\n  false otherwise."], 
        null)), cljs.core.pr_str.call(null, error__6955__auto___18934)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema18908_18926, new cljs.core.Keyword(null, "value", "value", 305978217), o__6956__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___18934], 
        null));
      } else {
      }
    } else {
    }
    return o__6956__auto__;
  };
}(ufv___18925, output_schema18908_18926, input_schema18909_18927, input_checker18910_18928, output_checker18911_18929);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, om_bootstrap.input.checkbox_or_radio_QMARK_), schema.core.make_fn_schema.call(null, output_schema18908_18926, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema18909_18927], null)));
var ufv___18953 = schema.utils.use_fn_validation;
var output_schema18935_18954 = om_bootstrap.types.Component;
var input_schema18936_18955 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, om_bootstrap.input.Input, new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null)), schema.core.one.call(null, schema.core.Any, cljs.core.with_meta(new cljs.core.Symbol(null, "children", "children", 699969545, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", 
"Any", "schema.core/Any", -1891898271, null)], null)))], null);
var input_checker18937_18956 = schema.core.checker.call(null, input_schema18936_18955);
var output_checker18938_18957 = schema.core.checker.call(null, output_schema18935_18954);
om_bootstrap.input.checkbox_or_radio_wrapper = function(ufv___18953, output_schema18935_18954, input_schema18936_18955, input_checker18937_18956, output_checker18938_18957) {
  return function om_bootstrap$input$checkbox_or_radio_wrapper(G__18939, G__18940) {
    var validate__6953__auto__ = ufv___18953.get_cell();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var args__6954__auto___18958 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__18939, G__18940], null);
      var temp__4425__auto___18959 = input_checker18937_18956.call(null, args__6954__auto___18958);
      if (cljs.core.truth_(temp__4425__auto___18959)) {
        var error__6955__auto___18960 = temp__4425__auto___18959;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "checkbox-or-radio-wrapper", "checkbox-or-radio-wrapper", -964759132, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("t", "Component", "t/Component", 1015042821, null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Wraps this business in a div."], 
        null)), cljs.core.pr_str.call(null, error__6955__auto___18960)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema18936_18955, new cljs.core.Keyword(null, "value", "value", 305978217), args__6954__auto___18958, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___18960], 
        null));
      } else {
      }
    } else {
    }
    var o__6956__auto__ = function() {
      var G__18948 = G__18939;
      var map__18949 = G__18948;
      var map__18949__$1 = (!(map__18949 == null) ? map__18949.cljs$lang$protocol_mask$partition0$ & 64 || map__18949.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18949) : map__18949;
      var type = cljs.core.get.call(null, map__18949__$1, new cljs.core.Keyword(null, "type", "type", 1174270348));
      var children = G__18940;
      var G__18948__$1 = G__18948;
      var children__$1 = children;
      while (true) {
        var map__18951 = G__18948__$1;
        var map__18951__$1 = (!(map__18951 == null) ? map__18951.cljs$lang$protocol_mask$partition0$ & 64 || map__18951.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18951) : map__18951;
        var type__$1 = cljs.core.get.call(null, map__18951__$1, new cljs.core.Keyword(null, "type", "type", 1174270348));
        var children__$2 = children__$1;
        var klasses = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "checkbox", "checkbox", 1612615655), cljs.core._EQ_.call(null, "checkbox", type__$1), new cljs.core.Keyword(null, "radio", "radio", 1323726374), cljs.core._EQ_.call(null, "radio", type__$1)], null);
        return cljs.core.apply.call(null, React.DOM.div, {"className":om_tools.dom.format_opts.call(null, om_bootstrap.input.class_set.call(null, klasses))}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [children__$2], null)));
        break;
      }
    }();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var temp__4425__auto___18961 = output_checker18938_18957.call(null, o__6956__auto__);
      if (cljs.core.truth_(temp__4425__auto___18961)) {
        var error__6955__auto___18962 = temp__4425__auto___18961;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "checkbox-or-radio-wrapper", "checkbox-or-radio-wrapper", -964759132, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("t", "Component", "t/Component", 1015042821, null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Wraps this business in a div."], 
        null)), cljs.core.pr_str.call(null, error__6955__auto___18962)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema18935_18954, new cljs.core.Keyword(null, "value", "value", 305978217), o__6956__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___18962], 
        null));
      } else {
      }
    } else {
    }
    return o__6956__auto__;
  };
}(ufv___18953, output_schema18935_18954, input_schema18936_18955, input_checker18937_18956, output_checker18938_18957);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, om_bootstrap.input.checkbox_or_radio_wrapper), schema.core.make_fn_schema.call(null, output_schema18935_18954, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema18936_18955], null)));
var ufv___18982 = schema.utils.use_fn_validation;
var output_schema18963_18983 = schema.core.Any;
var input_schema18964_18984 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, om_bootstrap.input.Input, cljs.core.with_meta(new cljs.core.Symbol(null, "input", "input", -2097503808, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol(null, "Input", "Input", 1777023215, null)], null)))], null);
var input_schema18968_18985 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, om_bootstrap.input.Input, new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null)), schema.core.one.call(null, schema.core.Any, cljs.core.with_meta(new cljs.core.Symbol(null, "child", "child", -2030468224, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", 
"schema.core/Any", -1891898271, null)], null)))], null);
var input_checker18965_18986 = schema.core.checker.call(null, input_schema18964_18984);
var output_checker18966_18987 = schema.core.checker.call(null, output_schema18963_18983);
var input_checker18969_18988 = schema.core.checker.call(null, input_schema18968_18985);
var output_checker18970_18989 = schema.core.checker.call(null, output_schema18963_18983);
om_bootstrap.input.render_label = function(ufv___18982, output_schema18963_18983, input_schema18964_18984, input_schema18968_18985, input_checker18965_18986, output_checker18966_18987, input_checker18969_18988, output_checker18970_18989) {
  return function om_bootstrap$input$render_label() {
    var args18973 = [];
    var len__5565__auto___18990 = arguments.length;
    var i__5566__auto___18991 = 0;
    while (true) {
      if (i__5566__auto___18991 < len__5565__auto___18990) {
        args18973.push(arguments[i__5566__auto___18991]);
        var G__18992 = i__5566__auto___18991 + 1;
        i__5566__auto___18991 = G__18992;
        continue;
      } else {
      }
      break;
    }
    var G__18975 = args18973.length;
    switch(G__18975) {
      case 1:
        return om_bootstrap.input.render_label.cljs$core$IFn$_invoke$arity$1(arguments[0]);
        break;
      case 2:
        return om_bootstrap.input.render_label.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
        break;
      default:
        throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args18973.length)].join(""));;
    }
  };
}(ufv___18982, output_schema18963_18983, input_schema18964_18984, input_schema18968_18985, input_checker18965_18986, output_checker18966_18987, input_checker18969_18988, output_checker18970_18989);
om_bootstrap.input.render_label.cljs$core$IFn$_invoke$arity$1 = function(ufv___18982, output_schema18963_18983, input_schema18964_18984, input_schema18968_18985, input_checker18965_18986, output_checker18966_18987, input_checker18969_18988, output_checker18970_18989) {
  return function(G__18967) {
    var validate__6953__auto__ = ufv___18982.get_cell();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var args__6954__auto___18994 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__18967], null);
      var temp__4425__auto___18995 = input_checker18965_18986.call(null, args__6954__auto___18994);
      if (cljs.core.truth_(temp__4425__auto___18995)) {
        var error__6955__auto___18996 = temp__4425__auto___18995;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "render-label", "render-label", -2019535210, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "This doesn't handle any control group stuff."], 
        null)), cljs.core.pr_str.call(null, error__6955__auto___18996)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema18964_18984, new cljs.core.Keyword(null, "value", "value", 305978217), args__6954__auto___18994, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___18996], 
        null));
      } else {
      }
    } else {
    }
    var o__6956__auto__ = function() {
      var input = G__18967;
      while (true) {
        return om_bootstrap.input.render_label.call(null, input, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var temp__4425__auto___18997 = output_checker18966_18987.call(null, o__6956__auto__);
      if (cljs.core.truth_(temp__4425__auto___18997)) {
        var error__6955__auto___18998 = temp__4425__auto___18997;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "render-label", "render-label", -2019535210, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "This doesn't handle any control group stuff."], 
        null)), cljs.core.pr_str.call(null, error__6955__auto___18998)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema18963_18983, new cljs.core.Keyword(null, "value", "value", 305978217), o__6956__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___18998], 
        null));
      } else {
      }
    } else {
    }
    return o__6956__auto__;
  };
}(ufv___18982, output_schema18963_18983, input_schema18964_18984, input_schema18968_18985, input_checker18965_18986, output_checker18966_18987, input_checker18969_18988, output_checker18970_18989);
om_bootstrap.input.render_label.cljs$core$IFn$_invoke$arity$2 = function(ufv___18982, output_schema18963_18983, input_schema18964_18984, input_schema18968_18985, input_checker18965_18986, output_checker18966_18987, input_checker18969_18988, output_checker18970_18989) {
  return function(G__18971, G__18972) {
    var validate__6953__auto__ = ufv___18982.get_cell();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var args__6954__auto___18999 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__18971, G__18972], null);
      var temp__4425__auto___19000 = input_checker18969_18988.call(null, args__6954__auto___18999);
      if (cljs.core.truth_(temp__4425__auto___19000)) {
        var error__6955__auto___19001 = temp__4425__auto___19000;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "render-label", "render-label", -2019535210, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "This doesn't handle any control group stuff."], 
        null)), cljs.core.pr_str.call(null, error__6955__auto___19001)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema18968_18985, new cljs.core.Keyword(null, "value", "value", 305978217), args__6954__auto___18999, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___19001], 
        null));
      } else {
      }
    } else {
    }
    var o__6956__auto__ = function() {
      var G__18977 = G__18971;
      var map__18978 = G__18977;
      var map__18978__$1 = (!(map__18978 == null) ? map__18978.cljs$lang$protocol_mask$partition0$ & 64 || map__18978.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18978) : map__18978;
      var input = map__18978__$1;
      var lc = cljs.core.get.call(null, map__18978__$1, new cljs.core.Keyword(null, "label-classname", "label-classname", -1752600212));
      var label = cljs.core.get.call(null, map__18978__$1, new cljs.core.Keyword(null, "label", "label", 1718410804));
      var child = G__18972;
      var G__18977__$1 = G__18977;
      var child__$1 = child;
      while (true) {
        var map__18980 = G__18977__$1;
        var map__18980__$1 = (!(map__18980 == null) ? map__18980.cljs$lang$protocol_mask$partition0$ & 64 || map__18980.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18980) : map__18980;
        var input__$1 = map__18980__$1;
        var lc__$1 = cljs.core.get.call(null, map__18980__$1, new cljs.core.Keyword(null, "label-classname", "label-classname", -1752600212));
        var label__$1 = cljs.core.get.call(null, map__18980__$1, new cljs.core.Keyword(null, "label", "label", 1718410804));
        var child__$2 = child__$1;
        var classes = cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "control-label", "control-label", 1226436372), cljs.core.not.call(null, om_bootstrap.input.checkbox_or_radio_QMARK_.call(null, input__$1))], null), cljs.core.truth_(lc__$1) ? new cljs.core.PersistentArrayMap.fromArray([lc__$1, cljs.core.boolean$.call(null, lc__$1)], true, false) : null);
        if (cljs.core.truth_(label__$1)) {
          return cljs.core.apply.call(null, React.DOM.label, {"className":om_tools.dom.format_opts.call(null, om_bootstrap.input.class_set.call(null, classes))}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [child__$2, label__$1], null)));
        } else {
          return child__$2;
        }
        break;
      }
    }();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var temp__4425__auto___19002 = output_checker18970_18989.call(null, o__6956__auto__);
      if (cljs.core.truth_(temp__4425__auto___19002)) {
        var error__6955__auto___19003 = temp__4425__auto___19002;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "render-label", "render-label", -2019535210, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "This doesn't handle any control group stuff."], 
        null)), cljs.core.pr_str.call(null, error__6955__auto___19003)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema18963_18983, new cljs.core.Keyword(null, "value", "value", 305978217), o__6956__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___19003], 
        null));
      } else {
      }
    } else {
    }
    return o__6956__auto__;
  };
}(ufv___18982, output_schema18963_18983, input_schema18964_18984, input_schema18968_18985, input_checker18965_18986, output_checker18966_18987, input_checker18969_18988, output_checker18970_18989);
om_bootstrap.input.render_label.cljs$lang$maxFixedArity = 2;
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, om_bootstrap.input.render_label), schema.core.make_fn_schema.call(null, output_schema18963_18983, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema18964_18984, input_schema18968_18985], null)));
var ufv___19022 = schema.utils.use_fn_validation;
var output_schema19004_19023 = schema.core.Any;
var input_schema19005_19024 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, om_bootstrap.input.Input, new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null)), schema.core.one.call(null, schema.core.Any, cljs.core.with_meta(new cljs.core.Symbol(null, "child", "child", -2030468224, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", 
"schema.core/Any", -1891898271, null)], null)))], null);
var input_checker19006_19025 = schema.core.checker.call(null, input_schema19005_19024);
var output_checker19007_19026 = schema.core.checker.call(null, output_schema19004_19023);
om_bootstrap.input.render_wrapper = function(ufv___19022, output_schema19004_19023, input_schema19005_19024, input_checker19006_19025, output_checker19007_19026) {
  return function om_bootstrap$input$render_wrapper(G__19008, G__19009) {
    var validate__6953__auto__ = ufv___19022.get_cell();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var args__6954__auto___19027 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__19008, G__19009], null);
      var temp__4425__auto___19028 = input_checker19006_19025.call(null, args__6954__auto___19027);
      if (cljs.core.truth_(temp__4425__auto___19028)) {
        var error__6955__auto___19029 = temp__4425__auto___19028;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "render-wrapper", "render-wrapper", 79817165, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)), cljs.core.pr_str.call(null, error__6955__auto___19029)), new cljs.core.PersistentArrayMap(null, 
        4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema19005_19024, new cljs.core.Keyword(null, "value", "value", 305978217), args__6954__auto___19027, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___19029], null));
      } else {
      }
    } else {
    }
    var o__6956__auto__ = function() {
      var G__19017 = G__19008;
      var map__19018 = G__19017;
      var map__19018__$1 = (!(map__19018 == null) ? map__19018.cljs$lang$protocol_mask$partition0$ & 64 || map__19018.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__19018) : map__19018;
      var wc = cljs.core.get.call(null, map__19018__$1, new cljs.core.Keyword(null, "wrapper-classname", "wrapper-classname", 1629533866));
      var child = G__19009;
      var G__19017__$1 = G__19017;
      var child__$1 = child;
      while (true) {
        var map__19020 = G__19017__$1;
        var map__19020__$1 = (!(map__19020 == null) ? map__19020.cljs$lang$protocol_mask$partition0$ & 64 || map__19020.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__19020) : map__19020;
        var wc__$1 = cljs.core.get.call(null, map__19020__$1, new cljs.core.Keyword(null, "wrapper-classname", "wrapper-classname", 1629533866));
        var child__$2 = child__$1;
        if (cljs.core.truth_(wc__$1)) {
          return cljs.core.apply.call(null, React.DOM.div, {"className":om_tools.dom.format_opts.call(null, wc__$1)}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [child__$2], null)));
        } else {
          return child__$2;
        }
        break;
      }
    }();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var temp__4425__auto___19030 = output_checker19007_19026.call(null, o__6956__auto__);
      if (cljs.core.truth_(temp__4425__auto___19030)) {
        var error__6955__auto___19031 = temp__4425__auto___19030;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "render-wrapper", "render-wrapper", 79817165, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)), cljs.core.pr_str.call(null, error__6955__auto___19031)), new cljs.core.PersistentArrayMap(null, 
        4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema19004_19023, new cljs.core.Keyword(null, "value", "value", 305978217), o__6956__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___19031], null));
      } else {
      }
    } else {
    }
    return o__6956__auto__;
  };
}(ufv___19022, output_schema19004_19023, input_schema19005_19024, input_checker19006_19025, output_checker19007_19026);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, om_bootstrap.input.render_wrapper), schema.core.make_fn_schema.call(null, output_schema19004_19023, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema19005_19024], null)));
var ufv___19050 = schema.utils.use_fn_validation;
var output_schema19032_19051 = om_bootstrap.types.Component;
var input_schema19033_19052 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, om_bootstrap.input.Input, new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null)), schema.core.one.call(null, schema.core.Any, cljs.core.with_meta(new cljs.core.Symbol(null, "children", "children", 699969545, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", 
"Any", "schema.core/Any", -1891898271, null)], null)))], null);
var input_checker19034_19053 = schema.core.checker.call(null, input_schema19033_19052);
var output_checker19035_19054 = schema.core.checker.call(null, output_schema19032_19051);
om_bootstrap.input.render_form_group = function(ufv___19050, output_schema19032_19051, input_schema19033_19052, input_checker19034_19053, output_checker19035_19054) {
  return function om_bootstrap$input$render_form_group(G__19036, G__19037) {
    var validate__6953__auto__ = ufv___19050.get_cell();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var args__6954__auto___19055 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__19036, G__19037], null);
      var temp__4425__auto___19056 = input_checker19034_19053.call(null, args__6954__auto___19055);
      if (cljs.core.truth_(temp__4425__auto___19056)) {
        var error__6955__auto___19057 = temp__4425__auto___19056;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "render-form-group", "render-form-group", 2039718866, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("t", "Component", "t/Component", 1015042821, null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Wraps the entire form group."], null)), 
        cljs.core.pr_str.call(null, error__6955__auto___19057)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema19033_19052, new cljs.core.Keyword(null, "value", "value", 305978217), args__6954__auto___19055, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___19057], 
        null));
      } else {
      }
    } else {
    }
    var o__6956__auto__ = function() {
      var G__19045 = G__19036;
      var map__19046 = G__19045;
      var map__19046__$1 = (!(map__19046 == null) ? map__19046.cljs$lang$protocol_mask$partition0$ & 64 || map__19046.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__19046) : map__19046;
      var input = map__19046__$1;
      var bs_style = cljs.core.get.call(null, map__19046__$1, new cljs.core.Keyword(null, "bs-style", "bs-style", 1424423998));
      var cn = cljs.core.get.call(null, map__19046__$1, new cljs.core.Keyword(null, "group-classname", "group-classname", -610987816));
      var children = G__19037;
      var G__19045__$1 = G__19045;
      var children__$1 = children;
      while (true) {
        var map__19048 = G__19045__$1;
        var map__19048__$1 = (!(map__19048 == null) ? map__19048.cljs$lang$protocol_mask$partition0$ & 64 || map__19048.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__19048) : map__19048;
        var input__$1 = map__19048__$1;
        var bs_style__$1 = cljs.core.get.call(null, map__19048__$1, new cljs.core.Keyword(null, "bs-style", "bs-style", 1424423998));
        var cn__$1 = cljs.core.get.call(null, map__19048__$1, new cljs.core.Keyword(null, "group-classname", "group-classname", -610987816));
        var children__$2 = children__$1;
        var classes = cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "form-group", "form-group", -267875328), cljs.core.not.call(null, (new cljs.core.Keyword(null, "skip-form-group?", "skip-form-group?", 210862261)).cljs$core$IFn$_invoke$arity$1(input__$1)), new cljs.core.Keyword(null, "has-feedback", "has-feedback", 1328001802), cljs.core.boolean$.call(null, (new cljs.core.Keyword(null, "feedback?", "feedback?", -1945951821)).cljs$core$IFn$_invoke$arity$1(input__$1)), 
        new cljs.core.Keyword(null, "has-success", "has-success", 685004255), cljs.core._EQ_.call(null, "success", bs_style__$1), new cljs.core.Keyword(null, "has-warning", "has-warning", 1993894136), cljs.core._EQ_.call(null, "warning", bs_style__$1), new cljs.core.Keyword(null, "has-error", "has-error", -786302929), cljs.core._EQ_.call(null, "error", bs_style__$1)], null), cljs.core.truth_(cn__$1) ? new cljs.core.PersistentArrayMap.fromArray([cn__$1, cljs.core.boolean$.call(null, cn__$1)], true, 
        false) : null);
        return cljs.core.apply.call(null, React.DOM.div, {"className":om_tools.dom.format_opts.call(null, om_bootstrap.input.class_set.call(null, classes))}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [children__$2], null)));
        break;
      }
    }();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var temp__4425__auto___19058 = output_checker19035_19054.call(null, o__6956__auto__);
      if (cljs.core.truth_(temp__4425__auto___19058)) {
        var error__6955__auto___19059 = temp__4425__auto___19058;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "render-form-group", "render-form-group", 2039718866, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("t", "Component", "t/Component", 1015042821, null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Wraps the entire form group."], null)), 
        cljs.core.pr_str.call(null, error__6955__auto___19059)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema19032_19051, new cljs.core.Keyword(null, "value", "value", 305978217), o__6956__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___19059], null));
      } else {
      }
    } else {
    }
    return o__6956__auto__;
  };
}(ufv___19050, output_schema19032_19051, input_schema19033_19052, input_checker19034_19053, output_checker19035_19054);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, om_bootstrap.input.render_form_group), schema.core.make_fn_schema.call(null, output_schema19032_19051, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema19033_19052], null)));
var ufv___19069 = schema.utils.use_fn_validation;
var output_schema19060_19070 = om_bootstrap.types.Component;
var input_schema19061_19071 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, om_bootstrap.input.Input, cljs.core.with_meta(new cljs.core.Symbol(null, "input", "input", -2097503808, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol(null, "Input", "Input", 1777023215, null)], null))), schema.core.one.call(null, schema.core.Any, cljs.core.with_meta(new cljs.core.Symbol(null, 
"attrs", "attrs", -450137186, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null))), schema.core.one.call(null, schema.core.Any, cljs.core.with_meta(new cljs.core.Symbol(null, "children", "children", 699969545, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", 
"Any", "schema.core/Any", -1891898271, null)], null)))], null);
var input_checker19062_19072 = schema.core.checker.call(null, input_schema19061_19071);
var output_checker19063_19073 = schema.core.checker.call(null, output_schema19060_19070);
om_bootstrap.input.render_input = function(ufv___19069, output_schema19060_19070, input_schema19061_19071, input_checker19062_19072, output_checker19063_19073) {
  return function om_bootstrap$input$render_input(G__19064, G__19065, G__19066) {
    var validate__6953__auto__ = ufv___19069.get_cell();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var args__6954__auto___19074 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__19064, G__19065, G__19066], null);
      var temp__4425__auto___19075 = input_checker19062_19072.call(null, args__6954__auto___19074);
      if (cljs.core.truth_(temp__4425__auto___19075)) {
        var error__6955__auto___19076 = temp__4425__auto___19075;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "render-input", "render-input", 243083212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("t", "Component", "t/Component", 1015042821, null)], null)), cljs.core.pr_str.call(null, error__6955__auto___19076)), new cljs.core.PersistentArrayMap(null, 
        4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema19061_19071, new cljs.core.Keyword(null, "value", "value", 305978217), args__6954__auto___19074, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___19076], null));
      } else {
      }
    } else {
    }
    var o__6956__auto__ = function() {
      var input = G__19064;
      var attrs = G__19065;
      var children = G__19066;
      while (true) {
        var props = function(validate__6953__auto__, ufv___19069, output_schema19060_19070, input_schema19061_19071, input_checker19062_19072, output_checker19063_19073) {
          return function(klass) {
            return om_bootstrap.util.merge_props.call(null, attrs, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "class", "class", -2030961996), klass, new cljs.core.Keyword(null, "ref", "ref", 1289896967), "input", new cljs.core.Keyword(null, "key", "key", -1516042587), "input"], null));
          };
        }(validate__6953__auto__, ufv___19069, output_schema19060_19070, input_schema19061_19071, input_checker19062_19072, output_checker19063_19073);
        if (cljs.core.not.call(null, (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(input))) {
          return children;
        } else {
          var G__19068 = (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(input);
          switch(G__19068) {
            case "select":
              return om_tools.dom.element.call(null, React.DOM.select, props.call(null, "form-control"), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [children], null));
              break;
            case "textarea":
              return om_tools.dom.element.call(null, om.dom.textarea, props.call(null, "form-control"), cljs.core.PersistentVector.EMPTY);
              break;
            case "static":
              return om_tools.dom.element.call(null, React.DOM.p, props.call(null, "form-control-static"), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(attrs)], null));
              break;
            default:
              return om_tools.dom.element.call(null, om.dom.input, cljs.core.assoc.call(null, props.call(null, cljs.core.truth_(om_bootstrap.input.checkbox_or_radio_QMARK_.call(null, input)) ? "" : "form-control"), new cljs.core.Keyword(null, "type", "type", 1174270348), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(input)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [children], null));
          }
        }
        break;
      }
    }();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var temp__4425__auto___19078 = output_checker19063_19073.call(null, o__6956__auto__);
      if (cljs.core.truth_(temp__4425__auto___19078)) {
        var error__6955__auto___19079 = temp__4425__auto___19078;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "render-input", "render-input", 243083212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("t", "Component", "t/Component", 1015042821, null)], null)), cljs.core.pr_str.call(null, error__6955__auto___19079)), new cljs.core.PersistentArrayMap(null, 
        4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema19060_19070, new cljs.core.Keyword(null, "value", "value", 305978217), o__6956__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___19079], null));
      } else {
      }
    } else {
    }
    return o__6956__auto__;
  };
}(ufv___19069, output_schema19060_19070, input_schema19061_19071, input_checker19062_19072, output_checker19063_19073);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, om_bootstrap.input.render_input), schema.core.make_fn_schema.call(null, output_schema19060_19070, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema19061_19071], null)));
var ufv___19089 = schema.utils.use_fn_validation;
var output_schema19080_19090 = om_bootstrap.types.Component;
var input_schema19081_19091 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, om_bootstrap.input.Input, cljs.core.with_meta(new cljs.core.Symbol(null, "opts", "opts", 1795607228, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol(null, "Input", "Input", 1777023215, null)], null))), schema.core.Any], null);
var input_checker19082_19092 = schema.core.checker.call(null, input_schema19081_19091);
var output_checker19083_19093 = schema.core.checker.call(null, output_schema19080_19090);
om_bootstrap.input.input = function(ufv___19089, output_schema19080_19090, input_schema19081_19091, input_checker19082_19092, output_checker19083_19093) {
  return function om_bootstrap$input$input() {
    var args__5572__auto__ = [];
    var len__5565__auto___19094 = arguments.length;
    var i__5566__auto___19095 = 0;
    while (true) {
      if (i__5566__auto___19095 < len__5565__auto___19094) {
        args__5572__auto__.push(arguments[i__5566__auto___19095]);
        var G__19096 = i__5566__auto___19095 + 1;
        i__5566__auto___19095 = G__19096;
        continue;
      } else {
      }
      break;
    }
    var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
    return om_bootstrap.input.input.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
  };
}(ufv___19089, output_schema19080_19090, input_schema19081_19091, input_checker19082_19092, output_checker19083_19093);
om_bootstrap.input.input.cljs$core$IFn$_invoke$arity$variadic = function(ufv___19089, output_schema19080_19090, input_schema19081_19091, input_checker19082_19092, output_checker19083_19093) {
  return function(G__19084, rest19085) {
    var validate__6953__auto__ = ufv___19089.get_cell();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var args__6954__auto___19097 = cljs.core.list_STAR_.call(null, G__19084, rest19085);
      var temp__4425__auto___19098 = input_checker19082_19092.call(null, args__6954__auto___19097);
      if (cljs.core.truth_(temp__4425__auto___19098)) {
        var error__6955__auto___19099 = temp__4425__auto___19098;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "input", "input", -2097503808, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("t", "Component", "t/Component", 1015042821, null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns an input component. This currently does NOT handle any of\n  the default values or validation messages that we'll need to make\n  this work, though."], 
        null)), cljs.core.pr_str.call(null, error__6955__auto___19099)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema19081_19091, new cljs.core.Keyword(null, "value", "value", 305978217), args__6954__auto___19097, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___19099], 
        null));
      } else {
      }
    } else {
    }
    var o__6956__auto__ = function() {
      var opts = G__19084;
      var children = rest19085;
      while (true) {
        var vec__19088 = om_bootstrap.types.separate.call(null, om_bootstrap.input.Input, opts);
        var input = cljs.core.nth.call(null, vec__19088, 0, null);
        var attrs = cljs.core.nth.call(null, vec__19088, 1, null);
        if (cljs.core.truth_(om_bootstrap.input.checkbox_or_radio_QMARK_.call(null, input))) {
          return om_bootstrap.input.render_form_group.call(null, input, om_bootstrap.input.render_wrapper.call(null, input, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [om_bootstrap.input.checkbox_or_radio_wrapper.call(null, input, om_bootstrap.input.render_label.call(null, input, om_bootstrap.input.render_input.call(null, input, attrs, children))), om_bootstrap.input.render_help.call(null, (new cljs.core.Keyword(null, "help", "help", -439233446)).cljs$core$IFn$_invoke$arity$1(input))], 
          null)));
        } else {
          return om_bootstrap.input.render_form_group.call(null, input, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [om_bootstrap.input.render_label.call(null, input), om_bootstrap.input.render_wrapper.call(null, input, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [om_bootstrap.input.render_input_group.call(null, cljs.core.select_keys.call(null, input, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, 
          [new cljs.core.Keyword(null, "addon-before", "addon-before", -500360384), new cljs.core.Keyword(null, "addon-after", "addon-after", 634985306), new cljs.core.Keyword(null, "addon-button", "addon-button", 136745317), new cljs.core.Keyword(null, "addon-button-before", "addon-button-before", -143956251), new cljs.core.Keyword(null, "addon-button-after", "addon-button-after", -1815680807)], null)), om_bootstrap.input.render_input.call(null, input, attrs, children)), om_bootstrap.input.render_icon.call(null, 
          cljs.core.select_keys.call(null, input, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "feedback?", "feedback?", -1945951821), new cljs.core.Keyword(null, "bs-style", "bs-style", 1424423998)], null))), om_bootstrap.input.render_help.call(null, (new cljs.core.Keyword(null, "help", "help", -439233446)).cljs$core$IFn$_invoke$arity$1(input))], null))], null));
        }
        break;
      }
    }();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var temp__4425__auto___19100 = output_checker19083_19093.call(null, o__6956__auto__);
      if (cljs.core.truth_(temp__4425__auto___19100)) {
        var error__6955__auto___19101 = temp__4425__auto___19100;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "input", "input", -2097503808, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("t", "Component", "t/Component", 1015042821, null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns an input component. This currently does NOT handle any of\n  the default values or validation messages that we'll need to make\n  this work, though."], 
        null)), cljs.core.pr_str.call(null, error__6955__auto___19101)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema19080_19090, new cljs.core.Keyword(null, "value", "value", 305978217), o__6956__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___19101], 
        null));
      } else {
      }
    } else {
    }
    return o__6956__auto__;
  };
}(ufv___19089, output_schema19080_19090, input_schema19081_19091, input_checker19082_19092, output_checker19083_19093);
om_bootstrap.input.input.cljs$lang$maxFixedArity = 1;
om_bootstrap.input.input.cljs$lang$applyTo = function(ufv___19089, output_schema19080_19090, input_schema19081_19091, input_checker19082_19092, output_checker19083_19093) {
  return function(seq19086) {
    var G__19087 = cljs.core.first.call(null, seq19086);
    var seq19086__$1 = cljs.core.next.call(null, seq19086);
    return om_bootstrap.input.input.cljs$core$IFn$_invoke$arity$variadic(G__19087, seq19086__$1);
  };
}(ufv___19089, output_schema19080_19090, input_schema19081_19091, input_checker19082_19092, output_checker19083_19093);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, om_bootstrap.input.input), schema.core.make_fn_schema.call(null, output_schema19080_19090, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema19081_19091], null)));
var ufv___19113 = schema.utils.use_fn_validation;
var output_schema19102_19114 = om_bootstrap.types.Component;
var input_schema19103_19115 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, om_bootstrap.input.Radio, cljs.core.with_meta(new cljs.core.Symbol(null, "opts", "opts", 1795607228, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol(null, "Radio", "Radio", 1790223405, null)], null)))], null);
var input_checker19104_19116 = schema.core.checker.call(null, input_schema19103_19115);
var output_checker19105_19117 = schema.core.checker.call(null, output_schema19102_19114);
om_bootstrap.input.radio_option = function(ufv___19113, output_schema19102_19114, input_schema19103_19115, input_checker19104_19116, output_checker19105_19117) {
  return function om_bootstrap$input$radio_option(G__19106) {
    var validate__6953__auto__ = ufv___19113.get_cell();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var args__6954__auto___19118 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__19106], null);
      var temp__4425__auto___19119 = input_checker19104_19116.call(null, args__6954__auto___19118);
      if (cljs.core.truth_(temp__4425__auto___19119)) {
        var error__6955__auto___19120 = temp__4425__auto___19119;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "radio-option", "radio-option", 726779012, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("t", "Component", "t/Component", 1015042821, null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Generates a radio button entry, to place into a radio button\n   grouping."], 
        null)), cljs.core.pr_str.call(null, error__6955__auto___19120)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema19103_19115, new cljs.core.Keyword(null, "value", "value", 305978217), args__6954__auto___19118, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___19120], 
        null));
      } else {
      }
    } else {
    }
    var o__6956__auto__ = function() {
      var opts = G__19106;
      while (true) {
        var vec__19110 = om_bootstrap.types.separate.call(null, om_bootstrap.input.Radio, opts, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "ref", "ref", 1289896967), "input", new cljs.core.Keyword(null, "key", "key", -1516042587), "input", new cljs.core.Keyword(null, "type", "type", 1174270348), "radio"], null));
        var bs = cljs.core.nth.call(null, vec__19110, 0, null);
        var props = cljs.core.nth.call(null, vec__19110, 1, null);
        var map__19111 = bs;
        var map__19111__$1 = (!(map__19111 == null) ? map__19111.cljs$lang$protocol_mask$partition0$ & 64 || map__19111.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__19111) : map__19111;
        var label = cljs.core.get.call(null, map__19111__$1, new cljs.core.Keyword(null, "label", "label", 1718410804));
        var checked_QMARK_ = cljs.core.get.call(null, map__19111__$1, new cljs.core.Keyword(null, "checked?", "checked?", 2024809091));
        var inline_QMARK_ = cljs.core.get.call(null, map__19111__$1, new cljs.core.Keyword(null, "inline?", "inline?", -1674483791));
        var core = om_tools.dom.element.call(null, om.dom.input, cljs.core.assoc.call(null, props, new cljs.core.Keyword(null, "checked", "checked", -50955819), checked_QMARK_), cljs.core.PersistentVector.EMPTY);
        if (cljs.core.truth_(inline_QMARK_)) {
          return cljs.core.apply.call(null, React.DOM.label, {"className":"radio-inline"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [core, label], null)));
        } else {
          return cljs.core.apply.call(null, React.DOM.div, {"className":"radio"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, React.DOM.label, {}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [core, label], null)))], null)));
        }
        break;
      }
    }();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var temp__4425__auto___19121 = output_checker19105_19117.call(null, o__6956__auto__);
      if (cljs.core.truth_(temp__4425__auto___19121)) {
        var error__6955__auto___19122 = temp__4425__auto___19121;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "radio-option", "radio-option", 726779012, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("t", "Component", "t/Component", 1015042821, null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Generates a radio button entry, to place into a radio button\n   grouping."], 
        null)), cljs.core.pr_str.call(null, error__6955__auto___19122)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema19102_19114, new cljs.core.Keyword(null, "value", "value", 305978217), o__6956__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___19122], 
        null));
      } else {
      }
    } else {
    }
    return o__6956__auto__;
  };
}(ufv___19113, output_schema19102_19114, input_schema19103_19115, input_checker19104_19116, output_checker19105_19117);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, om_bootstrap.input.radio_option), schema.core.make_fn_schema.call(null, output_schema19102_19114, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema19103_19115], null)));
var ufv___19145 = schema.utils.use_fn_validation;
var output_schema19123_19146 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [om_bootstrap.types.Component], null);
var input_schema19124_19147 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Str, cljs.core.with_meta(new cljs.core.Symbol(null, "header", "header", 1759972661, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("s", "Str", "s/Str", 907974338, null)], null))), schema.core.one.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[schema.core.pair.call(null, schema.core.Str, "option value", schema.core.Str, "option label")], null), cljs.core.with_meta(new cljs.core.Symbol(null, "opts", "opts", 1795607228, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("s", "pair", "s/pair", 1193014306, null), new cljs.core.Symbol("s", "Str", "s/Str", 907974338, 
null), "option value", new cljs.core.Symbol("s", "Str", "s/Str", 907974338, null), "option label")], null)], null)))], null);
var input_checker19125_19148 = schema.core.checker.call(null, input_schema19124_19147);
var output_checker19126_19149 = schema.core.checker.call(null, output_schema19123_19146);
om_bootstrap.input.options = function(ufv___19145, output_schema19123_19146, input_schema19124_19147, input_checker19125_19148, output_checker19126_19149) {
  return function om_bootstrap$input$options(G__19127, G__19128) {
    var validate__6953__auto__ = ufv___19145.get_cell();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var args__6954__auto___19150 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__19127, G__19128], null);
      var temp__4425__auto___19151 = input_checker19125_19148.call(null, args__6954__auto___19150);
      if (cljs.core.truth_(temp__4425__auto___19151)) {
        var error__6955__auto___19152 = temp__4425__auto___19151;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "options", "options", 1740170016, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol("t", "Component", "t/Component", 1015042821, null)], null), new cljs.core.Keyword(null, 
        "doc", "doc", 1913296891), "Returns a sequence of options for use as the children of a select\n  input."], null)), cljs.core.pr_str.call(null, error__6955__auto___19152)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema19124_19147, new cljs.core.Keyword(null, "value", "value", 305978217), 
        args__6954__auto___19150, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___19152], null));
      } else {
      }
    } else {
    }
    var o__6956__auto__ = function() {
      var header = G__19127;
      var opts = G__19128;
      while (true) {
        return cljs.core.cons.call(null, cljs.core.apply.call(null, om.dom.option, {"value":""}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [header], null))), function() {
          var iter__5279__auto__ = function(validate__6953__auto__, ufv___19145, output_schema19123_19146, input_schema19124_19147, input_checker19125_19148, output_checker19126_19149) {
            return function om_bootstrap$input$options_$_iter__19137(s__19138) {
              return new cljs.core.LazySeq(null, function(validate__6953__auto__, ufv___19145, output_schema19123_19146, input_schema19124_19147, input_checker19125_19148, output_checker19126_19149) {
                return function() {
                  var s__19138__$1 = s__19138;
                  while (true) {
                    var temp__4425__auto__ = cljs.core.seq.call(null, s__19138__$1);
                    if (temp__4425__auto__) {
                      var s__19138__$2 = temp__4425__auto__;
                      if (cljs.core.chunked_seq_QMARK_.call(null, s__19138__$2)) {
                        var c__5277__auto__ = cljs.core.chunk_first.call(null, s__19138__$2);
                        var size__5278__auto__ = cljs.core.count.call(null, c__5277__auto__);
                        var b__19140 = cljs.core.chunk_buffer.call(null, size__5278__auto__);
                        if (function() {
                          var i__19139 = 0;
                          while (true) {
                            if (i__19139 < size__5278__auto__) {
                              var vec__19143 = cljs.core._nth.call(null, c__5277__auto__, i__19139);
                              var v = cljs.core.nth.call(null, vec__19143, 0, null);
                              var label = cljs.core.nth.call(null, vec__19143, 1, null);
                              cljs.core.chunk_append.call(null, b__19140, cljs.core.apply.call(null, om.dom.option, {"value":om_tools.dom.format_opts.call(null, v)}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [label], null))));
                              var G__19153 = i__19139 + 1;
                              i__19139 = G__19153;
                              continue;
                            } else {
                              return true;
                            }
                            break;
                          }
                        }()) {
                          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__19140), om_bootstrap$input$options_$_iter__19137.call(null, cljs.core.chunk_rest.call(null, s__19138__$2)));
                        } else {
                          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__19140), null);
                        }
                      } else {
                        var vec__19144 = cljs.core.first.call(null, s__19138__$2);
                        var v = cljs.core.nth.call(null, vec__19144, 0, null);
                        var label = cljs.core.nth.call(null, vec__19144, 1, null);
                        return cljs.core.cons.call(null, cljs.core.apply.call(null, om.dom.option, {"value":om_tools.dom.format_opts.call(null, v)}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [label], null))), om_bootstrap$input$options_$_iter__19137.call(null, cljs.core.rest.call(null, s__19138__$2)));
                      }
                    } else {
                      return null;
                    }
                    break;
                  }
                };
              }(validate__6953__auto__, ufv___19145, output_schema19123_19146, input_schema19124_19147, input_checker19125_19148, output_checker19126_19149), null, null);
            };
          }(validate__6953__auto__, ufv___19145, output_schema19123_19146, input_schema19124_19147, input_checker19125_19148, output_checker19126_19149);
          return iter__5279__auto__.call(null, opts);
        }());
        break;
      }
    }();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var temp__4425__auto___19154 = output_checker19126_19149.call(null, o__6956__auto__);
      if (cljs.core.truth_(temp__4425__auto___19154)) {
        var error__6955__auto___19155 = temp__4425__auto___19154;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "options", "options", 1740170016, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol("t", "Component", "t/Component", 1015042821, null)], null), new cljs.core.Keyword(null, 
        "doc", "doc", 1913296891), "Returns a sequence of options for use as the children of a select\n  input."], null)), cljs.core.pr_str.call(null, error__6955__auto___19155)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema19123_19146, new cljs.core.Keyword(null, "value", "value", 305978217), 
        o__6956__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___19155], null));
      } else {
      }
    } else {
    }
    return o__6956__auto__;
  };
}(ufv___19145, output_schema19123_19146, input_schema19124_19147, input_checker19125_19148, output_checker19126_19149);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, om_bootstrap.input.options), schema.core.make_fn_schema.call(null, output_schema19123_19146, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema19124_19147], null)));
goog.provide("random_number.core");
goog.require("cljs.core");
goog.require("om_bootstrap.modal");
goog.require("om_bootstrap.input");
goog.require("om_tools.dom");
goog.require("om_tools.core");
goog.require("cljs.core.async");
goog.require("om.core");
goog.require("om_bootstrap.button");
random_number.core.in_QMARK_ = function random_number$core$in_QMARK_(s, n) {
  return cljs.core.some.call(null, function(p1__22651_SHARP_) {
    return cljs.core._EQ_.call(null, p1__22651_SHARP_, n);
  }, s);
};
random_number.core.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "number", "number", 1570378438), 80, new cljs.core.Keyword(null, "animation", "animation", -1248293244), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "is?", "is?", -1388314212), false, new cljs.core.Keyword(null, "ids", "ids", -998535796), cljs.core.List.EMPTY], null), new cljs.core.Keyword(null, "card", "card", -1430355152), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "draw?", "draw?", 1765298547), false, new cljs.core.Keyword(null, "on", "on", 173873944), -1, new cljs.core.Keyword(null, "used", "used", -1414786177), cljs.core.List.EMPTY], null)], null));
random_number.core.cards_cur = function random_number$core$cards_cur() {
  return om.core.ref_cursor.call(null, om.core.root_cursor.call(null, random_number.core.app_state));
};
random_number.core.animation_cur = function random_number$core$animation_cur() {
  return om.core.ref_cursor.call(null, (new cljs.core.Keyword(null, "animation", "animation", -1248293244)).cljs$core$IFn$_invoke$arity$1(om.core.root_cursor.call(null, random_number.core.app_state)));
};
random_number.core.card_cur = function random_number$core$card_cur() {
  return om.core.ref_cursor.call(null, (new cljs.core.Keyword(null, "card", "card", -1430355152)).cljs$core$IFn$_invoke$arity$1(om.core.root_cursor.call(null, random_number.core.app_state)));
};
random_number.core.show_popup = function random_number$core$show_popup(owner) {
  var map__22656 = om.core.get_state.call(null, owner);
  var map__22656__$1 = (!(map__22656 == null) ? map__22656.cljs$lang$protocol_mask$partition0$ & 64 || map__22656.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22656) : map__22656;
  var visible_popup_QMARK_ = cljs.core.get.call(null, map__22656__$1, new cljs.core.Keyword(null, "visible-popup?", "visible-popup?", 1728413634));
  var popup = cljs.core.get.call(null, map__22656__$1, new cljs.core.Keyword(null, "popup", "popup", 635890211));
  var map__22657 = popup;
  var map__22657__$1 = (!(map__22657 == null) ? map__22657.cljs$lang$protocol_mask$partition0$ & 64 || map__22657.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22657) : map__22657;
  var header = cljs.core.get.call(null, map__22657__$1, new cljs.core.Keyword(null, "header", "header", 119441134));
  var body = cljs.core.get.call(null, map__22657__$1, new cljs.core.Keyword(null, "body", "body", -2049205669));
  var footer = cljs.core.get.call(null, map__22657__$1, new cljs.core.Keyword(null, "footer", "footer", 1606445390));
  var modal = om_bootstrap.modal.modal.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "header", "header", 119441134), header, new cljs.core.Keyword(null, "footer", "footer", 1606445390), footer, new cljs.core.Keyword(null, "close-button?", "close-button?", -1030817687), false, new cljs.core.Keyword(null, "visible?", "visible?", 2129863715), visible_popup_QMARK_], null), body);
  return om_tools.dom.element.call(null, React.DOM.div, modal, cljs.core.PersistentVector.EMPTY);
};
var ufv___22684 = schema.utils.use_fn_validation;
var output_schema22663_22685 = schema.core.Any;
var input_schema22664_22686 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, cljs.core.with_meta(new cljs.core.Symbol(null, "data", "data", 1407862150, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null))), schema.core.one.call(null, schema.core.Any, cljs.core.with_meta(new cljs.core.Symbol(null, 
"owner", "owner", 1247919588, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)))], null);
var input_checker22665_22687 = schema.core.checker.call(null, input_schema22664_22686);
var output_checker22666_22688 = schema.core.checker.call(null, output_schema22663_22685);
random_number.core.reinit_component = function(ufv___22684, output_schema22663_22685, input_schema22664_22686, input_checker22665_22687, output_checker22666_22688) {
  return function random_number$core$reinit_component(G__22667, G__22668) {
    var validate__6953__auto__ = ufv___22684.get_cell();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var args__6954__auto___22689 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__22667, G__22668], null);
      var temp__4425__auto___22690 = input_checker22665_22687.call(null, args__6954__auto___22689);
      if (cljs.core.truth_(temp__4425__auto___22690)) {
        var error__6955__auto___22691 = temp__4425__auto___22690;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "reinit-component", "reinit-component", -404944160, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)), cljs.core.pr_str.call(null, error__6955__auto___22691)), new cljs.core.PersistentArrayMap(null, 
        4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema22664_22686, new cljs.core.Keyword(null, "value", "value", 305978217), args__6954__auto___22689, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___22691], null));
      } else {
      }
    } else {
    }
    var o__6956__auto__ = function() {
      var data = G__22667;
      var owner = G__22668;
      while (true) {
        if (typeof random_number.core.t22675 !== "undefined") {
        } else {
          random_number.core.t22675 = function(reinit_component, G__22667, owner, data, output_checker22666, output_schema22663, input_schema22664, input_checker22665, G__22668, ufv__, validate__6953__auto__, meta22676) {
            this.reinit_component = reinit_component;
            this.G__22667 = G__22667;
            this.owner = owner;
            this.data = data;
            this.output_checker22666 = output_checker22666;
            this.output_schema22663 = output_schema22663;
            this.input_schema22664 = input_schema22664;
            this.input_checker22665 = input_checker22665;
            this.G__22668 = G__22668;
            this.ufv__ = ufv__;
            this.validate__6953__auto__ = validate__6953__auto__;
            this.meta22676 = meta22676;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
            this.cljs$lang$protocol_mask$partition1$ = 0;
          };
          random_number.core.t22675.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__6953__auto__, ufv___22684, output_schema22663_22685, input_schema22664_22686, input_checker22665_22687, output_checker22666_22688) {
            return function(_22677, meta22676__$1) {
              var self__ = this;
              var _22677__$1 = this;
              return new random_number.core.t22675(self__.reinit_component, self__.G__22667, self__.owner, self__.data, self__.output_checker22666, self__.output_schema22663, self__.input_schema22664, self__.input_checker22665, self__.G__22668, self__.ufv__, self__.validate__6953__auto__, meta22676__$1);
            };
          }(validate__6953__auto__, ufv___22684, output_schema22663_22685, input_schema22664_22686, input_checker22665_22687, output_checker22666_22688);
          random_number.core.t22675.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__6953__auto__, ufv___22684, output_schema22663_22685, input_schema22664_22686, input_checker22665_22687, output_checker22666_22688) {
            return function(_22677) {
              var self__ = this;
              var _22677__$1 = this;
              return self__.meta22676;
            };
          }(validate__6953__auto__, ufv___22684, output_schema22663_22685, input_schema22664_22686, input_checker22665_22687, output_checker22666_22688);
          random_number.core.t22675.prototype.om$core$IDisplayName$ = true;
          random_number.core.t22675.prototype.om$core$IDisplayName$display_name$arity$1 = function(validate__6953__auto__, ufv___22684, output_schema22663_22685, input_schema22664_22686, input_checker22665_22687, output_checker22666_22688) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return "reinit-component";
            };
          }(validate__6953__auto__, ufv___22684, output_schema22663_22685, input_schema22664_22686, input_checker22665_22687, output_checker22666_22688);
          random_number.core.t22675.prototype.om$core$IInitState$ = true;
          random_number.core.t22675.prototype.om$core$IInitState$init_state$arity$1 = function(validate__6953__auto__, ufv___22684, output_schema22663_22685, input_schema22664_22686, input_checker22665_22687, output_checker22666_22688) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "number", "number", 1570378438), (new cljs.core.Keyword(null, "number", "number", 1570378438)).cljs$core$IFn$_invoke$arity$1(self__.data)], null);
            };
          }(validate__6953__auto__, ufv___22684, output_schema22663_22685, input_schema22664_22686, input_checker22665_22687, output_checker22666_22688);
          random_number.core.t22675.prototype.om$core$IRenderState$ = true;
          random_number.core.t22675.prototype.om$core$IRenderState$render_state$arity$2 = function(validate__6953__auto__, ufv___22684, output_schema22663_22685, input_schema22664_22686, input_checker22665_22687, output_checker22666_22688) {
            return function(_, p__22678) {
              var self__ = this;
              var map__22679 = p__22678;
              var map__22679__$1 = (!(map__22679 == null) ? map__22679.cljs$lang$protocol_mask$partition0$ & 64 || map__22679.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22679) : map__22679;
              var number = cljs.core.get.call(null, map__22679__$1, new cljs.core.Keyword(null, "number", "number", 1570378438));
              var ___$1 = this;
              var init = function(___$1, map__22679, map__22679__$1, number, validate__6953__auto__, ufv___22684, output_schema22663_22685, input_schema22664_22686, input_checker22665_22687, output_checker22666_22688) {
                return function() {
                  return om.core.transact_BANG_.call(null, random_number.core.cards_cur.call(null), function(___$1, map__22679, map__22679__$1, number, validate__6953__auto__, ufv___22684, output_schema22663_22685, input_schema22664_22686, input_checker22665_22687, output_checker22666_22688) {
                    return function(p1__22660_SHARP_) {
                      return cljs.core.merge.call(null, p1__22660_SHARP_, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "number", "number", 1570378438), (new cljs.core.Keyword(null, "number", "number", 1570378438)).cljs$core$IFn$_invoke$arity$1(om.core.get_state.call(null, self__.owner)), new cljs.core.Keyword(null, "card", "card", -1430355152), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "on", "on", 173873944), -1, new cljs.core.Keyword(null, "used", 
                      "used", -1414786177), cljs.core.List.EMPTY], null)], null));
                    };
                  }(___$1, map__22679, map__22679__$1, number, validate__6953__auto__, ufv___22684, output_schema22663_22685, input_schema22664_22686, input_checker22665_22687, output_checker22666_22688));
                };
              }(___$1, map__22679, map__22679__$1, number, validate__6953__auto__, ufv___22684, output_schema22663_22685, input_schema22664_22686, input_checker22665_22687, output_checker22666_22688);
              return om_tools.dom.element.call(null, React.DOM.div, om_bootstrap.input.input.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), "text", new cljs.core.Keyword(null, "value", "value", 305978217), number, new cljs.core.Keyword(null, "on-change", "on-change", -732046149), function(init, ___$1, map__22679, map__22679__$1, number, validate__6953__auto__, ufv___22684, output_schema22663_22685, input_schema22664_22686, input_checker22665_22687, 
              output_checker22666_22688) {
                return function(e) {
                  return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "number", "number", 1570378438), e.target.value);
                };
              }(init, ___$1, map__22679, map__22679__$1, number, validate__6953__auto__, ufv___22684, output_schema22663_22685, input_schema22664_22686, input_checker22665_22687, output_checker22666_22688), new cljs.core.Keyword(null, "on-key-down", "on-key-down", -1374733765), function(init, ___$1, map__22679, map__22679__$1, number, validate__6953__auto__, ufv___22684, output_schema22663_22685, input_schema22664_22686, input_checker22665_22687, output_checker22666_22688) {
                return function(p1__22661_SHARP_) {
                  if (cljs.core._EQ_.call(null, p1__22661_SHARP_.key, "Enter")) {
                    return init.call(null);
                  } else {
                    return null;
                  }
                };
              }(init, ___$1, map__22679, map__22679__$1, number, validate__6953__auto__, ufv___22684, output_schema22663_22685, input_schema22664_22686, input_checker22665_22687, output_checker22666_22688), new cljs.core.Keyword(null, "addon-button-after", "addon-button-after", -1815680807), om_bootstrap.button.button.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bs-style", "bs-style", 1424423998), "primary", new cljs.core.Keyword(null, "onClick", "onClick", -1991238530), 
              function(init, ___$1, map__22679, map__22679__$1, number, validate__6953__auto__, ufv___22684, output_schema22663_22685, input_schema22664_22686, input_checker22665_22687, output_checker22666_22688) {
                return function() {
                  return init.call(null);
                };
              }(init, ___$1, map__22679, map__22679__$1, number, validate__6953__auto__, ufv___22684, output_schema22663_22685, input_schema22664_22686, input_checker22665_22687, output_checker22666_22688)], null), "apply")], null)), cljs.core.PersistentVector.EMPTY);
            };
          }(validate__6953__auto__, ufv___22684, output_schema22663_22685, input_schema22664_22686, input_checker22665_22687, output_checker22666_22688);
          random_number.core.t22675.getBasis = function(validate__6953__auto__, ufv___22684, output_schema22663_22685, input_schema22664_22686, input_checker22665_22687, output_checker22666_22688) {
            return function() {
              return new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "reinit-component", "reinit-component", -404944160, null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, 
              "data", "data", 1407862150, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "owner", "owner", 1247919588, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, 
              null)], null))], null))), new cljs.core.Keyword(null, "schema", "schema", -1582001791), cljs.core.list(new cljs.core.Symbol("schema.core", "make-fn-schema", "schema.core/make-fn-schema", 152735578, null), new cljs.core.Symbol(null, "output-schema22663", "output-schema22663", 1464560722, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "input-schema22664", "input-schema22664", 750376503, null)], null)), new cljs.core.Keyword(null, 
              "doc", "doc", 1913296891), "Inputs: [data owner]", new cljs.core.Keyword(null, "raw-arglists", "raw-arglists", -1511012109), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "data", "data", 1407862150, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null)], null)))], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
              "G__22667", "G__22667", 1100660290, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null), new cljs.core.Symbol(null, "data", "data", 1407862150, null), new cljs.core.Symbol(null, "output-checker22666", "output-checker22666", -2040923568, null), new cljs.core.Symbol(null, "output-schema22663", 
              "output-schema22663", 1464560722, null), new cljs.core.Symbol(null, "input-schema22664", "input-schema22664", 750376503, null), new cljs.core.Symbol(null, "input-checker22665", "input-checker22665", -935800550, null), cljs.core.with_meta(new cljs.core.Symbol(null, "G__22668", "G__22668", 1168412059, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, 
              null)], null)), new cljs.core.Symbol(null, "ufv__", "ufv__", -2046207459, null), new cljs.core.Symbol(null, "validate__6953__auto__", "validate__6953__auto__", -1776384833, null), new cljs.core.Symbol(null, "meta22676", "meta22676", -1694963445, null)], null);
            };
          }(validate__6953__auto__, ufv___22684, output_schema22663_22685, input_schema22664_22686, input_checker22665_22687, output_checker22666_22688);
          random_number.core.t22675.cljs$lang$type = true;
          random_number.core.t22675.cljs$lang$ctorStr = "random-number.core/t22675";
          random_number.core.t22675.cljs$lang$ctorPrWriter = function(validate__6953__auto__, ufv___22684, output_schema22663_22685, input_schema22664_22686, input_checker22665_22687, output_checker22666_22688) {
            return function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
              return cljs.core._write.call(null, writer__5106__auto__, "random-number.core/t22675");
            };
          }(validate__6953__auto__, ufv___22684, output_schema22663_22685, input_schema22664_22686, input_checker22665_22687, output_checker22666_22688);
          random_number.core.__GT_t22675 = function(validate__6953__auto__, ufv___22684, output_schema22663_22685, input_schema22664_22686, input_checker22665_22687, output_checker22666_22688) {
            return function random_number$core$reinit_component_$___GT_t22675(reinit_component__$1, G__22667__$1, owner__$1, data__$1, output_checker22666__$1, output_schema22663__$1, input_schema22664__$1, input_checker22665__$1, G__22668__$1, ufv____$1, validate__6953__auto____$1, meta22676) {
              return new random_number.core.t22675(reinit_component__$1, G__22667__$1, owner__$1, data__$1, output_checker22666__$1, output_schema22663__$1, input_schema22664__$1, input_checker22665__$1, G__22668__$1, ufv____$1, validate__6953__auto____$1, meta22676);
            };
          }(validate__6953__auto__, ufv___22684, output_schema22663_22685, input_schema22664_22686, input_checker22665_22687, output_checker22666_22688);
        }
        return new random_number.core.t22675(random_number$core$reinit_component, G__22667, owner, data, output_checker22666_22688, output_schema22663_22685, input_schema22664_22686, input_checker22665_22687, G__22668, ufv___22684, validate__6953__auto__, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var temp__4425__auto___22692 = output_checker22666_22688.call(null, o__6956__auto__);
      if (cljs.core.truth_(temp__4425__auto___22692)) {
        var error__6955__auto___22693 = temp__4425__auto___22692;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "reinit-component", "reinit-component", -404944160, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)), cljs.core.pr_str.call(null, error__6955__auto___22693)), new cljs.core.PersistentArrayMap(null, 
        4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema22663_22685, new cljs.core.Keyword(null, "value", "value", 305978217), o__6956__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___22693], null));
      } else {
      }
    } else {
    }
    return o__6956__auto__;
  };
}(ufv___22684, output_schema22663_22685, input_schema22664_22686, input_checker22665_22687, output_checker22666_22688);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, random_number.core.reinit_component), schema.core.make_fn_schema.call(null, output_schema22663_22685, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema22664_22686], null)));
random_number.core.__GT_reinit_component = function random_number$core$__GT_reinit_component() {
  var args22681 = [];
  var len__5565__auto___22694 = arguments.length;
  var i__5566__auto___22695 = 0;
  while (true) {
    if (i__5566__auto___22695 < len__5565__auto___22694) {
      args22681.push(arguments[i__5566__auto___22695]);
      var G__22696 = i__5566__auto___22695 + 1;
      i__5566__auto___22695 = G__22696;
      continue;
    } else {
    }
    break;
  }
  var G__22683 = args22681.length;
  switch(G__22683) {
    case 1:
      return random_number.core.__GT_reinit_component.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return random_number.core.__GT_reinit_component.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22681.length)].join(""));;
  }
};
random_number.core.__GT_reinit_component.cljs$core$IFn$_invoke$arity$1 = function(cursor__13048__auto__) {
  return om.core.build.call(null, random_number.core.reinit_component, cursor__13048__auto__);
};
random_number.core.__GT_reinit_component.cljs$core$IFn$_invoke$arity$2 = function(cursor__13048__auto__, m22662) {
  return om.core.build.call(null, random_number.core.reinit_component, cursor__13048__auto__, m22662);
};
random_number.core.__GT_reinit_component.cljs$lang$maxFixedArity = 2;
random_number.core.reinit_popup_opt = function random_number$core$reinit_popup_opt(owner, number) {
  var body = om_tools.dom.element.call(null, React.DOM.div, om.core.build.call(null, random_number.core.reinit_component, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "number", "number", 1570378438), number], null)), cljs.core.PersistentVector.EMPTY);
  var popup_close = function(body) {
    return function() {
      return om.core.set_state_BANG_.call(null, owner, new cljs.core.Keyword(null, "visible-popup?", "visible-popup?", 1728413634), false);
    };
  }(body);
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "header", "header", 119441134), React.DOM.h4(null, "Change Number"), new cljs.core.Keyword(null, "footer", "footer", 1606445390), om_tools.dom.element.call(null, React.DOM.div, om_bootstrap.button.button.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), function(body, popup_close) {
    return function(_) {
      return popup_close.call(null);
    };
  }(body, popup_close)], null), "Close"), cljs.core.PersistentVector.EMPTY), new cljs.core.Keyword(null, "body", "body", -2049205669), body], null);
};
var ufv___22714 = schema.utils.use_fn_validation;
var output_schema22699_22715 = schema.core.Any;
var input_schema22700_22716 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, cljs.core.with_meta(new cljs.core.Symbol(null, "data", "data", 1407862150, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null))), schema.core.one.call(null, schema.core.Any, cljs.core.with_meta(new cljs.core.Symbol(null, 
"owner", "owner", 1247919588, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)))], null);
var input_checker22701_22717 = schema.core.checker.call(null, input_schema22700_22716);
var output_checker22702_22718 = schema.core.checker.call(null, output_schema22699_22715);
random_number.core.card_component = function(ufv___22714, output_schema22699_22715, input_schema22700_22716, input_checker22701_22717, output_checker22702_22718) {
  return function random_number$core$card_component(G__22703, G__22704) {
    var validate__6953__auto__ = ufv___22714.get_cell();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var args__6954__auto___22719 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__22703, G__22704], null);
      var temp__4425__auto___22720 = input_checker22701_22717.call(null, args__6954__auto___22719);
      if (cljs.core.truth_(temp__4425__auto___22720)) {
        var error__6955__auto___22721 = temp__4425__auto___22720;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "card-component", "card-component", 959262015, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)), cljs.core.pr_str.call(null, error__6955__auto___22721)), new cljs.core.PersistentArrayMap(null, 
        4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema22700_22716, new cljs.core.Keyword(null, "value", "value", 305978217), args__6954__auto___22719, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___22721], null));
      } else {
      }
    } else {
    }
    var o__6956__auto__ = function() {
      var data = G__22703;
      var owner = G__22704;
      while (true) {
        if (typeof random_number.core.t22708 !== "undefined") {
        } else {
          random_number.core.t22708 = function(output_schema22699, owner, input_checker22701, G__22703, data, output_checker22702, G__22704, ufv__, input_schema22700, validate__6953__auto__, card_component, meta22709) {
            this.output_schema22699 = output_schema22699;
            this.owner = owner;
            this.input_checker22701 = input_checker22701;
            this.G__22703 = G__22703;
            this.data = data;
            this.output_checker22702 = output_checker22702;
            this.G__22704 = G__22704;
            this.ufv__ = ufv__;
            this.input_schema22700 = input_schema22700;
            this.validate__6953__auto__ = validate__6953__auto__;
            this.card_component = card_component;
            this.meta22709 = meta22709;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
            this.cljs$lang$protocol_mask$partition1$ = 0;
          };
          random_number.core.t22708.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__6953__auto__, ufv___22714, output_schema22699_22715, input_schema22700_22716, input_checker22701_22717, output_checker22702_22718) {
            return function(_22710, meta22709__$1) {
              var self__ = this;
              var _22710__$1 = this;
              return new random_number.core.t22708(self__.output_schema22699, self__.owner, self__.input_checker22701, self__.G__22703, self__.data, self__.output_checker22702, self__.G__22704, self__.ufv__, self__.input_schema22700, self__.validate__6953__auto__, self__.card_component, meta22709__$1);
            };
          }(validate__6953__auto__, ufv___22714, output_schema22699_22715, input_schema22700_22716, input_checker22701_22717, output_checker22702_22718);
          random_number.core.t22708.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__6953__auto__, ufv___22714, output_schema22699_22715, input_schema22700_22716, input_checker22701_22717, output_checker22702_22718) {
            return function(_22710) {
              var self__ = this;
              var _22710__$1 = this;
              return self__.meta22709;
            };
          }(validate__6953__auto__, ufv___22714, output_schema22699_22715, input_schema22700_22716, input_checker22701_22717, output_checker22702_22718);
          random_number.core.t22708.prototype.om$core$IDisplayName$ = true;
          random_number.core.t22708.prototype.om$core$IDisplayName$display_name$arity$1 = function(validate__6953__auto__, ufv___22714, output_schema22699_22715, input_schema22700_22716, input_checker22701_22717, output_checker22702_22718) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return "card-component";
            };
          }(validate__6953__auto__, ufv___22714, output_schema22699_22715, input_schema22700_22716, input_checker22701_22717, output_checker22702_22718);
          random_number.core.t22708.prototype.om$core$IRender$ = true;
          random_number.core.t22708.prototype.om$core$IRender$render$arity$1 = function(validate__6953__auto__, ufv___22714, output_schema22699_22715, input_schema22700_22716, input_checker22701_22717, output_checker22702_22718) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              var id = (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(self__.data);
              var card = om.core.observe.call(null, self__.owner, random_number.core.card_cur.call(null));
              var is_on = cljs.core._EQ_.call(null, id, (new cljs.core.Keyword(null, "on-id", "on-id", -153738013)).cljs$core$IFn$_invoke$arity$1(self__.data));
              var is_used = random_number.core.in_QMARK_.call(null, (new cljs.core.Keyword(null, "used", "used", -1414786177)).cljs$core$IFn$_invoke$arity$1(card), id);
              var class$ = [cljs.core.str("card img-rounded"), cljs.core.str(is_on ? " on" : null), cljs.core.str(cljs.core.truth_(is_used) ? " use" : null)].join("");
              return cljs.core.apply.call(null, React.DOM.div, {"className":om_tools.dom.format_opts.call(null, class$), "id":om_tools.dom.format_opts.call(null, id)}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(id + 1)].join("")], null)));
            };
          }(validate__6953__auto__, ufv___22714, output_schema22699_22715, input_schema22700_22716, input_checker22701_22717, output_checker22702_22718);
          random_number.core.t22708.getBasis = function(validate__6953__auto__, ufv___22714, output_schema22699_22715, input_schema22700_22716, input_checker22701_22717, output_checker22702_22718) {
            return function() {
              return new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "output-schema22699", "output-schema22699", 538663171, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null), new cljs.core.Symbol(null, "input-checker22701", "input-checker22701", 409645796, null), cljs.core.with_meta(new cljs.core.Symbol(null, "G__22703", "G__22703", -1960319803, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
              "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)), new cljs.core.Symbol(null, "data", "data", 1407862150, null), new cljs.core.Symbol(null, "output-checker22702", "output-checker22702", 370690768, null), cljs.core.with_meta(new cljs.core.Symbol(null, "G__22704", "G__22704", -1183476585, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", 
              "Any", "schema.core/Any", -1891898271, null)], null)), new cljs.core.Symbol(null, "ufv__", "ufv__", -2046207459, null), new cljs.core.Symbol(null, "input-schema22700", "input-schema22700", 1826924445, null), new cljs.core.Symbol(null, "validate__6953__auto__", "validate__6953__auto__", -1776384833, null), cljs.core.with_meta(new cljs.core.Symbol(null, "card-component", "card-component", 959262015, null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "arglists", 
              "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "data", "data", 1407862150, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
              "owner", "owner", 1247919588, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null))], null))), new cljs.core.Keyword(null, "schema", "schema", -1582001791), cljs.core.list(new cljs.core.Symbol("schema.core", "make-fn-schema", "schema.core/make-fn-schema", 152735578, null), new cljs.core.Symbol(null, "output-schema22699", "output-schema22699", 
              538663171, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "input-schema22700", "input-schema22700", 1826924445, null)], null)), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Inputs: [data owner]", new cljs.core.Keyword(null, "raw-arglists", "raw-arglists", -1511012109), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, 
              cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "data", "data", 1407862150, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null)], null)))], null)), new cljs.core.Symbol(null, "meta22709", "meta22709", -341993698, null)], null);
            };
          }(validate__6953__auto__, ufv___22714, output_schema22699_22715, input_schema22700_22716, input_checker22701_22717, output_checker22702_22718);
          random_number.core.t22708.cljs$lang$type = true;
          random_number.core.t22708.cljs$lang$ctorStr = "random-number.core/t22708";
          random_number.core.t22708.cljs$lang$ctorPrWriter = function(validate__6953__auto__, ufv___22714, output_schema22699_22715, input_schema22700_22716, input_checker22701_22717, output_checker22702_22718) {
            return function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
              return cljs.core._write.call(null, writer__5106__auto__, "random-number.core/t22708");
            };
          }(validate__6953__auto__, ufv___22714, output_schema22699_22715, input_schema22700_22716, input_checker22701_22717, output_checker22702_22718);
          random_number.core.__GT_t22708 = function(validate__6953__auto__, ufv___22714, output_schema22699_22715, input_schema22700_22716, input_checker22701_22717, output_checker22702_22718) {
            return function random_number$core$card_component_$___GT_t22708(output_schema22699__$1, owner__$1, input_checker22701__$1, G__22703__$1, data__$1, output_checker22702__$1, G__22704__$1, ufv____$1, input_schema22700__$1, validate__6953__auto____$1, card_component__$1, meta22709) {
              return new random_number.core.t22708(output_schema22699__$1, owner__$1, input_checker22701__$1, G__22703__$1, data__$1, output_checker22702__$1, G__22704__$1, ufv____$1, input_schema22700__$1, validate__6953__auto____$1, card_component__$1, meta22709);
            };
          }(validate__6953__auto__, ufv___22714, output_schema22699_22715, input_schema22700_22716, input_checker22701_22717, output_checker22702_22718);
        }
        return new random_number.core.t22708(output_schema22699_22715, owner, input_checker22701_22717, G__22703, data, output_checker22702_22718, G__22704, ufv___22714, input_schema22700_22716, validate__6953__auto__, random_number$core$card_component, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var temp__4425__auto___22722 = output_checker22702_22718.call(null, o__6956__auto__);
      if (cljs.core.truth_(temp__4425__auto___22722)) {
        var error__6955__auto___22723 = temp__4425__auto___22722;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "card-component", "card-component", 959262015, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)), cljs.core.pr_str.call(null, error__6955__auto___22723)), new cljs.core.PersistentArrayMap(null, 
        4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema22699_22715, new cljs.core.Keyword(null, "value", "value", 305978217), o__6956__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___22723], null));
      } else {
      }
    } else {
    }
    return o__6956__auto__;
  };
}(ufv___22714, output_schema22699_22715, input_schema22700_22716, input_checker22701_22717, output_checker22702_22718);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, random_number.core.card_component), schema.core.make_fn_schema.call(null, output_schema22699_22715, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema22700_22716], null)));
random_number.core.__GT_card_component = function random_number$core$__GT_card_component() {
  var args22711 = [];
  var len__5565__auto___22724 = arguments.length;
  var i__5566__auto___22725 = 0;
  while (true) {
    if (i__5566__auto___22725 < len__5565__auto___22724) {
      args22711.push(arguments[i__5566__auto___22725]);
      var G__22726 = i__5566__auto___22725 + 1;
      i__5566__auto___22725 = G__22726;
      continue;
    } else {
    }
    break;
  }
  var G__22713 = args22711.length;
  switch(G__22713) {
    case 1:
      return random_number.core.__GT_card_component.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return random_number.core.__GT_card_component.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22711.length)].join(""));;
  }
};
random_number.core.__GT_card_component.cljs$core$IFn$_invoke$arity$1 = function(cursor__13048__auto__) {
  return om.core.build.call(null, random_number.core.card_component, cursor__13048__auto__);
};
random_number.core.__GT_card_component.cljs$core$IFn$_invoke$arity$2 = function(cursor__13048__auto__, m22698) {
  return om.core.build.call(null, random_number.core.card_component, cursor__13048__auto__, m22698);
};
random_number.core.__GT_card_component.cljs$lang$maxFixedArity = 2;
random_number.core.build_card = function random_number$core$build_card(on_id, id) {
  return om.core.build.call(null, random_number.core.card_component, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "on-id", "on-id", -153738013), on_id, new cljs.core.Keyword(null, "id", "id", -1388402092), id], null));
};
random_number.core.animation_start = function random_number$core$animation_start(owner, on_ids) {
  om.core.set_state_BANG_.call(null, owner, new cljs.core.Keyword(null, "rands", "rands", -1950300401), on_ids);
  return om.core.transact_BANG_.call(null, random_number.core.animation_cur.call(null), function(p1__22728_SHARP_) {
    return cljs.core.merge.call(null, p1__22728_SHARP_, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ids", "ids", -998535796), cljs.core.List.EMPTY], null));
  });
};
random_number.core.animation_next = function random_number$core$animation_next(owner, rands) {
  var c__14432__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__14432__auto__) {
    return function() {
      var f__14433__auto__ = function() {
        var switch__14367__auto__ = function(c__14432__auto__) {
          return function(state_22752) {
            var state_val_22753 = state_22752[1];
            if (state_val_22753 === 1) {
              var inst_22746 = cljs.core.async.timeout.call(null, 50);
              var state_22752__$1 = state_22752;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_22752__$1, 2, inst_22746);
            } else {
              if (state_val_22753 === 2) {
                var inst_22748 = state_22752[2];
                var inst_22749 = function() {
                  return function(inst_22748, state_val_22753, c__14432__auto__) {
                    return function(p1__22729_SHARP_) {
                      return cljs.core.merge.call(null, p1__22729_SHARP_, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "rands", "rands", -1950300401), cljs.core.rest.call(null, rands)], null));
                    };
                  }(inst_22748, state_val_22753, c__14432__auto__);
                }();
                var inst_22750 = om.core.update_state_BANG_.call(null, owner, inst_22749);
                var state_22752__$1 = function() {
                  var statearr_22754 = state_22752;
                  statearr_22754[7] = inst_22748;
                  return statearr_22754;
                }();
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_22752__$1, inst_22750);
              } else {
                return null;
              }
            }
          };
        }(c__14432__auto__);
        return function(switch__14367__auto__, c__14432__auto__) {
          return function() {
            var random_number$core$animation_next_$_state_machine__14368__auto__ = null;
            var random_number$core$animation_next_$_state_machine__14368__auto____0 = function() {
              var statearr_22758 = [null, null, null, null, null, null, null, null];
              statearr_22758[0] = random_number$core$animation_next_$_state_machine__14368__auto__;
              statearr_22758[1] = 1;
              return statearr_22758;
            };
            var random_number$core$animation_next_$_state_machine__14368__auto____1 = function(state_22752) {
              while (true) {
                var ret_value__14369__auto__ = function() {
                  try {
                    while (true) {
                      var result__14370__auto__ = switch__14367__auto__.call(null, state_22752);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__14370__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__14370__auto__;
                      }
                      break;
                    }
                  } catch (e22759) {
                    if (e22759 instanceof Object) {
                      var ex__14371__auto__ = e22759;
                      var statearr_22760_22762 = state_22752;
                      statearr_22760_22762[5] = ex__14371__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_22752);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e22759;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__14369__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__22763 = state_22752;
                  state_22752 = G__22763;
                  continue;
                } else {
                  return ret_value__14369__auto__;
                }
                break;
              }
            };
            random_number$core$animation_next_$_state_machine__14368__auto__ = function(state_22752) {
              switch(arguments.length) {
                case 0:
                  return random_number$core$animation_next_$_state_machine__14368__auto____0.call(this);
                case 1:
                  return random_number$core$animation_next_$_state_machine__14368__auto____1.call(this, state_22752);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            random_number$core$animation_next_$_state_machine__14368__auto__.cljs$core$IFn$_invoke$arity$0 = random_number$core$animation_next_$_state_machine__14368__auto____0;
            random_number$core$animation_next_$_state_machine__14368__auto__.cljs$core$IFn$_invoke$arity$1 = random_number$core$animation_next_$_state_machine__14368__auto____1;
            return random_number$core$animation_next_$_state_machine__14368__auto__;
          }();
        }(switch__14367__auto__, c__14432__auto__);
      }();
      var state__14434__auto__ = function() {
        var statearr_22761 = f__14433__auto__.call(null);
        statearr_22761[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__14432__auto__;
        return statearr_22761;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__14434__auto__);
    };
  }(c__14432__auto__));
  return c__14432__auto__;
};
random_number.core.animation_end = function random_number$core$animation_end() {
  om.core.transact_BANG_.call(null, random_number.core.card_cur.call(null), function(p1__22764_SHARP_) {
    return cljs.core.merge.call(null, p1__22764_SHARP_, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "draw?", "draw?", 1765298547), true], null));
  });
  return om.core.transact_BANG_.call(null, random_number.core.animation_cur.call(null), function(p1__22765_SHARP_) {
    return cljs.core.merge.call(null, p1__22765_SHARP_, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "is?", "is?", -1388314212), false], null));
  });
};
random_number.core.card_anime = function random_number$core$card_anime(owner, rands) {
  var card_draw = om.core.observe.call(null, owner, random_number.core.animation_cur.call(null));
  var on_ids = (new cljs.core.Keyword(null, "ids", "ids", -998535796)).cljs$core$IFn$_invoke$arity$1(card_draw);
  var is_animation_QMARK_ = (new cljs.core.Keyword(null, "is?", "is?", -1388314212)).cljs$core$IFn$_invoke$arity$1(card_draw);
  if (cljs.core.truth_(function() {
    var and__4514__auto__ = is_animation_QMARK_;
    if (cljs.core.truth_(and__4514__auto__)) {
      return !cljs.core.empty_QMARK_.call(null, on_ids);
    } else {
      return and__4514__auto__;
    }
  }())) {
    random_number.core.animation_start.call(null, owner, on_ids);
  } else {
    if (cljs.core.truth_(function() {
      var and__4514__auto__ = is_animation_QMARK_;
      if (cljs.core.truth_(and__4514__auto__)) {
        return !cljs.core.empty_QMARK_.call(null, rands);
      } else {
        return and__4514__auto__;
      }
    }())) {
      random_number.core.animation_next.call(null, owner, rands);
    } else {
      if (cljs.core.truth_(is_animation_QMARK_)) {
        random_number.core.animation_end.call(null);
      } else {
      }
    }
  }
  return null;
};
var ufv___22800 = schema.utils.use_fn_validation;
var output_schema22767_22801 = schema.core.Any;
var input_schema22768_22802 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null)), schema.core.one.call(null, schema.core.Any, cljs.core.with_meta(new cljs.core.Symbol(null, "owner", "owner", 1247919588, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", 
-1891898271, null)], null)))], null);
var input_checker22769_22803 = schema.core.checker.call(null, input_schema22768_22802);
var output_checker22770_22804 = schema.core.checker.call(null, output_schema22767_22801);
random_number.core.cards_component = function(ufv___22800, output_schema22767_22801, input_schema22768_22802, input_checker22769_22803, output_checker22770_22804) {
  return function random_number$core$cards_component(G__22771, G__22772) {
    var validate__6953__auto__ = ufv___22800.get_cell();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var args__6954__auto___22805 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__22771, G__22772], null);
      var temp__4425__auto___22806 = input_checker22769_22803.call(null, args__6954__auto___22805);
      if (cljs.core.truth_(temp__4425__auto___22806)) {
        var error__6955__auto___22807 = temp__4425__auto___22806;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "cards-component", "cards-component", -125996969, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)), cljs.core.pr_str.call(null, error__6955__auto___22807)), new cljs.core.PersistentArrayMap(null, 
        4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema22768_22802, new cljs.core.Keyword(null, "value", "value", 305978217), args__6954__auto___22805, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___22807], null));
      } else {
      }
    } else {
    }
    var o__6956__auto__ = function() {
      var G__22786 = G__22771;
      var map__22787 = G__22786;
      var map__22787__$1 = (!(map__22787 == null) ? map__22787.cljs$lang$protocol_mask$partition0$ & 64 || map__22787.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22787) : map__22787;
      var ids = cljs.core.get.call(null, map__22787__$1, new cljs.core.Keyword(null, "ids", "ids", -998535796));
      var owner = G__22772;
      var G__22786__$1 = G__22786;
      var owner__$1 = owner;
      while (true) {
        var map__22789 = G__22786__$1;
        var map__22789__$1 = (!(map__22789 == null) ? map__22789.cljs$lang$protocol_mask$partition0$ & 64 || map__22789.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22789) : map__22789;
        var ids__$1 = cljs.core.get.call(null, map__22789__$1, new cljs.core.Keyword(null, "ids", "ids", -998535796));
        var owner__$2 = owner__$1;
        if (typeof random_number.core.t22791 !== "undefined") {
        } else {
          random_number.core.t22791 = function(owner, input_schema22768, G__22786, output_checker22770, G__22772, map__22789, ids, output_schema22767, cards_component, G__22771, ufv__, input_checker22769, map__22787, validate__6953__auto__, meta22792) {
            this.owner = owner;
            this.input_schema22768 = input_schema22768;
            this.G__22786 = G__22786;
            this.output_checker22770 = output_checker22770;
            this.G__22772 = G__22772;
            this.map__22789 = map__22789;
            this.ids = ids;
            this.output_schema22767 = output_schema22767;
            this.cards_component = cards_component;
            this.G__22771 = G__22771;
            this.ufv__ = ufv__;
            this.input_checker22769 = input_checker22769;
            this.map__22787 = map__22787;
            this.validate__6953__auto__ = validate__6953__auto__;
            this.meta22792 = meta22792;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
            this.cljs$lang$protocol_mask$partition1$ = 0;
          };
          random_number.core.t22791.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__22789, map__22789__$1, ids__$1, owner__$2, G__22786, map__22787, map__22787__$1, ids, owner, validate__6953__auto__, ufv___22800, output_schema22767_22801, input_schema22768_22802, input_checker22769_22803, output_checker22770_22804) {
            return function(_22793, meta22792__$1) {
              var self__ = this;
              var _22793__$1 = this;
              return new random_number.core.t22791(self__.owner, self__.input_schema22768, self__.G__22786, self__.output_checker22770, self__.G__22772, self__.map__22789, self__.ids, self__.output_schema22767, self__.cards_component, self__.G__22771, self__.ufv__, self__.input_checker22769, self__.map__22787, self__.validate__6953__auto__, meta22792__$1);
            };
          }(map__22789, map__22789__$1, ids__$1, owner__$2, G__22786, map__22787, map__22787__$1, ids, owner, validate__6953__auto__, ufv___22800, output_schema22767_22801, input_schema22768_22802, input_checker22769_22803, output_checker22770_22804);
          random_number.core.t22791.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__22789, map__22789__$1, ids__$1, owner__$2, G__22786, map__22787, map__22787__$1, ids, owner, validate__6953__auto__, ufv___22800, output_schema22767_22801, input_schema22768_22802, input_checker22769_22803, output_checker22770_22804) {
            return function(_22793) {
              var self__ = this;
              var _22793__$1 = this;
              return self__.meta22792;
            };
          }(map__22789, map__22789__$1, ids__$1, owner__$2, G__22786, map__22787, map__22787__$1, ids, owner, validate__6953__auto__, ufv___22800, output_schema22767_22801, input_schema22768_22802, input_checker22769_22803, output_checker22770_22804);
          random_number.core.t22791.prototype.om$core$IDisplayName$ = true;
          random_number.core.t22791.prototype.om$core$IDisplayName$display_name$arity$1 = function(map__22789, map__22789__$1, ids__$1, owner__$2, G__22786, map__22787, map__22787__$1, ids, owner, validate__6953__auto__, ufv___22800, output_schema22767_22801, input_schema22768_22802, input_checker22769_22803, output_checker22770_22804) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return "cards-component";
            };
          }(map__22789, map__22789__$1, ids__$1, owner__$2, G__22786, map__22787, map__22787__$1, ids, owner, validate__6953__auto__, ufv___22800, output_schema22767_22801, input_schema22768_22802, input_checker22769_22803, output_checker22770_22804);
          random_number.core.t22791.prototype.om$core$IRenderState$ = true;
          random_number.core.t22791.prototype.om$core$IRenderState$render_state$arity$2 = function(map__22789, map__22789__$1, ids__$1, owner__$2, G__22786, map__22787, map__22787__$1, ids, owner, validate__6953__auto__, ufv___22800, output_schema22767_22801, input_schema22768_22802, input_checker22769_22803, output_checker22770_22804) {
            return function(_, p__22794) {
              var self__ = this;
              var map__22795 = p__22794;
              var map__22795__$1 = (!(map__22795 == null) ? map__22795.cljs$lang$protocol_mask$partition0$ & 64 || map__22795.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22795) : map__22795;
              var rands = cljs.core.get.call(null, map__22795__$1, new cljs.core.Keyword(null, "rands", "rands", -1950300401));
              var ___$1 = this;
              return om_tools.dom.element.call(null, React.DOM.div, random_number.core.card_anime.call(null, self__.owner, rands), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.map.call(null, cljs.core.partial.call(null, random_number.core.build_card, cljs.core.first.call(null, rands)), self__.ids)], null));
            };
          }(map__22789, map__22789__$1, ids__$1, owner__$2, G__22786, map__22787, map__22787__$1, ids, owner, validate__6953__auto__, ufv___22800, output_schema22767_22801, input_schema22768_22802, input_checker22769_22803, output_checker22770_22804);
          random_number.core.t22791.getBasis = function(map__22789, map__22789__$1, ids__$1, owner__$2, G__22786, map__22787, map__22787__$1, ids, owner, validate__6953__auto__, ufv___22800, output_schema22767_22801, input_schema22768_22802, input_checker22769_22803, output_checker22770_22804) {
            return function() {
              return new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "owner", "owner", 1247919588, null), new cljs.core.Symbol(null, "input-schema22768", "input-schema22768", -711150106, null), new cljs.core.Symbol(null, "G__22786", "G__22786", 723679463, null), new cljs.core.Symbol(null, "output-checker22770", "output-checker22770", 1035987527, null), cljs.core.with_meta(new cljs.core.Symbol(null, "G__22772", "G__22772", -963946642, 
              null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)), new cljs.core.Symbol(null, "map__22789", "map__22789", -1647671248, null), new cljs.core.Symbol(null, "ids", "ids", 641995731, null), new cljs.core.Symbol(null, "output-schema22767", "output-schema22767", 98050836, null), cljs.core.with_meta(new cljs.core.Symbol(null, "cards-component", 
              "cards-component", -125996969, null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keys", "keys", 1068423698), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
              [new cljs.core.Symbol(null, "ids", "ids", 641995731, null)], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "owner", "owner", 1247919588, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", 
              "Any", "schema.core/Any", -1891898271, null)], null))], null))), new cljs.core.Keyword(null, "schema", "schema", -1582001791), cljs.core.list(new cljs.core.Symbol("schema.core", "make-fn-schema", "schema.core/make-fn-schema", 152735578, null), new cljs.core.Symbol(null, "output-schema22767", "output-schema22767", 98050836, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "input-schema22768", "input-schema22768", -711150106, 
              null)], null)), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Inputs: [{:keys [ids]} owner]", new cljs.core.Keyword(null, "raw-arglists", "raw-arglists", -1511012109), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keys", "keys", 1068423698), new cljs.core.PersistentVector(null, 
              1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ids", "ids", 641995731, null)], null)], null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null)], null)))], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "G__22771", "G__22771", -937290435, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)), 
              new cljs.core.Symbol(null, "ufv__", "ufv__", -2046207459, null), new cljs.core.Symbol(null, "input-checker22769", "input-checker22769", 1968463869, null), new cljs.core.Symbol(null, "map__22787", "map__22787", -1868552930, null), new cljs.core.Symbol(null, "validate__6953__auto__", "validate__6953__auto__", -1776384833, null), new cljs.core.Symbol(null, "meta22792", "meta22792", -54370534, null)], null);
            };
          }(map__22789, map__22789__$1, ids__$1, owner__$2, G__22786, map__22787, map__22787__$1, ids, owner, validate__6953__auto__, ufv___22800, output_schema22767_22801, input_schema22768_22802, input_checker22769_22803, output_checker22770_22804);
          random_number.core.t22791.cljs$lang$type = true;
          random_number.core.t22791.cljs$lang$ctorStr = "random-number.core/t22791";
          random_number.core.t22791.cljs$lang$ctorPrWriter = function(map__22789, map__22789__$1, ids__$1, owner__$2, G__22786, map__22787, map__22787__$1, ids, owner, validate__6953__auto__, ufv___22800, output_schema22767_22801, input_schema22768_22802, input_checker22769_22803, output_checker22770_22804) {
            return function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
              return cljs.core._write.call(null, writer__5106__auto__, "random-number.core/t22791");
            };
          }(map__22789, map__22789__$1, ids__$1, owner__$2, G__22786, map__22787, map__22787__$1, ids, owner, validate__6953__auto__, ufv___22800, output_schema22767_22801, input_schema22768_22802, input_checker22769_22803, output_checker22770_22804);
          random_number.core.__GT_t22791 = function(map__22789, map__22789__$1, ids__$1, owner__$2, G__22786, map__22787, map__22787__$1, ids, owner, validate__6953__auto__, ufv___22800, output_schema22767_22801, input_schema22768_22802, input_checker22769_22803, output_checker22770_22804) {
            return function random_number$core$cards_component_$___GT_t22791(owner__$3, input_schema22768__$1, G__22786__$2, output_checker22770__$1, G__22772__$1, map__22789__$2, ids__$2, output_schema22767__$1, cards_component__$1, G__22771__$1, ufv____$1, input_checker22769__$1, map__22787__$2, validate__6953__auto____$1, meta22792) {
              return new random_number.core.t22791(owner__$3, input_schema22768__$1, G__22786__$2, output_checker22770__$1, G__22772__$1, map__22789__$2, ids__$2, output_schema22767__$1, cards_component__$1, G__22771__$1, ufv____$1, input_checker22769__$1, map__22787__$2, validate__6953__auto____$1, meta22792);
            };
          }(map__22789, map__22789__$1, ids__$1, owner__$2, G__22786, map__22787, map__22787__$1, ids, owner, validate__6953__auto__, ufv___22800, output_schema22767_22801, input_schema22768_22802, input_checker22769_22803, output_checker22770_22804);
        }
        return new random_number.core.t22791(owner__$2, input_schema22768_22802, G__22786__$1, output_checker22770_22804, G__22772, map__22789__$1, ids__$1, output_schema22767_22801, random_number$core$cards_component, G__22771, ufv___22800, input_checker22769_22803, map__22787__$1, validate__6953__auto__, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var temp__4425__auto___22808 = output_checker22770_22804.call(null, o__6956__auto__);
      if (cljs.core.truth_(temp__4425__auto___22808)) {
        var error__6955__auto___22809 = temp__4425__auto___22808;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "cards-component", "cards-component", -125996969, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)), cljs.core.pr_str.call(null, error__6955__auto___22809)), new cljs.core.PersistentArrayMap(null, 
        4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema22767_22801, new cljs.core.Keyword(null, "value", "value", 305978217), o__6956__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___22809], null));
      } else {
      }
    } else {
    }
    return o__6956__auto__;
  };
}(ufv___22800, output_schema22767_22801, input_schema22768_22802, input_checker22769_22803, output_checker22770_22804);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, random_number.core.cards_component), schema.core.make_fn_schema.call(null, output_schema22767_22801, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema22768_22802], null)));
random_number.core.__GT_cards_component = function random_number$core$__GT_cards_component() {
  var args22797 = [];
  var len__5565__auto___22810 = arguments.length;
  var i__5566__auto___22811 = 0;
  while (true) {
    if (i__5566__auto___22811 < len__5565__auto___22810) {
      args22797.push(arguments[i__5566__auto___22811]);
      var G__22812 = i__5566__auto___22811 + 1;
      i__5566__auto___22811 = G__22812;
      continue;
    } else {
    }
    break;
  }
  var G__22799 = args22797.length;
  switch(G__22799) {
    case 1:
      return random_number.core.__GT_cards_component.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return random_number.core.__GT_cards_component.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22797.length)].join(""));;
  }
};
random_number.core.__GT_cards_component.cljs$core$IFn$_invoke$arity$1 = function(cursor__13048__auto__) {
  return om.core.build.call(null, random_number.core.cards_component, cursor__13048__auto__);
};
random_number.core.__GT_cards_component.cljs$core$IFn$_invoke$arity$2 = function(cursor__13048__auto__, m22766) {
  return om.core.build.call(null, random_number.core.cards_component, cursor__13048__auto__, m22766);
};
random_number.core.__GT_cards_component.cljs$lang$maxFixedArity = 2;
random_number.core.build_cards = function random_number$core$build_cards(owner, number) {
  return cljs.core.apply.call(null, React.DOM.div, {"className":"col-md-8"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [om.core.build.call(null, random_number.core.cards_component, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ids", "ids", -998535796), cljs.core.range.call(null, number)], null))], null)));
};
random_number.core.gen_ids_exclude_use = function random_number$core$gen_ids_exclude_use() {
  var used = (new cljs.core.Keyword(null, "used", "used", -1414786177)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "card", "card", -1430355152)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, random_number.core.app_state)));
  var target = cljs.core.filter.call(null, function(used) {
    return function(p1__22814_SHARP_) {
      return cljs.core.not.call(null, random_number.core.in_QMARK_.call(null, used, p1__22814_SHARP_));
    };
  }(used), cljs.core.range.call(null, (new cljs.core.Keyword(null, "number", "number", 1570378438)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, random_number.core.app_state))));
  var target_c = cljs.core.count.call(null, target);
  var rand_fn = function(used, target, target_c) {
    return function() {
      return cljs.core.rand_int.call(null, target_c);
    };
  }(used, target, target_c);
  return cljs.core.map.call(null, function(used, target, target_c, rand_fn) {
    return function(p1__22815_SHARP_) {
      return cljs.core.nth.call(null, target, p1__22815_SHARP_);
    };
  }(used, target, target_c, rand_fn), cljs.core.repeatedly.call(null, target_c, rand_fn));
};
random_number.core.gen_rand_ids = function random_number$core$gen_rand_ids() {
  var gen_ids = random_number.core.gen_ids_exclude_use.call(null);
  return om.core.transact_BANG_.call(null, random_number.core.animation_cur.call(null), function(gen_ids) {
    return function(p1__22816_SHARP_) {
      return cljs.core.merge.call(null, p1__22816_SHARP_, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "is?", "is?", -1388314212), true, new cljs.core.Keyword(null, "ids", "ids", -998535796), cljs.core.take.call(null, function() {
        var x__4845__auto__ = cljs.core.count.call(null, gen_ids);
        var y__4846__auto__ = 25;
        return x__4845__auto__ < y__4846__auto__ ? x__4845__auto__ : y__4846__auto__;
      }(), gen_ids)], null));
    };
  }(gen_ids));
};
random_number.core.contents_btns = function random_number$core$contents_btns(owner, number) {
  var set_popup = function(opt) {
    return om.core.update_state_BANG_.call(null, owner, function(p1__22817_SHARP_) {
      return cljs.core.merge.call(null, p1__22817_SHARP_, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "visible-popup?", "visible-popup?", 1728413634), true, new cljs.core.Keyword(null, "popup", "popup", 635890211), opt], null));
    });
  };
  var is_card_anime_QMARK_ = (new cljs.core.Keyword(null, "is?", "is?", -1388314212)).cljs$core$IFn$_invoke$arity$1(om.core.observe.call(null, owner, random_number.core.animation_cur.call(null)));
  return cljs.core.apply.call(null, React.DOM.div, {"className":"top-btn"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [om_bootstrap.button.button_group.call(null, cljs.core.PersistentArrayMap.EMPTY, om_bootstrap.button.button.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), function(set_popup, is_card_anime_QMARK_) {
    return function(_) {
      return set_popup.call(null, random_number.core.reinit_popup_opt.call(null, owner, number));
    };
  }(set_popup, is_card_anime_QMARK_), new cljs.core.Keyword(null, "disabled?", "disabled?", -1523234181), is_card_anime_QMARK_], null), "Reinit"), om_bootstrap.button.button.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), function(set_popup, is_card_anime_QMARK_) {
    return function(_) {
      return om.core.transact_BANG_.call(null, random_number.core.card_cur.call(null), function(set_popup, is_card_anime_QMARK_) {
        return function(p1__22818_SHARP_) {
          return cljs.core.merge.call(null, p1__22818_SHARP_, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "on", "on", 173873944), -1, new cljs.core.Keyword(null, "used", "used", -1414786177), cljs.core.List.EMPTY], null));
        };
      }(set_popup, is_card_anime_QMARK_));
    };
  }(set_popup, is_card_anime_QMARK_), new cljs.core.Keyword(null, "disabled?", "disabled?", -1523234181), is_card_anime_QMARK_], null), "Reset"), om_bootstrap.button.button.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), function(set_popup, is_card_anime_QMARK_) {
    return function(_) {
      return random_number.core.gen_rand_ids.call(null);
    };
  }(set_popup, is_card_anime_QMARK_), new cljs.core.Keyword(null, "disabled?", "disabled?", -1523234181), is_card_anime_QMARK_], null), "Start"))], null)));
};
random_number.core.congratulation_popup_opt = function random_number$core$congratulation_popup_opt(owner, id) {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "header", "header", 119441134), React.DOM.h3(null, "Congratulation!!"), new cljs.core.Keyword(null, "footer", "footer", 1606445390), om_tools.dom.element.call(null, React.DOM.div, om_bootstrap.button.button.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), function(_) {
    return function() {
      return om.core.set_state_BANG_.call(null, owner, new cljs.core.Keyword(null, "visible-popup?", "visible-popup?", 1728413634), false);
    }.call(null);
  }], null), "Close"), cljs.core.PersistentVector.EMPTY), new cljs.core.Keyword(null, "body", "body", -2049205669), om_tools.dom.element.call(null, React.DOM.h4, [cljs.core.str(id)].join(""), cljs.core.PersistentVector.EMPTY)], null);
};
random_number.core.lottery_draw = function random_number$core$lottery_draw(owner) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "draw?", "draw?", 1765298547)).cljs$core$IFn$_invoke$arity$1(om.core.observe.call(null, owner, random_number.core.card_cur.call(null))))) {
    var id = cljs.core.ffirst.call(null, cljs.core.sort_by.call(null, cljs.core.second, cljs.core._GT_, cljs.core.frequencies.call(null, random_number.core.gen_ids_exclude_use.call(null))));
    var opt = random_number.core.congratulation_popup_opt.call(null, owner, id + 1);
    om.core.transact_BANG_.call(null, random_number.core.card_cur.call(null), function(id, opt) {
      return function(p1__22819_SHARP_) {
        return cljs.core.merge.call(null, p1__22819_SHARP_, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "draw?", "draw?", 1765298547), false, new cljs.core.Keyword(null, "on", "on", 173873944), -1, new cljs.core.Keyword(null, "used", "used", -1414786177), cljs.core.conj.call(null, (new cljs.core.Keyword(null, "used", "used", -1414786177)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "card", "card", -1430355152)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
        random_number.core.app_state))), id)], null));
      };
    }(id, opt));
    return om.core.update_state_BANG_.call(null, owner, function(id, opt) {
      return function(p1__22820_SHARP_) {
        return cljs.core.merge.call(null, p1__22820_SHARP_, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "visible-popup?", "visible-popup?", 1728413634), true, new cljs.core.Keyword(null, "popup", "popup", 635890211), opt], null));
      };
    }(id, opt));
  } else {
    return null;
  }
};
var ufv___22845 = schema.utils.use_fn_validation;
var output_schema22822_22846 = schema.core.Any;
var input_schema22823_22847 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, cljs.core.with_meta(new cljs.core.Symbol(null, "_", "_", -1201019570, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null))), schema.core.one.call(null, schema.core.Any, cljs.core.with_meta(new cljs.core.Symbol(null, 
"owner", "owner", 1247919588, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)))], null);
var input_checker22824_22848 = schema.core.checker.call(null, input_schema22823_22847);
var output_checker22825_22849 = schema.core.checker.call(null, output_schema22822_22846);
random_number.core.result_component = function(ufv___22845, output_schema22822_22846, input_schema22823_22847, input_checker22824_22848, output_checker22825_22849) {
  return function random_number$core$result_component(G__22826, G__22827) {
    var validate__6953__auto__ = ufv___22845.get_cell();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var args__6954__auto___22850 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__22826, G__22827], null);
      var temp__4425__auto___22851 = input_checker22824_22848.call(null, args__6954__auto___22850);
      if (cljs.core.truth_(temp__4425__auto___22851)) {
        var error__6955__auto___22852 = temp__4425__auto___22851;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "result-component", "result-component", -1914236485, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)), cljs.core.pr_str.call(null, error__6955__auto___22852)), new cljs.core.PersistentArrayMap(null, 
        4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema22823_22847, new cljs.core.Keyword(null, "value", "value", 305978217), args__6954__auto___22850, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___22852], null));
      } else {
      }
    } else {
    }
    var o__6956__auto__ = function() {
      var _ = G__22826;
      var owner = G__22827;
      while (true) {
        if (typeof random_number.core.t22835 !== "undefined") {
        } else {
          random_number.core.t22835 = function(owner, _, G__22826, input_checker22824, output_schema22822, result_component, G__22827, ufv__, validate__6953__auto__, output_checker22825, input_schema22823, meta22836) {
            this.owner = owner;
            this._ = _;
            this.G__22826 = G__22826;
            this.input_checker22824 = input_checker22824;
            this.output_schema22822 = output_schema22822;
            this.result_component = result_component;
            this.G__22827 = G__22827;
            this.ufv__ = ufv__;
            this.validate__6953__auto__ = validate__6953__auto__;
            this.output_checker22825 = output_checker22825;
            this.input_schema22823 = input_schema22823;
            this.meta22836 = meta22836;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
            this.cljs$lang$protocol_mask$partition1$ = 0;
          };
          random_number.core.t22835.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__6953__auto__, ufv___22845, output_schema22822_22846, input_schema22823_22847, input_checker22824_22848, output_checker22825_22849) {
            return function(_22837, meta22836__$1) {
              var self__ = this;
              var _22837__$1 = this;
              return new random_number.core.t22835(self__.owner, self__._, self__.G__22826, self__.input_checker22824, self__.output_schema22822, self__.result_component, self__.G__22827, self__.ufv__, self__.validate__6953__auto__, self__.output_checker22825, self__.input_schema22823, meta22836__$1);
            };
          }(validate__6953__auto__, ufv___22845, output_schema22822_22846, input_schema22823_22847, input_checker22824_22848, output_checker22825_22849);
          random_number.core.t22835.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__6953__auto__, ufv___22845, output_schema22822_22846, input_schema22823_22847, input_checker22824_22848, output_checker22825_22849) {
            return function(_22837) {
              var self__ = this;
              var _22837__$1 = this;
              return self__.meta22836;
            };
          }(validate__6953__auto__, ufv___22845, output_schema22822_22846, input_schema22823_22847, input_checker22824_22848, output_checker22825_22849);
          random_number.core.t22835.prototype.om$core$IDisplayName$ = true;
          random_number.core.t22835.prototype.om$core$IDisplayName$display_name$arity$1 = function(validate__6953__auto__, ufv___22845, output_schema22822_22846, input_schema22823_22847, input_checker22824_22848, output_checker22825_22849) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              return "result-component";
            };
          }(validate__6953__auto__, ufv___22845, output_schema22822_22846, input_schema22823_22847, input_checker22824_22848, output_checker22825_22849);
          random_number.core.t22835.prototype.om$core$IRender$ = true;
          random_number.core.t22835.prototype.om$core$IRender$render$arity$1 = function(validate__6953__auto__, ufv___22845, output_schema22822_22846, input_schema22823_22847, input_checker22824_22848, output_checker22825_22849) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              var winner = (new cljs.core.Keyword(null, "used", "used", -1414786177)).cljs$core$IFn$_invoke$arity$1(om.core.observe.call(null, self__.owner, random_number.core.card_cur.call(null)));
              return cljs.core.apply.call(null, React.DOM.div, {"className":"col-md-4 y-scroll"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
                var iter__5279__auto__ = function(winner, ___$2, validate__6953__auto__, ufv___22845, output_schema22822_22846, input_schema22823_22847, input_checker22824_22848, output_checker22825_22849) {
                  return function random_number$core$result_component_$_iter__22838(s__22839) {
                    return new cljs.core.LazySeq(null, function(winner, ___$2, validate__6953__auto__, ufv___22845, output_schema22822_22846, input_schema22823_22847, input_checker22824_22848, output_checker22825_22849) {
                      return function() {
                        var s__22839__$1 = s__22839;
                        while (true) {
                          var temp__4425__auto__ = cljs.core.seq.call(null, s__22839__$1);
                          if (temp__4425__auto__) {
                            var s__22839__$2 = temp__4425__auto__;
                            if (cljs.core.chunked_seq_QMARK_.call(null, s__22839__$2)) {
                              var c__5277__auto__ = cljs.core.chunk_first.call(null, s__22839__$2);
                              var size__5278__auto__ = cljs.core.count.call(null, c__5277__auto__);
                              var b__22841 = cljs.core.chunk_buffer.call(null, size__5278__auto__);
                              if (function() {
                                var i__22840 = 0;
                                while (true) {
                                  if (i__22840 < size__5278__auto__) {
                                    var x = cljs.core._nth.call(null, c__5277__auto__, i__22840);
                                    cljs.core.chunk_append.call(null, b__22841, cljs.core.apply.call(null, React.DOM.div, {"className":"winner img-rounded"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [x + 1], null))));
                                    var G__22853 = i__22840 + 1;
                                    i__22840 = G__22853;
                                    continue;
                                  } else {
                                    return true;
                                  }
                                  break;
                                }
                              }()) {
                                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__22841), random_number$core$result_component_$_iter__22838.call(null, cljs.core.chunk_rest.call(null, s__22839__$2)));
                              } else {
                                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__22841), null);
                              }
                            } else {
                              var x = cljs.core.first.call(null, s__22839__$2);
                              return cljs.core.cons.call(null, cljs.core.apply.call(null, React.DOM.div, {"className":"winner img-rounded"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [x + 1], null))), random_number$core$result_component_$_iter__22838.call(null, cljs.core.rest.call(null, s__22839__$2)));
                            }
                          } else {
                            return null;
                          }
                          break;
                        }
                      };
                    }(winner, ___$2, validate__6953__auto__, ufv___22845, output_schema22822_22846, input_schema22823_22847, input_checker22824_22848, output_checker22825_22849), null, null);
                  };
                }(winner, ___$2, validate__6953__auto__, ufv___22845, output_schema22822_22846, input_schema22823_22847, input_checker22824_22848, output_checker22825_22849);
                return iter__5279__auto__.call(null, winner);
              }()], null)));
            };
          }(validate__6953__auto__, ufv___22845, output_schema22822_22846, input_schema22823_22847, input_checker22824_22848, output_checker22825_22849);
          random_number.core.t22835.getBasis = function(validate__6953__auto__, ufv___22845, output_schema22822_22846, input_schema22823_22847, input_checker22824_22848, output_checker22825_22849) {
            return function() {
              return new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "owner", "owner", 1247919588, null), new cljs.core.Symbol(null, "_", "_", -1201019570, null), cljs.core.with_meta(new cljs.core.Symbol(null, "G__22826", "G__22826", -1366706096, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], 
              null)), new cljs.core.Symbol(null, "input-checker22824", "input-checker22824", 1645073841, null), new cljs.core.Symbol(null, "output-schema22822", "output-schema22822", -1044957510, null), cljs.core.with_meta(new cljs.core.Symbol(null, "result-component", "result-component", -1914236485, null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 
              2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "_", "_", -1201019570, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "owner", "owner", 1247919588, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", 
              -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null))], null))), new cljs.core.Keyword(null, "schema", "schema", -1582001791), cljs.core.list(new cljs.core.Symbol("schema.core", "make-fn-schema", "schema.core/make-fn-schema", 152735578, null), new cljs.core.Symbol(null, "output-schema22822", "output-schema22822", -1044957510, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
              "input-schema22823", "input-schema22823", -684916097, null)], null)), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Inputs: [_ owner]", new cljs.core.Keyword(null, "raw-arglists", "raw-arglists", -1511012109), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "_", "_", -1201019570, null), new cljs.core.Symbol(null, "owner", 
              "owner", 1247919588, null)], null)))], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "G__22827", "G__22827", -1485915075, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)), new cljs.core.Symbol(null, "ufv__", "ufv__", -2046207459, null), new cljs.core.Symbol(null, "validate__6953__auto__", "validate__6953__auto__", -1776384833, 
              null), new cljs.core.Symbol(null, "output-checker22825", "output-checker22825", 1062716767, null), new cljs.core.Symbol(null, "input-schema22823", "input-schema22823", -684916097, null), new cljs.core.Symbol(null, "meta22836", "meta22836", -180608116, null)], null);
            };
          }(validate__6953__auto__, ufv___22845, output_schema22822_22846, input_schema22823_22847, input_checker22824_22848, output_checker22825_22849);
          random_number.core.t22835.cljs$lang$type = true;
          random_number.core.t22835.cljs$lang$ctorStr = "random-number.core/t22835";
          random_number.core.t22835.cljs$lang$ctorPrWriter = function(validate__6953__auto__, ufv___22845, output_schema22822_22846, input_schema22823_22847, input_checker22824_22848, output_checker22825_22849) {
            return function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
              return cljs.core._write.call(null, writer__5106__auto__, "random-number.core/t22835");
            };
          }(validate__6953__auto__, ufv___22845, output_schema22822_22846, input_schema22823_22847, input_checker22824_22848, output_checker22825_22849);
          random_number.core.__GT_t22835 = function(validate__6953__auto__, ufv___22845, output_schema22822_22846, input_schema22823_22847, input_checker22824_22848, output_checker22825_22849) {
            return function random_number$core$result_component_$___GT_t22835(owner__$1, ___$1, G__22826__$1, input_checker22824__$1, output_schema22822__$1, result_component__$1, G__22827__$1, ufv____$1, validate__6953__auto____$1, output_checker22825__$1, input_schema22823__$1, meta22836) {
              return new random_number.core.t22835(owner__$1, ___$1, G__22826__$1, input_checker22824__$1, output_schema22822__$1, result_component__$1, G__22827__$1, ufv____$1, validate__6953__auto____$1, output_checker22825__$1, input_schema22823__$1, meta22836);
            };
          }(validate__6953__auto__, ufv___22845, output_schema22822_22846, input_schema22823_22847, input_checker22824_22848, output_checker22825_22849);
        }
        return new random_number.core.t22835(owner, _, G__22826, input_checker22824_22848, output_schema22822_22846, random_number$core$result_component, G__22827, ufv___22845, validate__6953__auto__, output_checker22825_22849, input_schema22823_22847, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var temp__4425__auto___22854 = output_checker22825_22849.call(null, o__6956__auto__);
      if (cljs.core.truth_(temp__4425__auto___22854)) {
        var error__6955__auto___22855 = temp__4425__auto___22854;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "result-component", "result-component", -1914236485, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)), cljs.core.pr_str.call(null, error__6955__auto___22855)), new cljs.core.PersistentArrayMap(null, 
        4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema22822_22846, new cljs.core.Keyword(null, "value", "value", 305978217), o__6956__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___22855], null));
      } else {
      }
    } else {
    }
    return o__6956__auto__;
  };
}(ufv___22845, output_schema22822_22846, input_schema22823_22847, input_checker22824_22848, output_checker22825_22849);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, random_number.core.result_component), schema.core.make_fn_schema.call(null, output_schema22822_22846, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema22823_22847], null)));
random_number.core.__GT_result_component = function random_number$core$__GT_result_component() {
  var args22842 = [];
  var len__5565__auto___22856 = arguments.length;
  var i__5566__auto___22857 = 0;
  while (true) {
    if (i__5566__auto___22857 < len__5565__auto___22856) {
      args22842.push(arguments[i__5566__auto___22857]);
      var G__22858 = i__5566__auto___22857 + 1;
      i__5566__auto___22857 = G__22858;
      continue;
    } else {
    }
    break;
  }
  var G__22844 = args22842.length;
  switch(G__22844) {
    case 1:
      return random_number.core.__GT_result_component.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return random_number.core.__GT_result_component.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22842.length)].join(""));;
  }
};
random_number.core.__GT_result_component.cljs$core$IFn$_invoke$arity$1 = function(cursor__13048__auto__) {
  return om.core.build.call(null, random_number.core.result_component, cursor__13048__auto__);
};
random_number.core.__GT_result_component.cljs$core$IFn$_invoke$arity$2 = function(cursor__13048__auto__, m22821) {
  return om.core.build.call(null, random_number.core.result_component, cursor__13048__auto__, m22821);
};
random_number.core.__GT_result_component.cljs$lang$maxFixedArity = 2;
random_number.core.build_result = function random_number$core$build_result(owner, number) {
  return om.core.build.call(null, random_number.core.result_component, cljs.core.PersistentArrayMap.EMPTY);
};
var ufv___22878 = schema.utils.use_fn_validation;
var output_schema22863_22879 = schema.core.Any;
var input_schema22864_22880 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, cljs.core.with_meta(new cljs.core.Symbol(null, "data", "data", 1407862150, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null))), schema.core.one.call(null, schema.core.Any, cljs.core.with_meta(new cljs.core.Symbol(null, 
"owner", "owner", 1247919588, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)))], null);
var input_checker22865_22881 = schema.core.checker.call(null, input_schema22864_22880);
var output_checker22866_22882 = schema.core.checker.call(null, output_schema22863_22879);
random_number.core.app_component = function(ufv___22878, output_schema22863_22879, input_schema22864_22880, input_checker22865_22881, output_checker22866_22882) {
  return function random_number$core$app_component(G__22867, G__22868) {
    var validate__6953__auto__ = ufv___22878.get_cell();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var args__6954__auto___22883 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__22867, G__22868], null);
      var temp__4425__auto___22884 = input_checker22865_22881.call(null, args__6954__auto___22883);
      if (cljs.core.truth_(temp__4425__auto___22884)) {
        var error__6955__auto___22885 = temp__4425__auto___22884;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "app-component", "app-component", 1249302120, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)), cljs.core.pr_str.call(null, error__6955__auto___22885)), new cljs.core.PersistentArrayMap(null, 
        4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema22864_22880, new cljs.core.Keyword(null, "value", "value", 305978217), args__6954__auto___22883, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___22885], null));
      } else {
      }
    } else {
    }
    var o__6956__auto__ = function() {
      var data = G__22867;
      var owner = G__22868;
      while (true) {
        if (typeof random_number.core.t22872 !== "undefined") {
        } else {
          random_number.core.t22872 = function(output_checker22866, output_schema22863, G__22867, owner, data, app_component, input_checker22865, input_schema22864, G__22868, ufv__, validate__6953__auto__, meta22873) {
            this.output_checker22866 = output_checker22866;
            this.output_schema22863 = output_schema22863;
            this.G__22867 = G__22867;
            this.owner = owner;
            this.data = data;
            this.app_component = app_component;
            this.input_checker22865 = input_checker22865;
            this.input_schema22864 = input_schema22864;
            this.G__22868 = G__22868;
            this.ufv__ = ufv__;
            this.validate__6953__auto__ = validate__6953__auto__;
            this.meta22873 = meta22873;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
            this.cljs$lang$protocol_mask$partition1$ = 0;
          };
          random_number.core.t22872.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(validate__6953__auto__, ufv___22878, output_schema22863_22879, input_schema22864_22880, input_checker22865_22881, output_checker22866_22882) {
            return function(_22874, meta22873__$1) {
              var self__ = this;
              var _22874__$1 = this;
              return new random_number.core.t22872(self__.output_checker22866, self__.output_schema22863, self__.G__22867, self__.owner, self__.data, self__.app_component, self__.input_checker22865, self__.input_schema22864, self__.G__22868, self__.ufv__, self__.validate__6953__auto__, meta22873__$1);
            };
          }(validate__6953__auto__, ufv___22878, output_schema22863_22879, input_schema22864_22880, input_checker22865_22881, output_checker22866_22882);
          random_number.core.t22872.prototype.cljs$core$IMeta$_meta$arity$1 = function(validate__6953__auto__, ufv___22878, output_schema22863_22879, input_schema22864_22880, input_checker22865_22881, output_checker22866_22882) {
            return function(_22874) {
              var self__ = this;
              var _22874__$1 = this;
              return self__.meta22873;
            };
          }(validate__6953__auto__, ufv___22878, output_schema22863_22879, input_schema22864_22880, input_checker22865_22881, output_checker22866_22882);
          random_number.core.t22872.prototype.om$core$IDisplayName$ = true;
          random_number.core.t22872.prototype.om$core$IDisplayName$display_name$arity$1 = function(validate__6953__auto__, ufv___22878, output_schema22863_22879, input_schema22864_22880, input_checker22865_22881, output_checker22866_22882) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return "app-component";
            };
          }(validate__6953__auto__, ufv___22878, output_schema22863_22879, input_schema22864_22880, input_checker22865_22881, output_checker22866_22882);
          random_number.core.t22872.prototype.om$core$IRender$ = true;
          random_number.core.t22872.prototype.om$core$IRender$render$arity$1 = function(validate__6953__auto__, ufv___22878, output_schema22863_22879, input_schema22864_22880, input_checker22865_22881, output_checker22866_22882) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              var number = (new cljs.core.Keyword(null, "number", "number", 1570378438)).cljs$core$IFn$_invoke$arity$1(om.core.observe.call(null, self__.owner, random_number.core.cards_cur.call(null)));
              return om_tools.dom.element.call(null, React.DOM.div, cljs.core.map.call(null, function(number, ___$1, validate__6953__auto__, ufv___22878, output_schema22863_22879, input_schema22864_22880, input_checker22865_22881, output_checker22866_22882) {
                return function(p1__22860_SHARP_) {
                  return p1__22860_SHARP_.call(null, self__.owner);
                };
              }(number, ___$1, validate__6953__auto__, ufv___22878, output_schema22863_22879, input_schema22864_22880, input_checker22865_22881, output_checker22866_22882), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [random_number.core.show_popup, random_number.core.lottery_draw], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, React.DOM.div, {"className":"contents"}, cljs.core.flatten.call(null, 
              new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.map.call(null, function(number, ___$1, validate__6953__auto__, ufv___22878, output_schema22863_22879, input_schema22864_22880, input_checker22865_22881, output_checker22866_22882) {
                return function(p1__22861_SHARP_) {
                  return p1__22861_SHARP_.call(null, self__.owner, number);
                };
              }(number, ___$1, validate__6953__auto__, ufv___22878, output_schema22863_22879, input_schema22864_22880, input_checker22865_22881, output_checker22866_22882), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [random_number.core.contents_btns, random_number.core.build_cards, random_number.core.build_result], null))], null)))], null));
            };
          }(validate__6953__auto__, ufv___22878, output_schema22863_22879, input_schema22864_22880, input_checker22865_22881, output_checker22866_22882);
          random_number.core.t22872.getBasis = function(validate__6953__auto__, ufv___22878, output_schema22863_22879, input_schema22864_22880, input_checker22865_22881, output_checker22866_22882) {
            return function() {
              return new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "output-checker22866", "output-checker22866", 106772898, null), new cljs.core.Symbol(null, "output-schema22863", "output-schema22863", -1446834045, null), cljs.core.with_meta(new cljs.core.Symbol(null, "G__22867", "G__22867", -1087195677, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", 
              "Any", "schema.core/Any", -1891898271, null)], null)), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null), new cljs.core.Symbol(null, "data", "data", 1407862150, null), cljs.core.with_meta(new cljs.core.Symbol(null, "app-component", "app-component", 1249302120, null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 
              2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "data", "data", 1407862150, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "owner", "owner", 1247919588, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", 
              "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null))], null))), new cljs.core.Keyword(null, "schema", "schema", -1582001791), cljs.core.list(new cljs.core.Symbol("schema.core", "make-fn-schema", "schema.core/make-fn-schema", 152735578, null), new cljs.core.Symbol(null, "output-schema22863", "output-schema22863", -1446834045, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
              "input-schema22864", "input-schema22864", -359071717, null)], null)), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Inputs: [data owner]", new cljs.core.Keyword(null, "raw-arglists", "raw-arglists", -1511012109), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "data", "data", 1407862150, null), new cljs.core.Symbol(null, 
              "owner", "owner", 1247919588, null)], null)))], null)), new cljs.core.Symbol(null, "input-checker22865", "input-checker22865", 44735060, null), new cljs.core.Symbol(null, "input-schema22864", "input-schema22864", -359071717, null), cljs.core.with_meta(new cljs.core.Symbol(null, "G__22868", "G__22868", 1206491197, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", 
              -1891898271, null)], null)), new cljs.core.Symbol(null, "ufv__", "ufv__", -2046207459, null), new cljs.core.Symbol(null, "validate__6953__auto__", "validate__6953__auto__", -1776384833, null), new cljs.core.Symbol(null, "meta22873", "meta22873", 265325164, null)], null);
            };
          }(validate__6953__auto__, ufv___22878, output_schema22863_22879, input_schema22864_22880, input_checker22865_22881, output_checker22866_22882);
          random_number.core.t22872.cljs$lang$type = true;
          random_number.core.t22872.cljs$lang$ctorStr = "random-number.core/t22872";
          random_number.core.t22872.cljs$lang$ctorPrWriter = function(validate__6953__auto__, ufv___22878, output_schema22863_22879, input_schema22864_22880, input_checker22865_22881, output_checker22866_22882) {
            return function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
              return cljs.core._write.call(null, writer__5106__auto__, "random-number.core/t22872");
            };
          }(validate__6953__auto__, ufv___22878, output_schema22863_22879, input_schema22864_22880, input_checker22865_22881, output_checker22866_22882);
          random_number.core.__GT_t22872 = function(validate__6953__auto__, ufv___22878, output_schema22863_22879, input_schema22864_22880, input_checker22865_22881, output_checker22866_22882) {
            return function random_number$core$app_component_$___GT_t22872(output_checker22866__$1, output_schema22863__$1, G__22867__$1, owner__$1, data__$1, app_component__$1, input_checker22865__$1, input_schema22864__$1, G__22868__$1, ufv____$1, validate__6953__auto____$1, meta22873) {
              return new random_number.core.t22872(output_checker22866__$1, output_schema22863__$1, G__22867__$1, owner__$1, data__$1, app_component__$1, input_checker22865__$1, input_schema22864__$1, G__22868__$1, ufv____$1, validate__6953__auto____$1, meta22873);
            };
          }(validate__6953__auto__, ufv___22878, output_schema22863_22879, input_schema22864_22880, input_checker22865_22881, output_checker22866_22882);
        }
        return new random_number.core.t22872(output_checker22866_22882, output_schema22863_22879, G__22867, owner, data, random_number$core$app_component, input_checker22865_22881, input_schema22864_22880, G__22868, ufv___22878, validate__6953__auto__, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__6953__auto__)) {
      var temp__4425__auto___22886 = output_checker22866_22882.call(null, o__6956__auto__);
      if (cljs.core.truth_(temp__4425__auto___22886)) {
        var error__6955__auto___22887 = temp__4425__auto___22886;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "app-component", "app-component", 1249302120, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)), cljs.core.pr_str.call(null, error__6955__auto___22887)), new cljs.core.PersistentArrayMap(null, 
        4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema22863_22879, new cljs.core.Keyword(null, "value", "value", 305978217), o__6956__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__6955__auto___22887], null));
      } else {
      }
    } else {
    }
    return o__6956__auto__;
  };
}(ufv___22878, output_schema22863_22879, input_schema22864_22880, input_checker22865_22881, output_checker22866_22882);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, random_number.core.app_component), schema.core.make_fn_schema.call(null, output_schema22863_22879, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema22864_22880], null)));
random_number.core.__GT_app_component = function random_number$core$__GT_app_component() {
  var args22875 = [];
  var len__5565__auto___22888 = arguments.length;
  var i__5566__auto___22889 = 0;
  while (true) {
    if (i__5566__auto___22889 < len__5565__auto___22888) {
      args22875.push(arguments[i__5566__auto___22889]);
      var G__22890 = i__5566__auto___22889 + 1;
      i__5566__auto___22889 = G__22890;
      continue;
    } else {
    }
    break;
  }
  var G__22877 = args22875.length;
  switch(G__22877) {
    case 1:
      return random_number.core.__GT_app_component.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return random_number.core.__GT_app_component.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22875.length)].join(""));;
  }
};
random_number.core.__GT_app_component.cljs$core$IFn$_invoke$arity$1 = function(cursor__13048__auto__) {
  return om.core.build.call(null, random_number.core.app_component, cursor__13048__auto__);
};
random_number.core.__GT_app_component.cljs$core$IFn$_invoke$arity$2 = function(cursor__13048__auto__, m22862) {
  return om.core.build.call(null, random_number.core.app_component, cursor__13048__auto__, m22862);
};
random_number.core.__GT_app_component.cljs$lang$maxFixedArity = 2;
om.core.root.call(null, random_number.core.app_component, random_number.core.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById("root")], null));
